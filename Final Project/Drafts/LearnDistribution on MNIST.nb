(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3693514,      74458]
NotebookOptionsPosition[   3674757,      74145]
NotebookOutlinePosition[   3675099,      74160]
CellTagsIndexPosition[   3675056,      74157]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Learn Distribution with Real NVP on MNIST", "Title",
 CellChangeTimes->{{3.7716717213919415`*^9, 3.7716717409815397`*^9}, {
  3.7716720068426976`*^9, 
  3.7716720075701785`*^9}},ExpressionUUID->"fe0a5742-7e40-41e8-a196-\
51bb8d1f63f1"],

Cell[CellGroupData[{

Cell["Dataset", "Section",
 CellChangeTimes->{{3.7716747241464777`*^9, 
  3.7716747251934824`*^9}},ExpressionUUID->"e2d77acc-b928-4151-ac97-\
13499fba5b8b"],

Cell[TextData[{
 "Given a set of grayscale images of handwritten digits (",
 Cell[BoxData[
  FormBox[
   RowBox[{"28", "\[Times]", "28"}], TraditionalForm]],ExpressionUUID->
  "28e40672-c6ab-4810-8731-9b55e411dd12"],
 " pixels) from zero to eight, can we train a neural network to first learn \
the distribution from which these images can be generated? Can we then try to \
use this network to generate the digit nine from a small number of examples? \
For this task, we\[CloseCurlyQuote]ll use the classic MNIST dataset which \
consists of ",
 Cell[BoxData[
  FormBox["60000", TraditionalForm]],ExpressionUUID->
  "72b730bd-491b-47b4-bc23-628fe41c929e"],
 " training images."
}], "Text",
 CellChangeTimes->{{3.771675570646763*^9, 3.7716755905970616`*^9}, {
  3.7716758271175227`*^9, 3.771675861368683*^9}, {3.7716758966675577`*^9, 
  3.7716759024836607`*^9}, {3.771675998447772*^9, 3.771676016327707*^9}, {
  3.7716760548219957`*^9, 3.7716760780858135`*^9}, {3.7716775070057783`*^9, 
  3.7716775515139*^9}, {3.7716776279680853`*^9, 3.7716776821928196`*^9}, {
  3.7716777855712905`*^9, 3.771677857087284*^9}, {3.77167794677822*^9, 
  3.7716779499835863`*^9}, {3.7716780205410805`*^9, 3.771678048825776*^9}, {
  3.7717113505911713`*^9, 
  3.771711411466216*^9}},ExpressionUUID->"0bf39b7d-0294-470d-acf9-\
f14e8d4ae4eb"],

Cell["First we import the data from the Wolfram Data Repository:", "CodeText",
 CellChangeTimes->{{3.7716889406775923`*^9, 3.7716889618864436`*^9}, 
   3.771689091073711*^9},ExpressionUUID->"90042eeb-99f9-47a5-81e7-\
ea54957be6cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnist", "=", 
   RowBox[{
    RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716747464114532`*^9, 3.7716747662161694`*^9}, {
   3.771678236957342*^9, 3.7716782418142366`*^9}, 3.771678734469898*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"cfa06733-16f0-4a57-80cb-e175c6416245"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistplot", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"mnist", ",", "90"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716836440942717`*^9, 3.7716836765419974`*^9}, {
  3.771712160279169*^9, 3.7717121677277956`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a66f552f-6124-4243-9d83-0a7afa6c83ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FeatureSpacePlot", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"digits08", ",", "90"}], "]"}], ",", "gen9"}], "]"}], ",", 
   RowBox[{"LabelingSize", "\[Rule]", "15"}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7716836784411087`*^9, 3.7716837123073425`*^9}, {
   3.7716839787517614`*^9, 3.7716840215593743`*^9}, {3.7716880684656935`*^9, 
   3.771688070127359*^9}, {3.7717121950747957`*^9, 3.771712201497428*^9}, {
   3.771712743804612*^9, 3.7717127663344593`*^9}, {3.7717128061194525`*^9, 
   3.7717128679975615`*^9}, {3.7717129505519843`*^9, 3.7717129649990077`*^9}, 
   3.77171301517854*^9, {3.771713054877061*^9, 3.7717130570587835`*^9}, {
   3.771713088787491*^9, 3.771713089030876*^9}, {3.7717131579626713`*^9, 
   3.771713158713211*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"bb04283e-c475-4964-8d54-8166f0548d59"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {Opacity[0], PointBox[CompressedData["
1:eJwllH9MVWUYxw8/NeEiXKiEuO7oH1YOLVu7czjiJM4MDRJWYpo7XLn0B6L4
c1pip6axzOksjMnIXROnlqulaU003tRhNaw7S+mGk1OOK5hxr5J0LwjE+3nZ
2HPf9zw/vt/n+T7vFM+aEm+spmkVY//Sjv0ZI95kQ/7YtTtdWuP3Y8FWee50
TBbyXHx8nLwX4W9G5L15sHkYW+2J5I9ZX9pUDb/7Jy/Ie+u3+g5pxY6QLu+t
RHeGjLevLZpI/uzgHRmnt38cK7+Lnt5Eac2uLY9i350XkfFG/u4/pZ8QIga/
s2/8J8+2acRzvp44TJ5teQnk/2rOTXm2nnAng6fwsgNeA1Yqdfv+mCCtuVXv
ln6Gs4J6WjTLSb7tm+5Rr3YJdbTkmoDEYdeE7oGn9P0k/IefU3jaiiZJq+f0
p5A34Rp4rOXz4W9/0urAv9MNDr18bSw4nzo3Sn+6iqhvtZz9lbihMyF5r3s9
ieB9qIK++fa+DX6roVDx7owyH/FsNnPTs0tjqH+4gDlpohyc1swHA+RtGe6B
z7q5GeAtm9ABz/nVmeAZ8PaR71zJY+R3NKdxP30vetAqVhFnF9Tcxe/58Hhw
mYO98NzjSmBuv9xGLyLzJrzFpg3MUfusnnmI5o2PgLOgIUbN+xb5fS95yKdP
PqXO1a4RdNWzknn5oge4N9sC8PIdrgKf/uZs5uLrXjkOXv5ccFhGNBW8ifsH
wPt3o9K1cQUcZvnJFvryjou+i4anr5Pn1RkKd/23Ko+/EV0ZJUdV33+qhZ/+
8MRR9LNTMEffYqeq9/KVfvLaqXH4lSx0Mrcp+9kbcSyO7+JDZz/7U9sDPyum
cRBdPzltiPvXS9kLLWNBFjztQ4pn2+eZ5LVz0rGROvpgOZWe9e2neqn/YiW6
1W4spb4eKUPf2gsp6MicVcn+aj+vCuI/rZT5+1bX0SfrmY1YcbApHnsiXenr
vWX039w8PY05FK6Fj9nyj5qPfx7vgPVl5QPmlzKD/RAfdbTCa/UlcPgOjCqe
+/6NlXH2xcAZ+rnGn6VwNsFDz4tXe7Ct+2vqVIUmoYcbV8/Tr9d61XvRtVC9
I/kpSt93HOjdun9J6Ti3nXlqxUPsk94k4CFO7CLOLEyCh++Levqm56xXevZu
wdqzj9B/+7ujt+lTZ9ItbHjHIP5H1mvUKd48qt7Dx+mX8UFQ7eH5bvgKz7Lv
+X46C71qczJUn2btscnvjLCv9g8XxlN/UV2Y8+WZLnAvCfThv6DoLvzcuehG
v+jmu9Ye5Lu1LsQ+WS4/74E+960u8uRuoJ/64uXEi62v8H7rKz5l37Sy48Sb
P8bRXy2vivnogRV/UbfjqurT0p1R6oROh/P/B3yg3ZE=
      "]]}, {
     {Opacity[0]}, {}}, {
     {Opacity[0]}, {}}}, {{}, {{}, {InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8+4PB8ILBlYAICdKkcaSYWIAAT97+jyhWwIOSYDqLKKSHLxaHKtYCE
+xYu6MWi7//s2WBqMdAtDGj6YMARmz4kOaMHuOUSsUvhk5uPLVygYDU3UN9r
0s0Ey3m+xy63BChn9wK7HChcVG6QZ98GPHI4pP7vCMIthwoA9BSiEQ==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.5498013496398926, 4.8892059326171875}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFWK0WMrpvD3w4c/3mZkYmLin4cudTSAiclNDSTHxLPyH4qmdkGQ
KBNYjonpI7LcB4gYTO4oslwrWIhdYevWYBBD5ipC6r42WK4eZLoniFWKkOsF
8Y0m/Aax20FsfYScHpAr+RjCfiyBKacA45SjyF2WYmRkjIXxNjMyMjBOg/Gm
AVWKHIPxtoAsnA7jmQI5vnBTHugiyzGiyIH0iZ/ALteO4hYhIM/l4QcQ8/vD
mVxA3ky43DRwqDhWVlZWxICZRo/hcj+1oUHNxAChXiK8/v9cIlI8aDke+Y0k
9//HdGGIPrXp0z//HyAAAP7GR8w=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.7082329988479614, -7.513530731201172}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcL9WDuiEmH+YMn/mqjCBwW1MqXaQODsfE1MqhtxZkJTorHVY5O6o
MjFx1jz/P4+JaQO6XApQl8///1+0mWy/oMtVMjFZPPv/fz4TUzyGdV/XrwdK
bRdmEt6F3YMfDbHYBgFXTZiYbD9jlboQysRkdRWr1CcroNRerFI7tZiYxLDr
OmkHDJV9WKW+OjAxicCkbiw8iyT1ThYYLBwK1bOBIE9BWG8NQuqoHxMKWIqQ
+uOMKjXrL0LuB0jA9+RnIDhfUVHxFEnq/29rJu+TyAIDAwDJaZTV
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.9591355323791504, -1.9199073314666748}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0Kx/A6dcvhxufeqBuOVUl+CUusa8EadcP+MBnHI9jH9wyrmZ/cMl
9dewGKe234wTcMpdxCO3kWEdTrlOkXc45fLwhFiaGm45WXxynjilPojo4pQ7
xhiMU+4A90Pc9tEBAAA2pftv
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.85269296169281, 1.524030089378357}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IMIXJbj0OqYm8zEz2OOQEmZmZZE7hllO+iluOeTnJctu5cMtVMhOQ
M3yFW84eu1MqmZiYGJiWkWzfBR5C/kvEIydEAzl37HKT+JiZ+LZhl/s/lZlp
Gg4pegAAktmz/g==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->
         0], {-2.0166351795196533, -0.15392938256263733}, {0, 0}], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+MYL9DPYTejykHdHN9PQME1KPKO0AEYbLIkiAxqKFAY1H9DdTmgMKt
R9FWjyS3H0kjmhRIcT2SHJqP8Mj9xyvngJCrR5erxym3H4+cA265elT/oepi
QOEgNO53QA1rBmjI1ENiAlkKHPQw4IAiA7beAZcMRPo/dnFqAgBpvZkS
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.3684588670730591, -8.467817306518555}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYFVD/WrsMsfCFViZFbBK3pZnZWVlZm0Cc4ruoshdYQYCRuZGIPND
NjOzypVXCLk+oDbWiMg1IHvBJkQ+hssxAwXyIcyrziA51ohXyHLXoOwGsByc
C5ZTQ5WDcf+rgNyicuXKRxAnlJkBxIW7kxXsAtbSVTserbIG62OFyb2KhMix
skqEQ1n5cIc+joDKwQm4W4A6r11DyKldu3btB2rA6eru9FMR1N2JLVTBhk/A
JTOIAQBLDISG
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.052759170532227, 3.9125192165374756}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8HFPcggjA6NC0UdMuSNMQMDGy8TkhlWOv+zw7RomJky5ftbu90Dq
pwjTEnSpm7Y2YPoBH9NcDH0MgWBqBydjBYacoMzt//9/5fAxNX3AkHsrG3b7
QTITU9RbTLf8n8jEw8cos+IvFqn/r4H+03+ATeb/LXlG7iQ9M2wmfhdg0tv4
/9si63cYUp88GDlOAumfYdYYOq8zcV8AM36KLMeUs4GyWpk2o8mVMep9gzKt
xZ+jyp1kYgzohDjDhnE1qtznHkYmJp2AtA0bFopgBujVOD4mJkZQBBs8w/Ti
taOh6gYpKetfYErRBQAAmMyuBw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.9030896425247192, -2.323631525039673}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cx+BvBwHgNu9S/fiYmJhxyD5hwyj1UZ2JSFn+IVS6bianl2T2sUjeF
mDy/4HCjCRPXL+xS/9cwMXXgkLoryeT6G8x6M+/qB1S5tUxMOWDGAh0mJuOz
KHIhTEzHQfR8bpAn49DkfEEuOcvNlHBtL5Mzmlw0iIpgivj0/08Q+3lkuX4m
5rv//89kZgWG2d9QVhQLTzIxJfz9H8/kD2RfZrL+gSz3xomJaQJE7qEaE1Md
ioWvlZmYPWSYrPd2qgAdWozqwyv2THAQgx6wHzKhMrabv/5HB//eLVZlYjLb
8gNDZhAAAHXAoss=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.864213466644287, -5.869016170501709}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AwMB0HKccE3MtHrlwsuTsmXDLdTO7/MAl94iZ+TFZckxMxXj0lVBb
7pMBbvv+hzFH4ZFjJkfuvToTHy45fO58I49b7n8H81KccnQAAIR86IY=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.5167258977890015, 0.5486141443252563}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QYMPUiFNuPgtuufPKuOVWc+OWs8VjJgPfBpxyTMo4pagtN18J5BYl
rHLPT/7/347HzETccu+9mNYhePe/I8vtZ2E6iOA11KHIMSUgc2cjczxZSnE6
RYkFpxTZcvQAAOKi7nk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.2191176414489746, 1.4628264904022217}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QsJShDqdcG2M8Trkw3HI/1HHLrWLELVfJyNiIR24HLjlHRp1/OKQ+
SjLm4tI2lRG3XA4j4zTccvx3cclpMyrhkvovxFiFS+oSB2657YyMa3DJZTMy
XsYlF8fIuAqPXD0uuW3sgo9wydEFAADC7+UX
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.5314347743988037, 1.8141753673553467}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9qYF2iLAOjU+EtTJkXtsyMYMCf9BlN6pUxIyNHTWtsrC8jYz2a3CV+
6+mvQYx/ZxkF76BJPoIxvjIyHsPlpA245dayM8b/xSrzrYeVkfE6Vql9OoyM
rJN+YJF5GMAO9B8nuivBwA7q+UNY5HQgcozuWORe9Bx+8+bNfkbh+9i9API7
8wlccrcYJV/ikHoZzaiBw8BaaUbGGVilOoSAzhR9h00qkZmRx6TtNVZtE9gN
r+ByIkkAALWpvGU=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.6550257205963135, 0.6010369658470154}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cW2MGQ/guX3FYmptc4pG7LM4l9wCHXwsQUics2Pibh59ilPujj1ubH
xGTyHbtUEguT1GXsBlYzMTEdwK6rAyjV+Q+r1EQWJqYG7LqmSjMxVbzBKnWd
n4nF7M+3ntTlfzHkApmYXP9/dANa2Ywu9VWLSfvNfxegFJM0utwrJu5N//+z
MYnoMnGeQpP76y39/P9yoLnOTIxbMe0Td9ICGckkguHYTiYYSMVw5/upsmAZ
/YYfWP04mAEAX62xLQ==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.526444435119629, 3.7252392768859863}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84UG39CcpqKEGT2svFmAph3VdiWYYi9cWDkTEawmxiZNRGkbvDyCh5
Esx6Ic3IWI8sddOdkbERwpzOyMi2BlnuOCMjx08I05WR0QhZ6noiI2MzhLmP
nZFxC7JcOSMj3x8w67cXI6PMFSSpFayMjF1g1tcFjIyMBUhS90qAAjMgvgSy
xK8jyXUCBRg1XRrmurhIAFl5/9HlQIABCBkZ72KVgwA8cuXvkOV2cgCF2DIy
XICUzep//1HAg7t3797//38J0Eb3/9hBMyMj+xrsUmlAo2VwaLsqg1sOaJ/0
dFxydAAAXr6Cpw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.125938415527344, 3.3568997383117676}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4O4sGLh15S2q1FNdJhhQUfB7gyJXwoQMnFHkTnAjSfntQZZ6mAwS
k9UMPpTNxCR8E1nqjCxIquEOkNnNxJSHYmI+SErvw38scpNZgFKd90DMz+pM
zPVIUs9MgVJ1YKn/75mYuJC1XQBK6XwFM196MjFNQ5L6mgCSew5mr2Zi4liD
JDcL7Ce9u0DmIUEmJgdkI4XAci5n//8/AJRSuoQsxwg0p231r//fkqWZmJjr
/qPJxf//f6PbBahbCVUKJOdxMFcaZLDCJVSp/wywIGaRuIAmBdIHAvx5s9Bl
/v+fogeSMl2HKQMEb+YAwU+sUtQFAGoeZLs=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.6602155566215515, -5.847725868225098}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9w0McY9wyH1Cs1JqbzOOT6mXDK/QpgYvJ6j13uJFDbYexSX2WYmESu
YJebwMQkvAO71AUhJqZEHI5sZWQSwuHIU7yMTLOwS/0SZ2SQvIhV6lsYE5Mk
DstmAL02HbvUTU0mpmAc2uyA2rBb9n+tABNT5R+sUteBUkzPsWs7B5RS/4Bb
LhmHS4By2jiMpBsAAIEr0dU=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.526340484619141, 1.153935194015503}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcMdH+gN2mb9HrBnz/2CVWhHIyMjo8Q1T4tNeN0YwED6GIXeSkZE1
fdfNjUaMwhg6b5uH7wfR5zkYl2Bo/A2hrnCx/sbhiW8tjLw4pC46MvLuxirz
p4ePkW8vpvjzfl8DXUZGo7tY9JyE+M4Xm3nPbXTabp2XZlyPwyX//xczriRB
7qN9EITxWZJpG5rcYkb+ByD6TxqjIbpJ92QZHR7//3/DjZEHXdv//+/0GQVl
ZXkZTfdgccMNB8bAxMSu1zgdSQ8AAEetwhg=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.458860158920288, -0.3974637985229492}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcOTIsuRkBs7zaMJ3tr9u1GRkAgI256tocskgYUam8I0bD2MYx8nE
pF664M1PLDZtZmTq/IXDFXMYRHE58IsbI6umpt/RL1jkypnATmRUm4xpoQyT
YldXV5ogE5PRN3Q5UaYkEHXEnIkpFF3u1Fwoo4uREZeb/m9gYiJJbndZefnq
6+9/F2LKTRUA+0HVgolJA01qBydjxdy5mfwMjIyM89HkAsAuf2MB0rwXQ85t
ZkAABzhwUtDkJrCChRVTd7zZvh3dLVMkGZkUZ3zE6TV6AADa8Z4Q
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1834572553634644, -3.4420533180236816}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMhQeB+7zCdRJiYmW+xyJ4BSTEZYpb4HgeR452KTqwfKAE3lXvgW
Q+qaMhOTy4USNiYmkw9oUtflgdq2/f/fA6RM0HRuZmLi2Pbv//+/k4GSEahy
TUxMAmDGn2kGTFzzUOS0YHL//7/gYeI9hEPuvyYT0xZcctOZmLJwyU1G05eL
JMeHJrcZvxxL1l+wJzKZ0eTeBQP9XHTg8/9rhUBGyHsUD17gB0WDvY8MkLRB
lfr/fzUoasHAb99/dPCjmxUkE9j9E0OKTgAAOmuL+w==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.1557559967041016, -6.076930046081543}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gsJIhFI8cbucV4ZELZZDFFOw9BqYssclBzWLA4pZHDAyPIHJFWNwA
NusYA8MxLEb24nJmEVQ9FuuARjH0rgQ6FqxkZS+yZlkGNIDwyEp0qdCVSB4I
ffT/UW8oUNQyNLR35X8sAE86OIbN41AQCg0b7EZa4pLqhYYNqUbSBQAA4XKu
5A==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.868736505508423, 1.8647512197494507}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8OVMUDBjsGY/Fqm1WsxMIJiBKVXNxAiG3NfRZQ56AHVo15w9exZD
6pUmUEfha6zOAOqy34ndhUFM3LE4HB/DxIxL6jQToz0Oqf+LmZl2vpq5du01
LHLpTNytomC/BX1Fl7NjbgVicJgEY+ozAYbYwUITHkammehyzCYQRisTM4Yc
E1TuPyNTDIY+nnVgxjUmoM2ooIWHgan6zKtX28UYmTA8EQtyo4ICE7MYljAN
gsQc1oD7ejbDPmMCRszREQAAyP2kAw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.3636695146560669, -3.7185628414154053}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4NWL//9PiSzHJvVdQerFf39mSWxyn5mZm4FyLtjkdjEzrwLK+WKT
s2MWeQqUS8QmJ8Ec8B8o14ZFaiULcwtILhxT6q4Es+FTkNxMDKkfMcxsu/7/
fybG/BVDroOZOQ9IrWVm/rotOxZFagcbE1O6gxwTAxMYxCHL6TFDABOE8sEi
pweRM3+HLOfAb9j2+uvXn0zM5h+AFKpbbkAoJuY0LF6HAA1miQu45AqYmYPw
yGGNPxCYyMxsjUvul2vca5yOoQoAABhwp48=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.651784896850586, 2.305361032485962}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84cLs7wiriHlapXjZGRkYGtsLvmFJXWRgZWezFGBmDv2HILWJkr3/2
/503I+NMDLkcRk8QtYORUfwFupwK22GoHONKdOs4VP9D5EQYjX+iys1nTIeo
Eb4lzXgaVU6asR7CePZfhXENmpzgI7jN6PqkdOFMZcY+NH0IORXGMjxyy3DJ
7WVFt08LHhrqjOxXUOXmMHZBGFPZGKNRpf6fZzX+AKS+TWVlZLuBJvc/l1G2
YepULWBwTkGX+v9YghEM2HO+Ysj9/5IElImMxDCQfgAA/EatRg==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.983688235282898, -5.827025413513184}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4N+PZWoRCoo1i39hys1hhALNxd/R5VYLA0F+f7+2MLPOC5ym5zEm
/MUh9SSQUfY9VpnPGwUYHb5hk7l3OYKRMeQUhvj9/i2BYoyMFus/Y0i9N4B4
QeIoFvNa7EFAl1FiHYb/oODNTB7GjB84JP9flGVciUtut6TCOxxSIRyMqTik
bkkyKs/BLvXEko3xDFaZzeVCDAzNv9FE9zfF91UJsTEyRs74g66jABIoZZ8x
ZP7/31oo4FBbexVXvFERAAAtB7p4
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.30839431285858154, -0.9915750026702881}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8hoJ6BwcGBwQFIYfqZAQnUY2gjS+7//noHoNB+sCqcjnLALbcf6F5c
cviiDY82PC7Zj+kBZG045fDYhsdvZGrD5xA82vA6BMMdABXAu3o=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.798044443130493, 5.097691535949707}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4Omxmo6wY1OOHTv2BlVi5UQrRSZmZmYw1ki4gCwHFvMrKVlSUuII
ZPNnIMk1yrn0QZmfjJmYmGKwWnvMEKhP5iYWma/xGkA7XR9gkTrjA7I34w2m
zI/pTIxMTNJnsGj6kQnUw5/4DYvUTWOgeYbrsLnvphzQfRmfsEldkmJi4JgN
5/5+9OgRXEqOmZljBsyIY8eA7jWFyUkB7YLoerTKUhToJrH1P2FyoPD8/39Z
n7+cKDi8i48grPMBhiEDEAP9xyebuRnFKV8TQGHFLGMVsholfiDgzXEgwBaO
gwQAAIqYlYo=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.124578952789307, -2.536421775817871}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcPvKRjM9JqHsxZhS53mZmJmZ1ZiYJTDl4pnFGx+9+vzq1RsMqZ+O
zIrvcdiWxqzPdAC71Achi7e4HBnNvBqX1A0O+R+45EqYj+OSWsak9hmH1JcA
hgUvH13B6pg5zEzMSuLMailXMOX2SIhLAIEws9hVXLZ+XC0Q+gWX5G0+2ec4
pKbJMAVjlzlWz8Tc+gpddH/DjRux4pzM4l1/MXSkMYP8EIs1QMWZ9XN2Y5hG
ZwAAcIzLFw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.7180002927780151, 3.513772487640381}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4GfAVFxSH8wZp+OSm8qY+AeXnAPjNgyxyYvB1DMW9V/oUse5lT9D
jMzE0BbJmAqifphgGjmN2fA52GRG5+/oclaM88F0LOMsdKmtzHqfQPQlDr6H
aFKfzRknfwQxKhmT0bXlMzLKyOs7RGVxsu5Hl4tnZGQUkpeXYmRkv4Qu18Ok
v+jZ//83+VnaP2H47thvIPErlDENQwYKVjOKncUlV8lYh0uKbLllMitxytEB
AABmfNA+
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.165580987930298, 2.9080302715301514}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/EoIshG5dUBzOT+FXsUgdYmZiYlmCX+2XLxKT2A4eZTkxM83BIPddm
YlqNQ24iE5PmJ+xSh3mYmGbh0LadiUnnPQ65ICYmMxxSbzSZ+JfjkJvKxBSB
Q+q/HhPTPjLkvmgy6bzAITeHiWkyLiM1mHSe45A6LcQUgEvbYiamM7jltJ7h
kqMeAAChO9vt
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.4227294921875, 1.436567783355713}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+8YJYiExMDUwcWmUZZNmZmZiZmG0ypH1FMzDjkbvoy45SrYMYpl8ME
cgaYsEaXkwNpUSg/jUXfMQmQ3NH/j9DlXrSEgawSXv3tRw1QzhtZzgrijH6g
dhDrBKqRRUBn8B/4/78d6JapaNYVA/X5////SAOo7wmmnMC+//9tgSZH/USV
eqMBdt1iHqCDLqBpg7h8A9RBaHKg0NjsAHRQLLrU/zeaTMycPEDNZt8w5MDu
BDrRbCum1P9GcLjEYtEFBIHMyv1nscpQFQAA4pBwFA==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.7809731960296631, -5.064888000488281}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9I8KqCQS5xzUuscnWMIBD+AovUSlFGnj1rzBlVN2FIfVJhlH/y4P9P
b0ZWDMl8Rg2vbUD6iw+j3R9UqYfsjDMgrC9ajIdQpH7aMrbAVE9j9EaRy2F0
fQ5jz2RURpZ6I8249T8OuQjGtH845C6ySH9E8KYwliM4r8UZdyF4nzX1vyF4
jxgV38E5n9wZQ5GMnMiYDGf/cmfUfYOQusrDeAuuK4Mx6DSStgOMjL8hrD/T
ZFSOowQYRO7vr9vt5ozW9///R5PbsbvcExh3rK0/UKX+P5AHR6pg+s4n/zHA
1SRmRsaiu5gSdAUAsZCx4Q==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.3600063621997833, 6.356715202331543}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMfIaN/Gx5g9H0PmRT0bExMjExCwVKPLTQcJM2rZAkktNKljPExM
bDOuv/iw1hZDLoiJiXMqmLWbicvlEbLUYX4mpnoI860xE9MUJKkPPkBrFkE5
LqhyC4FS0nexy81kYmKt+Y9dTpqJyQLGvq2IIneaj5HRDMbZzcjAgCQ3mQlJ
H8j3aHLroext7ExMUl8QcspAOR8oex2Q7Y7klAqEmYesmJiUXiPJrQKaIzAf
KPJ0AgcwqOf+RwaGoEgwCQzUAtF7UaT+r2JjAgMGJiYuh2eocv+XqkPlHLb9
xwD324uBcg7tnzCl6AUACzlzbg==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.9499468207359314, -6.830801963806152}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8u4E0qk33R9EefsMmFMTMzMTMzG4TVHLv/BrscCEtpWFlVPMYuB8Z6
zxByoUxMDJX//3/q69OSlWBiYmQ6jqpvNcxdGsxMmm9wy1n/xy43Bciej+zQ
mzFn4OqA9q3+jxW8kWNmFn2MXa4L6Icy7FL/+YByB7BLHWBkYmLCoa0UFC44
5OTIlDuDx77/ePThlUtjZp6JSw4ZAACm0Zkf
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.410208702087402, 4.891765117645264}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1ePMDu/jN/LBQl+XHzmCRyRFlZpZ4U8PDYXUZXa6PiTl66bP//589
rk9Glzsj2wRh/K43/ITDNU/rmRdhlzm2Spd7Eaa2T319MbI8zMxbMHX0MjAx
MTGKysnxMkUtQdMJdKe+tfvj//8vTOJntkX1xrPjx2GqL09V51+Hw6n//z/W
4MFiLcy9TEwwZntYH6rcWmZmGJOJORxF6qsVsyaMbcLM04QkdcaHWXMjjPPJ
gImp7tGjR4uXFBUVqTMxsZhvRqg87sjMxMwMw6aojnxzPBwECo+DwE+c7h+k
AAD/0bOK
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-5.1058502197265625, -1.089908480644226}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcGcKA1fzL2wyfxcJMXFwMx3AJreZiTHt4VOmfGxyh1kZG/8/ZVTB
at3Ukrn/TzA54XSOP9NuXFJnOJle45B6psva/xe71AtDJgccul5oMUX9wSFl
xGj5DrvUBS1G+w9YZX6u5GZKwCZ1aGK8JRMTU/7OG+gyvzJZGaGAP3ErqtxV
JkYm7uKtW7d2B/ExcWb/RJabx8iS+QTCfNcrzKh4B0nuz/4jSIbIMO7D7g8g
uMnjjyPUgEBU9SdOOZoCACgRyAo=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.1173129081726074, -0.8118136525154114}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984MGZxczMzIwwnIkkdc2BlZmVFYGzkHQ5sKLK6R6Gy51hRZNjnY0w
UhFoh7ipqYmpqakmun0zgWodr8PNyFyKJsfqmJGecfj/69mzZ///jy4Hwkqm
GN5bK47wG3PtV1TJJRJI7jyHpnM90JrZULnQFiwhd+5cKFgvqqUPzpx5AGGh
++/VTAcU/yGHJyTMHB/ilmPVAbG10OSumYozMyDFH3cbTv+hufO/KZJc/XpU
uevnaqFyYefQwoyqAACU8TAS
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.639434576034546, -7.729306697845459}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8owMAIBAyM+gsxpV63vgWBswceYsot8cJtJF45sU845RYzvMUpd4Px
7YUTJ078xirJp8zOxMQY/gCb3KFFJ0925AvIrsVp9FUbxdU4JS+qKD3BKdnN
VIhT7qUanlAINPiBUy4Ft9xPU080kVNwVgvTRDS5I4EQl39fwBWLYdR0we75
b1ZPDOZueo9pz/bF/MDw7LqN0420BwBjkeK7
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.735888957977295, -1.5284335613250732}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+m4PenT9cW7kIW+bHMo3PWrFldHh5mjCCAJPVagxEJcIhlIqR+2jEy
ckHEJaTSWy4j6fq3m5FR7GhzUVHR3KM/0Kx/DZQ6g91l/0IZGaNm1RqDQNE7
VLlfyO5w/I3qI3mwqLjN6mOZjIwTUTW+8zEJ67v1Gsjaw8jogCNMnskyMuai
iBTI2W4E0d+2qTEyKr1CkWNgZGSWCpQyFQNayr8P1aQpCFd6n0D334UaHZAE
T9ixP1gc8evN8k2rvuJw4cADAAeQmHI=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.572589874267578, 5.614886283874512}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/a4HLzAWzCL3fvrAzmYvJFF/99oNmDnQkIOANXoMp8qjdiYmRikjFp
P3QHXVcYE5NGac+FT1gsesPDFPgTh9sWc6k/wSG1nJMpAIfULx0mJlYJidDr
2CTTJSQkhBkZmnHo/f9ZhHEJLrlFrPzHscv8uyPMFIgh+uQ1iOxlYjJ8gyFn
o/Dm/6PpnEz8czBNYxGOE+ZiYkp+isUmL2DQS3rvwOqKX2tadnzB5Xi6AQCB
Bcv7
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.1988589763641357, 4.976438045501709}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8R4PJ6IFjJCAQMjHPR5IqZEEAVTW4KF265/3P7oEAAUw4OpMmTa2fH
KffQHotboGAHExP7MpxyoutxWefKZI5L6gI7brkIJurLFTAzncQl95+T6RnV
5ZpQ5ABopMXd
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.047999620437622, 4.926872730255127}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cTYHDAKeVAntx+Bob9uOTq8WrDIre/HqKNoR6rDrBLsEmB3VeP1SVg
UZACTDkHcMDXYwn9/SApoD4sMbOfAQ4wPAAWrK/HJvUf6ifsjoSZjCu49mM1
EgJA1tXj1obLNmzeHjwAAGMpvrU=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.882184624671936, 3.298783540725708}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8Hx+ChMQMLSiS9zPcDRiYWIBAibuCb9R5SDCUOIBFjkpZ2dnaSBr
J6Zc+hEgIxHIckazcDaUTmBgYkIzEwbOA80UeYJdrgDolkasMt8L2FmYFD5g
lbsP8kMbVqnbmsBwScBuWQ9Qm8QN7HIgTy7EKnNcCUnu+/7Y5wip9V7g8LRL
ABmaEApkIZwIih4mFALV+SwoBFzufaMwmlwwklv2ONc9eBDm7CQMjq1JDz5j
ce+OhQsXHsHuSZoDAHLPcgg=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.905249118804932, -3.481335401535034}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcDGKraij4yE2qQuijCCg0X8XU06GUc0NLLsRU24jV+y3ZweSJRm1
VmNKrp8GIjcDjcXlom+2uOXO8eKWO4zHzIWMjF44pN4bMTKuwiEXz8iouge7
1EcDLH5/c/16YvP16+GMjCpP0aTemTDCgN7XF/fAACZXysgoyQyVdFFkZGDk
l46HyfkyMiZyMzKyi4CAZlva9EsIM09wgXTwzMbqwBNd7iJVb3F4bLADAFJs
q48=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.355123996734619, -1.1387883424758911}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8GlbAisjI0PoYQyZ97OcmECAkYmvGV1uOhMTu9+R48czRZmE36LL
ScZfgBjtwtSPJvf9E8IEL1xO+pPFNA2XXAWTxU9s4ifKM3WZmVqxSW1jAfmB
KfgTFrlVYP8xYXXLfbfJz54tsGVkNMflmA82TCz1f3FIXuJlYvqGS+cGDLnL
tTDWKxl0uSK2if8grIvcGr/Q5JiYGsE+W6XMNBPNlpVAn3EFZmTKszJp/UGT
+9HGDfE7d+orTPdtTBBgYjROQI8+OgIALGqw4Q==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.9237778186798096, -2.653717279434204}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8F2MHPnz9B1K+fcPAXLifEyJwOBBKMcOB5DSZ3s4CbEQkwALEMwtQX
lyoqKk4/gYE0RkacDigiU+4qHrkZjG54zMzFJfWNm3EJLrnpjPqfcMvNx2ld
HONmnHJleOQOZizGKUcFAADht9mQ
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.243410110473633, -1.4123600721359253}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8KCakYlRay02qWtizExAyLMOi1wMI5O8iSYTI9MrTDkTJubX/78G
MzEXYsqtLTwEouyYGM/ictEOZiaccmeYGPtxyjEzZZCpbwJWiRa7HWdwuLOF
h4lZC7s7XwHDEwi5r2ORm8kEDlGF15hSX7QYma4VQuLiy5kgppmoLgz5XwiO
CxOgrdqHkOROMzFk9DEx1miCbTVBsRWoT1yMWevr17P9GRk70b3AwMQodg2r
x///zxC3xxkH9AEAViOjPA==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.901289939880371, -3.602661609649658}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4EsSI0tkxNoNGzZ8xJD7a8LExMQIxEz2HzAk62FyTKcx5D739gaZ
mRdzYJODgPt8TAY/cMj5MzEdxSF1lptJ/jl2qZ9cTGyncGgLYGKKxiG1hJFJ
/B12qVuMDIyTsUtdZWdirMXu/h8hTEyuv7FrW8TEJPINu9QDTiaWTdilfiQz
MSVglwKZKIkZN2BwjYuJ9xgObaeYmBxxSAHlLN/jkiMZAAB+18e/
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.1082058772444725, 0.29867589473724365}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8OF8gQgTk0bpJwyZz7P1mJjBIABd6qsaMzNULgpdrhMoyCpZcuDr
16+/0aReWzIzS2/C7o4GoLbj2KWOszMz677DLhfFzMx1ErsUSE4fhxRIjkNZ
WclhNxa5SCYQYGBicn2KIbdVD+RpkN+tMDW+P5+WNvWoDzMzzyVUiW//oIw9
QGvPokhdtkh4DWZ8T8EwE6habS2IMQFoXwKq3H5WoM9rW1vVgG5xuojmkCYW
SOQwMYucxnBluCxEzvIIpg/+XyzkYVYpXPcVixS9AAC34pZj
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->
         0], {-0.44046586751937866, -3.6471378803253174}, {0, 0}], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFUqBpfUEyFGVlxyhYw45a5y8eSyfMYud4Kd+VjneexynoxuuGw7
y8Z4GZecG2PYO1xyLIy7zh25hVXqPTOjNBsj7yVscvMYgSCMsQuL1G99Rsa+
ow+wyn1jZNT+9v814yrscuH//0cwHcUuN+X/RqYQbE4ByV0SYTmOTe47L6Oo
IOs0bFL//y9kZOSfil3q/39dxsDp93DIvfRh1F6CSyMdAAAJLs4V
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.715127468109131, 2.7005929946899414}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8HqPEiMQMMjueYku9SucCQZCvqHJvWNCgMifqHKWSHJMJVjlzPsF
MeQm8YClWHM/L8eQq4ZoE13lgGlmNRNu+1Dl0r/hlmPaikfO5RemnLKGhjKY
8R1JbqMkSMQBGJQvwC5die5367sg1h0rEBNJqpmNiUngCoT9WQhVDmyfYe8s
YKD39vKgyt3QBDuB28fHEcxAlvufjOIH7c/Icr8ikaQsb6IE2v/XYXAptdv/
BwYAAEoZJh4=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.582188129425049, -7.6228437423706055}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YE1UlCQjwzksMm8jmRlBwBpT6p0ZI6PKxvOMjDPeokv9DWHkan71
f51qsK/0NTS59YyM1SD6uy8jI7qN8xkZbYDUVX1GxuZPaHJ/LBg1vvy/IsHI
2PgFwy0HmBhdGpkZJbb9w+KHOaxAD0hcxSLz//9JTkZGwddYpa4JA7UJfsMm
ddWFkdWAkXESFqnrLoyMcx4JM8ZhSn1OZGT0+/n/ECMbptxhRkbfX///r8Ai
98WD0f8HkA5htMCQO8vIew9InRZnXIMh91WbbdrbtxuEGJU/Ytp3nIVRXBwY
KneweOH/FFCMJ6BHANUBAOCOpkk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.941182255744934, -1.9845068454742432}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o0M1wFpfU3yDGrbjkljAyvsIlp86o/QOH1CstxsifOORaGdlxOWU/
F2MrLtsyGTme4ZB6Lc6Yg0PqRw0j12Mccm8kGP1x2dbGwbgMlzZjRp13OORm
MzKewWVkECPPEawSL/6/NWb0/4hV7uf3QEblmzhMfMrIWIHLtg2MjDgj/KJI
5D9ccnQCAKED51g=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.017889499664307, 1.2388466596603394}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8c4NsyXDL3W9knY5f51SXDuharzOflRmwJF7DquerMqILNvN87e20Z
lVqeYdP0xk/JcCFWmf8Pv2N3G8gqH5VduOSuMfJM6HqBVeqHGSMQKN3GKjnP
PO7cTsY2XMZ+C2LciktqCr/iY3TBWfvAVDUjYy2GhmxGUc/s9dEsjPZ/MOTu
1oPcyKi8/ScWm/5937V48eKXuNw4yAEAA27hVQ==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.3832406997680664, 4.5735554695129395}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwOCAU2o/HjkGhno6y+3HJVWPJwzJl8PtFAfyvLAfj1w9mXJA+xz2
45JzINtQ3NFOBwAA71Tnyg==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.9123854637145996, 1.18839430809021}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c96HOVeYVLbjmjyGUcUh9Utd7j0hbFeACX1H4O1Q+45FKZzuOSui1g
jUvqfx7jbFxS3xWMfuKSm8A4BaeRooyT/uKQOsrMyKh5HLucFeOUpcqs87HK
Gfl++X9Ln20jFqnXrIFA8qWQ4idMuQ2MZSCqj7EOU24h4x0Q1ckYjSnXy/Do
//9/dWy8BzHl9jFqTatUZZS6gsUtvyslGBnFSnFG7QADABuS3Og=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1920344829559326, 3.363520383834839}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4GuWPoNg4Ny/WKRWSDKHTVgVxnwAU+qRnMkmEG2W82dSDJrcTMZl
YPqxgYPQRjS5Y2wQuRVMChcwDNWJBxLvozgzPmNamM7y9P9VK8bGf1jc+ZJt
+UpBrvZfWKT+/3dlZMl+gFXm/39fRnMcMv9zmZX4H2OXmsWc9F6tA7ucg/jt
/0UsB7FJ1TNt/f//X7DIG0ypPw7GP4HUM8FOTLlbjH0QtwpihsoP43QwfYTt
OBZnCm4A07LFWBwzgdd/14VdK3lTsLl0kiwjKyOj5wdsclQDAJR9y/s=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.6625990867614746, -1.6968172788619995}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4E6aw1NccjZMTL5/wKwCHvkzf5BkftWLMDHVfgYxbwFZTPeQ5D5p
aDAx9YKZnxeGMTG1I8n9fXmCmyn9A4TzQ5fJAcW+ZUxM9VDmV2GmWBS5ECam
hVDmN2mmEBQ5CyamvRDWjSgmpgVw8W931941YGQsvQsEJeqMjAw9cKlTVkxQ
wAgmldpfw+VcmJDlnFPvI1llyKT7/msaE5PJti9fv379jeIMQyam/uM6TKK3
/mOClzJgA1U+YpH7/yGZHSg3HZsUEBzU08vAITXoAQC/Aqfa
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.290705442428589, 6.5703887939453125}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4MUReSYmJgYmJsUjL9Dl5rKAABOIiHiLKvXYGCHHcgtV7gZYkEVL
WwBTrgci9///ZG50uUncMLn/YuhyAUBx0Vu3QIK7WVhMMeQk4DZLYMg14JG7
hUPOHxgmNyHMVUxMzuj6fF9DmNjcOf8/Ibk3gWxY5FKWAukX4UBHOb5Al2Ph
mfy/zQcUOPNRpP7HAU1iEdDkBcYDe/IHVLn/QSywONL+jw7eRkDlkudiyP1/
eUwRKHfs2FtMKWoCAF7cbSQ=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1650086641311646, -6.417749881744385}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cWOODByFCJXaqFlYlJ8Ag2mY9trExCGU+xSf2tZGRSfYDdwG4mRrFz
2KUWMDKKXsIudV+CiWkidqn/eUxMsTik6tmY4t9jl5orzWSLQ2oTI4P2UexS
342ZGI/////6xIkT99HlFjAxJS8JVpNkZGISUtv1B1nquRgTkygTEDCCCQ9k
i1eAhQ1i527fvqrOlpHJ9zWS1xgZGRnWQNifbRgYGU8i5BpB+paBWPfzhIAm
5PxGyLWD5GTrI9VUBYEstXW/kOy7Lw9zBhO3dT+aH75siI3xYuKMjZlwG3sA
DGYAACYsl1g=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.793823719024658, 4.382782459259033}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYGEBEDgwMDFxt39HlytnBgEXV1cl5hp0ua9r09LSpgIZ15ijcRq+
Ho9cNR65EOaNuKROcZj+wiWnx+yLS+osn+kLHFIfbJi34dI2gckDl20bmUTu
45B6oMm/F4fUbyfmNBxS372Zk3EZWMDs8gq71J8CZtm7OLS1MHPewCH1f48w
18bXuCT3OzZ/wyWHBQAAww3d7A==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.6601650714874268, 0.8034077286720276}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Pvb+2VlZXe2Ysp8WWfBCAQ8KjHoMt/WWjEymtasWXMcXebvGjNG
Rtstf7HZ9JORUXTrd6yOmB/JyKi8BUP434ZGTW4mNmYWtiAMubcgt5X8OnAV
i3EfBIFyGvHxRVe/Ykpe2BRlY8PMyMhgfQyrW/4fP3KkyEysAKsfQOCTMuM0
XHL/NRmbcUl9VWc8gF3m11FJRmfs9j0pY2QMPYsp/mbv3iZ5RoG0z+gSJqam
akDfc6Rfw9SUqiGWljZ9yX2sNn35iMvhVAYAlgXB0g==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.39686810970306396, 4.587760925292969}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cD2KbNfBKH1EMtRqYs7FKTeRkZdbFLTWJnZAz/g1XqqyYjow92qf+J
jIysOBxyX4iRsR6HG4sZGTW/45DjZGQswSF1loWRsezcuXNfMaX+VjFCgNbq
v+hy7YxwcApN6iQzWI+OjiojYzCa3FGgjMUpoMe/lTOqofn/KjfUlZ+yGRmP
oWnMgMh97mNkFH2CJvfBlVGqdmaBBtDsGZi+4IS4kjnhG6bceTGQlDD2sDmS
aJt+8DFWqQEHAEMtqWk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.586884021759033, 4.013942718505859}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcCGzCqfcJGaORbjktJmZJ+OSY8Ij58DMHIbbPmZmastNZGJywKMP
pzvJ9R8Dk9BB3Po0cEmRLcfApIZHn+wDXHJZePwwiVniIk5DaQ8AiSreEA==

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.8374494314193726, 0.7007818222045898}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/s4MamTWexCJ870JJuws7IKI1FLpsRAjSxyJVzgWRYVFKwyL2ZXth+
6tR5VMHfG5ydnVdid1shyKwDWKVuqzMy1m+7h1VuLy8jo+DMx9jNvNfmxcio
sOgLdtn/l31YGAtxyP3/P8eSdRGa0N+n06CsZYz2aHJn9b5CWa9EldHkmoXf
QFl3NWXR5FzZpp98AGa1Mtahye1jYmQUUFGpqa1VYuxBd9+uUk02cNSwpH/E
4vyzB5szPDSrsMjQDQAAmHLBzw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.9476501941680908, 4.88225793838501}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4I6oFy6pH9FMnGWoQrN7N0IYL5mYmNTfoMgpMindATNWAOWcUaQW
WzAxaYBZOkC5VBT7OYEigmCmPZC1DlnuJlCAqRLMFESX2wySU0q1AQJWIKvz
ts9TuFwaEwpg52PSg0syMmGAPJhcHR65P8ECzYmr1xgwc3ODJfQ2Nj9DuOYW
mNxwdgJIStD2938swBskl4NN5v//eUzo/kOAXay45W4CHSPxEbvcIqC2w9il
QHJuf3DIneKQXopDikoAAFjteAE=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.864450454711914, 2.5764803886413574}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YGdaXJxNXFw9hsS3ZYaMTExMIGx4EVXqxxwmJg6tsrL1F5eHMHIj
S15ZNJ2Jye0slJfOZISQsmRkZGDMhfGepjFKIuRyQfZsgMpECzBypyLkFrEx
Mc79BmK9WyPPxGS0AdklU5gYl4LoVaJAd2ag+WCmlNCJ/29CGRkZg85geO+6
vGipEBOTyvG/GFL/f2QB3cPf9wlT5v//UFCYrMMmc82GkVFzkZQrFm1X5Jn4
Sj79v87njSmXw8S0B0Rv5t6HLnWGA+qnd/Lx6HI7GSFhW6/NGIchx2ReWlKa
I8nIpLANXe6mLCROBfKuYrrl06Z4RtP0Xc8wZagMAMX4llg=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.1346182823181152, -3.419689893722534}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8LdL7tofHHJTmJiYzmOXeq/GxOX5FqvUnwYmpn4cJn5iYlJ9hUOu
hIkpFIfUNUYm+fc45FoZmPpwSJ0XZvD5hkMugontGA6p/xIM3LikdvMwxeGQ
+qTAJIxL20ompok4pN56MMngcmQUE9NpXEbaMjE9xyF1iosp9Dd2qVdmTEzT
cGg7B4zu27isoxMAAJPr3zI=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.29147481918335, 1.2151590585708618}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cpYGACAgYmmW3bMOWYWIAATEzDI8ezCF0uAC7HFPYBTe7Vjh3ZUDmW
O9gctA3soMlYHfvACaRvCla5L/E45TZkguxTOoRNSgLsFm9MZ/iDwwUIalHE
V+fn58P9noMitUwY7m0WFhFU2xDBxcSStPY/Lrmcr2jOOKUIcwaIaN62DUnB
VUMk+0BEQv41mNzXUk5UORYWWYTOUmNlZDmRwkKE3JdrZ7bvAAIogS3QBhYA
ADW6S2o=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.9821600914001465, -2.0336005687713623}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Mun5++wif96eqHYRJtZ5iym1P1SJWZmZiZmZhl0nU9dpIHCYDnm
l6hSL40gwkDCnLkeRWoeExAwQIjWPDNkqQVw45iZFI4vYkaSms2JkDN69r8Z
Se6pPESYy49ZdfIrEBchtxOixXzbr5cfIVy41G1FkAs4Kr5A+euYHGFSH1TA
LtgD4z+0Yu6CsSeDrNKYC+P+cEXyuxizLjNzN5Rzd5E2M7PqR5gck8QUZuZw
IGNqd3e4KtBVTnCp/wyL/+szMYgrQsOFOek+wgdMi/93ssP8LmK4Gjm8mPTW
/o+AyOnPvowSyv+Px89/9f9iR3z85ItYY5xeAADT3V+h
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.7750697135925293, -6.04400110244751}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y8EaPgdELu9TfZCYmJpdfWOWmMjFJ8TDtwyYVy8jm8ngWUzimzPMQ
Vuau//8PMZVgylUzMWUBqflM5zGkIjiYmNYBaU9MuQNAqUv/sco90WdimvEP
u9whJiaDT2AXqaPL/XFlZMwAs84xMqLJdTAxGX+AsVDlfnoyMS2EMMPQ5W4x
wUVCmQRu4JILY/JGte6pFEzugKjwDjQvhDIxLQNSl+aJMKWjSYFcwBecpSrI
xOR8CV3uvTMTCDA67PqOLgV0TbUEk1n1TuxRTicAAJ9DqZc=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.12438319623470306, -4.694756984710693}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+SIIKRQbTzPXY5CyZGJiaxQ1jlUplutysy8V/EkLh/6v8u9p8ztJg4
T2PIbRN6+r/LlIlJczumgdsYazMZGRhzX2OxbBETUE/x8z9YpI7wMTH5fMHu
fi9GYVbsrgfJvVXTwyG3mOGtvQgOuR+MrZNZ9uCQ1De8xbUKl6FMty3McMi9
4q+2YMIh91+Xz5RxMQ65Q8CAWYJD7rsebrn/p9hwy/2vZDqCU454AABhectT

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.74990713596344, 2.3694255352020264}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QMLU4kpGxHIvEyxV6jExAwF77G13quzNQ2HRZJFD2I7pcJROT54b/
3z0w5V4s4mda9/n//w8gU3NR5RYxMfGeBtI/AoFyMleRpfbzMzGtBjHA+piO
IEl94GRiavwHZBzjx5C7ysQk+RjEWMGELndbjYmpEsQ4IIIh18LIqHAZHC6M
YMCAJKfHxOQLZrzxYlMCavP9gkXu/6vV7UC5vf+xyWGGC0LupCwTE/ecv6hy
Lt/+///50MsKqKsLJcCAckxhlZXJTKA40rqDIpfMBAUMTOyLvqJI/f+YCJUT
Dj7+Hx2AQ998+vSDGDL0BADPpWxu
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.10488539189100266, -6.703549385070801}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964MuZ7f1nqtPTGZnWokvFaDEzgaHYTgxtHqL9LSYmJjNnYpr4yoTp
LC7b+pg8cLoknfkQbjlM18GBHTNOqf+MYjil1jJl4JZjZFp85syZa1glg8Fh
whOLTe7VzJkeJgpYwhIGXtcwK7zGJXmNhxFnyP3HE6r/CxlwyV3774FTnwcD
E059r7WYa77itI9YAACo5dah
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.8003268241882324, 2.7520697116851807}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0MXAKNh0BpvMAw1mJiBgDceU2sXNJFlYmMzExI8pt51JCmjcn4lM
zJOxyOWDqD/xTKJY5PrBdCYTB4bcl3hbnHL/P9+BypWgij/dfvYmlJnJ1IUi
dcScSUTOejWI+cOP5wmyJm8OkKeZBOe//f89l0kXSeqZAZNh6o4dkzWZmLzf
3mMSeIAkp88k+gpEv3ZjYuopYSpAknrNxlQPZXUADWZbjiTXxOT5A8rcCZSq
/Y8iVwhh/GiWZWLi2/QMSa6HKeMvkHp3zI+JTbeZk0kBWSM7U8bTQwWiTEw8
zf//75h4CVkuEOw5Jhath/8xQSc3k2FLyzIsMvQEAJkZmUk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.0816267877817154, 6.2338080406188965}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4Ms2023bpAO2bXuAKXeLhYWJBQiYnF5jyNmD5UT4mFhsXqFJHZBg
YSkwElnrDVRQiCp1Sglo3P9rjv/PYMptY2Ji2g5jFaDK+bOwOD+EyKHpex/J
xKIMdR663CSgEzWg7EwscishzFomFrlrSFJfMpkYdJ5B2J4MTOrI2oBBonMR
ygb6rx/F3yws3hDW/R4+poZfyHJqcDkgS+kQstQ0PpgciHUGxd95wDDxBJq3
jQEeOHBwEBjMivn5jqB4gAYOAjjCoo7FFiPuXjlB5AoKMaP1/4MdZjtkg3Zg
SlAbAAA2voMT
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.14715178310871124, -5.977885723114014}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4LYno21E3z1sUr1sjCAgfQ1D5pMHCyMERGHI1TAyss99+vRUmTj7
WXS5FEb2ejBjK2MLupw0YxWEcZLVBlPuFITxmF8XXU6RMez997WRtnb6jEHo
csWMjJxaEIe6ossd5GWEAf6H6JLVYHEJExtGRt47aHKujIyeM+bv+fN3Czdj
GarUTBZG6wcQ5krGEnS3BP2EMg8whqLL1UBZXz0Y96PK1TPqvwYzvvUzyn9D
lfsiy6i08cmTJ2t9GdmmofshHewHBkZGzPD8f8sVLKmk2oQhBTQ1iVE5csMf
LDLUBACzW5Ji
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.2870471477508545, -5.013915061950684}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964PjMmTOvz5x5QsFt5lxUmRmmEoyMjIqMjPpCjIxMno+RpFYyM8KB
y+TJB5GkLkKkDDmc4uKO/kY1cQdQQmznoYfH32C6wxQo5/AduxuzQCbyKa48
jEXuU6KIMEhaNPj+C0zZS+dtIK5Uqt6OKfv5ZYWfOUiW6w5We58v4QFKpn/D
7qomkM7FWKV+xAOlkr5gSvx9f8AXKBX+CYumGWCHhmNKfD2gxw2SMt+PLvNr
nx9QnIGRMQTTrhyIx1OqMQ28AQoxYa+LvzGl/r9xYmQM24NFghwAAM4YjoI=

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.7516995072364807, 4.445272445678711}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x924LLuflxSc8SYnF+8uFBdXa1piyZ1UpKZiRkGUKW+STDD5eS6UKSu
KDAzJycF12x9BQQfUKS+RoHUM8k8weKOMrBZTMyLscgBtbkVOmKX2zbh6P//
ExiYLuPw3ysbJpH7aGKxeh3nQXQbM1MBunqgr9qA1D0lZu0/6HJeYLnjqszM
KzDsmcbMLG9pyc7MXI/phrfxrCDPKZ7FMBEE1s6ZM2chDtcPCgAAGSa1TA==

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.724721670150757, 5.245418548583984}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x98YHJycgwjo+8LLFJZrEyMTAIsTG5/MOVaAwPTNz6fw8R4A5fBfyxw
y71XwyX3axknI0PjkSdYpB6bMDEBHcRkgUXuCBOT9+xZOkx8pZhyT7rO/f3/
/501E9NuXO5528jE/xCnY20Y5uCS+/+BURVd6AGcpSCGblQmnKnHfhhVrsIG
xrrJaPMfTc4ayrggwYAecHMVJ74G+u9ZjgiTzis0uYeuTExeAf58TPxlmE5f
IA4KT1aPQ5hS///fUYhdf/QkNhlqAgDCd8Nk
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.469047784805298, -2.3187003135681152}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4NqZM+k7+tKDmNJ3YEjxMDGDoFhGMHMLupyCiYlJ7MxDQKaxMbrG
1zDGKwUTnPYyiF3DIbWWR+wsdpkzdoxa2HXN9BBj1vqKReIgIxMIivZj0wT0
XUhGhhYzNjlusNO3i73ClHt9HUwtZjZ5jSkJs9UDhxTI1kM4pM6IyeMyca2Y
9jocUtVM8til1saYMGljNfBVEBO3yVqsmq4pMIXgsol0AADKMMri
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.1902564764022827, -0.3996998369693756}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8YsEaLCQTW/cQil8QMAY5Y5EqYmeW5gHJsyz9iyH2ODni9u86YlYl5
Pi5rU5mY03DJteHRF4dbroQFl9wmKVZmXHLmQD/gkLujAAwYBiYmycvYzJSW
luYF6pW9g901ZyYAJX0uYJf8vrobGHzPsUv+38jMLP4EVejt5PRL///fWGUn
xswcgSpVps7MLDq/UAIcU/WocmGQ+GMCYo/9P1DlOuFyyWgy//8/rZEHStk2
fPnyG4cbaQ8ADpSbTA==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.681236505508423, -2.6842753887176514}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcJSdcTpWiV2TfdmZmIKwSSVzMzEx4pCrYTKccZ2HqRab3LdTL///
52OaiMstS1mZbuCSa2NiqsEjtxyPHD4zccq1MjJexyXnh0cfI33lXjIwMbnu
/oIu/P3Jubg4XaAcE+cRdLlSJhBgYGLnn4ph3P12nfD29rb2zbicQgcAAOrV
ydA=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1658257246017456, -0.833098828792572}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848PfHHHuplGX/sEh9a2UEg9R36DJvC9QYoWDyXzS5+2BhdiEQ+Ryb
nNm2DGxyn/0YOeqfXRYBSvG/Qrfw04qd//+DtW3D6ot6kDbhZ1jlXIBS9hew
SoHlIrBL/U8DyokdxC73MUuQkdH5Gw6dWwQYGR/ikJvKiVNuGgcjply13uy7
/1/MBoc3ulwWI6OAhDA4vMP+YMpBgfojdIve6MHkJmK64k1tBgMjo1LtI2xJ
gk4AADeKlI4=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.7201974987983704, -1.6577001810073853}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8Jy7EqfcHKbZOOUKmdaTJafG9AuL6IvtQOI8IyM2HfU+QGIykx0W
qfcaE0AKmCZikdvEtARIhjAtwCIXJ/jy///XImLvsRjJaAgk+xmLsWibwJQH
JFuZhNZiSH0QYAr4+f+PKROTJYbcbEYmJq/CWUxMTHUYcols+xJ4mIAKnL9g
yD3bAnTkKgbmhVicAgbrGXVwSf1fwFiIUy6RsQWnXBXbZZxydAAALxLV7Q==

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.056471109390259, 1.966873049736023}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YL4qg39n5wZsUhWsTCDAIVp+C11qERsTDOigy01gYuKZtK+mS52J
SRxdrp6JyRVE35THlGNnYtoNpH5GMjFl4pALZGKKu4BN7nMPkKz6i+EFCyYm
UUkmpvD2n5jeywG5XvfCHwyJH8ddmZmYuLsfYch8O+oH9rPuV0xNKUBxTldR
JqbFGHJAQeGW//+XMjHJYpHL//Ifl5z2YxBViV2f5+v//9uA3u7EkNNhYjLx
8QH6QeUphtwtNUi0CfdiSP3/fycPJFX7EosUdQEAVAmM0g==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.1440765857696533, -3.487570285797119}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wsLLkGE65VSxy4Tj1MTEwheLUx8SCU2MvA1AnLkkmoE5ccoT09eKQ
s2RiZArDIYfPpatopE/uOG59srjkaOROHFL/H1szleKSowcAADe+zow=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.743593692779541, 0.13560137152671814}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwMB0DKccE4vccRxSYYxMjKtxyIUzsTCtwS61iomRKQyHtlUsTCy4
rCsC6sPtSiYWXHKM5OuzxiHVi9t3oFCRxeUFYKiE45BahceVq2jjO5z6SliY
SnHJ0QUAAHWn0ak=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.8880436420440674, 1.754939079284668}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4PXyEKfwX1ilzmrJ1l+6i1XqpmLpd1wmTg36jdO2qTG4XTJP8CpO
uZ/xFrtxSv5eqmh9FKfsl+mKKcdxyr6K5Z6H20l9hp9wyj1iPI1TboXAG5xy
Jek4pTazn8EldVBkPU5dItNwyPycxI9D18+VLtbbcOiqLjmByyoqAgCQ7vhS

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.5174797177314758, 1.4355648756027222}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4F8eazkuuZWs2x7jknMsxGnka4YDOOWmsV7GKRftg1PqO/96nHL1
jNdxymmV4JS6xLwAj5HXcMrFWv/GJfVecgJObTN57+KUK/fCKfXfoR6n1F+L
Bpxy7xn78cidf41L7qcm32rcjqESAADwfvvZ
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.095597982406616, 1.0330318212509155}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJw1Ul1Ik2EUPghBQRdCEAYSVBddehtRRIFYN17MkqCgNlzLGpvNUSy7aBdF
YNAvEXVRGUgWMdMkwW6SGC7W0tzXwpzk1n5037b82dwvT+e8W+++73zvec7P
c362y2Q3nGsgot7NLAzGK4cdDqOro5GVE7bebovN3HXM5jRbzI59JnFrrr9R
8PlYZhEmrer9IGoMLvlQiYAc+oAN+DVPJ0OecAXTrMZQDiAOetTG4GusfmLP
tMToRSCxDn1ynZVsEni5V2BcVXKnZM3MfCuDHvB1PwZpBCuMlSk8C3xxxwHf
MLKI0hhnJFORKzx1aYLvw9jDEeMMNhEhTyB57O1cYWOWVPbETfpTx+W0cwn5
MxoQxJDwSsL/RtZ7kiooTtcYD1AtBZtSnDuriZIBOUO7VeBbscntdsehVDMr
L+4z4LDOsTxNUqVxa2btITCfHihrTxXJCC5KDGgiItkWQZE6RauqYpsU43py
0K+Ys4k05QWOpVhYsEXxcvgtZcaUGp6d0VVJnlS2Bn77uE4c6E9vAnnYqnNU
hW2VnuOAW3nh+xjOgwZrHQCybCzDW4FimP68wq1QU40nQoVX3O3jGYl0o79y
RE0UYaStYn82B+8s/aRlvn/FgKQsvFGRvEAUnYuc88f2cbcPd+qDhr50VAsF
W/AO75/TBeXbRi3oVMNRg566h+u0QZdrO5B97DgpXfAJ8A+Uo9KklDGEbmtX
bZeInWXxdy34C/ZWkB9VFTqKgjRIVR5Lgh3mfYzrQInv0SVA+70AffQGQcju
CkMOhpDQ8v8QGv4B36wuQQ==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {7.2957072257995605, 0.9640308022499084}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/mFhEasDl65/cFG8Zv77//vf/58YJv37//f/0/9XdmPV836iaqsn
Q6xP2v9/qGb/+f/59XGDeA4GUdN16O778/+8Z8uZ3z82Xbx6F8283zsYeI8/
/f/v7/87/X/+/0KW+vv/P4sPUOTf71yz+P//r/5G8tf//wwMi/7//36v/ALD
oS9vtvxAsg6Irh/4/3TtymUM6jv+P/oDlfgHkX7Zeen/xj31ZimP/z/C8PmT
r0ve2QLj9/fyL39R3fnn/5v/N//pxzEwvP3/FaID4ZavH0/+e/nfBCT3G83M
v3/fbL3zf7EBQ8x3hOg/ZHOtGHz+v8OWCn79/L/dqff/IyxxCBZi+PHowW8M
XUCw7FDvjp0Xf2NoAFJf88NVun9+/P0bU+7X99hAhhX/v33DtA6k5gswHv5i
iKKzCKdhAMZx3FM=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.081612229347229, 1.6392121315002441}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJwtUktIlFEU/rAWrcpAgiJ6LFqU1KpMCAppU1CLlCioja9RW0wwCuXKHkj0
lIIekAamBlmktSjKxtFqU0mOYxbZZEpS6jA6ko45mV/fub/3597/nu+8vnPP
WV9wPNeXBqB8iY7c/BM5gUB+ZV66hIP+8rISf3HRXn9FcUlxILvAzFYv7GFq
IamjH313cYcgJ3hG8hzs3sfnZCZ/nUrbyL/NHRzgI4ybTyMjxGxklhzhTOMt
sism9Mc8+JMcxaSixuW/A3Rr5ID7Jbk0zoarRMSJQKvCcCVRZ+L2KcbqXynz
PeeFtqoCIHjh7aoUa7juBdkjdKd0fjEXPSTNbsuUl4LnOEi+tKhOrfWA72h8
XCryBtDshHaFmHO3P6jZYHUW4r1J2ll8qI8cswRh54goP1k83XLQvkZloITM
AM87bFA67Bv/mCWT8HVW3WST8j9jFG1Cal87frVEwvFYK48GjyM3M44KxyPM
ppjxAPYIT+cx42sdGNb7WjfYr/ODoftPI2ItwDXtnmrO6FfLQrqax4mTvXSR
mCLfmG/1fZR1CVih+z/SZ1gqHkLHQk3ARbbk0bVgEl+bGsmtPrZCtouYAhKy
+8bQE9NnT7A76CYDiW0L71rqKliu/dvXrbMUvHKEQWkuO80AOpnYTc1IyDJm
HkY9FnvV7aLmK8oiceh1UV2f9P5HG7yefudTz/KS9YGdj5Eh9LYa5k3Q0Mgs
z3IedctUmiw+e24KMs0xjW9kSBPKLw6MqQGbRm3WK2nDaqE5nXJpGdBsHWrh
fyc+Oeo=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {7.303482532501221, 0.9656734466552734}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4B+I+PP//19Mid+X/z/auTbp+keoKiRwKTyewdssS4whE9NE70wG
Bve17AxWarfQZH47yDLI1mmYhEXpmrP8RjHz18/5DKktP/4vjshjqHdEcc7P
R/IpE8+DWDsZChkYviJr+8nPsO/et3//Pz1dG8jAUPUFSeoHA8Ox+nAQa20a
A8N7VL/VMcgz3Pzx7/9DjUyGiLeoriwHxhZD9ZP9tm2KDIxoPn/NsGNS1LH/
XQ/1VQTFUM38v5VPeOu2P/+uTWFi8CxGC87fp+ffAJr0p35eKmaAQd17laFx
Gsg6mI3INh9j+D8Tm6Z//3/838HA8PzPPywx+P/1T0+2qj1/sFr367+Zscc6
HG75y5DHoP0Nq8a//zcwLFgch9VEUgAAUda0+w==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.116917610168457, 2.976618766784668}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CNV4W9kDlbdx3EZ8ff/T4imM6jiv8Dk0c3eMv//97/DtLL1d7BN
Xsz/d1c+o5vY8+y/NIM3yMcv/39Fkfl5bEGT15wLuf8f/vj+/d9fZEP//Vzv
YN4IFHt/Es39/379+bqd4RGI+ef/7zf/n6CYuPJEoeHav3//v/zz/9fdh3+R
9f3/s24676Sk/yvX//f/+3njW1Rjjxkk+aYA42Xt+rwlqPb9//+xNvj/0/+B
vtGRSh//o0tqyln9K3++ioXNzQozrJ8B8WuvMIb/N9FDBRxF/1/zxGUwvP2D
LgkKgP/X9Ri0+v/DzUT2y0tzhogidD1QBQvXigSj+e0fOPaA8m93hH25CbMb
Ve/fX+/+3/vy4xuGFMyIjX/uYZe6xHDiTvYvDPV4ALpiEAAAYvrZBQ==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.4918980896472931, 2.806752920150757}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0cH/zBEyAeUmIVP79eb691aN33+jSnzZfsjAQUG50Xr/v/FlFwO9K+A
4RkM8b//f76Mq9m/jUFj4/lH6HL/Xl+9c/n/x7DN527/f47mst+vP9z4//uL
qzjD/T9o+n5+/fb/77c/Ze7OHj+eo8n9efD77edPG56mWAQ8//8LVe72xp//
/3/6X2Lj7PMLzX9/jqx+BqRaIw0MbH7/RvPf31P//3/7X86gZBn26T+Kxn9/
QPx/r9QYQq7//4um7d8vkH8+ajH4YYQKVMFNiayPmKIQPy4pPIslDv6D7Huf
qvb2x1+MWPwGjheGtnkIIUQA/Pj/2+5/qh12hzzcWcgw6fifHxiuAIH7exje
/b/3Hz0wSQNg4wB8cOCP
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.0850383043289185, 1.5208709239959717}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cH/uFgY4phkyUG/MVjY92Ne5+rfvxB1/Lny//pDIqX5RiCTn1Cl/tU
ygAGLgz7/vxAlXrMEGHjqxXw4nFY9o//f1F89t09sq71MpC13e3HN2QngJim
YXPB7K/Vm1Ed+/f/vf8fXoGZ0gzbPm76guz+X7cevQA64Pu7M6oMeb9RXfLr
59PPX36cA3rQ3HjXWzTPnX/y8f+X9U+WuTE4ogfqv1WFt7f1MkwvcWIQWPcf
KeyA6r4uYDf0Eslq2ODIIILsDhB4EzbZmz+qrHVHmwVP71+Ez8Dg56rb/2/8
/3Pb4zjD3P9o4PM/sC3piTzJ//+jxtXHv39AvtpfvSQcI+r/fPn8/+uj8+19
NR++oznlPzg2L8eHc0/6DnPGH4R7/n2PNO1kOPQMzd8Q/O/0qa3X3v3HSA8Q
SSBcg5Ga0PyKHqDYlAMAXTzKHw==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.9146405458450317, 0.9585380554199219}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJx9UU1IG0EY/fDUS8FDwRxy8dBT8dyWHop6KD2IxdaropiIBZMQLSr00EOh
tN56qxTqwbaHolBEqidJaSmJIR4a/AGLgiBuUrdmkzWa7MzrzOwk7m6h3zLf
zM577/ub9uF4X7SFiCauCNc3NNWZTA7NPGwVP/2xibHRWGTkfmwyMhpJ3hqW
tLBeDjikcZzj/1bUTDR3V1EXqwrW5HEEjaOAP5x5birKOzAVeqpZLqMkHUOe
jhxxoN1FXywGbkzSdbqxwqzUsw11V+MNDFHqCnW8mEW2451bX6MaZ/8OIUEZ
mNyY/nlZqMyBe0+7pVxkLoV3pn2NrFJoMaeD8N4PGrKUf0Ikcsr+2du9j+Ou
QLl0hhD/Kmkc9TIVSt6pfN4WupPqubGfYsa6b2oF4z196wWWxdGq6uo0xqz8
ABXx6Yca+anK2zQHCxnT3FzLfznbK+SY7X+A2vEFXs7TVvnqL19zamYOF+o0
joAL8XlDMsk6zLX1zCVgc1dzyfiN6oO2u4NLz70Pq+OeAK9uX6M3dj2IMRmB
bj56XEbAagKsrH8fqJuvdd9+aRF2FgeNtrkf5bBlGZWgyG3ER/TW8m+gv8gS
2EQ=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.1407405585050583, 2.3023624420166016}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxVUjtLA0EQXqzEykYrG8sUgp22ARFs46NP8Aw2CSaCROwiYmFvYSmBaBM7
0X+QRg0IUbQQizMmdzmTS3LP3XF2b+9yGdjXzOw3M9/MYiaf2psihBSncUul
j5KFQrq0OYuP7VxxP5tTdjdyh0pWKaxmuNuCXBAXHxeNXh7eTWBSgzbPifkO
pX/8rzWBZgmfUDQJHBw2TAqTGIHVlBoVoB2PyRj47/xCuISpMnAjDx2gvoy2
44ncgFq8EKv8oOyQJWBNAU+DbKjJD6+r0VOt9MpjRPWDemf7DlDGKDRWkqQl
oknkKsAtfzBbWZ+TNcJjUEmDA1u4sRvlXA/RIm6fTRva/bNLkmi/McHGT0iO
78MIvyW2Lir3gsMwHQNtrMuAlDvzmtD8SpYo2OaXi1nla4Sc+AefYA3Dvmpg
DDBHA6zrNVJ3dZ78mBnD60MLnN7MS9i6sW3UC1w+OmOeuXQ5ywgq2lAB2a9R
jGwD/jzQqlbNUfGPiWREyD5iMJ59U+JdRbge9XkpWlOEcqAnGOPLwfgZGAyQ
NvTV8eUKNCZ+co8n+A7GxAm1cZmYhGjSgl0VsxZoRSf+AQiw6KE=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.5740781426429749, 1.239707589149475}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/8HI/gIxJ9vfMWUeNH94f+nbIb1mO7+u9/VjYHBTpThxL3/P1Fk
fv3/tL6ZsenKnjyDwB///6DI/ft/MJhh2dmP/9Wl6zAs+3k3qPL7/9+CDAwZ
d9Dc8vffuqK9//7/qGDg+P//DZrc11v/d75sSP5vlIth5Idv8wPPPp0JDP3g
f7/Q5J5Oe/Z//sW0LCaG3tfo+u4znDjb53P45L4FGn///UeJtl+OUxe4lAMZ
7/a4fkDX93rtmbuX///f+t6cATOm76x69f/b+//X039jyv0DWxF1LW01htT/
f6///P/zN///iz/oMn//fv7/7lG461RfjJT1DxQR/y8cPrjoNoY2kPS/L0Fl
bc+xyPz///X72p1FNx9g00ZNAADihdl2
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.596276879310608, 1.0446619987487793}, {0, 0}]}}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.771683690339246*^9, 3.7716837178899565`*^9}, {
   3.7716839812626967`*^9, 3.771684022993404*^9}, {3.771712181622834*^9, 
   3.771712202693672*^9}, {3.771712814250845*^9, 3.7717128698569922`*^9}, 
   3.7717129673248663`*^9, 3.7717130165973735`*^9, 3.771713058415433*^9, 
   3.7717130959313974`*^9, 3.771713160253644*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"3874e28a-22f8-4dc1-9864-df53871a5f3b"]
}, Open  ]],

Cell["\<\
Extract from this dataset only the examples with digits from 0 to 8:\
\>", "CodeText",
 CellChangeTimes->{{3.771688981771391*^9, 3.771689030245325*^9}, 
   3.7716890884030685`*^9},ExpressionUUID->"0a81f931-8b31-4219-b4d4-\
7407f9b5418b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"digits08", "=", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
      RowBox[{"Except", "[", 
       RowBox[{"_", "\[Rule]", "9"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716085555774364`*^9, 3.7716085947686825`*^9}, {
   3.771608663368194*^9, 3.7716087361559644`*^9}, {3.771636762632452*^9, 
   3.7716367955514083`*^9}, 3.771690309919181*^9, 3.7716909019814234`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"03bbe2f1-10ce-4fd5-a8be-0d147c0d4d64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transfer Learning", "Section",
 CellChangeTimes->{{3.7716886469732533`*^9, 
  3.771688653861806*^9}},ExpressionUUID->"c0670f5c-db02-42c6-9811-\
a51fb13f0a99"],

Cell["\<\
We would like to use features already learned in our model to generate a good \
representation of the digit nine. Note that our model has not yet seen the \
digit nine, so by transfer learning, we will give our model only 10 examples \
of nines to see how well it can generate them.\
\>", "Text",
 CellChangeTimes->{{3.771688661910346*^9, 
  3.7716888901573844`*^9}},ExpressionUUID->"881da0b1-34ec-42d2-886a-\
c9f12127a7e6"],

Cell[CellGroupData[{

Cell["New data and model", "Subsection",
 CellChangeTimes->{{3.771691520014856*^9, 
  3.771691539602042*^9}},ExpressionUUID->"b90c6092-a31e-45c9-bc33-\
1a8c304ad43e"],

Cell["Import data with the digit 9 only :", "CodeText",
 CellChangeTimes->{{3.771690837797229*^9, 3.771690869771495*^9}, {
  3.771690925423807*^9, 
  3.7716909430386767`*^9}},ExpressionUUID->"6df85c53-3975-4066-9f0e-\
fe625db31c14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"digit9", "=", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"_", "\[Rule]", "9"}], "]"}]}], "]"}], " ", 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771688897742191*^9, 3.7716889009764557`*^9}, {
  3.771689387661723*^9, 3.7716894238481855`*^9}, {3.771689477724319*^9, 
  3.7716895191338983`*^9}, {3.771689764444676*^9, 3.7716898029136896`*^9}, {
  3.771689840889064*^9, 3.7716898449004884`*^9}, {3.7716898927175922`*^9, 
  3.771689935715558*^9}, {3.7716900289100533`*^9, 3.7716900336803217`*^9}, {
  3.77169008076956*^9, 3.7716901199254456`*^9}, {3.7716907278933654`*^9, 
  3.771690732643916*^9}, {3.7716908601506767`*^9, 3.7716908931908627`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"be3d5e49-f057-4906-ad80-ad87bcd24b42"],

Cell["Now we only take 10 examples to train the model on:", "CodeText",
 CellChangeTimes->{{3.771691028549061*^9, 
  3.7716910473392324`*^9}},ExpressionUUID->"203523d7-58a1-4b89-8258-\
f56b5490f355"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampledigit9", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"digit9", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771691019244401*^9, 3.7716910623460894`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"e9cb3b2f-e6cf-4aee-918e-c3b398a2b787"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4FNfb0JBXx+D4TMMqT1ezEzMQMDEfAJN5ul0fpCwvk1nh80VNLk+
kBa5OW+wWebAzCzcj9UZj5gYmKQvgFiLmRiWoskBrdoJZoUxM0WgypUyM7l+
BjEuiaLL3ZRnZsoAszKBjt2KIncMKPIEzLJiZnb8jCrHxFQEos8kMEFZKPqK
gdT5BJAnF2LIRR47likDCjM0bWD7IEHJLHYLTe6ZEVxO4T86WGDCwMTEDyJi
MeT+f3jy5MnzYiZmseOYciDwAuiWaOxS/1uwRCsU3NfALUctAACKcY9r
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+CYL8D0OEMDtikwDIgsB9DigEO6rFJ1QN17Mc0dT9cPWZgOcCVY8gh
pDDNRCh2wHALVG5/PRZ3gvxcXw/1A6ZT4AAjYOoh4VWPaR3ErnqI4Vjk0PyC
qRevFE4TsXgAyTIscQc3EaeR9bj1kQQAUyGVXw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4EmNOt8h7FJn1RgZGa2wyXyP57TZdTuP/TQWuSiWRe///6/n2YQp
dYptOZB8bcTIiCnnqPIJSOYyMjDcw5BjXAAkDvKbMYZhSG1gfAski9dVM3Zi
yC0Gy/3/bSb2HkPuKUM3iGpnzMfihRBG/0XbatgZT2KR+9VqoShqLmn+G4sc
ELx/8T+vAbsUCKjhkRPGLXeevR6n3FFW3Pq+COCW28aIW24q40GccsQDAGjR
2MM=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4M9BV84t37HL1TMCQT02mb9BzIyMrIzJWKR+BDMycjV+MMEmBzTQ
4Mz//1XJS+ajS21gZmz8CKSTuJnYb6DJOTLKvwDR4UDnXEGVusvPsgxEvxPB
lCtg5AbTAUApl9+ocumMLCuB1GseoNw6NOv6GBm5O1cctgRKcZ1Gk/tTA/Q4
IxsoYFQx/bfWkBECLmDK/f96fsF2e0bGgL9Y5EAgk5ExD4fURw1GhvM45E4w
MhrhiD+Q3HIcUv9rGBlX4JLrYnT6hEuOSgAAsSuuiQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4GUtJyOj4RssMs9S2BmBQOgFptQGdUYw4LmNLvO8kYPR1O/+07MC
Ao/R5eoYmbPAVkrw3UeTWs0l0AZmrOdEl9vLxegDMdqVEc3Mr96MSiAX/Dpk
yMhS/wFFbgIj/wEgtacY6Eyrt6hGmjE6/9/TGgDygeBxVKmlYH8xyPgv42FI
RnPkRg6gFFvmgceejEqf0D3XZ581//3///OZBB6gS0HBAw3GqG/Ypd5VMPI9
xaFtDyPjBBxSb60YdbHEDhhsZmSc/Q+HXCkjo+0fHHLVjHYYEUcWAABAmq4y

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4PvmVPHJC/Zik9pqyQgCgm7X0WX+tbIwMmUVF1szMcreQpO7zMgY
vxvE2G3AmPQdVa6RkfMZhLWHhXEjqpHJjEVQ5gU2xgwUuZ+MjE+gzDmMmHL7
ccn9i2cU+QFhTmVknIvqljWMjH6fQIyDQoyMV1DlvkYzMvqv+P//mDAjhtz/
XzpAQQEBDiBp9wdN7v/vND6gOFuYAqMTuhQQ3Dp/fvmZ/waMOVjkIMCAcR0N
5IpwytUyJuCU++B8AacckQAAr+e15Q==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KYFFiAAOj00csMq8CORhB4Bim1GpRoLhgJGPoLQypPiGglNuX79Vf
MaS+cTLHrr/5+f+/Z38w5FYwRoHpfsbjaDKfDrgzXvz/f1+WKTOjPZrc1xBG
xtLuUElGIVHGPnQjnzHCwXOsciIWIPIqutyvrNwCXYGUiYyMbJsw3AkBmxgZ
vXBI/V/IyKj3DYdcECOjLw6pr7KMjCtxyHUxMrJfwyFnyMjIjUPqGDAqPHHI
5QONXIRD7qSw/AIcUiQBAEhcsBQ=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4PCEsDBBjt1YZN4WMjGCgDgWKVNGvrK18xilFC9jyPUyWrwEqgh6
/gNTXw7jbSB5gsUZi3WGjKoxxqLcjNJY5FZasjMyijAy6mH1wpOHD68JMO7F
KgcECYzS33FI3WJnLMch9T2aUfsbDrlZjGwrcUg9F2b0x+WQdkaRKzikzsgw
TsIh9cubUesrDrlDjMzHcUhdsGAMxeWQvYyiF3HLheGSwgYAjZLP6g==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4EUwAyMDY/YvLFLLlZiYmJTiZXZjSt3QZOL0uyNX9fYfpi5OpqBT
/9OZmLIxpJ5zMOk8/n+QhYkpCkPuOBPbgf97BJmYuE5jyDUz2XzJ4QU6pgnT
JU+Y2BWYQOADptyvQjawVOUfLL77/2PuXDsmpoPYpEAgGbfcT2bccleZmBSx
OAUMJjIx9eCyroiJ6S4OqQdiTEZYfQAE1UxMKbiMjGRi2otLroCJ6Qwuuc++
4g9wyZECADavvmo=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4NePi0GMQLAZQ+bbdDkmHj4+Pk4miz+oMr+nKTGxl70Esi6IMn1A
lnmTFcGkPG0ThBPHvAsh82daBJvZHKjM/3VF8WfgUn97mNiaoexPq+O4rH8i
tD22kIZJfexmYhLpRHK5GtM0qMzZACYmpmaE1P+9Mkxlx0FghTmTiDoT03Nk
R06XZQID/d27L/oytf9A8dvloDK36YcOXfj/v4WHaSFGoEBBJxPTMRxSs7mZ
Sn9il3quxqTwHLvULism30s4TGxkkl+CQ2qzptw0HFIX2JnccEj9n8DE1IRb
zv43LjmSAADd27U6
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716910644857054`*^9, 3.771691079700364*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"5d998a3e-51eb-4aab-9538-e8c8364da72b"]
}, Open  ]],

Cell["\<\
Finally, we train the model but this time using the Multinormal method :\
\>", "CodeText",
 CellChangeTimes->{{3.7716914654325027`*^9, 
  3.771691502902852*^9}},ExpressionUUID->"b0e57079-de01-4dbb-b2a5-\
0093b78f8ce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ld9", "=", 
   RowBox[{"LearnDistribution", "[", 
    RowBox[{"sampledigit9", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Multinormal\>\"", ",", 
        RowBox[{"\"\<IntrinsicDimension\>\"", "\[Rule]", "10"}], ",", 
        RowBox[{"\"\<CovarianceType\>\"", "\[Rule]", "\"\<Diagonal\>\""}]}], 
       "}"}]}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.771691097157357*^9, 3.771691123858289*^9}, {
   3.7716912095220165`*^9, 3.77169125720986*^9}, {3.771691320777122*^9, 
   3.7716914169006786`*^9}, 3.771691455862616*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"3c67d5ec-6e17-4106-842d-9339bfdc74a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"ld9", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.77169258803761*^9, 3.771692594280308*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"54859cd8-04b6-413a-9c5c-63dc767c3af8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weDf//+Q8FfCPUHKPYfB/iHwQNp/4esHQJ+o6j6i2wuhuH/wJr/IXEP
xn/7du///jPolv77fzZvQWUid7PJPTQX/X37/38sD4OUpvwq9xvzf6C4Zf3/
3bZnUpTNgV5eZbtr33e4BMjSafI8RtxL/m9nYFD//38J3NB/f/+vnj1T06T6
xv//+t1larDAgnjl9PVZtxmYf///Ofn7Voak/6///P/zDyr57td/hkiFGf/n
/j+yPcbPB82rmf9X+vyfcNledAu7OsO7J//hwf+5/9T/sJvH//9nuMdd7cTw
4v/X//CA/f9p0+P/DAL/z/a+5OqdxTAZGqAwP76pSGW4zvDfioHBXc/8Akps
/Po/L2fC/4f/y+O6q7M3wLwMC7fONT/yGKIZ5hmyMfxCi5av/xuO/v9vc7za
OxQlkiAAGCb7vUsYrP5vQ4sfIPgGjL3/Tlq7D9z5Col5kAf//oNqvbWcYdO7
/0t/PwUF8T+UCPz/cmKLyf+I//8PwGPnPyx8jG/qH1gi+P//6u//UQFIkuHG
fENggvvzByqEZO7eh7Dk9xcaeX+RUyw0qmGqAV3NrFM=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU//33///f/wjwDwiROKg0hgSqCNQokJEwU/+iq8MQwGLkHyD796ulQNaP
txN//viHpubbb48OBoY0hk3/Z25DGAqSe/E/+PfCSQz8uru3yF1Bsevv/+kp
DFE6y2sYjrhePXz1/y8Uu00XWDgzlHYsdzlUew3Vsd/+M2hpd2/7963nP8P/
wP//3yM58xTD2XzP//8//bf/b/3/v9NfsBvA8h+2/bv1u3L+9/8PuevMpBns
4c7/B3Ljf7Ulll/+F6yt5JHkYfh/AeG3u8surshhSPkfqHP5PwPDk7jn8IAF
Em8ixPZ2/G+sfnrJmSFmefjNP/9QosolL+3J/5fiogzJDId+/kH2xI//G1Zt
m30BGNcSC+8HwwIRFMZA/10O8Pz//OGX+5YM1tnwyIeF24HDx5YDKaX1ff8f
gqT+wjX++39n3Yu3v+oNlSWByv4jfA4Nt++Pz9XHMjAkXYd64M//f5DkAA6k
WQwM7Pv/YwXeQLgQSB+COgbJ0O+qCQyvFHh+/r8DC5a/sID7/39p0s3/uv//
b/sLEf4HCTOQ7KuFO8FG/UMx7S88XBEAzAEA6zytAg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU///3HwIg9F8o7y9c/P/fv2BZOP8/isJ//+B6kRVhqP+PywCwERBTUFR8
ff9oCZBa+A1FLRi06v9nWPJZL+b/4/foZmUyiDAy8HIqBe/6nwexEW5oCYOJ
PUMCC0NDTR6yo/79+/u/sFE04N3z/xcZslKv/fr/BuHgf3caGGZlzfr//7n7
JAaGsNdQw/5A7MyZ0z0VxGX478twJ+onzKY///9OmNvDEDzn9q//pv/DZYsY
vkACBKIgyHRR7tmutub86b4+C8v+f0cKiNfnmjj/v/+/pPwaA5MEA9MSZPcf
8/k/+3Xj//XHlv3fo5HD8B4lUP/Mfdhsqc7+f8Iahp0M/88jxQgwIHeZn1p9
cfHx+DkSmdqwiIVZ+vt/UvPBb/9v7Tb7vxga6/8g/vv///O1umO3lj4+m77n
P1LygDEu1+8HeV30/9lHyLZB2e+Vs3Ol/qdI/f/3F6rhL1QfMLhfM2gz/Dx0
5xsksFBivXMvw5TeRxNC/8Mj9h803IAePtZbWlz6fxXCNJje1/+/7ffP5Pn9
//8rpBCD2tgNNxwtGaEDsD4AtMCuTA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU///3Hxn8BeJ/ECFUif9wsb9IbAzwFybxB1X8D1Q5ktl//yGZ8A+F8Q8M
3/4/8+n//3UgzX9RjNrzv03bnaH8fzhYOZIpZ6cy/M8M55GQY7D9fuwzigsv
vPn3mpnBcaGP9YOUTf9vfEd23NESBpHwsG0f/nO1az14//8RzCVAeDqEgcGg
++//Jx0mHQcs55z8CZb4Czb5Yf8CFv7//3+XuzLITN8xBe4WkGM/H2IQZ/i/
/njJfw8GZYYTEPP+gl1vysAg/CE8nsGdIc5m4YFTSK688/+Q4R23FYvbPBjq
ExiWOz76DQoiqN9fbPP2Y/j/+0m8xGu92Lvhn1CC/4Xywe1CDv8bQxda79ed
dh05uP5/WZNfvOF6uH+kQsD6JqjP/vyHmbvq4//C/4udGJgOxd8Axw48gv78
apz9/83/sDmSSxmOo0QmSCcwZv5f1Yw0mBG7ATP+/vx6LbRthanJ/yX3//1H
iSGg1n/nfft0uP6XfHsDkoIlAih1/f8RjUef/mOCv5//H8ro9/p/bGffeRD/
NyzuwRr3h/7//7339f/t/1FMA9N34H79CxX6B/LoP1hSg0uBwxoAdU2nCQ==

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0eAPyDi7////yDcf1AWQuQPQu1fmOy/f3Chv2BNCAGIMjj/H8JMFDGQ
BWD8/99fZOEHJ54tuvvm/75PSOZBzLj5/X/ElzVxDMf/v/iHMBgIXu16Pn8f
gxqD4oatmy8W/4EI/gWj9dv+v0gRZ9IrEPH6JpxwF8WbM6qyGKT+vj31feX/
X9+uwK369//3/1X/GbLb3vz//y6M4b/cuvNFPxFu+aRWHcgCpH/dq2OY33gT
qBhkItjSH38eMEwsaWr9v3Xr/wduIdJwAyGgVD7AVU1lNcMJG4anDB8Q4XH/
/38ZN5m4U7n/ZsWrWi8LhPsLTOaU6zP8W1Eb0MjAbhjLsOUvLBrAIGgTwxHe
zYc3eDBHW4seg2sDxdiP//9bF/0MsUxtFgi69x85doBgw/+G+f//P9IRtZ7a
tvU/Glj0P/FR0P+LYSeM9GAu+QuNqf/P9p4J/v//aPf+Fx+/QJX/gYXov78f
/8+f41TFcA8p0uD++P9/B8NzHf2E77/Q7fv/98OZxf8ZvP5/mvIVlBp+w8RB
+j7NPf47pfN/+UeEcnh6/JN++zXI9f8O/vkLC0xI6gQ6d+MeRDL7hxwN/5ED
4w80DQIAYQyusQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716925954524355`*^9, 3.7716926020713463`*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"7ec04e8f-acf9-4bca-a1fe-865d5400d3d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ld9", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<Sampler\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7716962914538355`*^9, 3.771696307691295*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"07e47594-0efa-4665-9cc8-c886325314ba"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"Sampler\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.771696301259468*^9, 3.771696308777294*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"9b99725a-35e9-460e-9703-079dc721398b"]
}, Open  ]],

Cell["\<\
Finally, we train the model but this time using the RealNVP method :\
\>", "CodeText",
 CellChangeTimes->{{3.7716914654325027`*^9, 3.771691502902852*^9}, {
  3.7716922323839607`*^9, 
  3.771692234273775*^9}},ExpressionUUID->"f161c240-a7bb-4825-ad46-\
e47fad1f78cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ld9", "=", 
  RowBox[{"LearnDistribution", "[", 
   RowBox[{"sampledigit9", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RealNVP\>\"", ",", 
       RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<CouplingLayersNumber\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"MaxTrainingRounds", "\[Rule]", "40"}], ",", 
       RowBox[{"\"\<ActivationFunction\>\"", "\[Rule]", "Ramp"}]}], "}"}]}], 
    ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<DirectTraining\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771691097157357*^9, 3.771691123858289*^9}, {
   3.7716912095220165`*^9, 3.77169125720986*^9}, {3.771691320777122*^9, 
   3.7716914169006786`*^9}, 3.771691455862616*^9, {3.7716922287764378`*^9, 
   3.7716922595552025`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"b87da9c1-8086-42fd-9692-2760db0e634d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["LearnedDistribution", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GraphicsComplexBox[CompressedData["
1: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
rS7+VeI9p5znc0yfcfllPjpo50WP+k75SmexrXr1l/E7dnal2FleWtNzzQLk
uxdlKmHdn7DoSOPFg06u8eIEzS9q0PyiB60vW9L6YleYi15h0Cv+fGvGLI/3
/xFd258tX/u7RBEfterQ8Jv54j/3SzZqGXpXNCT+5TniX7xO8pHvkXzEWJKf
uEbyE21KROzduztHHn0W2K1bj+fiPUPu9Qw9bJ/sf7ycV4rMDCw9Yu5P+SKf
9Cc3kv7EXdKv3E761SJJ/1oc6V+9/3ZPqdrFs6z597rR5H9ysaN1glxRzPb+
dHqu/5jF53PlUf/Wpf3W3VHn4Jize5c8/N7b9n5bJua+nbrkmdyycsSbsYXP
1f7vXuLq7MSzhWJlgzcrepVLV3nGBYo/8simX4N6/5Sg8tEWVbeXPeCXLooP
WX0gPDRZzvyk7a1WU4tpA+JqH55dKUU+jY15WDbc/j7zinvSqxtuXpB3P+n+
86vVcoSjRlqBb8srcizFa/5+Uls7ftjCAW9dkQ6K97Z3PsN/uDitZccz4j7N
J9Oru+YTI2l/sZ3rqxVzrS/q1Eva1TvXjGuziX69N9EvWhN/0ov4E1fCz7RP
8Dhne284j/xFxdtetL+JZ8S/yhc9Sb4yjOSr9oue5K+i8HWfDi32Jag8oebc
wU2HlXHa6stNxr959+GSZyI/t3RCSskc890l6VudT4dRvqDiMORp2It5bqT8
QMSQ/ai8KDdsfPGPWxTY6s/fhrdtc8/XoYWQParfe9D+ofIS5EPnq8YENSvv
0B/QfmWrw1yoV33qquov5Niarv3Pdu82K+rbV5ctfSYb0P6p8tlxaROOBZd9
Yjs/n6P9Vpas51a2zX/d1Pu7u7R/q/d3yLNDRhwJOrrxgfkOgPZvuZD0rc5X
/ShfsL07jW+2L8/LP17t62Movkh97R6fNUMy1PcZu1IuTayeZTsXDI4f2fLe
zOuqftGU8g1Z6vdGG+a9br7vAx/ryN5lwJrAH4bMNu+11//WN2Zodg5/z6dv
JP8R9yt5h33slmu7Zw2g9ZUcp1C8Fr1oftt7vmvEr3iN6LO955tP8hTHiH8l
p1dJH7b3e81PbD4Ydzld1WEcW7r/9eNS873eN5SPil8oXtneJUwvPym3RG3z
XrXg8umByyo4tEiK//Ijiv8yaOA7k/9TM03umjO4wqejEuSjlIx2PWo7xfSM
o/4LFz8Txv6qRdH+KipucV/zdZmX8fB5SNBrrziwj+toq1K/DKd+PYPyAKla
ml9OpfnlZ7S+mEnrCyM/EUZ+ItIonxENKJ8RRr6jLaJ8Rxj5kzDyJ61V3Xk/
NQq5IX9s/8WldoMc+qNti47P2blFRnxepn7qeTd9a07retfanZETyF/1r50D
J23o/kTUDhy+039gnly0P/Gd5VqG6OR36LZblVzZZnKjd5ofd4qUC5/nl76Q
Kz+aOjSj8OQNuWjlitv7XzyTG97zrXfgwCa5RtbuPyUvQw71Pnny+KdnpRGP
5O+F47v9feXleXvZqrAxWc9kXVe+/lg0olZ+0/hSdNUjDm2pqLLzccITWbDw
33h+R3i44vod+XqNHM9NJVJFX1f8vCq/7f1bpfahKaL5ugbOo8GxskRedO6g
+EzRtm3JyiU635GtZvXXS1bw1HYs/fNAzPIE+fB+386Z0lsPnz2n9i73jbK9
59gwv+svZIfVy6eP6b9GXPPdkZX39cv88np8YsPqkWLYoOgj428+kr+/9n67
Y/tPiyvUL5KpX35B/eI49ct2NJ/osMY1H9bTetJ6og3Ro68lekQpole2JHpF
ZeJPfkz8iYnEn2xE/AkvQw5u1IoJJC99PslLvG/IsZ4h1z9I3vIFyVu8QvoR
q0k/4gvSj/jA2C8akz7FQtKnCCH9yw6kf9GS9C8fkP7Ff8le5DtkL8Kf7EsY
9qVtIftS+0FNskexgexR3b/v8jt1ZvrLc9qXwQHFPtxl/j1Va2eFun/W9NbG
hN1o3jPUfI8XfrvO0m6bzDpt77Z5K9emm/X/IMLyXcrPpZGfy+ydfuWn5MTI
Ny428R7RLVWGJhfPzNX3y+db3p85clSKimMraX65dXXVpnu/iBDH23n0Gdol
WW6n8SKHxqt49wvRLzbQ+UFWpPODaJpxICJmV4p8MChscNsFT8VgOj/oO/bS
+bEN8af3If5ELcqf5TLKn0WrNa715VFaXyQR/aIy0S8a0PziMc2vzplRxnlm
Q0T/c8WmPZIpraeXC99k1smQv3/Wd1Loo0mPRLa27s/5G8x3jsuNfHxEYK+c
9IqpZn34zke1vBdnyW3N138T89MNMUF6Z6e+laX2RdQtBlYfOe7U8dviRv/h
O/qUfCbnjmlRf+ScJBWvvzTy6113k76sPShT1aEjvn071tMvTa6eOixj/egH
qs55alGJMN+Ah2o/CvykY2hvab5/iy/7drPZj8z3bv3dYurc/N28JwoVNVMu
NjXfv5V/2njvlJaZap9YvipucY1xWXJTv+J+V3bnq3E36Twgg439+nKdCUvG
pefLqYfdp272TZDy0jdjPcaYdZ24H6u0WZOcJyvcfryw6cdSDvrjzYDGDc13
5sZ5R2D/BH3Tsh582KOdab8LXq0evCrZvE9aGRfVbtst8+964hofv7wjwLzf
OfZx1LTHEYXCp0bJvUP35coPPus1oOUPDn3t4TJBXdxzZLjz12/2b3HoqWe/
C55RJ0M+6LH758zrDn3HvaV9AkLS5aSW8ZfGxjv0ASNX3fV3e2DELYd+s9v9
sUPPJcumPZtXqbTXoe5Xj9B6cubiXaW2Oh16ud+zNp5pYb4nu0H06SPpvCuM
864eUuFqQVRrXfTO7rc29OuX498KWTQpME4cjAktfuinQpkcNSDvwqCHclOn
yq8fqpgpv4r7vEXr+PvyzGuTGrRvkqnq5+EkD5keXnfK6E7PZfk7h3/8I858
H7aQ5CclnceFcR6XTVvvjN+Yr4uMG5OGduqQITfVXHn8je/ixMom8aVy7jjl
kP4TO5WqnC8vBffx9CmXKvtF7/ZqXC1fVg8sP6V9Toqyi+9IX/LvF5+4D2n7
SNb22JW/7vA9Gfi8YqtffRNl7toSr94vkypLzi3TIqFx4svz4JO0bq+lynDX
Ovmyn5HPGfah7Ofi8sshvbd52d7z+u/sU/DPqShh2Juyp0lUnxAXqD4hrpH9
iaRbLvsTxnqij5G/dSX6RA7RJ0oQfeII0ScM+1d2adi7GEn2LkaSfEQ0yUcY
8hHVSD5iJ8nT4NMp0kg/wtCP8t8Q8jcxdnv40KjIHBnifHe+x0fm+zDDP8Uq
qteIFVSvEV/fnFgQFpQkXhRu+HNTg0xxg+xFGPYixpK9CMNeVHwOIf8Xw+vH
H1wyPlVO3rFsa9+B+eI82Z807E8Y9qwZ9qz2JyOeaBep3iS8qd6k3bmx/M3l
R++KivXvnfl+lUPrQf4jDP/RbpH/CMN/1L2uEa+0QKpniW1Uz9JKPvy0S8WZ
/4gHb2/qX+6aQ7tL/ioMf9V2kr8Kw1/VOc6Ih5pRLxNGvUzruXlivx5nnov1
Wuobo172Oyg+iMYUH7Q1FB+EER/U+wrU0z6j76XxvapDo/5WnuiVD4ledV+H
ep16T2bU217fvH5ibL9cOX1aYPIe3zQ5e2Wt+I2+5vsx3Nft2PPf0i/Wpal7
sLdzvR5WuJQojfqtqmPfGv205a1Sebb/twb1uPnGuRvtafJX0ZD8Vayn/VEk
0/5ovh+j9USb7A4l9ok8834wOmbi2CN/y5Cy0/ZMn+RU9w/bwn6aHXw7TZ3D
uxr1vxmOjoff1cz3k9s9fBrFV3OKmXReVestWHynct3bz0Rxqs8Joz6nztWo
F1ZddtJ332nzfVj0vGZXDxwuEOfo/Kzu8WN7tyvzUWcH6omaUU8Uj8leZSWy
V/XeC/XWBu2L/+VR55ycc3rBqEMVHfo2qleJZ1SvkgPJf8QU8h+VLxjnD5lc
6ZuWHT9/oN5N/LI7KePrZ2mi7dW6c8Jbv5DTyH9lLvmvqucb5xk5LPSvqjun
n5X7P/aOfvjyPN+O6mniMNXT5CiKFyKU4oWqa2/OPf5p8UaZsso72roPosz3
XhHjFzQaHZcv3ghou7Hz0gxVtygzodxPvvvT5ZmY+DXzdpjvu7ZR/iHWU/6h
6g9+Rvzf1KpXwNWq5vuua5TfiEWU38gIymds77v6Lqy+Zuao+3Iv5U9iH+VP
suacVyo/2pJt3q/OTGg9eVmuCK+S9/TywuOKvwKj/lz/VDGH+xv291uRl//T
O6XiBfkuzafubQdTfifvUH4ngimfs72L7kX0mX9Pa8TzrcSvetfRh/ZPmU77
p/I71LcP0v4ue9H+ru5ZUN8+RPaq6j0lBtUYElbj5X5n1HeKOcPqtC93S3T4
7v6ZHh0L5TbyF2n4i2zYoPuUit9nitLJUb0vPs6W6VEufxTLyB9lh2GHF5y4
kSZPu8cmzm0XL0uXaHPdc0Sa3JhyqdWS37bJOr27ZQy86qmvaT83af7J6yKU
5C3HkbxFvaGHan7S6p5MfHzs1okj8eJpXptqt7p76B0rdqywelaS6P5Zeq/q
m931Bl+fDpq/6KEY9a3P8cddr8vh2xMqDp1+V4QMnH4v+LqbHuP/9/ddF6SJ
X8n+ZCWyP9GG7Fv8QfYtjHgoZlA8FHvIX6RG/iKaufaNl+efreOaNRqeJXzI
P8Us8k/tYAttdWFTD+1ej6Yb42sViCjCehJh6U/8aluIX/kqyUNUIXkIQ17i
L5KXKEn60Ix6m+hG/GofEL+yJslHpJJ85GOSj9aN5KPspLJXcNO2n5nvBmc2
qd92SmCqKEf6le1Iv2IJyUu7RvKSQSRPMZLkKRuTvmVJ0rf4P/LWkQQ=
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.9], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmGmMV+UVxu/933tZyiJiZUehFGQbVGSEGQZhbJqmNjEpDSYdPyE0qSRt
00JNKUstSVMWAVNIBo2gFotgl4TKUqB8UCgIdBhGB2ZAZBGwAlqs1bYOI+3z
y3n+HT6cnPd977uc9yzPOe8d+tgPpn+/lCRJU5okmfi7Ivq3ivZqoJPGV+dJ
0svfGL8quijqKZqgyXWat0ftb4rPFe1Tu08W44eT2Pc2UW/v3dv7FKLbRV8U
5ebMOyc6hkyiD0Xvi94UXbAMyNJZ1JdzRBO16bd0yP3ifcUfzeL8X0j28eJ/
ToLf53ZlKdrI3mS52Z+1E32XOu9Dm32nZzEXzlmvq/0l8VmiXWrPy+Ib48PE
Z2fxfVEac15Jgs92u5tooGiAqJPvgS6+4LH+1vFg65k7DxHdKerh8UGiVtEb
okOi7h5j35MeQ/9jRTWiyaIx5tWmh0RfF523rbH5YfE1olrRCd19kr6PEo32
mirRKe99RPS2+V9Fp80bRGdER0WNonc8Rv+sx7BxF1E/27Kr793PNtlnu78n
+ouoOQndT7etW9Q/6PufEB1w/7jn06/QHV7zWT/VmqfUH5uGvfBVzkEf37Au
sN1XbSO+z7NN0UOLdTE8DV/ZbZ3wDf0c0fhWtdemocM/lEKPtxQx3rMIn+pr
v2I/1la53er9h9l3tiRhkxbPwZ59HFN97ePI0L2Is7oVob/GUujwWCnaI9Gd
AuxHah8XP6l1BP2xPGLrnGPtBfWrNf6i+C7NeUDtjWoPLyJudmisVfQ99tX4
n0SPqL0rj7OaRHdp3m7NeVDtlzVeSuMbMpxU/wm1T+Uh1zHP76r+05r3oPgB
8Zc0vlp8kvgC0bg04maY7ULcEs/43NA0xtFVrvW/VP86sjk+ic3P8vCBneqP
U/tVzfmOeIVoq9qP5eFT8+wPgNHPNT5N9/6u2tfUflz8lL7drfYIjb+jdqXa
d6l9Rd/maNnDeWDR+lL4zEp936D25/i/vs1X+7T4ijTa+GGV+CLRPWnQQrWv
E495tLfonOUa/7HaY8TvFS1Wu11zLuTRfkVzbuRx1m/VzovQYSbeWeOrtGaq
+H7x50shF3b+WSn2G5WGryPzTLWXis9Pwrbt6FPULFovmiE6L/qdaI5oXRLz
l4leFtUnMXZJ3xawr2izx54BK+incU6V5HtS/EYWsXrCsVtnbMbPy2csuwlr
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
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtMz3EYxn+H798cUtxyYW0isdnQig7SVuPCjYtuzIUchg1jk1OJblBN
ttpqyKGjiC1n4cJhTDYtQnRQiQ0XNlekg8+zt4vnv+d53+/v/Z7e5/uPzd29
blfged4O4MB2fn75nncAfiP0vC3om+iH6M3wXNCCvoLeCL8Pcijwj9h++AWw
HD1CvgS+EpwiNw+dDq8F6eRj0QXUz0SfJp+MXgUfBlrQY/Rf+CWwAj2KLoU3
gkz0fHQh31ejkzU/uhi+0NnassitiXheO3on+QfEfHhRaHN1EUuIWA3V6kDH
o0cZUw1PAmfh9c7WnoFugA+CgsD2eB7exPf5gcWU6wAJ7GcP+i18CBQGtoeL
ztaoteqbAfh7rZnx+9Bdzs5MZ3cE/QX+DuwNrKZqH2a+xfBb4DI8h1g3vBaU
odeiO+E54Ac6RB+HPwUj8H7VCOzMzjnbs/YekO9j/HpiA/AmUIH+Dfo1F4jT
etFx8CLwWmcd2lq1R+31bmh3pzmXou+h08ilghr0BvCV3DVQRW4q85fDr5OP
goegDv6cWAZjA3SZbzEHnxaxsW3EsslPR1fAW4jFwHuIHYSXEGsI7c5190nw
bPLRERv7ivwgsWXOelFnmqizBIt8q9EL/+DsboqJ1TN+E/q7bx6oRm9F//TN
IzXoP2AI3gziyV1Fn+f7C2Ac/RI97JvHtjmLKfcMneasx9Xr+mYM3sb4Ed88
dg99JzQvJqLnRsxz8p78mwevI3/StzVpbY3oUvghxvepl53dre5UdzvHWe9o
Ds21wNndaA/ai3pMvaaeUe/oDnWX8vB9cnXOvCFPtqIrQ9u7eki9JA/JS/L0
R3KdIFb1wAtyY+ij8FawBD2FPU3yrSfUGxFiJ3zzpLwpT2dN1Fjk7E6TJnoy
QJ9xdjbyfBfxHt2xbz2oXpxJvgrdDr6hf4bmFd2J7uYzSIE/0pun/omYN9SD
6kX1gHpBnuykVnlo3pAH5cVm9G3f5uxWPWdnr55Sb50Lbe/ygLyQj0707Rt9
qzdJb5POYAA9Do7Bn4AUxkeDSnkPrHbW4+r1PJ2v3svQvKkeVa9+cpbTG6O3
JtXZW6CeUG+opmrrjGtDq6naOqMZzjwir2jOGGdnorPRmnvhs/Re+vbm6O3R
mepsFZvtzKPyqjwa5eyOddfak/5w5HF5Xf8Bk515QF7Qf8Yk+Btnb6l6Wr39
H65O6iM=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.78], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmX3Y1uMZx+/7d113rKeimfQUentU2o6DktpRVKiEimMdh2qrpPQiHbNE
Ty/GRuUY5m0JlaaXR1JJWN6lbYaUTWGKSEzJFmbzWmvfT+fXsf1x3df5u37X
73o5r/P8nt/zuluNuvRHPy1KpdJT+kmqN6quknCi5J3lUmmFyo2Sj1L7e37e
nkulqXp+U/UslfvVNlv1GaofVTlE5QONcY7qxmqfrfpJlXYqffXcT+NVVUql
3pJ7S56lvqPLMQ5zzdHz9ap/ovf9VQ9DVnlf7VXqs171YpWn1TZWfe6T3Fry
DNV3qsyTPFzt3SV3U1mttTbQd8PVPlDlLcl1KldK/lzvLlZZIXlAKfow3216
/4JKD5VJKheoT3PVy1Q/r7qbyhbN8TM9v6L6C5X1tKs+WeUpyZ1VL9b75ySf
pHJ1Ofq0Uemudw9rngMp9MW6eqqcqvbjaFc9Vu/GpFjX5iJ0capKl3KMX1I5
RWWtSlaZrvKsSkuVXvq+q7ok6flCjTFSpU5jnJTjLB7V806V0yU3Up8WeteH
sVX6qc8Q1Y1Uz9X7jSr9VN7Q8+Xq97rqwdiI5JXqN1/vNqmcjx2pPUl+h/cq
tZJXqX2l5BNUX5livNs9Zjs9N9c4nfTuFclHq22yxl+gerPKIJXROc5nkd5f
zr6L6HdFDvnyHOPVK8I+5uu5ver92Fcl2h/Ut1eprbXKA/psseptKiNZt/pN
V9tv1GdpOewD2xig9vGqm+WwhVttD0dpzC2qP1T/IapfUxmsslDldZUf+zxO
K8W+ehdxThXsSGWrygiVa3PY4TWqN6hPtUrHUujnkCL29AnnU8R6T6jE+m7R
vN+rhH7669tF5VjPWH3bpohzOFPl7hR6Q39X6v2D6EbPL6rPCyoP6fmsSrR/
X31mlqON8+qEztA5st7VqP0/KXwPHY9T20Ol8Ok1qkeofbjKPfrueNXHYGtq
38Ba1adFDl/FZ5em8AX8YDXr0fMRkj9KcSb/UBlvvf5dZShzF3GmzNlVdVnl
ZMlnF4EhyPjDBuvwao31Q/w1h+3jA/jsVPtCN9vfBSl0xbpZf2fJc1Vmq1yn
8onaL1O/GzwH83bxGq5I4df3FjE+/jXFeqCdeoTlRUXIzHOu6stUBqrcDv55
PvAFeY7KJPdZXIp+PC+RPD0FLvQoxT5Yf99SzD3SMngBboApw1Ksk7VTT/F6
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
                    "]], 
                    PolygonBox[CompressedData["
1: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
UT1HvUc9Qb1BPUO94+PoWqBv3hL0/yPOcsY=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.65], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNWFmMVUUQvbe7HzsBRkBAWaOCmQWMAdGgJAOyRALDJoiDmgngh8KgAnGP
MBN0EJBdwUT5U0EBUVDZt+Aag4rRPxMU0AjDMiCgETyHc0j86HTdun2ru6pO
ner3uldVj5kRsiybn2dZxLwCDysx1kIel7JsNuaOhSxrhNED+sXQRcwJ4zW8
m4zvfsaoxBibJI/BPBrjJ8gVmN/OJT+IUYVNdgbZ3Yt5H8aLkIdB3xRyy1xz
E4zR0DfNJVdA7o81d2IMhO552B0P3SY87w+yRfvj8DweoxPPFPRck0lHeRnk
UuhLgvQcxZBrMb+K+X6sqQtaf7/tjMJe0/F+CZ6LvBfPPDTq3DzztW9o/0bE
ag+eu+O7RtDtCNpjXZAPY7BmFN8HyU9g3UXYOIB3qzFfoh/QX8ilHwu5Gdb+
ZZnzOcu0R5l2aO8wRjnPBl2D7TTLZYvre2N9E4yzuWJ72HG+nEvHnPbw2Wjn
kr+lHeb8stcUw0bCqMfzvxhnMBZn2rPe69fBryaQd2FdiLI7CPqemG/BeAjy
I8QH5rfwvhClH5XpXD/6DGXQN47aowTzzdA/nGn93KDn6T4Hz9A6KP5VuX2F
PCfXurnGUnfkqD3kV7D/dUF5fQxrpuayRTvb8G4i9Dswfw87naF/A/KaqDPz
7PSJvjFetxf07So8l2MMIubw/FmQ/KkxwPWMA3FR7jVLk+KyDHM/6OYFxW53
1MxYEovTcmF2YEHyKbzvgne7sf6GgnA20Xjug+d3sOampJm+Ebft7Cvlo0kx
/iAqT9zrOHRXvH6xc0N/v4T+aei65MI59xkcVcvPmBeeTooxc8M8fgT5bsib
MQ+IkofnynPBuWQcWCezsP7DqFpb6G+IMdZ5U8zL8VyG0dy2hpsrWIPkiPVB
/MAYz4yqT9bmDp+z2HXfyDIxscF47lIQF/VIOtOQKIzRBuUK4zCa98hn+805
nzqPPD/PMdTrr/k8JdM+xDC/LcV8q/E/G/o8KM6sG/o72vXd31zH8xD3XN8D
5zyI54/pnzmQXHg99Nug7wj5HObzGF1z4XKdeYYYJBaJt6OOX5uC+LjKPDUX
37fE/FLS2m1eT17fHsTz1NPnqZmeKdP3NZAP5Tr/eu87yPXYCuOFTBzcyRjm
mveDfCTHNDNvTA7ibmL4dBTOiXfmtr/zey95xRx2R5LcL2mf1q79a7h/IAk/
vaFfam7pbt5bDf0izLOS8sM8sc6ZN+KMuduCeav9Jf7IJ0sgty1I3x7f/mLe
YM0Q48Q940v/vszlIzFY5XohBksct0FJcWoMey2C4j/FtUMMMceMQal7FnsC
+wH5nHFivlmPDT4ba5W5auF8cc/Bzi+fm9sX7sd9N9jXFt633Gt5tueScPko
5k+CYjHcNrbYDvdscD2d93mWm1PILXPZt5N0Z5LuEOTN9zCvdPwrk2qCtdEr
KBdlrhfWXJn5v5drgbXJudR1wbiTs2iL9XTF3MX3JbZJ/iAOiAH2BfZC5rG3
9cwtubev+wo5dafxz/MtMl4aovizG+J3DPPnQbg5ErTPjEz47Gs+pa2+5gTO
/ayf5/34/oz5obP7MM83x3xQbA5knJv4zMT1L8Yb9yYn8Nve5kiuGYnnanPg
yzh/W+jnY27jGmE9DnHdEUvksiLrKbeyL+wX7d0zyP+fuQfQ31+D+Hqj+b4m
qk7Xu64ZjyNeU+VvaPO2JDtbHEvuy370e1JcjiXFkPXNuNGPmfaFHEs96/dA
UP+mDfJ0tbFBXVv7UmOfa5Pi1c57TXOs1mbirM3GP33lGub79aSY7k7i9Znu
B0Xel/aZ/4PGAM/OfDIWXR0v1uZYY4Nn432Y8WUcJgTdoVlre6Jy8T72+jiJ
sxeQSyBXYN2+KC4ZYj7hHbLCPHZPQXZORt1PeT7usSsJCyeSei57CeuFayu9
L++9debGbkl5qo/ig+bmjNm+EzyVxPfUsfaD+Zh8Sj6bYN445zMSV8RKnTnq
h6i4rE7CzhFzNe/aPAd7A2tuh+vuevNOu4L2GGV/66FfAPmk87PA52dsRgTF
cUOS/IG5ZYx9/zuq756F/l3ff3gP2u7fO39iLi0oTzdCHheUP+auk/tlB8y1
URhdjzUv03ZQz2qX1AvvS+IH4oK1/HtUTZYUVMtl5uoOSbEckWRjsu2QRyvN
pcN8nyH2f4u63xfDzhdJOP4G81eWqSPf837Ge84Kcx/zsDkphlt4T4jqWby3
Xpf022MY5PFBvhOfte4xNT5PV+OZZ5/m87dyDrl+vs+2MSmn/E1UZ1+Xu9Zm
JOHjccyXnIsDSftMtr+3ul7IG/wdcNg1X+cY9kmqxWrX40LfG/lb7UQUvlkT
p3x/6M/fGVH735WEP/pyManWp7p3HIrKwV72K+NmRVJPH/C/OylnckaJY8z4
PJvE3Y8l+cx4E5PfRfWkBnKwsVFe0N21NojTiEXG4ZL9YZ2S976N+s31ZFKP
6Oy+9qHreUmSbrb1fyTZPE4u8b2C9wv+ziGv1SXd0Zjr0c435SLoJwXhmDnf
6edvfO9e4dydMJ98BP2bUblib3/IWH84yS5tXv0Nm/R/wj9Yuz8pv3swL43q
YfyN0td1RH9Xea8u7jOrLO+P+t1bjW+XBb0jt7b0HZh3Yd4tK80zrLGRxktR
QXep1taNcy3zPsy7Dvms2rii/pz3OJ9UY8TzfHPzUPtFPhjvXnbRWPo36k5E
zuQd6eukmBF3f5pb+J9KjXvlpiTflpu7eib1s67Yc3AS19/rOy25nL3mV3/L
fnsa7xbi3YWoPsF+Md0YJN+85vsWc7QP89YkDjxorl1ovu1lfqMv9cYFfRzo
XkMOJ5dMMjYWRfEDOXKN11+9N/qZ/PcfaqYDtQ==
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtsVlUQhc85e34C1SZAKzep0JJIvKX6IsZHpRrUCBQISkJNiGIiFFCp
QY0XarEgkhQEL/iAb2pABMslgFCgXERAQEP0TRPklkhF21JFUb+V5cNq19oz
+/x7Zs/Mrp41v35ekWVZMwhwhT+rWXgX/J2ybDt6CnwqOIxeg74dfod84M1g
IHwQeAN+DZ9ReZb1oseVsqwlbHuFb0+Ht4Gb0WPBSvjToAv/brCPvVvBDvgq
7D3YBoMP0CfBBPj7oAp+CHsN3+9A18Lb+P6e8G/qt99Bf8i3tiT7HgZjsE3C
53v2rwMrsNWjf4DPBL+gh+CzA9+n2D8MW3/0evT96DL0r2C5zq5c4f85+kH2
loG96N7w2RehD8K7QY5uQl/Ffjd6D7wOtKAXg/v41ml8buG3asEZ+Czso/G9
Ab0dPQF9NjkGxXIO3YD9GfAb/Bo4ru9j78a+jm+uRT+MfS22J9EPwZeBIdhX
oNdg/wkMyH2mcdjWh8/WH3RgGxnO1TT2fJV8B7oLfbMSvoS1B+BHwHj0reCF
3GfQWc5jb4EPUA1gu4iein0neij2KtZ2Fb6DKfDhrDVxtt2sjYAvDJ/1X+xN
ipX9rdhmgN3oV0EZ/A/sz4ZzoFw0gp7kO9JdvYVPF/ZLYa6aeQ/eh/3twneq
u70ObCh857p79YB6QTV5F7Z7wUfKHWt98Md0BvR+9E34/5VsUw+pl0axdgA+
RznBdgKMyP2bl1W7oDx3ji7Cz4dz34y+AO/FP+AJvBjuOfXebHwuY1sUtqkG
VAsbwrX4CGsb4Uvxmcz5JqHb0fuT+UTwBfpLxVA457vgY0Bn4R6ZHO5J9aZq
/Gd4TTjWfaCK2KrRewvPAM2CruTa1dpI7PeEz6qYFftn4bOpZlQ7G5N7q4a1
fspV8l32gQX4HkT/mXsGVKDPhXMzkT1nkmtatV3O2mJ4I6hH9+A/LzxzNHsq
sbfCN4X3agZtho8u+W7UE9XwN8O+FWAJ/JBmhHpTM0Wxh2fLTHSnYgnPim3o
Sva/hr6+cE2rtpUj5Uo5VW4Vk2JTTIqtTj3P/9/RL2EbVnLtd6ie0M+Bf3LX
gGphPvpK7ppX7euMOqtqbKzqI7n2fwQzdH+goXDPqHc0YzRr1PPq/UvJs286
a0fhm8A04rmN/+PxfT7ce5php1g7EJ5lmsHfoleFZ3kDe1rR7cmzuPb/2OrC
s0E9pd7STNRs1BvxHT5zw3elmDrRN5Ycu2aEZsWccG6Ug2/QFdi3Fp6JQ7G9
Hr575Vy514zRrFHNq/Y1szS79IbpLVOMilVvmN6yI+FZORv9dfiN01v3KL93
AT48PKv0JuhtUIyKVTWxTbM0fPc6k852LHk2qad2Ylsdrp1G9mzW+xbuPdXo
Fr2NJc/2dtYGw9uSffUG6C14HJ+Pc88YzRrdie5Gb+bL6E/DvaM35BP4neGz
a6ZothwLx6aZdVS9Gq5d1cRJvvNE+C3RzNbsVs2odvSbK7EPLPlsqolybP8B
nBENLg==
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.5], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNVD1PVFEQfbv3bovLopFNeBDlB2BpKYXF7oawrg1Ko0gl+wmNmihiRWOM
hdha+QNEo5UkKsHEoKFWqFg/ElYpXG09J+eQWMze2Xkzc2fOnLmn5lq1ZjZJ
kgeQAKng5zMMbegrMUl2MklSxvkQ9mXYLkMfhq0JuYv/8zifQlrQ05z00/Ap
wX8A+lXYn0Xpb2ArQ74g/xXYV3HmIK2M7p13np/wb0P/A1sesgLbIuRm1L19
2DYy8rkH+3PYLyDPC5zf8a0A+xbOYka5Gb+Mb09YM85aRvoS7IdRuT7BfwHS
zaqOHfvQl7b9rPq/H1RjFXFVfMtD5vB/KErfxPdJyChkBPID9lewT7DGKHzG
o/J1EmFIjI45D+sdds2D7p91su+Txpx9F937UJDfCcd0jNWjKNuHoJmx9jXX
NRbU15j/X0s0c86MtbyMwvA9/s9mNSfWxbnRj/2zN97Fmifc45koHInnWegp
9HPOP+7eyZFbUXM/n1OOFeOwZy4R/9Q48p6ZqG+XouqddM56EE9ZM+9hDGdA
rrEXcmw6I2zpM+q+iQ97KZvrTeTtw97AeWC8a1G18X76bzp3Oypn33nfBp11
2A89h7WouFHHpu6DWE26TtZf9n5VouqomFsXzdU0ipMV98k5c96ce8m7xB5f
R81pwxxMfRd3Ytp4sN9d7x3jSke942wE8ZF9VM3D30F82/b+DZt7x6NqLxEr
7wXt3JGv3p073o0Wzo9BsQvQf3mv/8K2l1VN7LeXVS7e13Esc2x5l8nHpneT
OLCfac+UcT3vJuMPXM+sOXv0BpBvrIOco74eVG/XsY+jfHtRvOe9I9DXIVPQ
V4N2ifPtBfGdduLJeRS9f/vuZdnzKvy3m3nPju8X93mRfM6J2zN+Exreq23j
fz3qHSRuxK/rmdG37jnTn3FN82TNu883oOD3YcmcJ+7sbdf4F9zHgHtpm0Pv
gu5mDTei4vPmc8VvJWd92/h881s16B6J15S/s+YF10bOcW5tvx11vzl187Dt
96vm97lkvhWivteNT+od4bv+D5pLwgc=
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtkj0vw1EUxm/9T1ek1SARQgwGkiYWE2KSiGhrEotgQ+tlweJlQmKwsJp8
ACUxaYJZ4gPo6CVp1UCsfk/Of3hyn+ece889b72LpUKxKYQwAAwMJkN4xZBK
hPARcWJcwj4On8S3iS7i6wDP2DLoArwHPoF/Df2LngEn2G7ReeI1o6/hQ9yp
okvEPMXfAIfwNOcYvmFQx9/O/Z/4T/3dik7zvgRy8BbwiH0OXYUvg374CKgk
PGYjjqnYGWzfnHX8nfB18AXfNv9LNe3As+AOvsD7Y+7nzHO9wpY3r0m1qaYb
1Q628F9im4X/RR5bOXyj9819L+AA/hTXoho20O/o6YT/+YleNa9NPSzCa+CI
v+bBvXmNqvUNnaW2FfNZJNG75jPQLDSzNvQoOhV5jjXOcuR3FVOx63FvdEd3
zzn3gs9As1AP1AvthHZjyrwWzVyz7zPvjWbQnfSclJtinPG2Yp67en4B7zLf
Le2AduEh8t1QD8r4/gHuzksf
                    "]]}]}}, {{}, 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0DsvQ2EYwPFH1Bdw2ZC4jBUSi4lEInFZOJYyGIwuLSYkig2JwaC+hxIb
iUtIBB9DJa12cFn9GsMv/+d5+56c5nQt5pJsQ0Qs8NQY0Z6K6GuKODZPm2fo
ocNZt3ZqRufoZcB+4u68uaCD9i99YcnZJlt82zf0VZd1mzF3i/ay+Zobzqjw
yY/fqvqrNX3TIa3qiGdrWrCf8myuMOy8rImz2fr/Zpc99plkijZG3W3VCZoZ
t7fog+fX9F7XNU+OO/uKZlnlyH6hl5xzay/qge7ou35of/07cWhPe0dJH7lK
/X/zP/EwNII=
                    "]]}, "0.09`"], Annotation[#, 0.09, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0stLVVEUx/EdXUsUoaevorw1iGoQTrrU1KJJIETQJFKaNKtBOcpJ7wIR
SwMrUGiUli+oBr3U0khrkPYPBKYVQZA3MyvBz6LBl+9vrb3O3oezT/b4qUMn
l6WU7qIrk1IzVhSk1Ls8pZVcoy5CoVzM+7EPl6z3cC8eYEjdx5d5p9lPPIwT
emfjGb1+daN8ACVYpbcGqzFtbT2X6a/lUl7HB7kcpXIFl/FXsxt4U6xxZazh
sPobnuIZnuCd2ef8I96H3/MQv8LL6GMP7ujn7LHIv9W38EEe5Tn8xCN1Nf/j
X/yX53kvOuW3cR7eYBxj6NCv59u82/475Docw1b1Q/0t3K6elEd4gWf5D+d5
gk9zA87Eu6mP8k2+xleRtUcV8nqbeVvcUdwHruAILuICzsc8Npr7br5K3iW3
yLVyEw+gTW7Fa/lx7MM3+DpaMID+2DPuHlOYUX/BZ7xQd/Mg34/z4xtwDh/l
7c48F/8RpvXuZf7/g0vqMlnN
                    "]]}, "0.05`"], Annotation[#, 0.05, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwVzLkyg2EUgOEvKyGElkqDUdOJdYY0GjO5AVU0XIB1lNYZtS2WWCuV9QLc
gj1hFNwDnhTPvOec/5u/bWJ6fCoSQiiwGAvhjTte6EiEMKsXPNFrf9Yr9uMh
XOuBzmm39vBobvduRk94d9tim2XKnLpXdIddVvjgzP1T9yiyyi/n7n+aJUnw
/xrtp49534+0xCE39mNd0E5vX/WWNbeIPUqcGANutSTMKR1ikCXvu9zKes+G
W8peR5p6RtzSNJgzNFLxNuM2Wt01R1P1n/Zm/fK9VYftLTrGt1vW/qMPFNwm
uTSvkzdv6j9y3DKZ
                    "]], 
                    LineBox[CompressedData["
1:eJwV0LkuhFEAhuEzZuY6RGKEWBKDBKNQSaZRKDSiMJZEQ8dFKBQkxJLY3cHg
Bkgk9mXseqXKOjynePN+33f+/P+ZqSpM9k0kQgjjmEmG0JsK4Q1TmMYB9nHs
rJKb0iHMyv3yHDfrGfldruGsPi8PyAvcqtfKH3Idt+mL8qC8wkd8zYd8ww2c
90w9D6GARrTbVp0Py+t8yrd8wiWu4B7PJPgMd7YlrrYV5QyP6KPxN6BT37CP
yVt8yVe4iPeId8K2vRTfFb+FB9xjx/7Ez3jEK16wa+/iHyTxjRRasOfsk79w
Ht+jL/Mv0si5z6YtJ/9xtx7i/4my3qGv8T9DIzxw
                    "]]}, "0.01`"], 
                    Annotation[#, 0.01, "Tooltip"]& ], {}, {}}}], {}}, {{}, {{{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]], 
                    
                    PointBox[{{4.905308194867242, 2.630836391598927}, {
                    0.20100883034436162`, 0.02382136569576569}, {
                    1.0719666600928879`, -1.250632626872198}, {
                    3.0527398070698992`, 
                    0.3872158300237583}, {-1.8438997564108928`, \
-1.502672689805559}, {-2.913246104009823, -1.3391199692975575`}, {
                    0.3149621009629985, 
                    1.9477027131642348`}, {-0.9556834229157016, \
-0.4484871006542206}, {3.2651237363484125`, 0.27047000138291255`}, {
                    2.9757868411226935`, 1.1755085189629118`}}]}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}}, {{}, {}}}}, {
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], DisplayFunction -> 
                   Identity, DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                   AxesLabel -> {None, None}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                   AxesLabel -> {None, None}, DisplayFunction :> Identity, 
                   Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "GridLinesInFront" -> True}, 
                   PlotRange -> {{-3, 3}, {-3, 3}}, PlotRangeClipping -> True,
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RealNVP\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GraphicsComplexBox[CompressedData["
1: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
rS7+VeI9p5znc0yfcfllPjpo50WP+k75SmexrXr1l/E7dnal2FleWtNzzQLk
uxdlKmHdn7DoSOPFg06u8eIEzS9q0PyiB60vW9L6YleYi15h0Cv+fGvGLI/3
/xFd258tX/u7RBEfterQ8Jv54j/3SzZqGXpXNCT+5TniX7xO8pHvkXzEWJKf
uEbyE21KROzduztHHn0W2K1bj+fiPUPu9Qw9bJ/sf7ycV4rMDCw9Yu5P+SKf
9Cc3kv7EXdKv3E761SJJ/1oc6V+9/3ZPqdrFs6z597rR5H9ysaN1glxRzPb+
dHqu/5jF53PlUf/Wpf3W3VHn4Jize5c8/N7b9n5bJua+nbrkmdyycsSbsYXP
1f7vXuLq7MSzhWJlgzcrepVLV3nGBYo/8simX4N6/5Sg8tEWVbeXPeCXLooP
WX0gPDRZzvyk7a1WU4tpA+JqH55dKUU+jY15WDbc/j7zinvSqxtuXpB3P+n+
86vVcoSjRlqBb8srcizFa/5+Uls7ftjCAW9dkQ6K97Z3PsN/uDitZccz4j7N
J9Oru+YTI2l/sZ3rqxVzrS/q1Eva1TvXjGuziX69N9EvWhN/0ov4E1fCz7RP
8Dhne284j/xFxdtetL+JZ8S/yhc9Sb4yjOSr9oue5K+i8HWfDi32Jag8oebc
wU2HlXHa6stNxr959+GSZyI/t3RCSskc890l6VudT4dRvqDiMORp2It5bqT8
QMSQ/ai8KDdsfPGPWxTY6s/fhrdtc8/XoYWQParfe9D+ofIS5EPnq8YENSvv
0B/QfmWrw1yoV33qquov5Niarv3Pdu82K+rbV5ctfSYb0P6p8tlxaROOBZd9
Yjs/n6P9Vpas51a2zX/d1Pu7u7R/q/d3yLNDRhwJOrrxgfkOgPZvuZD0rc5X
/ShfsL07jW+2L8/LP17t62Movkh97R6fNUMy1PcZu1IuTayeZTsXDI4f2fLe
zOuqftGU8g1Z6vdGG+a9br7vAx/ryN5lwJrAH4bMNu+11//WN2Zodg5/z6dv
JP8R9yt5h33slmu7Zw2g9ZUcp1C8Fr1oftt7vmvEr3iN6LO955tP8hTHiH8l
p1dJH7b3e81PbD4Ydzld1WEcW7r/9eNS873eN5SPil8oXtneJUwvPym3RG3z
XrXg8umByyo4tEiK//Ijiv8yaOA7k/9TM03umjO4wqejEuSjlIx2PWo7xfSM
o/4LFz8Txv6qRdH+KipucV/zdZmX8fB5SNBrrziwj+toq1K/DKd+PYPyAKla
ml9OpfnlZ7S+mEnrCyM/EUZ+ItIonxENKJ8RRr6jLaJ8Rxj5kzDyJ61V3Xk/
NQq5IX9s/8WldoMc+qNti47P2blFRnxepn7qeTd9a07retfanZETyF/1r50D
J23o/kTUDhy+039gnly0P/Gd5VqG6OR36LZblVzZZnKjd5ofd4qUC5/nl76Q
Kz+aOjSj8OQNuWjlitv7XzyTG97zrXfgwCa5RtbuPyUvQw71Pnny+KdnpRGP
5O+F47v9feXleXvZqrAxWc9kXVe+/lg0olZ+0/hSdNUjDm2pqLLzccITWbDw
33h+R3i44vod+XqNHM9NJVJFX1f8vCq/7f1bpfahKaL5ugbOo8GxskRedO6g
+EzRtm3JyiU635GtZvXXS1bw1HYs/fNAzPIE+fB+386Z0lsPnz2n9i73jbK9
59gwv+svZIfVy6eP6b9GXPPdkZX39cv88np8YsPqkWLYoOgj428+kr+/9n67
Y/tPiyvUL5KpX35B/eI49ct2NJ/osMY1H9bTetJ6og3Ro68lekQpole2JHpF
ZeJPfkz8iYnEn2xE/AkvQw5u1IoJJC99PslLvG/IsZ4h1z9I3vIFyVu8QvoR
q0k/4gvSj/jA2C8akz7FQtKnCCH9yw6kf9GS9C8fkP7Ff8le5DtkL8Kf7EsY
9qVtIftS+0FNskexgexR3b/v8jt1ZvrLc9qXwQHFPtxl/j1Va2eFun/W9NbG
hN1o3jPUfI8XfrvO0m6bzDpt77Z5K9emm/X/IMLyXcrPpZGfy+ydfuWn5MTI
Ny428R7RLVWGJhfPzNX3y+db3p85clSKimMraX65dXXVpnu/iBDH23n0Gdol
WW6n8SKHxqt49wvRLzbQ+UFWpPODaJpxICJmV4p8MChscNsFT8VgOj/oO/bS
+bEN8af3If5ELcqf5TLKn0WrNa715VFaXyQR/aIy0S8a0PziMc2vzplRxnlm
Q0T/c8WmPZIpraeXC99k1smQv3/Wd1Loo0mPRLa27s/5G8x3jsuNfHxEYK+c
9IqpZn34zke1vBdnyW3N138T89MNMUF6Z6e+laX2RdQtBlYfOe7U8dviRv/h
O/qUfCbnjmlRf+ScJBWvvzTy6113k76sPShT1aEjvn071tMvTa6eOixj/egH
qs55alGJMN+Ah2o/CvykY2hvab5/iy/7drPZj8z3bv3dYurc/N28JwoVNVMu
NjXfv5V/2njvlJaZap9YvipucY1xWXJTv+J+V3bnq3E36Twgg439+nKdCUvG
pefLqYfdp272TZDy0jdjPcaYdZ24H6u0WZOcJyvcfryw6cdSDvrjzYDGDc13
5sZ5R2D/BH3Tsh582KOdab8LXq0evCrZvE9aGRfVbtst8+964hofv7wjwLzf
OfZx1LTHEYXCp0bJvUP35coPPus1oOUPDn3t4TJBXdxzZLjz12/2b3HoqWe/
C55RJ0M+6LH758zrDn3HvaV9AkLS5aSW8ZfGxjv0ASNX3fV3e2DELYd+s9v9
sUPPJcumPZtXqbTXoe5Xj9B6cubiXaW2Oh16ud+zNp5pYb4nu0H06SPpvCuM
864eUuFqQVRrXfTO7rc29OuX498KWTQpME4cjAktfuinQpkcNSDvwqCHclOn
yq8fqpgpv4r7vEXr+PvyzGuTGrRvkqnq5+EkD5keXnfK6E7PZfk7h3/8I858
H7aQ5CclnceFcR6XTVvvjN+Yr4uMG5OGduqQITfVXHn8je/ixMom8aVy7jjl
kP4TO5WqnC8vBffx9CmXKvtF7/ZqXC1fVg8sP6V9Toqyi+9IX/LvF5+4D2n7
SNb22JW/7vA9Gfi8YqtffRNl7toSr94vkypLzi3TIqFx4svz4JO0bq+lynDX
Ovmyn5HPGfah7Ofi8sshvbd52d7z+u/sU/DPqShh2Juyp0lUnxAXqD4hrpH9
iaRbLvsTxnqij5G/dSX6RA7RJ0oQfeII0ScM+1d2adi7GEn2LkaSfEQ0yUcY
8hHVSD5iJ8nT4NMp0kg/wtCP8t8Q8jcxdnv40KjIHBnifHe+x0fm+zDDP8Uq
qteIFVSvEV/fnFgQFpQkXhRu+HNTg0xxg+xFGPYixpK9CMNeVHwOIf8Xw+vH
H1wyPlVO3rFsa9+B+eI82Z807E8Y9qwZ9qz2JyOeaBep3iS8qd6k3bmx/M3l
R++KivXvnfl+lUPrQf4jDP/RbpH/CMN/1L2uEa+0QKpniW1Uz9JKPvy0S8WZ
/4gHb2/qX+6aQ7tL/ioMf9V2kr8Kw1/VOc6Ih5pRLxNGvUzruXlivx5nnov1
Wuobo172Oyg+iMYUH7Q1FB+EER/U+wrU0z6j76XxvapDo/5WnuiVD4ledV+H
ep16T2bU217fvH5ibL9cOX1aYPIe3zQ5e2Wt+I2+5vsx3Nft2PPf0i/Wpal7
sLdzvR5WuJQojfqtqmPfGv205a1Sebb/twb1uPnGuRvtafJX0ZD8Vayn/VEk
0/5ovh+j9USb7A4l9ok8834wOmbi2CN/y5Cy0/ZMn+RU9w/bwn6aHXw7TZ3D
uxr1vxmOjoff1cz3k9s9fBrFV3OKmXReVestWHynct3bz0Rxqs8Joz6nztWo
F1ZddtJ332nzfVj0vGZXDxwuEOfo/Kzu8WN7tyvzUWcH6omaUU8Uj8leZSWy
V/XeC/XWBu2L/+VR55ycc3rBqEMVHfo2qleJZ1SvkgPJf8QU8h+VLxjnD5lc
6ZuWHT9/oN5N/LI7KePrZ2mi7dW6c8Jbv5DTyH9lLvmvqucb5xk5LPSvqjun
n5X7P/aOfvjyPN+O6mniMNXT5CiKFyKU4oWqa2/OPf5p8UaZsso72roPosz3
XhHjFzQaHZcv3ghou7Hz0gxVtygzodxPvvvT5ZmY+DXzdpjvu7ZR/iHWU/6h
6g9+Rvzf1KpXwNWq5vuua5TfiEWU38gIymds77v6Lqy+Zuao+3Iv5U9iH+VP
suacVyo/2pJt3q/OTGg9eVmuCK+S9/TywuOKvwKj/lz/VDGH+xv291uRl//T
O6XiBfkuzafubQdTfifvUH4ngimfs72L7kX0mX9Pa8TzrcSvetfRh/ZPmU77
p/I71LcP0v4ue9H+ru5ZUN8+RPaq6j0lBtUYElbj5X5n1HeKOcPqtC93S3T4
7v6ZHh0L5TbyF2n4i2zYoPuUit9nitLJUb0vPs6W6VEufxTLyB9lh2GHF5y4
kSZPu8cmzm0XL0uXaHPdc0Sa3JhyqdWS37bJOr27ZQy86qmvaT83af7J6yKU
5C3HkbxFvaGHan7S6p5MfHzs1okj8eJpXptqt7p76B0rdqywelaS6P5Zeq/q
m931Bl+fDpq/6KEY9a3P8cddr8vh2xMqDp1+V4QMnH4v+LqbHuP/9/ddF6SJ
X8n+ZCWyP9GG7Fv8QfYtjHgoZlA8FHvIX6RG/iKaufaNl+efreOaNRqeJXzI
P8Us8k/tYAttdWFTD+1ej6Yb42sViCjCehJh6U/8aluIX/kqyUNUIXkIQ17i
L5KXKEn60Ix6m+hG/GofEL+yJslHpJJ85GOSj9aN5KPspLJXcNO2n5nvBmc2
qd92SmCqKEf6le1Iv2IJyUu7RvKSQSRPMZLkKRuTvmVJ0rf4P/LWkQQ=
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.9], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmGmMV+UVxu/933tZyiJiZUehFGQbVGSEGQZhbJqmNjEpDSYdPyE0qSRt
00JNKUstSVMWAVNIBo2gFotgl4TKUqB8UCgIdBhGB2ZAZBGwAlqs1bYOI+3z
y3n+HT6cnPd977uc9yzPOe8d+tgPpn+/lCRJU5okmfi7Ivq3ivZqoJPGV+dJ
0svfGL8quijqKZqgyXWat0ftb4rPFe1Tu08W44eT2Pc2UW/v3dv7FKLbRV8U
5ebMOyc6hkyiD0Xvi94UXbAMyNJZ1JdzRBO16bd0yP3ifcUfzeL8X0j28eJ/
ToLf53ZlKdrI3mS52Z+1E32XOu9Dm32nZzEXzlmvq/0l8VmiXWrPy+Ib48PE
Z2fxfVEac15Jgs92u5tooGiAqJPvgS6+4LH+1vFg65k7DxHdKerh8UGiVtEb
okOi7h5j35MeQ/9jRTWiyaIx5tWmh0RfF523rbH5YfE1olrRCd19kr6PEo32
mirRKe99RPS2+V9Fp80bRGdER0WNonc8Rv+sx7BxF1E/27Kr793PNtlnu78n
+ouoOQndT7etW9Q/6PufEB1w/7jn06/QHV7zWT/VmqfUH5uGvfBVzkEf37Au
sN1XbSO+z7NN0UOLdTE8DV/ZbZ3wDf0c0fhWtdemocM/lEKPtxQx3rMIn+pr
v2I/1la53er9h9l3tiRhkxbPwZ59HFN97ePI0L2Is7oVob/GUujwWCnaI9Gd
AuxHah8XP6l1BP2xPGLrnGPtBfWrNf6i+C7NeUDtjWoPLyJudmisVfQ99tX4
n0SPqL0rj7OaRHdp3m7NeVDtlzVeSuMbMpxU/wm1T+Uh1zHP76r+05r3oPgB
8Zc0vlp8kvgC0bg04maY7ULcEs/43NA0xtFVrvW/VP86sjk+ic3P8vCBneqP
U/tVzfmOeIVoq9qP5eFT8+wPgNHPNT5N9/6u2tfUflz8lL7drfYIjb+jdqXa
d6l9Rd/maNnDeWDR+lL4zEp936D25/i/vs1X+7T4ijTa+GGV+CLRPWnQQrWv
E495tLfonOUa/7HaY8TvFS1Wu11zLuTRfkVzbuRx1m/VzovQYSbeWeOrtGaq
+H7x50shF3b+WSn2G5WGryPzTLWXis9Pwrbt6FPULFovmiE6L/qdaI5oXRLz
l4leFtUnMXZJ3xawr2izx54BK+incU6V5HtS/EYWsXrCsVtnbMbPy2csuwlr
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
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtMz3EYxn+H798cUtxyYW0isdnQig7SVuPCjYtuzIUchg1jk1OJblBN
ttpqyKGjiC1n4cJhTDYtQnRQiQ0XNlekg8+zt4vnv+d53+/v/Z7e5/uPzd29
blfged4O4MB2fn75nncAfiP0vC3om+iH6M3wXNCCvoLeCL8Pcijwj9h++AWw
HD1CvgS+EpwiNw+dDq8F6eRj0QXUz0SfJp+MXgUfBlrQY/Rf+CWwAj2KLoU3
gkz0fHQh31ejkzU/uhi+0NnassitiXheO3on+QfEfHhRaHN1EUuIWA3V6kDH
o0cZUw1PAmfh9c7WnoFugA+CgsD2eB7exPf5gcWU6wAJ7GcP+i18CBQGtoeL
ztaoteqbAfh7rZnx+9Bdzs5MZ3cE/QX+DuwNrKZqH2a+xfBb4DI8h1g3vBaU
odeiO+E54Ac6RB+HPwUj8H7VCOzMzjnbs/YekO9j/HpiA/AmUIH+Dfo1F4jT
etFx8CLwWmcd2lq1R+31bmh3pzmXou+h08ilghr0BvCV3DVQRW4q85fDr5OP
goegDv6cWAZjA3SZbzEHnxaxsW3EsslPR1fAW4jFwHuIHYSXEGsI7c5190nw
bPLRERv7ivwgsWXOelFnmqizBIt8q9EL/+DsboqJ1TN+E/q7bx6oRm9F//TN
IzXoP2AI3gziyV1Fn+f7C2Ac/RI97JvHtjmLKfcMneasx9Xr+mYM3sb4Ed88
dg99JzQvJqLnRsxz8p78mwevI3/StzVpbY3oUvghxvepl53dre5UdzvHWe9o
Ds21wNndaA/ai3pMvaaeUe/oDnWX8vB9cnXOvCFPtqIrQ9u7eki9JA/JS/L0
R3KdIFb1wAtyY+ij8FawBD2FPU3yrSfUGxFiJ3zzpLwpT2dN1Fjk7E6TJnoy
QJ9xdjbyfBfxHt2xbz2oXpxJvgrdDr6hf4bmFd2J7uYzSIE/0pun/omYN9SD
6kX1gHpBnuykVnlo3pAH5cVm9G3f5uxWPWdnr55Sb50Lbe/ygLyQj0707Rt9
qzdJb5POYAA9Do7Bn4AUxkeDSnkPrHbW4+r1PJ2v3svQvKkeVa9+cpbTG6O3
JtXZW6CeUG+opmrrjGtDq6naOqMZzjwir2jOGGdnorPRmnvhs/Re+vbm6O3R
mepsFZvtzKPyqjwa5eyOddfak/5w5HF5Xf8Bk515QF7Qf8Yk+Btnb6l6Wr39
H65O6iM=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.78], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmX3Y1uMZx+/7d113rKeimfQUentU2o6DktpRVKiEimMdh2qrpPQiHbNE
Ty/GRuUY5m0JlaaXR1JJWN6lbYaUTWGKSEzJFmbzWmvfT+fXsf1x3df5u37X
73o5r/P8nt/zuluNuvRHPy1KpdJT+kmqN6quknCi5J3lUmmFyo2Sj1L7e37e
nkulqXp+U/UslfvVNlv1GaofVTlE5QONcY7qxmqfrfpJlXYqffXcT+NVVUql
3pJ7S56lvqPLMQ5zzdHz9ap/ovf9VQ9DVnlf7VXqs171YpWn1TZWfe6T3Fry
DNV3qsyTPFzt3SV3U1mttTbQd8PVPlDlLcl1KldK/lzvLlZZIXlAKfow3216
/4JKD5VJKheoT3PVy1Q/r7qbyhbN8TM9v6L6C5X1tKs+WeUpyZ1VL9b75ySf
pHJ1Ofq0Uemudw9rngMp9MW6eqqcqvbjaFc9Vu/GpFjX5iJ0capKl3KMX1I5
RWWtSlaZrvKsSkuVXvq+q7ok6flCjTFSpU5jnJTjLB7V806V0yU3Up8WeteH
sVX6qc8Q1Y1Uz9X7jSr9VN7Q8+Xq97rqwdiI5JXqN1/vNqmcjx2pPUl+h/cq
tZJXqX2l5BNUX5livNs9Zjs9N9c4nfTuFclHq22yxl+gerPKIJXROc5nkd5f
zr6L6HdFDvnyHOPVK8I+5uu5ver92Fcl2h/Ut1eprbXKA/psseptKiNZt/pN
V9tv1GdpOewD2xig9vGqm+WwhVttD0dpzC2qP1T/IapfUxmsslDldZUf+zxO
K8W+ehdxThXsSGWrygiVa3PY4TWqN6hPtUrHUujnkCL29AnnU8R6T6jE+m7R
vN+rhH7669tF5VjPWH3bpohzOFPl7hR6Q39X6v2D6EbPL6rPCyoP6fmsSrR/
X31mlqON8+qEztA5st7VqP0/KXwPHY9T20Ol8Ok1qkeofbjKPfrueNXHYGtq
38Ba1adFDl/FZ5em8AX8YDXr0fMRkj9KcSb/UBlvvf5dZShzF3GmzNlVdVnl
ZMlnF4EhyPjDBuvwao31Q/w1h+3jA/jsVPtCN9vfBSl0xbpZf2fJc1Vmq1yn
8onaL1O/GzwH83bxGq5I4df3FjE+/jXFeqCdeoTlRUXIzHOu6stUBqrcDv55
PvAFeY7KJPdZXIp+PC+RPD0FLvQoxT5Yf99SzD3SMngBboApw1Ksk7VTT/F6
tlnH2H9bte0BB8sx9nTjzjTLPUr/ewajbpROj1X/RaqvV2km+W7VN6gcLfm3
OfY+zPoc5zWDYcQI8K6X2nuprvVZgFmTvF/2VOtzYU9Tvc89tk/sdHs54gVx
48Mi/JUzGu49Mjc6naJSq7JDz6eq7/GViHHTvK8OWutq7EB1k3L05wxqPS9r
uwXdskfj8Fhj8jvoTPJEyeNz2DC2/IMcPoVvNdJzwxQ4Uqv2Qt88rrq+2nYU
4RuFnq9V3bcSYzLeDPBI7Y3V/qcUuLLU2PKK485rObAYTN6WIx4Tl99R3TJH
fzDjOn3fX/JtansvxRl8IHl+ipjRVX2e0/OF+vbfqn+eIsYskfy2/ai9+ryb
4sw6VAK/xlm/4BSYgO3NS6HPLpXwL84QPEqOw+DTGNvRQMfbAZYbOt4cXgm9
TlC5BN2meEamHm+dcw7jfI5bipA5n+H+ZphjeX/Pgb4ZEx03dYxpUokYM7gU
+An3OVAK/sMYjMVch+WIlcTMb/T9pUVgWU89N1NpShzLwXngPsQD5mbNZZ/v
n3OMC06BUfVz8IxDtYav9c2tGvMzfKgSMWhviviw3XZO7LramNnM8QLeU0/9
75P8gPqfpfrMImIPtjLD629kjMUXiMlXOQ6iE/RB/FtQijgx3+dVUwRX61OE
zFnW+AzPdGzra7xlzr6e9wzVLYvAyVtzcK9bcthOH3/b1+vsZftgTM6gnOLb
rh6zn/vgQ9gaNkfcmFaO2EQsXeR4emcR3Aa+iQ2yz4WlsEWe8fVV3j97bwrx
LYJTfKx6r7F+YjnaFjhWcc6b9e2SFJytu/nFbMejg9hVDtzu4pgE3qLHiR7n
10VwSPq1LYc9wJ3weWRshDXNdPy9owjfBA8/z7Hfb1Jw8KZe8xTHDfBqhdcN
f37CWLYxBb7PNgbCKeqZV0D2wXC4ZocUuF0j+V59e5rkOtUdPe8+vX/MfvFW
Co45yZhNHKQ/cfFx91ms725W203maWBnR+Nn60rId6rPPTnmfD+HLuCT7J33
J7o/tlVtfsga4YptJLdP4QPIj+XAUbjGX1LE0Wd91m2t5yPhISl4DHGGtS+x
DTc3V+mYYm5sZmGOsXcaF08qwt7OddyG8wxQ2znmzdhsC9s8umluezjbfeAo
azTWQHhVjraz/S3ncIz1v9XjgKW9y9Ef/wGDz/D4rJX+xNYnUuh+qcb8qoj9
LS0FfoMz4M3+IuyU/Z6XYi/YFfwOnsdeSuZ4nWyHrY0z6+1r+BzfdbIeFuTA
nh05+vGe8a7LgVeDc+D/7Y4LhzunILcgTo+2rdYZ24jfYD/fgAfw3ZHGq2vM
k1uRG+XgKf90fKcPPI14ChcHb8FeOCM54+wiMALevdDxEzxs4jZ8CF6EHX/L
79A1eibmIcMlZ6bAti45uEg/7+tpPY+T/CkxNsX47OUCY9K3mIVMfJlVBK9l
rWtzxGXiM9g3yHvnvGkfbpzsZT/Ax9+zn7N/9NDW+fdO63NTEfyGmDgihy23
qUQ+TF68QN99mQLnjjf32WWsxFaYi9h8wDZEG3k4+fgd+u7mFLHifMfPQd5X
K3wqRfxjb4N9FsRX+lXnOGfOHv0M8zlxRuQ38FHOfI+5ErkXnBRux9zodal1
28B3CNwltM+xF/aEXsBc9HCvnteBV3q/vIj4SP7W2Of/LUe4xGt5zTbDmnaX
g78RC+s5HycvJ8azV84qa19LNGahehmYqLZTcuSHzINvNtC7VepTX/URlciT
m+TIlef6rMnh5luPdRrnGbX9NYe9LLJuj7Bu8AXyvAVuH+RvGaex7Zu9Herc
nzuAZj4TbHC31rLLPB+/GW/fmWq+jV3/ooj7BPLVw8gN9dywEjGGXAVMm+Kc
Ao79Zoq8fqW5JLgKtuCbc/0NsYo4QByEO8IDrkmRW40qwi576Lk6Bcci5sNR
sUXm6GF9wt3h8L80xuN3rItcm3b8Ey4Fp6rKkW+zD/CSOyYweFWOvbIGeAh9
GZ935CUHMVfyVzn4xNeq/5Ajdv9e9eQicG6d8bmB+5P/kQeSL1Avs0xs4Y6D
WAKu1xnbq93eybFjiTkPeeI9jsucVVv7+R7L8LltRcSJKs9V52+xO+ycfTMO
d0/keuSdiywXttuy6nbGDu7wwI/nisCYA7b5FSmwAwx5JMX6tzpm9bK+enqd
cEjWBp98t4h4TN9t7j/BHJ5+3KUstz+SzxGjidXwavgP8edRnwVzoKf21iH6
5H6BM4XvbzHWwfHh/vB82pC5K+MuaovlKvPtPvbBR4rww6Ny+BE+CseADzU3
B+EOa5XHPM65xkGsTKEX6o6W16juoH5zuI9KcWf6qxycgj6MN8U5ILngkBT3
aNw/PpuCT6xWe3PnFEOM5zUpMH2d+f0K8jjn2jc45wB78fF3nY+Tl5OjEJvB
FHTGvuAY2Dt+RbxrVYlzb6n6u5XQSWPVXXP4FHnzsTmwqKnam6k8oz7VlZiH
c6l2jKWdfpusK3R/jM+LeckdwEOwm3sFcnByQTAAzAa76xszv1OJ+1vwB0wg
PyB/BHsfMH9ameP9ao/Z1HpDD1W2P3wNe8QuiVvoekIR92LwU57BJfKhcUXw
nrdz4Pky87xa+/wE94dPbsjR/0Xn+mOKWP/zer5I8qv6dnQRMvjG+9Huw3jk
6WDIKLfTB9tZ6Bh1o98d5ErGSb4lv1lQxL0bfIw8Abz9Vw5e9rsU7+e5z12W
2Q/1fMvfvmN/YPNN1gPcnlwFDjs0hY3ybqL1xt735Rgn5bifJDYRo3aYE3If
D//n3uRu7/cuzzvU72gnr4Bbkt90TuEXcAfyYPqwLua8xOf1cg759RQ500Sv
B/+oso9gey8XEZO4dyWeneKYcm0RcWWa+4Jd2OkmY0iNZb7FbsFh4g53ii8V
sbeaStydrlXf3TnG3JVjf7XWJ5hGH3CNHBFdw7+/LIKbExO5y+Ielr74zwaP
D78jXsJl9jvPrKh+NYcfwxG475ls+xlaBNeEz/a37cBttuZ4Dw9633nW/Sm+
43vGGufvZhmf8RH40FTvhfPiTGb5XMAT7p3Ih6kv9Tj4xmRjDYV2MPyNFDqY
l2Ods73WrSn2xT09vJl1rM9xl1Jt3Jtnm0F35C/c/6JDap4P/nfi9ofdzjPj
cm7kt8Qw9E1/ch/+6/miCF6HH39umyd+7TY+DDCPh3d+VETchX9yN/Ch/fEL
f4tNEnu5syD+Ep8Za4Zj2b4i4tlcnz3nzv56eI89cvw31NM8rafbqy2DZ/B/
OALc5knr8akc/K+psY58lP2hH3JA5qrznF/Z5r62XOfz+cZnRBvvyP32uZ3z
JU7v+j+d7PG+9lgvcBJwl3sisBf/JQcj7jewP55g3ZN3c0a08Y7cgvuow1Lg
BnUj837WQf+ljheM38ZjHOlxkPd7X/hnxRxvrXlgdjxsaP009PgH+XOKfJ77
zs0p7ib+mMO/8UFyZmJaO8c1cPcTnzv1p0XkG5+6HdzGLvbaTtA5511nm/nY
7cfaJsGVlzTfeNUbc/gcesPvpnitrLOl7QrONcd2zBkz916v57MUvK1FJXI4
Ylit+SyxHU5Lvn6u4xjjYa+MyX9X5BLNK/E/A30Wl6I+z/Ia2xZ2xX+ecGY4
LWuZYxzj7hjev9/Y8owxAP+C24DPxCnGZC1wvor5PLY0wL72nxw64r8F7o+w
kcccf4gZxIsZOe6v+E+PPGOOdYIuuRcldmNjNbY9dNnSdoV/wavgSt2MM3AJ
/I/cH27MHcYi49l51glrZoxWHofYQoyA21TbRxnnoRSx8OIc2ADGgC2cOXjE
uR/kgOaB9+WIT8t9VzbUcfa0HLo+XfXfUvDUI/2fBbl4T8fTdV4n8WuL17Pd
nIv/YPHNbl4bGN7ZvkkbvOp0r7+bZc4A3CO/JtdGxt8H+z5nZo44mu1r3F1x
RwK3vzBHzjzKfKy756cf/cEvbJw1EEdOtG1wpoN9xsjsHxnbgavCG+HhF+WI
l2Ny5B3ogfuQnb6jW27MHuA1Y8/c8WG7/wXWWLS1
                    "]], 
                    PolygonBox[CompressedData["
1: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
UT1HvUc9Qb1BPUO94+PoWqBv3hL0/yPOcsY=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.65], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNWFmMVUUQvbe7HzsBRkBAWaOCmQWMAdGgJAOyRALDJoiDmgngh8KgAnGP
MBN0EJBdwUT5U0EBUVDZt+Aag4rRPxMU0AjDMiCgETyHc0j86HTdun2ru6pO
ner3uldVj5kRsiybn2dZxLwCDysx1kIel7JsNuaOhSxrhNED+sXQRcwJ4zW8
m4zvfsaoxBibJI/BPBrjJ8gVmN/OJT+IUYVNdgbZ3Yt5H8aLkIdB3xRyy1xz
E4zR0DfNJVdA7o81d2IMhO552B0P3SY87w+yRfvj8DweoxPPFPRck0lHeRnk
UuhLgvQcxZBrMb+K+X6sqQtaf7/tjMJe0/F+CZ6LvBfPPDTq3DzztW9o/0bE
ag+eu+O7RtDtCNpjXZAPY7BmFN8HyU9g3UXYOIB3qzFfoh/QX8ilHwu5Gdb+
ZZnzOcu0R5l2aO8wRjnPBl2D7TTLZYvre2N9E4yzuWJ72HG+nEvHnPbw2Wjn
kr+lHeb8stcUw0bCqMfzvxhnMBZn2rPe69fBryaQd2FdiLI7CPqemG/BeAjy
I8QH5rfwvhClH5XpXD/6DGXQN47aowTzzdA/nGn93KDn6T4Hz9A6KP5VuX2F
PCfXurnGUnfkqD3kV7D/dUF5fQxrpuayRTvb8G4i9Dswfw87naF/A/KaqDPz
7PSJvjFetxf07So8l2MMIubw/FmQ/KkxwPWMA3FR7jVLk+KyDHM/6OYFxW53
1MxYEovTcmF2YEHyKbzvgne7sf6GgnA20Xjug+d3sOampJm+Ebft7Cvlo0kx
/iAqT9zrOHRXvH6xc0N/v4T+aei65MI59xkcVcvPmBeeTooxc8M8fgT5bsib
MQ+IkofnynPBuWQcWCezsP7DqFpb6G+IMdZ5U8zL8VyG0dy2hpsrWIPkiPVB
/MAYz4yqT9bmDp+z2HXfyDIxscF47lIQF/VIOtOQKIzRBuUK4zCa98hn+805
nzqPPD/PMdTrr/k8JdM+xDC/LcV8q/E/G/o8KM6sG/o72vXd31zH8xD3XN8D
5zyI54/pnzmQXHg99Nug7wj5HObzGF1z4XKdeYYYJBaJt6OOX5uC+LjKPDUX
37fE/FLS2m1eT17fHsTz1NPnqZmeKdP3NZAP5Tr/eu87yPXYCuOFTBzcyRjm
mveDfCTHNDNvTA7ibmL4dBTOiXfmtr/zey95xRx2R5LcL2mf1q79a7h/IAk/
vaFfam7pbt5bDf0izLOS8sM8sc6ZN+KMuduCeav9Jf7IJ0sgty1I3x7f/mLe
YM0Q48Q940v/vszlIzFY5XohBksct0FJcWoMey2C4j/FtUMMMceMQal7FnsC
+wH5nHFivlmPDT4ba5W5auF8cc/Bzi+fm9sX7sd9N9jXFt633Gt5tueScPko
5k+CYjHcNrbYDvdscD2d93mWm1PILXPZt5N0Z5LuEOTN9zCvdPwrk2qCtdEr
KBdlrhfWXJn5v5drgbXJudR1wbiTs2iL9XTF3MX3JbZJ/iAOiAH2BfZC5rG3
9cwtubev+wo5dafxz/MtMl4aovizG+J3DPPnQbg5ErTPjEz47Gs+pa2+5gTO
/ayf5/34/oz5obP7MM83x3xQbA5knJv4zMT1L8Yb9yYn8Nve5kiuGYnnanPg
yzh/W+jnY27jGmE9DnHdEUvksiLrKbeyL+wX7d0zyP+fuQfQ31+D+Hqj+b4m
qk7Xu64ZjyNeU+VvaPO2JDtbHEvuy370e1JcjiXFkPXNuNGPmfaFHEs96/dA
UP+mDfJ0tbFBXVv7UmOfa5Pi1c57TXOs1mbirM3GP33lGub79aSY7k7i9Znu
B0Xel/aZ/4PGAM/OfDIWXR0v1uZYY4Nn432Y8WUcJgTdoVlre6Jy8T72+jiJ
sxeQSyBXYN2+KC4ZYj7hHbLCPHZPQXZORt1PeT7usSsJCyeSei57CeuFayu9
L++9debGbkl5qo/ig+bmjNm+EzyVxPfUsfaD+Zh8Sj6bYN445zMSV8RKnTnq
h6i4rE7CzhFzNe/aPAd7A2tuh+vuevNOu4L2GGV/66FfAPmk87PA52dsRgTF
cUOS/IG5ZYx9/zuq756F/l3ff3gP2u7fO39iLi0oTzdCHheUP+auk/tlB8y1
URhdjzUv03ZQz2qX1AvvS+IH4oK1/HtUTZYUVMtl5uoOSbEckWRjsu2QRyvN
pcN8nyH2f4u63xfDzhdJOP4G81eWqSPf837Ge84Kcx/zsDkphlt4T4jqWby3
Xpf022MY5PFBvhOfte4xNT5PV+OZZ5/m87dyDrl+vs+2MSmn/E1UZ1+Xu9Zm
JOHjccyXnIsDSftMtr+3ul7IG/wdcNg1X+cY9kmqxWrX40LfG/lb7UQUvlkT
p3x/6M/fGVH735WEP/pyManWp7p3HIrKwV72K+NmRVJPH/C/OylnckaJY8z4
PJvE3Y8l+cx4E5PfRfWkBnKwsVFe0N21NojTiEXG4ZL9YZ2S976N+s31ZFKP
6Oy+9qHreUmSbrb1fyTZPE4u8b2C9wv+ziGv1SXd0Zjr0c435SLoJwXhmDnf
6edvfO9e4dydMJ98BP2bUblib3/IWH84yS5tXv0Nm/R/wj9Yuz8pv3swL43q
YfyN0td1RH9Xea8u7jOrLO+P+t1bjW+XBb0jt7b0HZh3Yd4tK80zrLGRxktR
QXep1taNcy3zPsy7Dvms2rii/pz3OJ9UY8TzfHPzUPtFPhjvXnbRWPo36k5E
zuQd6eukmBF3f5pb+J9KjXvlpiTflpu7eib1s67Yc3AS19/rOy25nL3mV3/L
fnsa7xbi3YWoPsF+Md0YJN+85vsWc7QP89YkDjxorl1ovu1lfqMv9cYFfRzo
XkMOJ5dMMjYWRfEDOXKN11+9N/qZ/PcfaqYDtQ==
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtsVlUQhc85e34C1SZAKzep0JJIvKX6IsZHpRrUCBQISkJNiGIiFFCp
QY0XarEgkhQEL/iAb2pABMslgFCgXERAQEP0TRPklkhF21JFUb+V5cNq19oz
+/x7Zs/Mrp41v35ekWVZMwhwhT+rWXgX/J2ybDt6CnwqOIxeg74dfod84M1g
IHwQeAN+DZ9ReZb1oseVsqwlbHuFb0+Ht4Gb0WPBSvjToAv/brCPvVvBDvgq
7D3YBoMP0CfBBPj7oAp+CHsN3+9A18Lb+P6e8G/qt99Bf8i3tiT7HgZjsE3C
53v2rwMrsNWjf4DPBL+gh+CzA9+n2D8MW3/0evT96DL0r2C5zq5c4f85+kH2
loG96N7w2RehD8K7QY5uQl/Ffjd6D7wOtKAXg/v41ml8buG3asEZ+Czso/G9
Ab0dPQF9NjkGxXIO3YD9GfAb/Bo4ru9j78a+jm+uRT+MfS22J9EPwZeBIdhX
oNdg/wkMyH2mcdjWh8/WH3RgGxnO1TT2fJV8B7oLfbMSvoS1B+BHwHj0reCF
3GfQWc5jb4EPUA1gu4iein0neij2KtZ2Fb6DKfDhrDVxtt2sjYAvDJ/1X+xN
ipX9rdhmgN3oV0EZ/A/sz4ZzoFw0gp7kO9JdvYVPF/ZLYa6aeQ/eh/3twneq
u70ObCh857p79YB6QTV5F7Z7wUfKHWt98Md0BvR+9E34/5VsUw+pl0axdgA+
RznBdgKMyP2bl1W7oDx3ji7Cz4dz34y+AO/FP+AJvBjuOfXebHwuY1sUtqkG
VAsbwrX4CGsb4Uvxmcz5JqHb0fuT+UTwBfpLxVA457vgY0Bn4R6ZHO5J9aZq
/Gd4TTjWfaCK2KrRewvPAM2CruTa1dpI7PeEz6qYFftn4bOpZlQ7G5N7q4a1
fspV8l32gQX4HkT/mXsGVKDPhXMzkT1nkmtatV3O2mJ4I6hH9+A/LzxzNHsq
sbfCN4X3agZtho8u+W7UE9XwN8O+FWAJ/JBmhHpTM0Wxh2fLTHSnYgnPim3o
Sva/hr6+cE2rtpUj5Uo5VW4Vk2JTTIqtTj3P/9/RL2EbVnLtd6ie0M+Bf3LX
gGphPvpK7ppX7euMOqtqbKzqI7n2fwQzdH+goXDPqHc0YzRr1PPq/UvJs286
a0fhm8A04rmN/+PxfT7ce5php1g7EJ5lmsHfoleFZ3kDe1rR7cmzuPb/2OrC
s0E9pd7STNRs1BvxHT5zw3elmDrRN5Ycu2aEZsWccG6Ug2/QFdi3Fp6JQ7G9
Hr575Vy514zRrFHNq/Y1szS79IbpLVOMilVvmN6yI+FZORv9dfiN01v3KL93
AT48PKv0JuhtUIyKVTWxTbM0fPc6k852LHk2qad2Ylsdrp1G9mzW+xbuPdXo
Fr2NJc/2dtYGw9uSffUG6C14HJ+Pc88YzRrdie5Gb+bL6E/DvaM35BP4neGz
a6ZothwLx6aZdVS9Gq5d1cRJvvNE+C3RzNbsVs2odvSbK7EPLPlsqolybP8B
nBENLg==
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.5], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNVD1PVFEQfbv3bovLopFNeBDlB2BpKYXF7oawrg1Ko0gl+wmNmihiRWOM
hdha+QNEo5UkKsHEoKFWqFg/ElYpXG09J+eQWMze2Xkzc2fOnLmn5lq1ZjZJ
kgeQAKng5zMMbegrMUl2MklSxvkQ9mXYLkMfhq0JuYv/8zifQlrQ05z00/Ap
wX8A+lXYn0Xpb2ArQ74g/xXYV3HmIK2M7p13np/wb0P/A1sesgLbIuRm1L19
2DYy8rkH+3PYLyDPC5zf8a0A+xbOYka5Gb+Mb09YM85aRvoS7IdRuT7BfwHS
zaqOHfvQl7b9rPq/H1RjFXFVfMtD5vB/KErfxPdJyChkBPID9lewT7DGKHzG
o/J1EmFIjI45D+sdds2D7p91su+Txpx9F937UJDfCcd0jNWjKNuHoJmx9jXX
NRbU15j/X0s0c86MtbyMwvA9/s9mNSfWxbnRj/2zN97Fmifc45koHInnWegp
9HPOP+7eyZFbUXM/n1OOFeOwZy4R/9Q48p6ZqG+XouqddM56EE9ZM+9hDGdA
rrEXcmw6I2zpM+q+iQ97KZvrTeTtw97AeWC8a1G18X76bzp3Oypn33nfBp11
2A89h7WouFHHpu6DWE26TtZf9n5VouqomFsXzdU0ipMV98k5c96ce8m7xB5f
R81pwxxMfRd3Ytp4sN9d7x3jSke942wE8ZF9VM3D30F82/b+DZt7x6NqLxEr
7wXt3JGv3p073o0Wzo9BsQvQf3mv/8K2l1VN7LeXVS7e13Esc2x5l8nHpneT
OLCfac+UcT3vJuMPXM+sOXv0BpBvrIOco74eVG/XsY+jfHtRvOe9I9DXIVPQ
V4N2ifPtBfGdduLJeRS9f/vuZdnzKvy3m3nPju8X93mRfM6J2zN+Exreq23j
fz3qHSRuxK/rmdG37jnTn3FN82TNu883oOD3YcmcJ+7sbdf4F9zHgHtpm0Pv
gu5mDTei4vPmc8VvJWd92/h881s16B6J15S/s+YF10bOcW5tvx11vzl187Dt
96vm97lkvhWivteNT+od4bv+D5pLwgc=
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtkj0vw1EUxm/9T1ek1SARQgwGkiYWE2KSiGhrEotgQ+tlweJlQmKwsJp8
ACUxaYJZ4gPo6CVp1UCsfk/Of3hyn+ece889b72LpUKxKYQwAAwMJkN4xZBK
hPARcWJcwj4On8S3iS7i6wDP2DLoArwHPoF/Df2LngEn2G7ReeI1o6/hQ9yp
okvEPMXfAIfwNOcYvmFQx9/O/Z/4T/3dik7zvgRy8BbwiH0OXYUvg374CKgk
PGYjjqnYGWzfnHX8nfB18AXfNv9LNe3As+AOvsD7Y+7nzHO9wpY3r0m1qaYb
1Q628F9im4X/RR5bOXyj9819L+AA/hTXoho20O/o6YT/+YleNa9NPSzCa+CI
v+bBvXmNqvUNnaW2FfNZJNG75jPQLDSzNvQoOhV5jjXOcuR3FVOx63FvdEd3
zzn3gs9As1AP1AvthHZjyrwWzVyz7zPvjWbQnfSclJtinPG2Yp67en4B7zLf
Le2AduEh8t1QD8r4/gHuzksf
                    "]]}]}}, {{}, 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0DsvQ2EYwPFH1Bdw2ZC4jBUSi4lEInFZOJYyGIwuLSYkig2JwaC+hxIb
iUtIBB9DJa12cFn9GsMv/+d5+56c5nQt5pJsQ0Qs8NQY0Z6K6GuKODZPm2fo
ocNZt3ZqRufoZcB+4u68uaCD9i99YcnZJlt82zf0VZd1mzF3i/ay+Zobzqjw
yY/fqvqrNX3TIa3qiGdrWrCf8myuMOy8rImz2fr/Zpc99plkijZG3W3VCZoZ
t7fog+fX9F7XNU+OO/uKZlnlyH6hl5xzay/qge7ou35of/07cWhPe0dJH7lK
/X/zP/EwNII=
                    "]]}, "0.09`"], Annotation[#, 0.09, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0stLVVEUx/EdXUsUoaevorw1iGoQTrrU1KJJIETQJFKaNKtBOcpJ7wIR
SwMrUGiUli+oBr3U0khrkPYPBKYVQZA3MyvBz6LBl+9vrb3O3oezT/b4qUMn
l6WU7qIrk1IzVhSk1Ls8pZVcoy5CoVzM+7EPl6z3cC8eYEjdx5d5p9lPPIwT
emfjGb1+daN8ACVYpbcGqzFtbT2X6a/lUl7HB7kcpXIFl/FXsxt4U6xxZazh
sPobnuIZnuCd2ef8I96H3/MQv8LL6GMP7ujn7LHIv9W38EEe5Tn8xCN1Nf/j
X/yX53kvOuW3cR7eYBxj6NCv59u82/475Docw1b1Q/0t3K6elEd4gWf5D+d5
gk9zA87Eu6mP8k2+xleRtUcV8nqbeVvcUdwHruAILuICzsc8Npr7br5K3iW3
yLVyEw+gTW7Fa/lx7MM3+DpaMID+2DPuHlOYUX/BZ7xQd/Mg34/z4xtwDh/l
7c48F/8RpvXuZf7/g0vqMlnN
                    "]]}, "0.05`"], Annotation[#, 0.05, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwVzLkyg2EUgOEvKyGElkqDUdOJdYY0GjO5AVU0XIB1lNYZtS2WWCuV9QLc
gj1hFNwDnhTPvOec/5u/bWJ6fCoSQiiwGAvhjTte6EiEMKsXPNFrf9Yr9uMh
XOuBzmm39vBobvduRk94d9tim2XKnLpXdIddVvjgzP1T9yiyyi/n7n+aJUnw
/xrtp49534+0xCE39mNd0E5vX/WWNbeIPUqcGANutSTMKR1ikCXvu9zKes+G
W8peR5p6RtzSNJgzNFLxNuM2Wt01R1P1n/Zm/fK9VYftLTrGt1vW/qMPFNwm
uTSvkzdv6j9y3DKZ
                    "]], 
                    LineBox[CompressedData["
1:eJwV0LkuhFEAhuEzZuY6RGKEWBKDBKNQSaZRKDSiMJZEQ8dFKBQkxJLY3cHg
Bkgk9mXseqXKOjynePN+33f+/P+ZqSpM9k0kQgjjmEmG0JsK4Q1TmMYB9nHs
rJKb0iHMyv3yHDfrGfldruGsPi8PyAvcqtfKH3Idt+mL8qC8wkd8zYd8ww2c
90w9D6GARrTbVp0Py+t8yrd8wiWu4B7PJPgMd7YlrrYV5QyP6KPxN6BT37CP
yVt8yVe4iPeId8K2vRTfFb+FB9xjx/7Ez3jEK16wa+/iHyTxjRRasOfsk79w
Ht+jL/Mv0si5z6YtJ/9xtx7i/4my3qGv8T9DIzxw
                    "]]}, "0.01`"], 
                    Annotation[#, 0.01, "Tooltip"]& ], {}, {}}}], {}}, {{}, {{{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]], 
                    
                    PointBox[{{4.905308194867242, 2.630836391598927}, {
                    0.20100883034436162`, 0.02382136569576569}, {
                    1.0719666600928879`, -1.250632626872198}, {
                    3.0527398070698992`, 
                    0.3872158300237583}, {-1.8438997564108928`, \
-1.502672689805559}, {-2.913246104009823, -1.3391199692975575`}, {
                    0.3149621009629985, 
                    1.9477027131642348`}, {-0.9556834229157016, \
-0.4484871006542206}, {3.2651237363484125`, 0.27047000138291255`}, {
                    2.9757868411226935`, 1.1755085189629118`}}]}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}}, {{}, {}}}}, {
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], DisplayFunction -> 
                   Identity, DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                   AxesLabel -> {None, None}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                   AxesLabel -> {None, None}, DisplayFunction :> Identity, 
                   Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "GridLinesInFront" -> True}, 
                   PlotRange -> {{-3, 3}, {-3, 3}}, PlotRangeClipping -> True,
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RealNVP\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[LearnedDistribution, 553226776, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           LearnedDistribution, 
            7991839151805143151368756219309755445629734460432824730608, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LearnedDistribution[\[Ellipsis]]"& )],
  False,
  BoxID -> 7991839151805143151368756219309755445629734460432824730608,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7716922525940895`*^9, 3.7716923047818794`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"eaeff4c7-ee0f-4dc6-b538-854ffb80fb14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"ld9", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.771692341768391*^9, 3.771692349823393*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"fb62dba9-d0dd-4505-b85a-ad3f0169223f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUs8rRFEU/lhNsrCyUlI2/gCSpGZpQZkhO5mXNxOLp974kZWUmuyVnbIw
LNiystRT0vgzRCTyY6E+99c5z3jv3XPPuff7zj3ne3cgWi1VOwHUC8aUKpvF
NK1slXtMMJfUl2tJvDSZrMW1OB2NLKwvDHbcgea13zXd46J957jAmMwsAQsO
FYbbFZBd0aAf3iEieDo3GNYuAclJ+l16Mtgy0z1QphaEltu8Vfi0OwnPlAU7
ng5NWEUAsdQlxTR9msy3JDmlXIROJe5N5VjmmOCZKdPKQ3OOyAfP+LTBFEWa
0yGhDhrmPN9VWZl8jSsQ6Y7JHGOTFFRTyJkfxI91i3yBJ8JX1w2MUUW15hXc
5pvWeea7woyKBs6yLb22KoqIVN/AcFB715omBBwS4SAQ1qHakQ07jxvnyqEW
21lyth0Txu5RroMh74g+cUN/3f/LAo7Y+Cb0yy+b74Ln8l/zS3kkmp/8LQ98
1GRA7v4CUMOoVw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUb1KA0EQHtIoEiG12Fhrp4VtCAgiiESuEyQhZ0jhBS6iaOFTaKUPIIIP
4AP4AAGrWIkINiEYUqjN587OzO6G25udn2/mm51Za/ebJxUiGiw60Wxd1Muy
dXlYc0ZWDHrdIu/sFmd5Ny+32wxb1R/8AU6jOt/+d8aQNQmw8IGMbzZXWOBd
AT5ZcJqtGfQnFdm1Y8BZwEG4b6y8AJSfIr83QnnWR161BNHdmXrk+Zblfjvz
FnT6S0qFQBAbmxj1sk7DYjRH3tAuDY17UJXSpi2Lz3FVe2BktkfrwimvUtF5
Agoj6B8J+gvSg5Jbx0jdoGgJbJ+9H6FhQb/EpnDNYmzjswphBhjpu0EHZPMX
e0KY6wOP+uQFdlxROimkWCvtrU0KIcFuVHzgVbJ/DCfRWVy/LddCwQEMw0Sd
aDjIEu7oOTC82cqnTj4kb7adfYbtJoXwD6O4kak=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUT0vRUEQPaG5OoVSCPJ6Oo1CVBIiuUIjivd4XiRyJfdKRBQq0YtE419o
6V9Bp/OR+AMaheIVx+7szOzde3d2dmbn65y53ml5NAagKYIou+erdd292J4M
l52qOR5U/cP16qw/6NfLvfhsWjfjR0YlnnGhVDU5RMo5JK4tJJ1hjas3XF7h
as4gCnCZTNBrEEN9uk8NgCyqDC/WUuXk12yiT6VGD+j988oyo9Ga5CiFdiwQ
Xl7DtFHASj8uEScw37sYF3iLFQQBIoNlNcjNNEYw31tWYMaGWgyOXcdCHhZh
//0C34i14OE0qDWNwpCmV9dPtBbzTkn6H6L6hVFGSGHXzdr6yksHSAmeyGdH
Hsx+IzMTaXSIcda59iksh1w61oaFZCp0ACerRf8NeeeU65xbBohYPw3RPe1k
QgxhDG6gjQz58RJTvcHrsQVqK6V29Q+F0aJi
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUrFKA0EQfViJCPoBouQX0mgjYjoJIiSkscthDCmMkAhqQAvRP7CziFhZ
+wsSEcQPsBOxsrBSLJ97u/PmLnt7dzu7M2/evNlKdtjYnwEwnA2fRvt4czBo
nzYXg9HqD3vdfmdvq3/U6XYGa1nutmQvQDCM8AvLuI7LZGvXt/IZvXJ7vYiE
9qNNvsHPyFGCLXs4lu/GMMOaYhMWjxZIo1GVsU2l/hJRPiTMMOYT8/D9K7Ia
dyvCIFPq9CCTb3I8U3EpUiVG4HfV/kQbhooT8SdbF7xjDTomxhF65ZO8CrHj
6LmcCqovVLwkqA15qpdE53s37O/Qi5gDpwoK89KUdF2N1QQ8UK8giaSoxCnX
Wv7pOkjDMgzUuKoJVHffeH7DVeKa3m8lNB2d6YbgekSt6DfZdOVF3K/bPXBu
ld8Sz3y1KO/EB38tzY9uwyidTOC6GX4+/wFqhphg
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUj1LA0EUHCKCZToFbaz8AYJaKqJgexIUu4ScQQIRLoIIdpaWNjaChdgI
NhaChaAgaCFoZyXYCApa2FqMu/s+7ryP3fd2583NvNvx1ma2XgPQHwpD1tye
K4rmznI9JI1ef6PTy9tLva28kxczrQgb05fxjhdiEueYpzg9CeKwEI061vBp
T6uZ4ORlSg6cEvxUmH5L6IiMHsbFW9lJQCWUmjAMwkr36JJDeujyE8lsI0bP
rmWfRxHwhAoXTLi58qumRhbCNF31/jhhdlkG0iq8G6eshHFY+kbchMWMdan5
UU8i5I7sqgVrKKIXXADz3nil5EPS8eXVMsB9uyFl4qT7tYor1aSN+me9ZMNK
2R/X5ecEOA/JvUsmVx0puDVrmv1D4ISVEyS7I6xwp50B0zG1i+P4qWueivQP
LOIFpR5aGy1se56r7ldn/j1jl+UZhZe9fdNtm0fwD89ekoI=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{3.771692350716831*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"de7d8618-7657-4f8c-a905-275f2cc3a64d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data space \[Rule] Latent space", "Subsection",
 CellChangeTimes->{{3.771691668769582*^9, 
  3.7716916855203013`*^9}},ExpressionUUID->"66d986cc-70f2-4a1e-8fe0-\
cfe912c1201b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkeredGen", "[", 
   RowBox[{"inpdim_", ",", " ", "checkeredType_", ",", " ", "mreplicat_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"resLayer", ",", " ", "replayer", ",", " ", "checkerf"}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"replayer", " ", "=", " ", 
      RowBox[{"ReplicateLayer", "[", "mreplicat", "]"}]}], ";", "\n", "\t", 
     RowBox[{"checkerf", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "@", "inpdim"}], " ", ">", " ", "1"}], ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"resLayer", " ", "=", " ", 
          RowBox[{"ReshapeLayer", "[", "inpdim", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Normal", "@", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i_", ",", " ", "j_"}], "}"}], "/;", " ", 
                RowBox[{
                 RowBox[{"Switch", "[", 
                  RowBox[{
                  "checkeredType", ",", " ", "\"\<black\>\"", ",", " ", 
                   RowBox[{"OddQ", "[", 
                    RowBox[{"i", " ", "+", " ", "j"}], "]"}], ",", " ", 
                   "\"\<white\>\"", ",", " ", 
                   RowBox[{"EvenQ", "[", 
                    RowBox[{"i", " ", "+", " ", "j"}], "]"}]}], "]"}], " ", "==",
                  " ", "True"}]}], " ", "->", " ", "1"}], "}"}], ",", " ", 
             "inpdim"}], "]"}]}], "}"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"resLayer", " ", "=", " ", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", "inpdim", "}"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Normal", "@", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"{", "i_", "}"}], "/;", " ", 
                RowBox[{
                 RowBox[{"Switch", "[", 
                  RowBox[{
                  "checkeredType", ",", " ", "\"\<black\>\"", ",", " ", 
                   RowBox[{"OddQ", "[", "i", "]"}], ",", " ", "\"\<white\>\"",
                    ",", " ", 
                   RowBox[{"EvenQ", "[", "i", "]"}]}], "]"}], " ", "==", " ", 
                 "True"}]}], " ", "->", " ", "1"}], "}"}], ",", " ", 
             "inpdim"}], "]"}]}], "}"}]}]}], "\n", "\t\t", "]"}]}], ";", "\n",
      "\t", 
     RowBox[{"checkerf", " ", "=", " ", 
      RowBox[{"resLayer", "@", "checkerf"}]}], ";", "\n", "\t", 
     RowBox[{"Normal", "[", 
      RowBox[{"replayer", "[", "checkerf", "]"}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.771610578591999*^9, 3.771610583587669*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cd29f688-6463-4598-aeb0-9f4d368c00c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pp", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "\"\<Preprocessor\>\""}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "\"\<Processor\>\""}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mpr", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", " ", "\"\<Model\>\"", ",", " ", "\"\<Processor\>\""}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mppr", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{
    "1", ",", " ", "\"\<Model\>\"", ",", " ", "\"\<PostProcessor\>\""}], 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7716106552618513`*^9, 3.771610658156653*^9}, {
  3.771610923469872*^9, 3.7716109358538027`*^9}, {3.771614443353384*^9, 
  3.771614471989072*^9}, {3.771638700576623*^9, 3.771638710374459*^9}, {
  3.7716917698505726`*^9, 3.771691794589182*^9}, {3.77169183604879*^9, 
  3.7716918759831085`*^9}, {3.7716927791126328`*^9, 3.771692859823642*^9}, {
  3.771692920626481*^9, 3.7716929252717323`*^9}, {3.7716929729423056`*^9, 
  3.7716929809154177`*^9}, {3.771693379148393*^9, 3.7716934025157433`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5be55884-988a-4412-9f3b-a33ac82298a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainednet", "=", 
  RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<ProbabilityNet\>\""}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.7716918860338917`*^9, 3.7716919112862396`*^9}, {
  3.7716927735665584`*^9, 3.7716927741378813`*^9}, {3.771693415837406*^9, 
  3.7716934180673504`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3cd50ab6-a416-49e0-af79-bc31221f8c70"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["14", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-13., 7.960204194457795*^-16}, {-12., 
                    5.000000000000001}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQFaB7pFGYX/rT1jc8W47OOv55oHcrTPdPKxrrDX
DWKbl3dW84DEq2t/NnjstOeI3sAavUHzwHq7l5PtXh62T/Ir0TgwQfPA0fQ3
j76eP23voAPSoHlAo2KXqb3OJfv5XzyBSPOASs5BsZyD1+wbl0d/PqykeeA2
f/eUxuW37Z+5tDPx/NQ4sHRj93X7/Af2Z8BA44CVMQg8tl/Udvng+gUaB+au
Z7ppJPnM/uZOp8C4co0Dh08eOHJN6qV9bppU9Y0AjQMrG3O/yVm8sY/ribKX
09U4EHidI4+78L39Bm3mefo8GgfiUk+Knkv6aB/nIjKd5536gU9rW6e/kPps
n3OtV2vrJfUDma6WNlcffLG//jA/QnOX+oED2k+Yp2z5Zr8wbZdC5hL1Az8S
2t6pTPth/+RZu1d6gvqBtign5sBv/+zZvi0O3qGofmBneYBITDaTA/MUPpuY
F2oH7vMH6q+VZnW4c+A4c/AWtQMbvi66JN3D7jCp5vyqOa1qBww03f4t38Pp
oHxc1dAyRu1AwiqrTYFruR0mLDg1TcNC7YBNZcM7iTheh1sc+25nSaodODlV
fPPfc3wOkPhSO8AIpgUcAOALz3c=
                    "]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFaB7pFGYX/rT1jc8W47OOv55oHDqjud62ffMZG
N4htXt5ZzQN/p16pNSs7Y8MRvYE1eoPmAfs0x93KYWdskvxKNA5M0DzQOo31
n5vxGRsHHZAGzQOX1BTdFvCesZn/xROINA+oiE+ZrP/0tE3j8ujPh5U0D9Sk
xz37svO0zTOXdiaenxoHbok32H3oPm1zBgw0Dthp/JytGH3a5uoWr072BRoH
sneuXMU8O8d+eZF8/l6glQFbQPweexs277p3XhoHnpX85zcSX2A/Lf/stllK
Gge4N4Pk19hvW7dM4tBv9QNHJofclYrcZj/r8LXFKdfUD0wFqz9g77IuNqJp
k/qBe29Wnlv37Kj9ljxrM+kJ6gd2bwLpP2N/FuwetQNWxiDw2L5TTei2+QK1
A1xqgmYSYs/s8yxtt9WVqh0oX/zLIofvpX0tq1/cQh+1Aw2r31vry7yx39zl
cnm+qtoBZbsPdon27+1FTiqIVjGoHdik+0+B0eaj/ZwDj5QN7qoemM/YpcT5
+JO9X2HX/4O7VQ/cniW95MSUL/aat8VX6M9RPZDyc9NS+8Bv9jr/umQr61QP
2MgGqOdJ/LA3e6A/K9dJ9UDPH8ZYtZu/7V9OWKBxlEv1QPHHb6Vrg//bOwrc
PVF/XeXAj1rxnYwujA4OcU+r5q5QOfCf96qGyG4mh2dVO+3k6lQOXNQw4eLj
Z3EwSosUYYpQOZB3ziT2vT2rg5rC0d8eZioHrvy7prjDl83hwIo/Xz5JqBxg
2yUVkWHB7gBJPyoHGME0hwMANC0OLw==
                    "]], 
                    LineBox[CompressedData["
1:eJxFkn0s1HEYwI9sqVbTdMJEfnfuxR/kCK1zP1m20x3RuUYpKS83aWZJFilD
ee+uMzrV5CXvpSzVcu37kPeXtGWJKMOO03G5bM5x6m7Mffb57nk+/z1/fO0v
x5+JMiYQCE66p5+bOEIe0ch848UAU9XTF+Y1SwfKXo+jle21qKI6hJPcR4eZ
l428sU8fkJmkrv9VHR0uSiXEQXEn8nz2cUKWSYfdqhIhu+szspUWpVuH0YGV
KhhsSh1GbQqndxxnOnyLwaxzLMaQPSM/7dYGDeYmmAdDLCcRK79xpLqXBkSm
R9bDqGlkufag/YuQBokBhJG/Khniijp6Z+JpECjmE/HROdQaVFFz258GPZl8
bvC9eSRg0sMe02kwjhFSXTW/0amg0FkvExpkX+NXjbstoFghwy9qggpDkfzO
0+6LqGP1Tfr+Fio0mxJ+5W8sotCCSaFPHhWcQ/lL4gIlonFaktThVGCf5a9H
TivR4IAeCqz+06NEy35lOimg3mqb7gSdFFjbat+Tegwd12ahkwKarS5iycUs
ucN2S1v1GHrGs3Das9DQe95e0mnozXvI261t5+SalJPBqp7hUDaqRCcaSNdf
J5MhpbavKDVaiUqygu9/5ZHh0Fp3wKPqRbQR9LMrlkEGbbkjTyVZQMlmbS43
D5DB7qmqPNdbgUza1rvVqyS4q7A7HlE6jyqviHKUUySwFzbbJtXMoWB1WtL5
IRKYZNdze2NkyOJOZyETkYAyvLPz3I9pFKEtFkhukIC7i5Wwz7UHsTJqmlUu
JNCILhhrcvrwerOVOPYyBv6TjaKrjCm86nlWSakUA5ulP8U7KhX4ER8eQ56L
QWK/C5ukUeFcWbiXWzgG3wXGuLX5Cq4WNbxPOYaBNHC+KfqJBnfzda9CVhgc
zpCXmhZr8c3/jIHR5uL9Hx7xncg=
                    "]], 
                    
                    LineBox[{{-13., 3.000000000000001}, {-12., 
                    5.000000000000001}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQFaByBsDodPJ07F2D7XPGBx50oPVzKHw6JlEd4V
pzQPVKXOvSR3jcNBYObK0xtWah44PTvyok0kp4PFgr13n7VoHlCt5+xMecPp
ILdnSqNUjOaBbv61P6f2czkcfKO33Vtf88A/Hxfli07cDopGPXVV/zQO1Jmf
ZxVj43Gw61lzfdlJjQOc530XptzkcZD43X/owgSNAwuED3zds4fXwWfikZNP
8jUO3EgJPepvxuewO3DR8lpfjQNmiaLCUxfyOWTYaMbM1tQ4sIuD4X7PPz4H
r8DI57YsGgfSokU1zX35HbImGHmm3lU/YBYZ+nFyL7/DkZ9bGgW3qh8wYDpg
vng/v0Nk74MJTt3qBwLCQv+kPOZ30PDeWvYjXv3AtFBR+5s/+B2MwUD9ACM4
fAQcJHdX/P3MhuDXRyzhsbmrBucncm9L4N6G4B+4vPZn4kQEf/7G7uv2+Qj+
ryX+QITgXwEpN0Lwtc908rFKIPiQ+ELwATG9oyU=
                    "]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFaByBsDocrxmUffz3XhPN1g9jm5Z3VPMAM5XNE
b2CN3qB5gAXKT/Ir0TgwAaHeQQekAcGf/8UTiBD8xuXRnw8rIfjPXNqZeH5q
wM0/AwYacPnPIO3zEXyZ44VAhFDvAgYacPdkHxTLOSiGUD/F7uVku5fqcP6e
3SCA4D+x6Hts0Yfgc29LACJ1uPlnwe5Rg8uDvTNfDc09anD1rmD3qMHdkwN2
jxqae1TR3KOK5h5VNPeows03BgOEvOTuir+f2VQPMEL5dRFLeGzuqsDlE8EG
IPgHLq/9mThRBa5+3sbu6/b5CP6vJf5AhOBfASk3QvC1z3TysUogzIOkH4Q8
ADX4mEw=
                    "]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQFaByBsDodPJ07F2D7XPHBKWbv46xx2h0XLIrwr
Tmke6JyVpPtQk91BYObK0xtWah6wTlmmd3gZm4PFgr13n7VoHnjQ8K1stjCb
g9yeKY1SMZoHKj4EsWUVsDocfKO33Vtf8wDr5t139PayOCga9dRV/dM40HbC
4NfLn8wOdj1rri87qXHgt8GmuNlqzA4Sv/sPXZigcSD5jT2XszOTg8/EIyef
5Gsc0Jm9ymrDSUaH3YGLltf6ahw4P+/Vm6w4RocMG82Y2ZoaB7y+/1coZmR0
8AqMfG7LonFg/pJX105sYnDImmDkmXpX/cCZZav4cooYHI783NIouFX9wJW/
9idiHBgcInsfTHDqVj+wZeUq5tkyDA4a3lvLfsSrH8hf9eqAGjuDw9kzIKAG
DR8Ghy+e84EIwZc5XghECL6rCwgg+DkHxYAIwZ9i93Ky3UtVOH/PbhBA8J9Y
9D226EPwubclABGCD3GPygFGFPcg+LJg9yD4EPcg+BD3IPgQ9yjD+RD3IPgQ
9yD4PGD3IPjGYIDgS+6u+PuZDcGvj1jCY3NXCc5PBHsIwT9wee3PxIkI/ryN
3dft8xH8X0v8gQjBvwJSboTga5/p5GOVQPAhFIIPAO7v9j0=
                    "]], 
                    
                    LineBox[{{-13., 5.000000000000001}, {-12., 
                    5.000000000000001}}], 
                    
                    LineBox[{{-12., 5.000000000000001}, {-11., 
                    4.000000000000001}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQEaBxjBtIjDFeOyj7+eqx9ggPJ1g9jm5Z1VP8AE
5bNFb2CN3qAOV5/oV6JxYAKC76AD0oDgL/jiOf+LJ0J/0/Loz4eVEPLPXdqZ
eH6qwflnz4AAgg/WPl8N7h6Z44VApAY3z9UFBBDqcw6KARGCP8Xu5WS7l6pw
/p7dIKAK1//Eou+xRR9CnntbAhCporlHBc09KnD3yILdo4LmHhU096iguUcZ
zT3KaO5ByPOA3YPgg51zRgnOX9x2+eD6BUoHjs6xUKz6LexwY6dTYFy50gGJ
4kctL94KO+SmSVXfCFA68Lnpr5b3dWGH+J4oezldpQNRZzqFF20XdlivzTxP
n0fpgI9/u93bPmGHOBeR6TzvFA+c4v62WidW2CH7Wq/W1kuKBy4xXotOUBJ2
uPYwP0Jzl+KBVEN1v457Qg4L0nYpZC5RPNA862XTkolCDk+ftXulJygemDpb
Xmtuo6AD27fFwTsUFQ9I3uj3e9gm4MAyhc8m5oXCAZkFJQ8eOvE73DlwnDl4
i8KBx2x2cjMW8TpMqjm/ak6rwoGeJ9VhT3V4HJSOqxpaxigckLDU6zz5kMth
woJT0zQsFA60sIRucznI6XCLY9/tLEmFA5fdPtwNO83hAIkXBWj4cDgAAKUC
87U=
                    "]], 
                    
                    LineBox[{{-11., 4.000000000000001}, {-10., 
                    3.0000000000000004`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFqBxjBtIDDFeOyj7+eq8L5OkFs8/LOIvjs0RtY
ozcg+El+JRoHJiD49mANCP6CL57zv3gi+E3Loz8fVkLwn7u0M/H8VIHzz54B
AQQfrH0+gi97vFDmeCGC7+oCAgh+zkExIELwp9i9nGz3UhnO37MbBBD8JxZ9
jy36EHyebQnc2xIQfLBzzijB+de2eHWyL1A6MDVU1P7mD36HZUXy+XtLlA4E
hIX+SXnM72DD5l33zkvpgAHTAfPF+/kdpuWf3TZLSemAeWTox8m9/A5b1y2T
OPRb8UBqtKimuS+/w6zD1xanXFM8sIuD4X7PPz4Hl3WxEU2bFA+YJYoKT13I
57Alz9pMeoLigZspoUf9zfgcXrAU2OrnKx5YKHzg6549vA6HioM1Is0UD3Cc
912YcpPH4f7Z4sZWRsUDtebnWcXYeBwchC96bLmgcOCfj4vyRSduh0fO2XVP
Fysc6OJf+3NqP5fDiXgnJclqhQPK9ZydKW84HT6lhZn4hykcODk78qJNJKdD
XOTyLe2mCgeqUudekrvG4cBnbrr4kITCAYs7V3q4kjkcIOlHARo+HA4AGn/G
Lg==
                    "]], 
                    
                    LineBox[{{-10., 3.0000000000000004`}, {-9., 
                    2.0000000000000004`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEqBxjBNIfDVeOyj7+eK8P5OkFs8/LOKh9ggvLZ
ojewRm9AyCf6lWgcmIDg24M1IPjzv3gCEYLfuDz682ElBP+ZSzsTz08luPln
wEAJLv8ZpH0+gi9zvBCIEOpdXUAAIZ9zUAyIEPwpdi8n271UhPP37AYBBP+J
Rd9jiz4En2dbAve2BEW4+cZggJCX3F3x9zMbgl8XsYTH5q4CXH0iN8gABbj8
wctrfyZORPDnbey+bp+P4P9a4g9ECP4VkHIjBF/7TCcfqwTCfEh8IeQBi5xw
Mg==
                    "]], 
                    
                    LineBox[{{-9., 2.0000000000000004`}, {-8., 
                    1.0000000000000004`}}], 
                    
                    LineBox[{{-9., 2.0000000000000004`}, {-8., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-9., 2.0000000000000004`}, {-8., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-8., 2.0000000000000004`}, {-7., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-7., 2.0000000000000004`}, {-6., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 2.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQEKBxjBNIfDivQ3j76el4fzI5bw2NydJX+ACcrn
2ZbAvS0BIX9ozouABkUEvw6sQQ7Ot3852e7lZASf2X/7s3ZXBP9sJx+rxCdZ
uPmzZoKALFz+BUi7HYJv2ffYou+xDFx9VwcIyMDlbzTpAhGCr1F7Sb32kjSc
X1EOAgj+iUKZ44UyCL5EzkGxnINSaO6RhMuDvWOH4FuA3SMBV98Jdo8EXP4m
2D0SaO4RR3MPgn8c7B4EXxzsHjG4+WlgIAaXNyr7+Os5L4L/d4OHZMUuUbh6
sO4cUbh84/Loz4eVEHzbZPH19fdE4PwvnvOBCMEHK09F8MNmCMtyGYjAzYek
H4Q8AJSllRg=
                    "]], 
                    
                    LineBox[{{-5., 3.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 2.}}], 
                    LineBox[{{-3., 2.}, {-1.9999999999999998`, 2.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-0.9999999999999999, 2.}, {
                    1.2246467991473532`*^-16, 2.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.632426463519458`, 
                    1.8378676824027063`}, {-0.25, 0}, 
                    Offset[8], {1., 5.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.235871269246914`, 
                    0.786213352753084}, {-0.25, 0}, 
                    Offset[8], {0.1559393025382665, 0.19127469773826666`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.920182958499248`, 
                    0.12919975755013535`}, {-0.25, 0}, 
                    Offset[8], {0.14306450739988819`, 0.08380524814062784}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.355555555555554`, -0.9999999999999991}, \
{-0.25, 0}, 
                    Offset[8], {0.08888888888889035, 
                    1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.417705098312485`, 
                    4.164589803375033}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.812820711494876`, 
                    3.9773027452952476`}, {-0.25, 0}, 
                    Offset[8], {0.08165695756016156, 0.017459426695964453`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.355555555555554`, 
                    3.000000000000001}, {-0.25, 0}, 
                    Offset[8], {0.08888888888889035, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.266666666666666`, 
                    2.000000000000001}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.399999999999999`, 
                    5.000000000000001}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-11.4, 
                    4.4}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-10.355555555555554`, 5.}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888889035, -8.881784197001252*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-10.4, 
                    3.400000000000001}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000004`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.500723193132872, 
                    3.9982540573304046`}, {-0.25, 0}, 
                    Offset[8], {
                    0.37633139151203565`, -0.0034918853391929794`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.399999999999999, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-8.777777777777779, 
                    3.000000000000001}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    4.440892098500626*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    1.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    2.6000000000000005`}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.355555555555556, 
                    3.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888946, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1., -4.440892098500626*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 2.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-13., 7.960204194457795*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_b\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_b", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., 5.000000000000001}], 
                    Offset[{12, 12}, {-12., 5.000000000000001}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-12., 5.000000000000001}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-11., 4.000000000000001}], 
                    Offset[{12, 12}, {-11., 4.000000000000001}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-11., 4.000000000000001}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-10., 3.0000000000000004`}], 
                    Offset[{12, 12}, {-10., 3.0000000000000004`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-10., 3.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-9., 2.0000000000000004`}], 
                    Offset[{12, 12}, {-9., 2.0000000000000004`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-9., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-13., 3.000000000000001}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_w\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_w", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-13., 5.000000000000001}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 3.0000000000000004`}], 
                    Offset[{10, 10}, {-8., 3.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-8., 3.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Total_loss_jac\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"784", ",", "784", ",", "784", ",", "784"}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Total_loss_jac", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Plus, "Inputs" -> {784, 784, 784, 784}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 1.0000000000000004`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Z_out\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Z_out", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-8., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1r0KwjAQAOCgDo6ujm7Ourg6qZCpxQdoMS0uFdqi+Ea+ZY2gECSNuZ/U
HFwhSXP3tYWSRX5JipEQopnqS5LdtnWd3dOZHhyr5lxW6nSoWlWqepOP9eRc
51LnRGehHp3gC8lV6OX6JFdNEcjHaGTxmabYfbYxIcg+myV2n2seGCSfyxC7
z2fdI9A+n96x+yD39QTKB+lJ/GeDfZh+//Bh9iCMIB/lWw3pA/ag7Pf2cfxv
Ee/fy8d5bgLW+ukLce4E1HT6Ap2JIbV7fSFtgB5W3xA2Wy9LPwm4dzCj0V86
1rAhsbnfXTsz16u0+56j1Cc8kzXeHtZ4AmoXS+8=
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-8., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"square\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "784"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["square", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 784]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-7., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-7., 2.0000000000000004`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-7., 2.0000000000000004`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"summation_z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "784"}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["summation_z", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer["Input" -> 784]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-6., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1jELgkAYxvGjGhpbG9uaa2ltqsBJ6QMondJioFL0jfqWdSe8ISTm6XN3
7x/eIIfjJ+ldq+QWphMhRDlXH2H82BdF/IwW6ss5L69ZLi+nvJKZLHbJVF1c
qlmrmalJ5estcAXAteq0jwawnFUfwAn3USCjNR810mndRw10OvNRhk7nPp2B
0YuP6uH06qM6nCx8VIuTlU/X9B0Pd9Q51CxAjLZtN1Ft1ANaF10APCtt9L1n
ps6f34SZs/WZYWTsfKYZOHu9cx6dRnuCB6fxngX+//6vwXuqI+PoPd+yEXYm
cfdRHyA4+ew=
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-6., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"minus_half\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["minus_half", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(-0.5) #& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-5., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1rEKwjAQgOGgDo6ujt18BFcnFTq1+AAtpsUlQiqKb+RbaiKcFCxt2lzu
8kOEOoSPNl5NymtWzYQQzdJ8ZMVjp3XxzFfm4qSaS63k+ahuspZ6W87Nl2uz
NmYtBHopxiaVfL1hYezXysvXdgWw2Sb7CGy20T4iF+TsI3ZBTj4mm63Xx+iC
On0RuKA/X0Q2288XmQtKI3V979dhf4/OZQMT+Lg9UMezRPl/4FvPGWP3DZx/
Np/j75LcN3JekPomzDISn8eMDepDmP1BfIjvJHQf8vsymA9pO/b5PBC67wPQ
I/YD
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-5., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"gaussian_coef\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "720.4478100324634`"}], "+", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["gaussian_coef", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[-720.4478100324634 + #& , {4, 3}], "Input" -> 
                    "Real"]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-4., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"plus\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"Real\"", ",", "\"Real\""}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["plus", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Plus, "Inputs" -> {"Real", "Real"}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.0000000000000004`}], 
                    Offset[{10, 10}, {-5., 3.0000000000000004`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-5., 3.0000000000000004`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"summation_jacobian\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "784"}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["summation_jacobian", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer["Input" -> 784]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 2.}], 
                    Offset[{10, 10}, {-3., 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1rEKwjAQgOGgDo6ujt18BFcnFTq1+AAtpsUlQiqKb+RbaiKcFCxt2lzu
8kOEOoSPNl5NymtWzYQQzdJ8ZMVjp3XxzFfm4qSaS63k+ahuspZ6W87Nl2uz
NmYtBHopxiaVfL1hYezXysvXdgWw2Sb7CGy20T4iF+TsI3ZBTj4mm63Xx+iC
On0RuKA/X0Q2288XmQtKI3V979dhf4/OZQMT+Lg9UMezRPl/4FvPGWP3DZx/
Np/j75LcN3JekPomzDISn8eMDepDmP1BfIjvJHQf8vsymA9pO/b5PBC67wPQ
I/YD
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-3., 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"density_coef\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "5224.89667195472`"}], "+", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["density_coef", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[-5224.89667195472 + #& , {4, 3}], "Input" -> 
                    "Real"]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 2.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1TELgkAYxvGjGhpbG9uaa2ltquAmpQ+gdErLBRpF36hvWXfBKwVipz7e
vX94BR3kJ+rdIr1E2UgIUU7NIUru26JIHvHMnBx1ec61Oh30VeWq2KRjc3Fu
ZmlmYiZTz5cdgUmC7lNFPpAT7rMBjYP4KIBzUB/Vw+nFZ+to9OajWjq9+yhH
ZzCfzcEY1Ec1OFn4qBonKx9Fvv3uhtwrKYkYa1uv4o/RDui+6CR4P0dXPTNT
5887YWis/WYYORu/aQbOv/9cYKPzmhDI2XrN8uzsvKZ6cvZa8z0YIXsSd993
b4jF/F4=
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-1.9999999999999998`, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"minus_prob\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["minus_prob", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#]& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 2.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiDWAmIWB6sCH+kZSFYy6jzIw6j7KwKj7KAOj7qMMjDj3paWu+E8t7OFe
RjWzkM2kFjY2CqaqeSD3UTk6Rlz6ozIYdR9lYNR9lIFR91EGRt1HGRhx7gMA
C47FmA==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-0.9999999999999999, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"perpixel\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"0.0012755102040816326`", " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["perpixel", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[0.0012755102040816326` #& , {4, 3}], "Input" -> 
                    "Real"]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.2246467991473532`*^-16, 2.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Total_Loss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Total_Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"checker_b\"", TraditionalForm], 
                    Offset[{0, -7}, {-13., 7.960204194457795*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_1\"", TraditionalForm], 
                    Offset[{0, -15}, {-12., 5.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_2\"", TraditionalForm], 
                    Offset[{0, -15}, {-11., 4.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_3\"", TraditionalForm], 
                    Offset[{0, -15}, {-10., 3.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_4\"", TraditionalForm], 
                    Offset[{0, -15}, {-9., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"checker_w\"", TraditionalForm], 
                    Offset[{0, -7}, {-13., 3.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-13., 5.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Total_los..\"", "\"Total_loss_jac\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Total_loss_jac", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-8., 3.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Z_out\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 1.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"square\"", TraditionalForm], 
                    Offset[{0, -13}, {-8., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"summation..\"", "\"summation_z\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "summation_z", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-7., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"minus_half\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"gaussian_..\"", "\"gaussian_coef\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "gaussian_coef", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-5., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"plus\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"summation..\"", "\"summation_jacobian\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "summation_jacobian", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-5., 3.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"density_c..\"", "\"density_coef\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "density_coef", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-3., 2.}], {0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"minus_prob\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"perpixel\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Total_Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {1.2246467991473532`*^-16, 2.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.393193716300061, 
                    1.0786387432600122`}, {-12.632426463519458`, 
                    1.8378676824027063`}], {0., -0.17}, Automatic, {
                    0.19611613513818404`, 0.9805806756909202}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.262855384506947, 
                    3.47535091332949}, {-12.235871269246914`, 
                    0.786213352753084}], {0., -0.17}, Automatic, {
                    0.6318819842417255, 0.7750646153648996}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.7799720581843137`, 
                    4.7457091520356025`}, {-11.920182958499248`, 
                    0.12919975755013535`}], {0., -0.17}, Automatic, {
                    0.8628562094610186, 0.5054494651244207}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-6.869504964868043*^-15, 
                    5.5}, {-11.355555555555554`, -0.9999999999999991}], {
                    0., -0.17}, Automatic, {1., 1.2490009027032806`*^-15}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-12.417705098312485`, 
                    4.164589803375033}], {0., -0.17}, Automatic, {
                    0.4472135954999579, 0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.1499858073915914`, 
                    5.378432173300869}, {-11.812820711494876`, 
                    3.9773027452952476`}], {0., -0.17}, Automatic, {
                    0.9778967587819761, 0.20908832861665297`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-11.355555555555554`, 
                    3.000000000000001}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-11.266666666666666`, 
                    2.000000000000001}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-12.399999999999999`, 
                    5.000000000000001}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-11.4, 
                    4.4}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{5.4956039718944346`*^-14, 
                    5.5}, {-10.355555555555554`, 5.}], {0., -0.17}, 
                    Automatic, {1., -9.992007221626245*^-15}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{3.889087296526012, 3.8890872965260104`}, {-10.4, 
                    3.400000000000001}], {0., -0.17}, Automatic, {
                    0.7071067811865474, -0.7071067811865477}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0.051030934720856874`, 
                    5.4997632534229615`}, {-9.500723193132872, 
                    3.9982540573304046`}], {0., -0.17}, Automatic, {
                    0.9999569551678111, -0.009278351767428522}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-9.399999999999999, 
                    2.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.3739009929736363`*^-14, 
                    5.5}, {-8.777777777777779, 3.000000000000001}], {
                    0., -0.17}, Automatic, {1., 2.4980018054066113`*^-15}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-8.4, 
                    1.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-8.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-8.4, 
                    2.6000000000000005`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-7.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-6.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-6.355555555555556, 
                    3.0000000000000004`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-4.4, 
                    2.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{2.4424906541753444`*^-15, 5.5}, {-3.4, 2.}], {
                    0., -0.17}, Automatic, {1., -4.440892098500626*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 2.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    Part[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQFaB7pFGYX/rT1jA+FrHGAE0yIOEL4alC8A5atA
+RxQvhKUz+AAM48JRV4LzTwFNP0KUPUf7FHlYebJoPEl0PgiaHwBHPIw+zgO
QD3u8B8C9qPy38P57DEixmrLFtrA+AB7vCqY
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 24, 24, 8, 8, 20, 8, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {789., 376.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{35.49999999999998, 38.49999999999999}, {
                    28., 18.}}, ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_1"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_2"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_3"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_4"], 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Total_loss_jac"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"], 
                    NeuralNetworks`NetPath["Nodes", "square"], 
                    NeuralNetworks`NetPath["Nodes", "summation_z"], 
                    NeuralNetworks`NetPath["Nodes", "minus_half"], 
                    NeuralNetworks`NetPath["Nodes", "gaussian_coef"], 
                    NeuralNetworks`NetPath["Nodes", "plus"], 
                    NeuralNetworks`NetPath["Nodes", "summation_jacobian"], 
                    NeuralNetworks`NetPath["Nodes", "density_coef"], 
                    NeuralNetworks`NetPath["Nodes", "minus_prob"], 
                    NeuralNetworks`NetPath["Nodes", "perpixel"], 
                    NeuralNetworks`NetPath["Outputs", "Total_Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "Total_Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "Z_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "coupling_1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", 
                    "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], 
                    "coupling_2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1568}]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {1568}, "$OutputSize" -> 1568, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], 
                    "coupling_3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], 
                    "coupling_4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], "square" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "summation_z" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "minus_half" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "gaussian_coef" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Plus, -720.4478100324634, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "Total_loss_jac" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "summation_jacobian" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "plus" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "density_coef" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Plus, -5224.89667195472, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "minus_prob" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "perpixel" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, 0.0012755102040816326`, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"checker_b\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Total_Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"checker_w\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Z_out\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7716919173074474`*^9, {3.7716934111590605`*^9, 3.771693418955144*^9}, 
   3.7717119193863926`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9d4c40a0-afe0-476a-888a-ddb3c27b20e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampler", "=", 
  RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<Sampler\>\""}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.771693592973387*^9, 3.77169361076205*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"253c52fd-ca45-4cab-b770-2821b2f9bca0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"X_out\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["16", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    LineBox[CompressedData["
1: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
J43qHQ==
                    "]], 
                    LineBox[CompressedData["
1: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
Wbc=
                    "]], 
                    LineBox[CompressedData["
1:eJwtlHlczHkcxieVVtdW0kE0V1PN+WPXEeWrZmJDF7FDtbrQlqWDbuVoqyU5
oiw1HVqR3bU0rGrq+6l0GjukLdLUMipNBkkTGtq1PK/X83r+fb/efzyUkF3r
tk4jkUj+//Xjfsp8aClxz8uCDuco55LI3jECcitSnj35Kx9xKs/O/mqQABux
+pWF50W0MOyFoU43AVk55jVxVmJ0yLvAzbuZANNW5VSShwQx95TWmIsJ2KA9
RZMWNCDLv7US/IoJcLQr99i+uwX57KqONz5MQEab6mXOJSnq4kur3XYTsDBh
OJtCuYvK1y12HfUnYGQt67GrTScKWHm/MngVAfoLhN9LE7vQ3DR3w2MLCIhP
IeKtj91HSk3q6pS5BBBssYHjlh4EOH0n4wsC5rsqGJODD5Hg6G8vbQZ4kFZT
23rUXo7IjkpZeBUPrM/yRwfJfcjEEycRR3jwoX93MeleH7KYZI/GBvGAe8i3
q9elH92WfgwXEnKyTyQH96P2tLk6cUVcmBH61psu6EexoojN8TFcSAlIz5r3
rA+1Oohld9y5cDeJ4xyxqQ81zXsXesCaC9p1ryP0suUoep+zZbaKA5aMHnP1
wV7U7Jk8rKrngEGl3GmR60PUknG9pzyPA/1hUw9aGh+gWNZzZVUkB04uQ+MV
Bvc/87AhLnXwHDvqDmr4/azO2iI21GWmBhVGS9G3m0MDZNFs0BmfP4dPakVZ
MlrnRgEbJIKh+NXZjcjPWB752IIN7Spn1TZWHQKLo7SYYRaQLC9zNUuuodan
TpO6EhYs118dfvHABfRDuvxVYQ4LNDD+7CDtELo8nKi/NJgFQ+jovXp1Hv7E
wwQLhWJP1fl67J1Pp4YVMYGVc9H4sUszztRkdPBimCBqEC9+N9qO4zRjcp47
E3bs0x3VapRhy/xIQZgVE24rPAtThB14p1Sle3vEEcyky/RfyjtxakESNQI7
gk7iWvQwuhuv0DM7syzXEcqVac7LzXvwDUPxDtftjjBB7tKyburFdHl4nt8t
B9ge3CYQrVNgtnFGJVnkAIaclomS+idYuOdMhiLKAbz8+0xTeIO4zOz8l4V8
B2A+M85lFwxh08ELXp4WDlDUL0yu1BvGpS9K+a+f2sMfCyXtJjFK7Mc7+fx4
jT0EPF+yX/BwBDv8kuLNyLGH4hkykRdfhW18A7ZdCbKHfZmpNF7F889+GKCZ
UERU/TyKrQqVqdFFDLhdwQ/c6/UK/zqzyH1rDAMS5xvNKtcbw5mEknzBnQGk
7BUnFjWN4Qtjt0yWWjMguFreycp8jc0CBbPmqOygUPKkN8NzHN/csZ67pt4O
xCc2VKyyUmMJ9a1/+yk7KHMmXHYOqbEmdaHodIQdRFXvPvWuegJPmzo+M7iB
DgmxdRvAbBJLGwdsjfPpYPeiTDtZNYm3S3I9EyPpYHK82PrcTQ2WPT1bUIro
4LzpSv6S0++xrscHw0Mz6SBa1b13WfgHPENeLeIN0cAtwEx66esp3Fd21ze3
mgbU/JADP72fwvuL3RjXjtDAVhPqExFMgjGZkc2pIBpIUUnuygYS/K9HSoVt
RV31ruNaoOX2p0dhMRUu/7O8NEM4DdaX340yj6dCZ6i8+E3TNADNHLcFPlS4
73C1Nt9FG75xy6tVs6gg5tW+CcXaMBK/QhGsT4WohA++gWt0oKJwdmXsCAWm
a8e1HXykA+mVdA5bRoEkGW1L935dSKr6zvfwNQq0y/VmCtnT4fDlVtvjIgqo
OdQB3UfTIasujt/mT4F9bRx7zdwZYHtv6UbePAqkjjQ7HeAagI/KXNg4QIaX
uSqb02ZGYGWk6/HjVTJ0NJTccWk3hqQFBo570slgLomuqGKaQFyg/ZsT/mR4
u+mBn02PCejnbLret5gMljWZQytjTcHpZkmo0JoMO/tTQpzUpvDpn8kw1Xyj
aSzEDP4FTh3ghg==
                    "]], 
                    LineBox[CompressedData["
1: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
rVB4iQ==
                    "]], 
                    LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAAAAAAAAAMcDHoUWWiMDSPMsi745s
8zDATwKhn0/8sr+XTNOnc+QwwA+FZuBfy8S/ZH2sShXTMMDJBeEY1PPQvzO1
endRvzDAWIrxYYBp2L8C9D0uKKkwwBposmVaY+C/1Dn2bpmQMMCua52quAXl
v6aGozmldTDA6s+5/9ob6r962kWOS1gwwMuUB2XBpe+/TzXdbIw4MMAqXUPt
tdHyvwHdUYdqKzDAjYPri2Lw879zli7OJh0wwJUMDjZV7fS/p2FzQcENMMA/
+Krrjcj1vzF9QMJz+i/AikbCrAyC9r+XWmpaIdcvwHr3U3nRGfe/fltkS4ux
L8ANC2BR3I/3v+R/LpWxiS/AQoHmNC3k97/Mx8g3lF8vwBpa5yPEFvi/zczM
zMzMLsBiiuEeoSf4v3WzUaOmny7A8Cy4JA8y+L8hbTvXOXMuwAI7yzVZUfi/
zvmJaIZHLsCWtBpSf4X4v3pZPVeMHC7ArZmmeYHO+L8sjFWjS/ItwEbqbqxf
LPm/3ZHSTMTILcBkpnPqGZ/5v5FqtFP2ny3AA860M7Am+r9HFvu34XctwCVh
Mogiw/q/HAuR6768LMDKbkt86jv+v0WkoqSakizAwQ3TU6UC/79EWDTjEGgs
wFmY3Xz3wv+/FCdGpyE9LMBJh7V7cD4AwLQQ2PDMESzANLi94TCYAMApFeq/
EuYrwPBeh/C87gDAcDR8FPO5K8B8exKoFEIBwIpuju5tjSvA1w1fCDiSAcB2
wyBOg2ArwAIWbREn3wHAzczMzMzMKsD+EynxKssCwIikQpukoCrAEsftjxkZ
A8BsMf+2MXcqwIpu21+kcgPAeXMCIHRQKsBkCvJgy9cDwKtqTNZrLCrAoJox
k45IBMAGF93ZGAsqwD4fmvbtxATAini0KnvsKcA+mCuL6UwFwDaP0siS0CnA
oQXmUIHgBcAJWze0X7cpwGdnyUe1fwbABNzi7OGgKcCOvdVvhSoHwBZgT6ad
XSnAmdNfdpZcCcDQrujxlR8pwDNo8fTlYgvAMciuz8rmKMBce4rrcz0NwDSs
oT88syjAEQ0rWkDsDsDfWsFB6oQowKyOaaClNxDALtQN1tRbKMAWVsFPSuMQ
wCQYh/z7NyjAxtwcOw55EcC/Ji21XxkowL8ifGLx+BHAAAAAAAAAKMD/J9/F
82ISwO6SwFw=
                    "]], 
                    LineBox[CompressedData["
1:eJwtlHs01HkAxceIECG0ktcyM8a8/Jph06ZNU6Q629bYikS2skVFEbWkRJse
Z3pQs3oohUjbQ8oeeXxvSDvSg2RLNSakNWWMNV7lsXXqnnPPPfef+8fnj/vt
mihJGJ1Goy345M/5RdNw77yPbD8avNqX2AiaeykIXx+rHanKIMPjkhicDgpq
j8ClTcsKiK/ttLbuJgrF662dqrpukrsyfgS3hsJ+xduQ1N/KSdy22JKXRRT+
2i3tnrq+iqy6ZVCvm/Vp703AUlXs3yQu8O31rIMUShyaGgWdD0hVqHlgUQyF
nD/o5duU9WTu/X3ymUEUegxjHKWjjWThWjtJgy+FMP3+Maeof8jc8GgfJyGF
mhT/xlmy54R69Xs2147CpORDma9iXhATsmKTejyFBTpng+gGr0iZ3ePZT9vd
EKFzaOKfEgURn9y807vEDduTJcXN/i3kiib1sL3UDZ7ieNd7ekoy6uwQFxXq
hoIUz+g2LyV5UPdZAoQ0eH8n/klJ6iMzEw+eE6BvcZ2lIlRJjqyM8JZHCxCb
VHCt8ISS6B8VWR3wFUD56wv98i4lcTcd+ii3EUBIX21DC39N7J/d1h7q5iNK
4qGKH99KoNox9rCaD9mKkDi+vJVMnS+yTT/FR455c8U3V9sI1dW58NkWPs4m
5VfNKG4nlxzcxx7e4+GMo06jX0Un4ZgtXxZwmofrmQOMdIt3RFGcaF8ZycMW
58ndCevek2qLyyuNxTy8LFwl1C3sIs0sheF0Kx40fvfV7CE1cdJM5on/5SJA
S6XF2WvImahld/ilXBz2O9rpUqEhfrkn5UNSLqzPpyTmB/UQ5rG2eRdDuRga
MVo82N/zlQ8H8l21q1gdvURcnFew5xwHU3+p5iTv0RL/Hena3GgO/Oe8nbXf
uY/QLI4WzPDlINJBJPOs6yM++zLrvGw+9Y95ovSEfsJqKF15Te0KyVOfyRnT
Bkhuv+rnY1WusLli/MN89QAp6+WUtma4oiZ5uCCrcJBslSdIsyNdsWK5VXBO
whCZp7G4LStjo6EkN/AOfYQYe19ujU9j43E2c8LqpyMktftG2uB6NijF3bzh
86Pk5iin1nQWG5oN+9xObRgj0s0WB2DOhv4FUf1pSxpsvDY9MupwQfV09yTV
VhoCIjwy1SUuuNFXzZhRR4PPYOR/G6UuePTiTUWqsw7a31g/Sg51ga1Ktrhp
uw6+8GFhnUFXzK2ddBiZJWRcyGJhYMTjuGkDHbEtysuu21k4smBUmyTUhfHM
Uf01S1hgv/ORGZ7VxUOnJ5cW8VhAq/GOS5bjUCFbfbzDiIVgyv9UqGwcnsuy
a4TvmfjwxHpE4KwHR+dz3tRjJjIeBGdZlurh+EwJvaWYCU87p73mIfpwV5ZN
mJ3FRHNlWD7TeDwueEdobYOZiBBl5zSLDVEqvhUucmDCzEs1JfHHCdjVkbkx
uYOBupffG5jwTKDiMj4YFjFwxupE1EHFRNAs/Kxq9zIgjhnOixeaofK0YXll
EAN3XIoaL7aYgVezoad3OgOL8tXl8jhzzEkLuxE8hYEW7dW1bQPm+PI/DOw2
0d7tXTMJ/wN2oFxo
                    "]], 
                    
                    LineBox[{{-17., 
                    1.0409497792752501`*^-15}, {-16., -3.5096751382693574`}}], 
                    LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAAAAAAAAMcDHoUWWiMDSPC3t0qEx
8zDAMa7YtdERwL8fdmLzh+MwwHp6+bWo3NG/1Zqu9ALRMMASaieRP3vdv1Fb
t6WiuzDA8BI7tlZy5b+St3wGZ6MwwPPW8iN5DO2/mK/+FlCIMMCHgN2IA8by
v2NDPdddajDApMjJP4B497/0cjhHkEkwwM1Dvraynfy/ST7wZuclMMACed12
zRoBwHp1RECvHDDAp2w+bIW6AcAwU8hr3xEwwEEehghzRwLAa9d76XcFMMDT
jbRLlsECwFEEvnLx7i/AWbvJNe8oA8DUpuO2w88vwNamxcZ9fQPAYJZon2at
L8BIUKj+Qb8DwPTSTCzahy/AsLdx3TvuA8CPXJBdHl8vwBDdIWNrCgTAzczM
zMzMLsCY1c+P0BMEwCSYSokHoC7Aor3DUPcaBMDe/x5vvXQuwCTxipNrMATA
+ANKfu5KLsAccCVYLVQEwG+ky7aaIi7AijqTnjyGBMBL4aMYwvstwG5Q1GaZ
xgTAhbrSo2TWLcDKseiwQxUFwCAwWFiCsi3Aml7QfDtyBcAcQjQ2G5AtwOJW
i8qA3QXAePBmPS9vLcCgmhmaE1cGwCpHTChZNi3Al71n7ms6B8C6T26BhQEt
wPIbxYm6DQjAKgrNSLTQLMCstTFs/9AIwHd2aH7loyzAxoqtlTqECcCilEAi
GXsswESbOAZsJwrArGRVNE9WLMAh59K9k7oKwJXmprSHNSzAX258vLE9C8Bc
GjWjwhgswP4wNQLGsAvAAAAAAAAALMD+Lv2O0BMMwJd6JCE=
                    "]], 
                    
                    LineBox[{{-17., -3.5096751436306013`}, {-16., \
-3.5096751382693574`}}], 
                    
                    LineBox[{{-16., -3.5096751382693574`}, {-15., \
-3.509675141793422}}], 
                    LineBox[CompressedData["
1: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
                    "]], 
                    LineBox[CompressedData["
1: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
Ow==
                    "]], 
                    LineBox[CompressedData["
1:eJw1lQlQk+cWhiEpZS2yh0CW//9DWBNQrxuyWApRablWwaLkKiIGqojIIlhR
lBZuQSxIXBAQCJaKCq2yqXgVeKlQVIyhFKE6QGWRrUIoojKA5sZb7jvzzZnv
m3PmPHPeb+aQofv9w2gaGhr71Od9/FuLobpaPJk9Z43I5LiR0CEX+NPPGomP
sHA8de6QYYsLGjbaPHvGZCPQILeG9r0LROc27OB3sNHO8M1dc9AFg52mWXbl
HKhKDfnNa11wftGByOEiLrpvjYhPG7ngRvHKpKotBPZs7HIt63CG0w0aa+ME
gUsRTxt1TztDuP78Kb/TJM7oTE1VfuaM24GafZfWUqjZP1W9ztUZ23qz1+VG
UaBHj4f+xHNG6zUPxWMphW90B1T9es7Qa9X+KqSCgpP7bxkjE0KYL1Z6rXpA
QUunnl6vEELZ+1Kw/Q8KBvtKInb9JMS5LnNXhZLCx3tTGn5PE8LQ6ovwrDkK
JbRgGmeHEAGllTX5NB7kD99LAKbU02b6Ax72T2ZmB8kEOGTy+km4+q67U/Cd
VqwAF4v15+rV+Xmcyw1tPgIUuR1Lm1dRYDloOt1mCBAysPEYd55CbvLKR01j
TlCeS+63e0NBj//ZlfE6J3waZFhp/heFWAv3O8ulToi2mx0bGaXQtllPu1Di
hFCaT/aFPmqBxxFyZpu9ByjcSLydt0nmCBoUwZPXKZAZ/RXPYxwRlxLJDy+n
YDznZXLcxxFsSemRomIKyfIndW4MR7zbmSTJO6vup1lW/XbUAVZJf3UHZlAY
yal6+eiOA6Kv04Y6j1L4I/Nl0rWTDnirV3mMGUdBPBTpLwt1QHPS/BXOlxT+
h/PQHvkvhhU8TwoH3UQXtsjsIfR6Ljy8hIJLpq7ibYw99jgYNifaUJhoZAY2
+NjD92LoWYqh5n8Sv6KAYQ9FTX9RrC6F9A529JkxO8xuyeqLmCMhqTKmX66z
w8OssO364yTWx21SdmbbwTtot8nmXhLLGT3LSIkddt7M0RApyIX52MLKe3zF
yXwSfcf27QuU2cJIzzT53xkk2orKVDMxtrhnlT7qmkgizyE1pcbHFh7xfnE/
7iGxmpidSWfY4gAzhN2zlcTNbwxCEsb4iNC+O9y6joTBptu1R+r4INbEt3+1
goT7iQ/pBdl85CChZ8CGhGjJhGfHLj4enmjR+cj0/zw2CN/QPZD2mMC1Zntf
scwGIeXycvnPBPRvnIvSibVBXib3wv1rBHoKmR5dPjYwevXr3cMFBPhJV2t+
YdiguW/QdDCdwGBA4OPOMR5uBWyV0uIJWFPGMu16Hv78VODeFULg/nCvcZCU
B3FLiFmoH4GJHxqErRIe9O6/YpasJBb8olB9iHU4uZeLgOPiiSAZha1BnyfL
q7jIbQqma8dS+IgnqC34lovCo0/0O3zU/7CzipoI4iL45gPtRrVvBQcGGhoF
XPRELX0jHyOROF93kqHigHXR6Olsndq3qE9OKds4YIjDKtZJSWx7EN3i+z0H
7ZmLE2skJHYa+brYxnEW5kPA7159ZpGCDf2vvQZ3ywi0tl8f4BaxcbBk9ukn
sQS+K6991LaXDaNlMxViEYEM/5YNlavY6Fy6OrzCksC9lr5djR+wcXrN16/S
fudCpK9jqNnGQscrix7HZC5o7NX/jM5nISp9eYqvPRfz8wfJRRIWwt50Dw+o
OVeWN2b0CFjIz3svNvxiPo9QhFojSzWdIvNkY/95+a2jdtZod68ruTPAws/x
r4f1Xlhh16apmcl0Frw1HkzHVVjB0+NMirszC1Or1z+7dcAKuzVKvGW/qev4
MWXdq6zQm89xZR6yxjP4BHTPM1FsoC0p41iDZXD3aS2YqPhiW5N/kxWOa7/4
ODaVucDDhN+Pmb943bFEx1v3ruk1TGQuVkqakiwxuLxn0njUEqeiFJNid0u0
eiUOTZ6xRFC4c4TWDAPfkma1Um9L9DIMfr1bwYDF47Kw6WkG7FN283PCGTi6
zVNpeYWBZZe9vzzCZOA/Nx9tVu1ggJZWmJNw3wLyoX/lXFK/S7kJ1akJFqgZ
fV5t3GmB/hh5XSlhgdHJE4m8cAusLcwT0TPNoXw9W6r1zhwhwbHbr9LNcW9u
qWttoTmWXt+idTnVDNGqfyxxE5mj9oKvx+QiM/yp+S4ra9oM07z1WmkXTbGC
LvWvKjfDkFvA9kiRKQLo44dLI8yQNRohKlaawItmor93iRleCE7WUT+Y4O/9
ZQaND9H8MtQE/wVxHF4Z
                    "]], 
                    LineBox[CompressedData["
1:eJwtlHs01AkUx5lSWY9KjBnm8RszwxhjPMoeSY8JvYhJqESkkEiyJRFNUUN5
cyKdQvZIWRK21qPdr0JOcVYor0oRNViSIem12vU955577l/3e773cy7L57Cz
L0lBQWH3bP3o/8sU30ty36d81kX16Xv+nYMmuNhHptZspKExnn38TaMJso/F
lQVfo4FNMRdyCkyw6MBkTaEKHU0CWUJmtAmeV3paHoyho+HhpvQ1ziagB9Zy
ypUZUJeJRVSWCRojiTMxVxkoSFHMNBgWomc4QtwjYiLpT/eMgFIh3Ktbkqsm
mKgP9VjZGyIEa3JJ7hJ3ApcfhJ677iZESXb38tEoAqJSbfCthPB352SlXyHw
u6X94AFdIRxWjDYpVBL44KH2ae+MMdx5lq0WLQS+0/ZMa3UYI+NnUqF5P4HO
8NVvYm8bY3qPg+PHcQLRIUU1JfHGkOaR62O+EJiYV3g63csYom/eqp0kFpqb
fkgAKsOGI5/Pwq6o1PMBOQJkNo8GCGbn8gyro3ahAjDan1s9VWShQ6Mx3ttO
gBIztczRrwTqP658XEURwG7wVHT4NAGJTYqly4gR3oyvGA+d3a809eiJAEZI
cBGMvXhHwHXx0EXbDCNYq/uFV74kcCT5H+nlA0aQM/oSlNqIOT98ZPPernXI
I1C4PiHIPoePnuJg69g0AkM3uF+ajvBhfdhlQ3kMgQzSpchttnxUBWV5dh0l
cM1hcKiTzIdrgdWZKV8ClDi1LftkhlCjrar4aQeBqQr1S++rDfGm+dKE1iYC
Vm2yDkmSIbqq3dZRVhIY7Lu6QHOvIYYHjmQv5RP4z04TDw5bPSzKx5nIE/t9
9Mnhwb0s4vt0KxPtrxMNjEJ5sLKn1a4uZ8JHYuPJteNBpi2KOJ3GxBaBNGsb
hYf9FBm/LoSJ1IGdXbeGDVDqoNmm5MiE+W9/MNf9ZYCmivuhG/hMmEoKAknp
BrgjliufU2Iibq/evSk/A4QQN7Lqehlz+ejD7+G7iPluDCjX2D92ytFH9+sL
XE1jBkKS2cdfHtGHdCRWZ3weA6SNLi3htvoIeNu263I3HdV9L54xtPVxqjW8
X+M2Hbk+ON8i46Kp+Je7O6R0lDR8Hk6s4cLxRN3TAE86BtRTZtySuVhgEbhm
83I6Nq6KumPkw4X8lf/45CL6nB8OHJ7emRiKpMG/1E71UA4HEc7XynzFNAx5
q0RuD+Wgo0rfsYdNw/aXdKrEjgMvddsG+yld5PGiBj9QONDYOqNz96Eunq01
7C8aYWM8bLMDPUsXE2y9xUVg4+sFM/dof11MtfsffJ/BxoqEMttuC130Os/I
IwPYyDzepGI2TxdhSWPdnxr0sMc3/2PrGh0MLGofuZWthxMXdpqFKetgq2GE
UBSsh3MqWkuz26koHnudUyzSQ8xA58U1uVSQPFREk5p6OET99f6+ICrEwVNL
Ke9Y2Hw9LEN5JRUX9fM1yNUsaCWLVU0XUNEWu9RmLJGFlhYzfkcbBQvjRfn5
3iycDNIZ/ZZHmctnlqtkoeJyEgUFxzzUp3MImC948eXw39oYOOYXc2qWWzlb
Mcz1kjbimoeM9m0hwJNlB/V7aSPppGxhPotAi+vNV1S2Nj4o1Quj5UwMBZi0
TveRkVxbVBFcyEQ4ly+S5JAhN5LmaXsxERGXbVy6kwyO3Y7JcAoTo2mSzDh1
MnTUaKVp7Qw8s30erVyrhbVO0i75/lmunN4/sbbWAj+wfIL+lY5My5ujpdBE
l3fuN7UrdJh/V37q66gJe1PHmTpbOq7mLz67e2AZJF01g+vlNPRwq7+lnl2G
SI+RB9Ki2bufVV2vbLIMlpXPU9MP0vDowTyn2tcaqBpLFPuZ0XCyN5dbdUUD
//9nGhS6+usnfDTwL3Y00iU=
                    "]], 
                    LineBox[CompressedData["
1:eJwtlH8w1AkAxa2a27jCrP293+9Ovvvb2l0nUl3lurKD5sTp7gbR2kp3m5BU
UkZFnfIjXYxNPxCdPdHPs3tH5clIruUuUa2uuo6TiyRUcqWr697Mm/fH5783
b56bPuHzNfZ2dnaBb/0u38sTb06VDuf/I8Cxb5Th5x9qEFnk1ZXNJLBccWd+
iFWDZcXBYec9CQj9nE/erNHAZhkz0EMIvKpqKdfmaDDxRExkJRF4GjdVVrpW
g7Of3o/1MRKYyGz27vHTwO6MaKlzIwH+qGObM0uDXt+Rq6zHBEIsnU8kD9XQ
dQf9EUCQKL5OHZWY1UgqUh0wBZOIujD4YFWuGkMxH0mfbSJhZrg9Z6xWoyhN
Qh03kijrbLB5zVMj7pHD7tNmEkL71pwmZzXWme4Fk7+R0Bye79zcq4LRUp4+
0EviRgk/xvdnFYY54Rz+MxKOLqt28XNVSG6dZP1gJ8TNAdbGeJ0KYmvBNiNd
iDbrO3ngjYUT0O8gxM4v30yklXggtGB368BbvvzlU5+iJA+s9uz47DlNiE9q
K9K4Wg/MzXndSR8nod3H6aDxPWCtpK+c+YiEISVoVtiQElTG8IDfbRKm9AVl
05uUmCP8aVvsZRK00mGB2qiEy9ZopwITic22VeWW9UqYDvaUX91HQn/C7cjC
FndwCVNq/SSBMLcRv75id5TllZoW2wjQvMkrhnh3NNwLe7nzRwLr7h5XWxe5
I2765bjN+QTyyIytjix3VHEG7N3Wv+VjF7+X9CuQavdr/c4gAh/ow8xkvQLd
V9YXGeUEImIXm0ZyFbAaWgrX0AkYaHnbK3QKhA7eMff3CfBfPVY5jPyQuoQd
ArjEBodklMix9+mU/R/qBMj3VWdXJ8lR2d2sNy8QIGBRXFqAVo6hrkKfRJ4A
8zKmyb7iyxHVs5E+d5SP2Nf2WbeHZBi31912ucaH9XRkqbVJhjrvCNOLUj4M
xYzEWYdkMKXotzxO5mPJRdmL6QkyXGpP8R/R8uG9wjaRDCn895x4sDKVBwfV
heC9hVKcO5HVlhfAw3hvwtFlBil6aIrCJxweaJljfS0Lpegq3jNnVz8XMx2D
lCMMKbISyyzaOi4itiQa2vskeL1rK2NBLhdV19ZWrKiTwLvDKXBNDBdMuqft
SK4EquiYyIbZXBQpWqft10nwt3RD4NIZ3P/3IwYvaoenNZsDr8EbYy9LxDjL
Y6Z9rOeAHbKE/DZZjEZ6yugdbw62jJPa5CAxAmXVB2umcBD2ly6h0U0M/5Qz
UWfa2ahmzzgUPyFC3URmaG8hG5k5VNO2ThEqTikSAsPZuKUte9x/WoSpBcfM
97lsVPrv5ZpzRLhb1SOr7GRhLKt7cY9BBOXo+OWSHBZqg8ocx7xEiPOKvtXh
zEJSrIU9OEkh47Dr9vrDTCh+J76+1k5hg5p3NtyTie6T1ycPHKfgNRC/uabN
Fbu7urr9Uin8cp1pNW90hUe44lXnFxR8/3Q8t4lyRdtsqz7Uh0IqESp/ZGPA
EH/JqZZL4bsdD9XMYgbe/w+FdKf25lE9A/8C2Mg27w==
                    "]], 
                    LineBox[CompressedData["
1:eJwlk39Q0wUAxb8ol8BVwjb24/sVDrnuuzH2AwgPAhNItglCNlCIVWDoFg4n
7IZTBwqt7uJAckhghcggr7B1IzrtHE14XURhM85gVkd1ZzBAh9BgR3QzDfNz
9+7du/ffu3tby6sK1BsIgkhZ1yN/TAIe2q1/WQIURHVH3I45KcKeyXevTVNo
MsyJtS4pDlwID9aNUeDNakMj7FJsivbW3bNR+Hli7Q37aSn8vb9lmJopjG5v
zXmhQooEsSePWUFhNibZ7sqU4rIz+OLVLAopDbfb89lSvK1Ml2m5FByqD4hv
5yWwehsTBAskKj9/ZTHpqgQhzffUy04So2UDyxvOSBATpJ8pPUfiZvffQy+p
JdjDmuSkGEm0VEsKt6RL8P4Im6gtIbF8c1+/OlyC1YjnuoRZJEJHdBMijxiH
76ctycQkfpQbh/UOMQJvbVl1RZHIUlUZklvEsPb9PjDMIHHwwctLNfvFKNWe
io1+ksQN1yNEyJNOKeZDSWQ+vXe5s1uEf2XBNv0mEi/+ks3cbBChQNo9+RRB
wi/sltIKEXK9thHnCg+JTxxQ3KZEmDkhrD31Jw8hWosq0xePmClyrcDFw/Ei
/qGd38WD2HwyPW2Ahzd/4BvudsXDHKmUJbfyEDvWenzb0Xj0LXZEZh3mYart
0mLjoBD2jCDZxAUu9pap9FMWIQ4ajcWf6Lmo3eirH9QI0aXJYVnlXOxu0JH0
diGKwk2116K4GHWPZ0ZHCGExhLQ8XOVgYSN3pdcThzyLf5fmJw6GwuSJlx1x
aNLs6Pf1c5B2tySgbIlDzqpnuOcMB+W9hcq6/et9htdk1HPw/zwuAZJOsLOv
czkgFM1jQVYBAv1XPq0PsFHw1dbqj2sE2NNedajxVzaG4iwYzBUgMS67YeYL
NrLP3hrcESvAh5XPLrW9w8as31+aFODjvVef/7KjmI1epfezdjcfnPuvuxdi
2TD1OS5WDPBB5/bkddyJhO6fMrntXT6+lgeoNlskTNl/tL6m42POV7VzumI9
PziWeieZD5LlOZvvY4H9/fiNSoKP8ydnvokys6Do8Sg94zS0kiO3CikWGE2O
kX0f0TDT5utLTiaOmXfT10w05tUxVp+GiZqmTiNVROP8wq7iEh4TYb2XrlRv
o9E5GFiiJxlIHTs67eTSmBtP1arOMfD4XzTqRcToSjkD/wH8hKg+
                    "]], 
                    LineBox[CompressedData["
1:eJwlkosv1AEAx2+1OqbQnd/PPZRuDfnd43f0wJJSl5Zj1pkxjUoR0WPKJTbW
g3axHbWQyGPXb1y3m9c8Z/umUMqlkRsptUWJNZvM87oyn+2zzz/wEcVdUcVv
YLFYbv9d6zpyWI2VswUrQrDjWVs+T9LonmSHj9UJMU/SNguvaaSPxzxnRQnx
hsj/E8rQEDyuXrLMCnDrrPOHb1k0dNzhg0OZAuxcHihvUNFwDVu8cWeRD2a8
NRoiGrlK2xq7C3xs47xn283IMGpja0rp5eFcIffZg3oZhPcWphg+D6Uxud6R
qTKc6BlaaYtxxtUicfFApAy3L5rsEkln6L0m5PYHZFj5NMHPMJNQ0o1WBxcZ
6gVC99lKEiHaRxuHl6Vg3C/L+1JJNJ3M9z9jlmLE+sXXJpRElrpYb6yXQslc
OqSnSRgszaEvNFKs8gWKOgGJgB+/3EpOSzEd/T1IYE+i/90aEkw6tB7/aUui
iN3uN1chgSK9Lyl7M4mazjF5ynUJ3vZyBxSrBCy/9zb4BEuQ9vdhhu80gaIn
XZ0RIgmOuiiTogcJqF/mhPcsieEr8ivTNxEoS8i6phkUQ7U1luupJcDOMWyv
MIpR+LXN9DGOQMsORxU7T4z50hBTHU3AsKfWsStRjGx/ktM+74TuXbsVx7zE
KE/OnEoocEK1riuo2kLBrFXPCL2dcKQ5nTfST8Gjli0cGeVCFxXcNlVFQdsi
S3t6n4u+PB/PoZsU7Duml5MDuWgIO5xYEkGBaQwwBFo5iNWdV+/fRyGyykPj
+ooDk0YXbuRRcL3LFG4q4GD9HwrWUx3dc3Ec/APCJR5v
                    "]], 
                    
                    LineBox[{{-16., -6.995670089537952}, {-15., \
-3.509675141793422}}], 
                    
                    LineBox[{{-15., -3.509675141793422}, {-14., \
-3.5096751376166813`}}], 
                    
                    LineBox[{{-14., -3.5096751376166813`}, {-13., \
-4.596633042870052}}], 
                    
                    LineBox[{{-13., -4.596633042870052}, {-12., \
-4.5966330449537045`}}], 
                    
                    LineBox[{{-12., -4.5966330449537045`}, {-11., \
-4.5966330468755805`}}], 
                    
                    LineBox[{{-11., -4.5966330468755805`}, {-10., \
-4.59663304617004}}], 
                    
                    LineBox[{{-10., -4.59663304617004}, {-9., \
-4.596633043958376}}], 
                    
                    LineBox[{{-9., -4.596633043958376}, {-8., \
-4.596633042719758}}], 
                    
                    LineBox[{{-8., -4.596633042719758}, {-7., \
-4.596633045226781}}], 
                    
                    LineBox[{{-7., -4.596633045226781}, {-6., \
-4.596633042445887}}], 
                    
                    LineBox[{{-6., -4.596633042445887}, {-5., \
-4.596633043141537}}], 
                    
                    LineBox[{{-5., -4.596633043141537}, {-4., \
-4.596633043463726}}], 
                    
                    LineBox[{{-4., -4.596633043463726}, \
{-3.0000000000000004`, -4.596633046241095}}], 
                    
                    LineBox[{{-3.0000000000000004`, -4.596633046241095}, \
{-2.0000000000000004`, -4.596633044086957}}], 
                    
                    LineBox[{{-2.0000000000000004`, -4.596633044086957}, \
{-1.0000000000000002`, -4.070744636390714}}], 
                    
                    LineBox[{{-1.0000000000000002`, -4.070744636390714}, \
{-2.492612194340144*^-16, -4.070744636046243}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.266849002285747`, 
                    2.079283699648682}, {-0.25, 0}, 
                    Offset[8], {0.08867008614599214, -0.024858433670636337`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.8237789167285, 
                    3.2100464175724603`}, {-0.25, 0}, 
                    Offset[8], {0.08841272351049945, -0.015816319009223978`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.555201407229163`, 
                    0.31627936342142987`}, {-0.25, 0}, 
                    Offset[8], {0.3104028144583246, -0.11886556571967499`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.957139776824395`, 
                    1.1664364940106737`}, {-0.25, 0}, 
                    Offset[8], {0.17655914603251688`, -0.05803757033073076}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.807849415744245`, -1.4829146978921788`}, \
{-0.25, 0}, 
                    Offset[8], {0.0778328839058311, -0.020584954042886183`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.138256972854325`, -0.5311703179377596}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.17186941035259018`, -0.025794227989585417`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-16.523701909229814`, -1.6716515675812753`}, \
{-0.25, 0}, 
                    Offset[8], {1., -3.5096751382693583`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.90267971382734, -2.4316875504161786`}, \
{-0.25, 0}, 
                    Offset[8], {0.12801227968063422`, -0.07340008668199216}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-16.4, -3.509675140413855}, {-0.25, 0}, 
                    Offset[8], {1., 5.361243893275969*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.4, -3.509675140383796}, {-0.25, 0}, 
                    Offset[8], {1., -3.5240645956946537`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.822222222222223`, -3.596633043548925}, \
{-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 
                    1.0597034361126134`*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.266812111480315`, -10.290659703327353`}, \
{-0.25, 0}, 
                    Offset[8], {0.0887143551125078, 0.015537812410522989`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.95707204265009, -9.269959606235586}, {-0.25,
                     0}, 
                    Offset[8], {0.17661124924352123`, 0.0444526219128214}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.552155803560764`, -8.363593292031409}, \
{-0.25, 0}, 
                    Offset[8], {0.3043116071215266, 0.09711685718064089}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.137302518444722`, -7.490277624509893}, \
{-0.25, 0}, 
                    Offset[8], {0.17301475564411462`, 0.023277026282947588`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.544196071440453`, -6.510754423961051}, \
{-0.25, 0}, 
                    Offset[8], {0.2883921428809071, 0.0021585619094981467`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.72788029361366, -5.519917570009614}, {-0.25,
                     0}, 
                    Offset[8], {0.08234524122527986, 0.012290913014809668`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.52199430943186, -5.329344667224283}, {-0.25,
                     0}, 
                    Offset[8], {1., 3.48599494774453}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.4, -3.5096751392873777`}, {-0.25, 0}, 
                    Offset[8], {1., 4.176740731054451*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.4, -4.161849880768704}, {-0.25, 0}, 
                    Offset[8], {1., -1.0869579052533709`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.399999999999999`, -4.596633044120243}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.0836523617617786`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.4, -4.59663304610683}, {-0.25, 0}, 
                    Offset[8], {1., -1.921875991683919*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-10.4, -4.596633046452256}, {-0.25, 0}, 
                    Offset[8], {1., 7.055405149003491*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.399999999999999, -4.596633044843042}, {-0.25,
                     0}, 
                    Offset[8], {1., 2.2116637410363182`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-8.4, -4.596633043215205}, {-0.25, 0}, 
                    Offset[8], {1., 1.2386180969770066`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-7.4, -4.596633044223972}, {-0.25, 0}, 
                    Offset[8], {1., -2.5070230336154964`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -4.596633043558245}, {-0.25, 0}, 
                    Offset[8], {1., 2.7808937375084497`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -4.596633042863278}, {-0.25, 0}, 
                    Offset[8], {1., -6.956497600185685*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -4.59663304333485}, {-0.25, 0}, 
                    Offset[8], {1., -3.2218849810305983`*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.4000000000000004`, -4.596633045130147}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.7773694455390796`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -4.596633044948613}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.1541382011491805`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4000000000000004`, -4.281099999469211}, \
{-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.5258884076962431}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000003, -4.070744636184031}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.4447111829649657`*^-10}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-17., 1.0409497792752501`*^-15}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_b\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_b", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-4., -4.596633043463726}], 
                    Offset[{12, 12}, {-4., -4.596633043463726}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-4., -4.596633043463726}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-2.0000000000000004`, \
-4.596633044086957}], 
                    
                    Offset[{12, 
                    12}, {-2.0000000000000004`, -4.596633044086957}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2.0000000000000004`, -4.596633044086957}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-8., -4.596633042719758}], 
                    Offset[{12, 12}, {-8., -4.596633042719758}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 
                    1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-8., -4.596633042719758}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -4.596633042445887}], 
                    Offset[{12, 12}, {-6., -4.596633042445887}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-6., -4.596633042445887}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -4.5966330449537045`}], 
                    Offset[{12, 12}, {-12., -4.5966330449537045`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-12., -4.5966330449537045`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-10., -4.59663304617004}], 
                    Offset[{12, 12}, {-10., -4.59663304617004}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-10., -4.59663304617004}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-16., -3.5096751382693574`}], 
                    Offset[{12, 12}, {-16., -3.5096751382693574`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-16., -3.5096751382693574`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -3.5096751376166813`}], 
                    Offset[{12, 12}, {-14., -3.5096751376166813`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-14., -3.5096751376166813`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-17., -3.5096751436306013`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-15., -3.509675141793422}], 
                    Offset[{12, 12}, {-15., -3.509675141793422}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-15., -3.509675141793422}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-16., -6.995670089537952}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_w\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_w", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-1.0000000000000002`, \
-4.070744636390714}], 
                    
                    Offset[{12, 
                    12}, {-1.0000000000000002`, -4.070744636390714}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.0000000000000002`, -4.070744636390714}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-3.0000000000000004`, \
-4.596633046241095}], 
                    
                    Offset[{12, 
                    12}, {-3.0000000000000004`, -4.596633046241095}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-3.0000000000000004`, -4.596633046241095}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -4.596633043141537}], 
                    Offset[{12, 12}, {-5., -4.596633043141537}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-5., -4.596633043141537}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., -4.596633045226781}], 
                    Offset[{12, 12}, {-7., -4.596633045226781}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-7., -4.596633045226781}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-9., -4.596633043958376}], 
                    Offset[{12, 12}, {-9., -4.596633043958376}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-9., -4.596633043958376}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-11., -4.5966330468755805`}], 
                    Offset[{12, 12}, {-11., -4.5966330468755805`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-11., -4.5966330468755805`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -4.596633042870052}], 
                    Offset[{12, 12}, {-13., -4.596633042870052}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-13., -4.596633042870052}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.492612194340144*^-16, -4.070744636046243}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"X_out\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["X_out", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"checker_b\"", TraditionalForm], 
                    Offset[{0, -7}, {-17., 1.0409497792752501`*^-15}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-4., -4.596633043463726}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -15}, {-2.0000000000000004`, -4.596633044086957}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-8., -4.596633042719758}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-6., -4.596633042445887}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-12., -4.5966330449537045`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-10., -4.59663304617004}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-16., -3.5096751382693574`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-14., -3.5096751376166813`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-17., -3.5096751436306013`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-15., -3.509675141793422}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"checker_w\"", TraditionalForm], 
                    Offset[{0, -7}, {-16., -6.995670089537952}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -15}, {-1.0000000000000002`, -4.070744636390714}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -15}, {-3.0000000000000004`, -4.596633046241095}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-5., -4.596633043141537}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-7., -4.596633045226781}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-9., -4.596633043958376}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-11., -4.5966330468755805`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-13., -4.596633042870052}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"X_out\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-2.492612194340144*^-16, -4.070744636046243}], {
                    0, 1.}, Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5],
                     StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4846708389350614`, 
                    5.295824062411426}, {-13.266849002285747`, 
                    2.079283699648682}], {0., -0.17}, Automatic, {
                    0.9628771022566229, -0.2699401525336475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0.9685298323575049, 
                    5.414051160067989}, {-12.8237789167285, 
                    3.2100464175724603`}], {0., -0.17}, Automatic, {
                    0.9843729381941798, -0.17609633315590997`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.9668852412635784`, 
                    5.136279046907353}, {-14.555201407229163`, 
                    0.31627936342142987`}], {0., -0.17}, Automatic, {
                    0.9338689176195187, -0.3576154984115597}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.7175182816631704`, 
                    5.224952722480156}, {-13.957139776824395`, 
                    1.1664364940106737`}], {0., -0.17}, Automatic, {
                    0.949991404087301, -0.31227605121148555`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4062683099586393`, 
                    5.317180591291411}, {-15.807849415744245`, \
-1.4829146978921788`}], {0., -0.17}, Automatic, {
                    0.9667601075075293, -0.25568514726520714`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0.8163001106103239, 
                    5.439085780663656}, {-15.138256972854325`, \
-0.5311703179377596}], {0., -0.17}, Automatic, {
                    0.988924687393392, -0.1484182019291498}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{5.289480802709718, 
                    1.5071140758964927`}, {-16.523701909229814`, \
-1.6716515675812753`}], {0., -0.17}, Automatic, {
                    0.27402074107208957`, -0.961723782310858}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{2.735791575602472, 
                    4.771314751183635}, {-15.90267971382734, \
-2.4316875504161786`}], {0., -0.17}, Automatic, {
                    0.867511772942479, -0.4974166501095404}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.9486841413017828`*^-8, 
                    5.5}, {-16.4, -3.509675140413855}], {0., -0.17}, 
                    Automatic, {1., 5.361243893275969*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.9382355276320595`*^-8, 
                    5.5}, {-15.4, -3.509675140383796}], {0., -0.17}, 
                    Automatic, {1., -3.5240645956946537`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-6.5569150109468195`*^-9, 
                    5.5}, {-11.822222222222223`, -3.596633043548925}], {
                    0., -0.17}, Automatic, {1., 1.1921663656266944`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.9488502638959491, 
                    
                    5.417534787770594}, {-12.266812111480315`, \
-10.290659703327353`}], {0., -0.17}, Automatic, {0.985006325049199, 
                    0.17251822979926346`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.3424658624620496`, 
                    5.333646539481599}, {-12.95707204265009, \
-9.269959606235586}], {0., -0.17}, Automatic, {0.9697539162693816, 
                    0.2440847022658272}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.6721605051415627`, 
                    5.239644954101825}, {-13.552155803560764`, \
-8.363593292031409}], {0., -0.17}, Automatic, {0.9526627189276046, 
                    0.3040291827530114}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.7333507389991629, 
                    5.45088953232492}, {-14.137302518444722`, \
-7.490277624509893}], {0., -0.17}, Automatic, {0.9910708240590764, 
                    0.13333649799984781`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.04116533080882388, 
                    5.499845944709669}, {-14.544196071440453`, \
-6.510754423961051}], {0., -0.17}, Automatic, {0.9999719899472126, 
                    0.007484605601604342}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.8119394756249864, 
                    5.439738439292998}, {-14.72788029361366, \
-5.519917570009614}], {0., -0.17}, Automatic, {0.9890433525987269, 
                    0.14762535920454298`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.28677573787571, 
                    1.5165758462433523`}, {-15.52199430943186, \
-5.329344667224283}], {0., -0.17}, Automatic, {0.2757410629533368, 
                    0.9612319523410383}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.2972074020799482`*^-8, 
                    5.5}, {-14.4, -3.5096751392873777`}], {0., -0.17}, 
                    Automatic, {1., 4.176740731054451*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.047622926367982, 
                    3.7238083524720094`}, {-13.4, -4.161849880768704}], {
                    0., -0.17}, Automatic, {
                    0.6770560640858199, -0.7359314411578148}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.1460087989689782`*^-8, 
                    5.5}, {-12.399999999999999`, -4.596633044120243}], {
                    0., -0.17}, Automatic, {1., -2.0836523617617786`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.0570317954261554`*^-8, 
                    5.5}, {-11.4, -4.59663304610683}], {0., -0.17}, 
                    Automatic, {1., -1.921875991683919*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.88047283195192*^-9, 
                    5.5}, {-10.4, -4.596633046452256}], {0., -0.17}, 
                    Automatic, {1., 7.055405149003491*^-10}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.216415057569975*^-8, 
                    5.5}, {-9.399999999999999, -4.596633044843042}], {
                    0., -0.17}, Automatic, {1., 2.2116637410363182`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-6.8123995333735365`*^-9, 
                    5.5}, {-8.4, -4.596633043215205}], {0., -0.17}, 
                    Automatic, {1., 1.2386180969770066`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.378862668488523*^-8, 
                    5.5}, {-7.4, -4.596633044223972}], {0., -0.17}, 
                    Automatic, {1., -2.5070230336154964`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.5294915556296473`*^-8, 
                    5.5}, {-6.4, -4.596633043558245}], {0., -0.17}, 
                    Automatic, {1., 2.7808937375084497`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.826073680102127*^-9, 
                    5.5}, {-5.4, -4.596633042863278}], {0., -0.17}, 
                    Automatic, {1., -6.956497600185685*^-10}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.772036739566829*^-9, 
                    5.5}, {-4.4, -4.59663304333485}], {0., -0.17}, 
                    Automatic, {1., -3.2218849810305983`*^-10}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.5275531950464944`*^-8, 
                    5.5}, {-3.4000000000000004`, -4.596633045130147}], {
                    0., -0.17}, Automatic, {1., -2.777369445539081*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.1847760106320493`*^-8, 
                    5.5}, {-2.4000000000000004`, -4.596633044948613}], {
                    0., -0.17}, Automatic, {1., 2.1541382011491805`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.559976073890653, 
                    4.867907404738448}, {-1.4000000000000004`, \
-4.281099999469211}], {0., -0.17}, Automatic, {0.8850740735888086, 
                    0.465450195252846}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.894591150630731*^-9, 
                    5.5}, {-0.4000000000000003, -4.070744636184031}], {
                    0., -0.17}, Automatic, {1., 3.4447111829649657`*^-10}]}, 
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin", StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    Part[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGGB44vdJ3WceCSDYQvcICh/+jRz0lCBxghAgcY
XC6A+RCuwoH/x3Yg8SUONAhtQeJrHPivfh+Jr3KgnvcLEt/gwL/Zwv0XhHmg
fJ0D//T+9iH4hgf+XTyNJK934N/GHiS+wYH/6xZ8mPBbGuq+D/sbVup5FHoI
QPkcBxjcviLZJ3KAge0AEl/mAMPNx0h8pQP1fOeQ+GoH6nUYjiH4Wgf+R+8G
y5+Zy3CF79vGPQ37NMD2AQBpD27R
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 24, 24, 24, 24, 24, 24, 8, 24, 8, 24, 24,
                     24, 24, 24, 24, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {998.5000000000001, 788.5388366494898}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{35.50000000000007, 28.}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Scrollbars -> {True, True}, ImageSizeAction -> 
                    "Scrollable", ImageSize -> {800, 500}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_Bcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_Bcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_Bcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_Bcore_net"], 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_WWcore_net"], 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_Wcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_WWcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_Wcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_WWcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_Wcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_WWcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_Wcore_net"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "X_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "coupling_4net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_4net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_4net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_4net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"checker_b\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"X_out\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}, {
                    StyleBox[
                    TemplateBox[{"\"checker_w\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7716936123749914`*^9, 3.7717119211150084`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4ce31bf3-6be2-4a22-878d-20c232dfaa85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
   "trainednet", "\[LeftDoubleBracket]", "\"\<Input\>\"", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mm", "=", 
  RowBox[{"Length", "@", "sampledigit9"}]}]}], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"d335fc01-2b79-4387-90e7-576f1d7d5d1d"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7716921050171056`*^9, 3.7716934451985416`*^9, 
  3.7716964866574373`*^9, 3.771696517550006*^9, 3.771696939717722*^9, 
  3.771711926638288*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"05d42c04-8339-4698-9d81-72ebac691251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"mm", ",", "nn"}], "}"}], "=", 
  RowBox[{"Dimensions", "@", 
   RowBox[{"mppr", "[", 
    RowBox[{"p", "[", 
     RowBox[{"pp", "[", "sampledigit9", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771610786839265*^9, 3.77161081163018*^9}, {
  3.771611456448844*^9, 3.771611461718235*^9}, {3.771611856825675*^9, 
  3.771611858934649*^9}, {3.771615039148193*^9, 3.771615044813901*^9}, {
  3.7716934746173563`*^9, 3.771693475578439*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"2258e947-0b11-4429-bc36-765e9f8512f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7716934775979586`*^9, {3.771696491468996*^9, 3.7716965212721486`*^9}, 
   3.7716969414547033`*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"40b6fb32-a6b0-4444-bb49-2a34628beb17"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<white\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<black\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.771611474368038*^9, 3.771611549075735*^9}, {
  3.771611636693874*^9, 3.771611640498125*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"0fe5d873-f792-40bb-bf77-32b9258110d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "checkerW"}]], "Input",
 CellLabel->
  "In[291]:=",ExpressionUUID->"64efb54b-48b4-410a-8517-9dca63b75461"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716935045750237`*^9, 3.7716965281089067`*^9, 
  3.7716969453061266`*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"727ed046-2b13-4083-bc7b-68df3531a72b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mapping to Latent Space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"X", "\[Rule]", "Z"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f9038260-1692-4a0f-a3d3-bacb775a10af"]
}], "Subsubsection",
 CellChangeTimes->{{3.771693514505464*^9, 
  3.7716935433854847`*^9}},ExpressionUUID->"854b7638-4d2b-44af-81f0-\
3a1926ca25b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z9", "=", 
   RowBox[{
    RowBox[{"trainednet", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"mppr", "[", 
         RowBox[{"mpr", "[", 
          RowBox[{"p", "[", 
           RowBox[{"pp", "[", "sampledigit9", "]"}], "]"}], "]"}], "]"}]}], 
       ",", " ", 
       RowBox[{"\"\<checker_w\>\"", "\[Rule]", " ", "checkerW"}], ",", " ", 
       RowBox[{"\"\<checker_b\>\"", "\[Rule]", " ", "checkerB"}]}], "|>"}], 
     "]"}], "[", 
    RowBox[{"[", "\"\<Z_out\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716935564331055`*^9, 3.7716935652731524`*^9}, {
  3.771696866488731*^9, 3.7716968677632294`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"c623fabb-5a94-44eb-89ab-9361377c308c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Learn distribution", "Subsubsection",
 CellChangeTimes->{{3.7716969212452173`*^9, 
  3.7716969248799915`*^9}},ExpressionUUID->"e4ff32c3-b981-4b7c-adbc-\
4893c6b840eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ld9", "=", 
   RowBox[{"LearnDistribution", "[", 
    RowBox[{"z9", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Multinormal\>\"", ",", 
        RowBox[{"\"\<IntrinsicDimension\>\"", "\[Rule]", "10"}], ",", 
        RowBox[{"\"\<CovarianceType\>\"", "\[Rule]", "\"\<Diagonal\>\""}]}], 
       "}"}]}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.771691097157357*^9, 3.771691123858289*^9}, {
   3.7716912095220165`*^9, 3.77169125720986*^9}, {3.771691320777122*^9, 
   3.7716914169006786`*^9}, 3.771691455862616*^9, {3.77169693188459*^9, 
   3.771696932541259*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"1a329a7a-208c-43fc-8904-293c06846d97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampledz", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"ld9", ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771696955907669*^9, 3.7716969633020105`*^9}, {
  3.7716970151627264`*^9, 3.771697023478948*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"484ed5b8-3f13-4251-ae13-0ea57d176cfd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"mpr", "[", 
      RowBox[{
       RowBox[{"mppr", "[", 
        RowBox[{
         RowBox[{"sampler", "[", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Input\>\"", "\[Rule]", "sampledz"}], ",", 
            RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
            RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], 
          "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
      "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771694996713468*^9, 3.771695018819934*^9}, {
  3.7716970771655817`*^9, 3.7716970873099184`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"2b7e9489-c6af-4a0f-ad9c-b1d674165b36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1Ul1Ik2EUPghBQRdCEAYSVBddehtRRIFYN17MkqCgNlzLGpvNUSy7aBdF
YNAvEXVRGUgWMdMkwW6SGC7W0tzXwpzk1n5037b82dwvT+e8W+++73zvec7P
c362y2Q3nGsgot7NLAzGK4cdDqOro5GVE7bebovN3HXM5jRbzI59JnFrrr9R
8PlYZhEmrer9IGoMLvlQiYAc+oAN+DVPJ0OecAXTrMZQDiAOetTG4GusfmLP
tMToRSCxDn1ynZVsEni5V2BcVXKnZM3MfCuDHvB1PwZpBCuMlSk8C3xxxwHf
MLKI0hhnJFORKzx1aYLvw9jDEeMMNhEhTyB57O1cYWOWVPbETfpTx+W0cwn5
MxoQxJDwSsL/RtZ7kiooTtcYD1AtBZtSnDuriZIBOUO7VeBbscntdsehVDMr
L+4z4LDOsTxNUqVxa2btITCfHihrTxXJCC5KDGgiItkWQZE6RauqYpsU43py
0K+Ys4k05QWOpVhYsEXxcvgtZcaUGp6d0VVJnlS2Bn77uE4c6E9vAnnYqnNU
hW2VnuOAW3nh+xjOgwZrHQCybCzDW4FimP68wq1QU40nQoVX3O3jGYl0o79y
RE0UYaStYn82B+8s/aRlvn/FgKQsvFGRvEAUnYuc88f2cbcPd+qDhr50VAsF
W/AO75/TBeXbRi3oVMNRg566h+u0QZdrO5B97DgpXfAJ8A+Uo9KklDGEbmtX
bZeInWXxdy34C/ZWkB9VFTqKgjRIVR5Lgh3mfYzrQInv0SVA+70AffQGQcju
CkMOhpDQ8v8QGv4B36wuQQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/mFhEasDl65/cFG8Zv77//vf/58YJv37//f/0/9XdmPV836iaqsn
Q6xP2v9/qGb/+f/59XGDeA4GUdN16O778/+8Z8uZ3z82Xbx6F8283zsYeI8/
/f/v7/87/X/+/0KW+vv/P4sPUOTf71yz+P//r/5G8tf//wwMi/7//36v/ALD
oS9vtvxAsg6Irh/4/3TtymUM6jv+P/oDlfgHkX7Zeen/xj31ZimP/z/C8PmT
r0ve2QLj9/fyL39R3fnn/5v/N//pxzEwvP3/FaID4ZavH0/+e/nfBCT3G83M
v3/fbL3zf7EBQ8x3hOg/ZHOtGHz+v8OWCn79/L/dqff/IyxxCBZi+PHowW8M
XUCw7FDvjp0Xf2NoAFJf88NVun9+/P0bU+7X99hAhhX/v33DtA6k5gswHv5i
iKKzCKdhAMZx3FM=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJwtUktIlFEU/rAWrcpAgiJ6LFqU1KpMCAppU1CLlCioja9RW0wwCuXKHkj0
lIIekAamBlmktSjKxtFqU0mOYxbZZEpS6jA6ko45mV/fub/3597/nu+8vnPP
WV9wPNeXBqB8iY7c/BM5gUB+ZV66hIP+8rISf3HRXn9FcUlxILvAzFYv7GFq
IamjH313cYcgJ3hG8hzs3sfnZCZ/nUrbyL/NHRzgI4ybTyMjxGxklhzhTOMt
sism9Mc8+JMcxaSixuW/A3Rr5ID7Jbk0zoarRMSJQKvCcCVRZ+L2KcbqXynz
PeeFtqoCIHjh7aoUa7juBdkjdKd0fjEXPSTNbsuUl4LnOEi+tKhOrfWA72h8
XCryBtDshHaFmHO3P6jZYHUW4r1J2ll8qI8cswRh54goP1k83XLQvkZloITM
AM87bFA67Bv/mCWT8HVW3WST8j9jFG1Cal87frVEwvFYK48GjyM3M44KxyPM
ppjxAPYIT+cx42sdGNb7WjfYr/ODoftPI2ItwDXtnmrO6FfLQrqax4mTvXSR
mCLfmG/1fZR1CVih+z/SZ1gqHkLHQk3ARbbk0bVgEl+bGsmtPrZCtouYAhKy
+8bQE9NnT7A76CYDiW0L71rqKliu/dvXrbMUvHKEQWkuO80AOpnYTc1IyDJm
HkY9FnvV7aLmK8oiceh1UV2f9P5HG7yefudTz/KS9YGdj5Eh9LYa5k3Q0Mgs
z3IedctUmiw+e24KMs0xjW9kSBPKLw6MqQGbRm3WK2nDaqE5nXJpGdBsHWrh
fyc+Oeo=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4B+I+PP//19Mid+X/z/auTbp+keoKiRwKTyewdssS4whE9NE70wG
Bve17AxWarfQZH47yDLI1mmYhEXpmrP8RjHz18/5DKktP/4vjshjqHdEcc7P
R/IpE8+DWDsZChkYviJr+8nPsO/et3//Pz1dG8jAUPUFSeoHA8Ox+nAQa20a
A8N7VL/VMcgz3Pzx7/9DjUyGiLeoriwHxhZD9ZP9tm2KDIxoPn/NsGNS1LH/
XQ/1VQTFUM38v5VPeOu2P/+uTWFi8CxGC87fp+ffAJr0p35eKmaAQd17laFx
Gsg6mI3INh9j+D8Tm6Z//3/838HA8PzPPywx+P/1T0+2qj1/sFr367+Zscc6
HG75y5DHoP0Nq8a//zcwLFgch9VEUgAAUda0+w==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CNV4W9kDlbdx3EZ8ff/T4imM6jiv8Dk0c3eMv//97/DtLL1d7BN
Xsz/d1c+o5vY8+y/NIM3yMcv/39Fkfl5bEGT15wLuf8f/vj+/d9fZEP//Vzv
YN4IFHt/Es39/379+bqd4RGI+ef/7zf/n6CYuPJEoeHav3//v/zz/9fdh3+R
9f3/s24676Sk/yvX//f/+3njW1Rjjxkk+aYA42Xt+rwlqPb9//+xNvj/0/+B
vtGRSh//o0tqyln9K3++ioXNzQozrJ8B8WuvMIb/N9FDBRxF/1/zxGUwvP2D
LgkKgP/X9Ri0+v/DzUT2y0tzhogidD1QBQvXigSj+e0fOPaA8m93hH25CbMb
Ve/fX+/+3/vy4xuGFMyIjX/uYZe6xHDiTvYvDPV4ALpiEAAAYvrZBQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0cH/zBEyAeUmIVP79eb691aN33+jSnzZfsjAQUG50Xr/v/FlFwO9K+A
4RkM8b//f76Mq9m/jUFj4/lH6HL/Xl+9c/n/x7DN527/f47mst+vP9z4//uL
qzjD/T9o+n5+/fb/77c/Ze7OHj+eo8n9efD77edPG56mWAQ8//8LVe72xp//
/3/6X2Lj7PMLzX9/jqx+BqRaIw0MbH7/RvPf31P//3/7X86gZBn26T+Kxn9/
QPx/r9QYQq7//4um7d8vkH8+ajH4YYQKVMFNiayPmKIQPy4pPIslDv6D7Huf
qvb2x1+MWPwGjheGtnkIIUQA/Pj/2+5/qh12hzzcWcgw6fifHxiuAIH7exje
/b/3Hz0wSQNg4wB8cOCP
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cH/uFgY4phkyUG/MVjY92Ne5+rfvxB1/Lny//pDIqX5RiCTn1Cl/tU
ygAGLgz7/vxAlXrMEGHjqxXw4nFY9o//f1F89t09sq71MpC13e3HN2QngJim
YXPB7K/Vm1Ed+/f/vf8fXoGZ0gzbPm76guz+X7cevQA64Pu7M6oMeb9RXfLr
59PPX36cA3rQ3HjXWzTPnX/y8f+X9U+WuTE4ogfqv1WFt7f1MkwvcWIQWPcf
KeyA6r4uYDf0Eslq2ODIIILsDhB4EzbZmz+qrHVHmwVP71+Ez8Dg56rb/2/8
/3Pb4zjD3P9o4PM/sC3piTzJ//+jxtXHv39AvtpfvSQcI+r/fPn8/+uj8+19
NR++oznlPzg2L8eHc0/6DnPGH4R7/n2PNO1kOPQMzd8Q/O/0qa3X3v3HSA8Q
SSBcg5Ga0PyKHqDYlAMAXTzKHw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJx9UU1IG0EY/fDUS8FDwRxy8dBT8dyWHop6KD2IxdaropiIBZMQLSr00EOh
tN56qxTqwbaHolBEqidJaSmJIR4a/AGLgiBuUrdmkzWa7MzrzOwk7m6h3zLf
zM577/ub9uF4X7SFiCauCNc3NNWZTA7NPGwVP/2xibHRWGTkfmwyMhpJ3hqW
tLBeDjikcZzj/1bUTDR3V1EXqwrW5HEEjaOAP5x5birKOzAVeqpZLqMkHUOe
jhxxoN1FXywGbkzSdbqxwqzUsw11V+MNDFHqCnW8mEW2451bX6MaZ/8OIUEZ
mNyY/nlZqMyBe0+7pVxkLoV3pn2NrFJoMaeD8N4PGrKUf0Ikcsr+2du9j+Ou
QLl0hhD/Kmkc9TIVSt6pfN4WupPqubGfYsa6b2oF4z196wWWxdGq6uo0xqz8
ABXx6Yca+anK2zQHCxnT3FzLfznbK+SY7X+A2vEFXs7TVvnqL19zamYOF+o0
joAL8XlDMsk6zLX1zCVgc1dzyfiN6oO2u4NLz70Pq+OeAK9uX6M3dj2IMRmB
bj56XEbAagKsrH8fqJuvdd9+aRF2FgeNtrkf5bBlGZWgyG3ER/TW8m+gv8gS
2EQ=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUjtLA0EQXqzEykYrG8sUgp22ARFs46NP8Aw2CSaCROwiYmFvYSmBaBM7
0X+QRg0IUbQQizMmdzmTS3LP3XF2b+9yGdjXzOw3M9/MYiaf2psihBSncUul
j5KFQrq0OYuP7VxxP5tTdjdyh0pWKaxmuNuCXBAXHxeNXh7eTWBSgzbPifkO
pX/8rzWBZgmfUDQJHBw2TAqTGIHVlBoVoB2PyRj47/xCuISpMnAjDx2gvoy2
44ncgFq8EKv8oOyQJWBNAU+DbKjJD6+r0VOt9MpjRPWDemf7DlDGKDRWkqQl
oknkKsAtfzBbWZ+TNcJjUEmDA1u4sRvlXA/RIm6fTRva/bNLkmi/McHGT0iO
78MIvyW2Lir3gsMwHQNtrMuAlDvzmtD8SpYo2OaXi1nla4Sc+AefYA3Dvmpg
DDBHA6zrNVJ3dZ78mBnD60MLnN7MS9i6sW3UC1w+OmOeuXQ5ywgq2lAB2a9R
jGwD/jzQqlbNUfGPiWREyD5iMJ59U+JdRbge9XkpWlOEcqAnGOPLwfgZGAyQ
NvTV8eUKNCZ+co8n+A7GxAm1cZmYhGjSgl0VsxZoRSf+AQiw6KE=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/8HI/gIxJ9vfMWUeNH94f+nbIb1mO7+u9/VjYHBTpThxL3/P1Fk
fv3/tL6ZsenKnjyDwB///6DI/ft/MJhh2dmP/9Wl6zAs+3k3qPL7/9+CDAwZ
d9Dc8vffuqK9//7/qGDg+P//DZrc11v/d75sSP5vlIth5Idv8wPPPp0JDP3g
f7/Q5J5Oe/Z//sW0LCaG3tfo+u4znDjb53P45L4FGn///UeJtl+OUxe4lAMZ
7/a4fkDX93rtmbuX///f+t6cATOm76x69f/b+//X039jyv0DWxF1LW01htT/
f6///P/zN///iz/oMn//fv7/7lG461RfjJT1DxQR/y8cPrjoNoY2kPS/L0Fl
bc+xyPz///X72p1FNx9g00ZNAADihdl2
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{3.771697088128473*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"3e1e04ac-9922-45a9-939d-df8626e109df"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gen9", "=", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJw1Ul1Ik2EUPghBQRdCEAYSVBddehtRRIFYN17MkqCgNlzLGpvNUSy7aBdF
YNAvEXVRGUgWMdMkwW6SGC7W0tzXwpzk1n5037b82dwvT+e8W+++73zvec7P
c362y2Q3nGsgot7NLAzGK4cdDqOro5GVE7bebovN3HXM5jRbzI59JnFrrr9R
8PlYZhEmrer9IGoMLvlQiYAc+oAN+DVPJ0OecAXTrMZQDiAOetTG4GusfmLP
tMToRSCxDn1ynZVsEni5V2BcVXKnZM3MfCuDHvB1PwZpBCuMlSk8C3xxxwHf
MLKI0hhnJFORKzx1aYLvw9jDEeMMNhEhTyB57O1cYWOWVPbETfpTx+W0cwn5
MxoQxJDwSsL/RtZ7kiooTtcYD1AtBZtSnDuriZIBOUO7VeBbscntdsehVDMr
L+4z4LDOsTxNUqVxa2btITCfHihrTxXJCC5KDGgiItkWQZE6RauqYpsU43py
0K+Ys4k05QWOpVhYsEXxcvgtZcaUGp6d0VVJnlS2Bn77uE4c6E9vAnnYqnNU
hW2VnuOAW3nh+xjOgwZrHQCybCzDW4FimP68wq1QU40nQoVX3O3jGYl0o79y
RE0UYaStYn82B+8s/aRlvn/FgKQsvFGRvEAUnYuc88f2cbcPd+qDhr50VAsF
W/AO75/TBeXbRi3oVMNRg566h+u0QZdrO5B97DgpXfAJ8A+Uo9KklDGEbmtX
bZeInWXxdy34C/ZWkB9VFTqKgjRIVR5Lgh3mfYzrQInv0SVA+70AffQGQcju
CkMOhpDQ8v8QGv4B36wuQQ==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/mFhEasDl65/cFG8Zv77//vf/58YJv37//f/0/9XdmPV836iaqsn
Q6xP2v9/qGb/+f/59XGDeA4GUdN16O778/+8Z8uZ3z82Xbx6F8283zsYeI8/
/f/v7/87/X/+/0KW+vv/P4sPUOTf71yz+P//r/5G8tf//wwMi/7//36v/ALD
oS9vtvxAsg6Irh/4/3TtymUM6jv+P/oDlfgHkX7Zeen/xj31ZimP/z/C8PmT
r0ve2QLj9/fyL39R3fnn/5v/N//pxzEwvP3/FaID4ZavH0/+e/nfBCT3G83M
v3/fbL3zf7EBQ8x3hOg/ZHOtGHz+v8OWCn79/L/dqff/IyxxCBZi+PHowW8M
XUCw7FDvjp0Xf2NoAFJf88NVun9+/P0bU+7X99hAhhX/v33DtA6k5gswHv5i
iKKzCKdhAMZx3FM=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJwtUktIlFEU/rAWrcpAgiJ6LFqU1KpMCAppU1CLlCioja9RW0wwCuXKHkj0
lIIekAamBlmktSjKxtFqU0mOYxbZZEpS6jA6ko45mV/fub/3597/nu+8vnPP
WV9wPNeXBqB8iY7c/BM5gUB+ZV66hIP+8rISf3HRXn9FcUlxILvAzFYv7GFq
IamjH313cYcgJ3hG8hzs3sfnZCZ/nUrbyL/NHRzgI4ybTyMjxGxklhzhTOMt
sism9Mc8+JMcxaSixuW/A3Rr5ID7Jbk0zoarRMSJQKvCcCVRZ+L2KcbqXynz
PeeFtqoCIHjh7aoUa7juBdkjdKd0fjEXPSTNbsuUl4LnOEi+tKhOrfWA72h8
XCryBtDshHaFmHO3P6jZYHUW4r1J2ll8qI8cswRh54goP1k83XLQvkZloITM
AM87bFA67Bv/mCWT8HVW3WST8j9jFG1Cal87frVEwvFYK48GjyM3M44KxyPM
ppjxAPYIT+cx42sdGNb7WjfYr/ODoftPI2ItwDXtnmrO6FfLQrqax4mTvXSR
mCLfmG/1fZR1CVih+z/SZ1gqHkLHQk3ARbbk0bVgEl+bGsmtPrZCtouYAhKy
+8bQE9NnT7A76CYDiW0L71rqKliu/dvXrbMUvHKEQWkuO80AOpnYTc1IyDJm
HkY9FnvV7aLmK8oiceh1UV2f9P5HG7yefudTz/KS9YGdj5Eh9LYa5k3Q0Mgs
z3IedctUmiw+e24KMs0xjW9kSBPKLw6MqQGbRm3WK2nDaqE5nXJpGdBsHWrh
fyc+Oeo=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4B+I+PP//19Mid+X/z/auTbp+keoKiRwKTyewdssS4whE9NE70wG
Bve17AxWarfQZH47yDLI1mmYhEXpmrP8RjHz18/5DKktP/4vjshjqHdEcc7P
R/IpE8+DWDsZChkYviJr+8nPsO/et3//Pz1dG8jAUPUFSeoHA8Ox+nAQa20a
A8N7VL/VMcgz3Pzx7/9DjUyGiLeoriwHxhZD9ZP9tm2KDIxoPn/NsGNS1LH/
XQ/1VQTFUM38v5VPeOu2P/+uTWFi8CxGC87fp+ffAJr0p35eKmaAQd17laFx
Gsg6mI3INh9j+D8Tm6Z//3/838HA8PzPPywx+P/1T0+2qj1/sFr367+Zscc6
HG75y5DHoP0Nq8a//zcwLFgch9VEUgAAUda0+w==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CNV4W9kDlbdx3EZ8ff/T4imM6jiv8Dk0c3eMv//97/DtLL1d7BN
Xsz/d1c+o5vY8+y/NIM3yMcv/39Fkfl5bEGT15wLuf8f/vj+/d9fZEP//Vzv
YN4IFHt/Es39/379+bqd4RGI+ef/7zf/n6CYuPJEoeHav3//v/zz/9fdh3+R
9f3/s24676Sk/yvX//f/+3njW1Rjjxkk+aYA42Xt+rwlqPb9//+xNvj/0/+B
vtGRSh//o0tqyln9K3++ioXNzQozrJ8B8WuvMIb/N9FDBRxF/1/zxGUwvP2D
LgkKgP/X9Ri0+v/DzUT2y0tzhogidD1QBQvXigSj+e0fOPaA8m93hH25CbMb
Ve/fX+/+3/vy4xuGFMyIjX/uYZe6xHDiTvYvDPV4ALpiEAAAYvrZBQ==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0cH/zBEyAeUmIVP79eb691aN33+jSnzZfsjAQUG50Xr/v/FlFwO9K+A
4RkM8b//f76Mq9m/jUFj4/lH6HL/Xl+9c/n/x7DN527/f47mst+vP9z4//uL
qzjD/T9o+n5+/fb/77c/Ze7OHj+eo8n9efD77edPG56mWAQ8//8LVe72xp//
/3/6X2Lj7PMLzX9/jqx+BqRaIw0MbH7/RvPf31P//3/7X86gZBn26T+Kxn9/
QPx/r9QYQq7//4um7d8vkH8+ajH4YYQKVMFNiayPmKIQPy4pPIslDv6D7Huf
qvb2x1+MWPwGjheGtnkIIUQA/Pj/2+5/qh12hzzcWcgw6fifHxiuAIH7exje
/b/3Hz0wSQNg4wB8cOCP
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cH/uFgY4phkyUG/MVjY92Ne5+rfvxB1/Lny//pDIqX5RiCTn1Cl/tU
ygAGLgz7/vxAlXrMEGHjqxXw4nFY9o//f1F89t09sq71MpC13e3HN2QngJim
YXPB7K/Vm1Ed+/f/vf8fXoGZ0gzbPm76guz+X7cevQA64Pu7M6oMeb9RXfLr
59PPX36cA3rQ3HjXWzTPnX/y8f+X9U+WuTE4ogfqv1WFt7f1MkwvcWIQWPcf
KeyA6r4uYDf0Eslq2ODIIILsDhB4EzbZmz+qrHVHmwVP71+Ez8Dg56rb/2/8
/3Pb4zjD3P9o4PM/sC3piTzJ//+jxtXHv39AvtpfvSQcI+r/fPn8/+uj8+19
NR++oznlPzg2L8eHc0/6DnPGH4R7/n2PNO1kOPQMzd8Q/O/0qa3X3v3HSA8Q
SSBcg5Ga0PyKHqDYlAMAXTzKHw==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJx9UU1IG0EY/fDUS8FDwRxy8dBT8dyWHop6KD2IxdaropiIBZMQLSr00EOh
tN56qxTqwbaHolBEqidJaSmJIR4a/AGLgiBuUrdmkzWa7MzrzOwk7m6h3zLf
zM577/ub9uF4X7SFiCauCNc3NNWZTA7NPGwVP/2xibHRWGTkfmwyMhpJ3hqW
tLBeDjikcZzj/1bUTDR3V1EXqwrW5HEEjaOAP5x5birKOzAVeqpZLqMkHUOe
jhxxoN1FXywGbkzSdbqxwqzUsw11V+MNDFHqCnW8mEW2451bX6MaZ/8OIUEZ
mNyY/nlZqMyBe0+7pVxkLoV3pn2NrFJoMaeD8N4PGrKUf0Ikcsr+2du9j+Ou
QLl0hhD/Kmkc9TIVSt6pfN4WupPqubGfYsa6b2oF4z196wWWxdGq6uo0xqz8
ABXx6Yca+anK2zQHCxnT3FzLfznbK+SY7X+A2vEFXs7TVvnqL19zamYOF+o0
joAL8XlDMsk6zLX1zCVgc1dzyfiN6oO2u4NLz70Pq+OeAK9uX6M3dj2IMRmB
bj56XEbAagKsrH8fqJuvdd9+aRF2FgeNtrkf5bBlGZWgyG3ER/TW8m+gv8gS
2EQ=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxVUjtLA0EQXqzEykYrG8sUgp22ARFs46NP8Aw2CSaCROwiYmFvYSmBaBM7
0X+QRg0IUbQQizMmdzmTS3LP3XF2b+9yGdjXzOw3M9/MYiaf2psihBSncUul
j5KFQrq0OYuP7VxxP5tTdjdyh0pWKaxmuNuCXBAXHxeNXh7eTWBSgzbPifkO
pX/8rzWBZgmfUDQJHBw2TAqTGIHVlBoVoB2PyRj47/xCuISpMnAjDx2gvoy2
44ncgFq8EKv8oOyQJWBNAU+DbKjJD6+r0VOt9MpjRPWDemf7DlDGKDRWkqQl
oknkKsAtfzBbWZ+TNcJjUEmDA1u4sRvlXA/RIm6fTRva/bNLkmi/McHGT0iO
78MIvyW2Lir3gsMwHQNtrMuAlDvzmtD8SpYo2OaXi1nla4Sc+AefYA3Dvmpg
DDBHA6zrNVJ3dZ78mBnD60MLnN7MS9i6sW3UC1w+OmOeuXQ5ywgq2lAB2a9R
jGwD/jzQqlbNUfGPiWREyD5iMJ59U+JdRbge9XkpWlOEcqAnGOPLwfgZGAyQ
NvTV8eUKNCZ+co8n+A7GxAm1cZmYhGjSgl0VsxZoRSf+AQiw6KE=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/8HI/gIxJ9vfMWUeNH94f+nbIb1mO7+u9/VjYHBTpThxL3/P1Fk
fv3/tL6ZsenKnjyDwB///6DI/ft/MJhh2dmP/9Wl6zAs+3k3qPL7/9+CDAwZ
d9Dc8vffuqK9//7/qGDg+P//DZrc11v/d75sSP5vlIth5Idv8wPPPp0JDP3g
f7/Q5J5Oe/Z//sW0LCaG3tfo+u4znDjb53P45L4FGn///UeJtl+OUxe4lAMZ
7/a4fkDX93rtmbuX///f+t6cATOm76x69f/b+//X039jyv0DWxF1LW01htT/
f6///P/zN///iz/oMn//fv7/7lG461RfjJT1DxQR/y8cPrjoNoY2kPS/L0Fl
bc+xyPz///X72p1FNx9g00ZNAADihdl2
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7717127947955284`*^9, 3.7717128007974386`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"bc928d26-f831-4edc-8925-cc04f9ec68e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"Z", "\[Rule]", "X"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c7f13880-4f01-4614-b712-8a3ba6d4ec03"]
}], "Subsubsection",
 CellChangeTimes->{{3.7716936230510497`*^9, 
  3.7716936347948513`*^9}},ExpressionUUID->"91a43d56-fd69-47e7-b091-\
659cd41bc799"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"inputdim", "=", 
  RowBox[{"sampler", "[", 
   RowBox[{"[", "\"\<Input\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xgen", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "inputdim"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<white\>\"", ",", "n"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<black\>\"", ",", "n"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7716134354233828`*^9, 3.771613463698782*^9}, {
   3.771613520254919*^9, 3.771613523950416*^9}, {3.771613564154632*^9, 
   3.771613565464787*^9}, {3.7716936848724704`*^9, 3.771693685283576*^9}, 
   3.7716964968546877`*^9},
 CellLabel->
  "In[278]:=",ExpressionUUID->"1b0b2d90-e189-44e1-a52b-af8abbeb4d0e"],

Cell[BoxData["784"], "Output",
 CellChangeTimes->{3.7716964976234818`*^9, 3.7716965345029535`*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"c81059b1-f0fe-409d-97d4-2d61f727a2ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "xgen"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.771613589600627*^9, 3.7716136134357767`*^9}, {
  3.771613677472085*^9, 3.771613681185937*^9}, {3.7716146155159483`*^9, 
  3.771614630210746*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"19ff763e-d5ae-4fe8-8335-3e5eada90e6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"mpr", "[", 
      RowBox[{
       RowBox[{"mppr", "[", 
        RowBox[{"samples", ",", "\"\<Inverse\>\""}], "]"}], ",", 
       "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
   "\"\<Inverse\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7716147710497017`*^9, 3.7716147933882427`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"7aee9c08-b551-4776-ade5-bfd4e624b070"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUs9rE0EUDl702D+gF+9eLT0I0mNBKqZID54aTEMRYpsK4qFQL/agF0ER
tRd7Kf0RGrzrQcRKqCCIKQptU0oMNSFb091sdmfmfb7Zmd2keTDzduZ98973
3reXM/fTMxdSqdTCJd7S0w/HCoXpR5NDfLidX5jN5bN3x/MPsrlsYTSjYcN2
AQpsBGvEZ31QCn0m0IvHJslCkgRknBLsKMrEKATxayL0kPTkVo0B/r3F4yiF
pCS1gOsgaFXf/Dw5tQXiEAn8Zudtr74zheMyZotwlWKl5fRxZ4AihPrLxUHj
uLxrmSYVuTrC7l632vTQFEmPlq4LdKAarnfkUF/7ppuvH4BTJ/ASBkp7qf2v
bwhV58cnPQJL0uR0qVNp1pzW5s39si9sIlIGwyPRVD++LJVEaLIhdqQb2Zm6
cQeuKRErgHZIXXbPr6Yeq79WHsuRJKr1Q/96+tocK9MOY6X0JuFja2XxWfEK
sPlquU5G6SgauJ2NidfzIxfx5/PTF1/4QgeV1a/ZeL/mTa2/Le7uMRllZhnx
P8MZFz/8vhQEUNT3c3F/UrLO5LdFxNzjpch0YhhzHvkvkiMSSPamDdPJgIkY
oAYjfBNC9K5pwMPOTp1/A/wHSgT2kw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUr9LAzEUPgTR0T/Apf+Ck4tDEUTXtrq3WIuDLbSC6Obm4OIoLQo6+GMq
ioqbUKgoiIi6qYOClJZWbbXeXZL3fEkud1cTkvfy8vJ9eV8SSeVic32WZRUG
aYoll6L5fHI5PkSL6WxhPpNNz05lF9OZdH40JdOGvYEoUDXPUAM58WBtQkEa
lxFH+QzIgAwpI0NCQBiOUxy8U8rh2tDBLmLlDvVJUPsB1dNFMf7WNJwmqqGO
X45262ioeppdvj0/bXhAXPMJTcqFc11z2rYG1KQCXbV0K9Xy3ip2/sHJ4rCF
sbX9s6s2570K0ThZiJbGrInnbwWiIP3K7feHtrW+c4+MOjGFBGUfDfa6fbhS
I3xw1Q4IA+w0v3DyYBNsYjCSedsu1J1C/0BJaR/iIhmIAlvjVqQKbqCj75Hz
OTKzhfqOIpAZQOb85hIbNdCvoHLUE9lKblZMPBrhGXp60+wq55KhfnaQqXqz
IyFIEbwR3gUNKlem2+78dLn+PgAiVAfzCxaaERD9YcpRMMzc3/9LgoGvsP8V
w6UG2cxkyYK8n2eS/gAdfPna
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU////5//////+I8AfMPn7P1bwD6jyL5j88/svRAQm9fsflPMHYdpvuHkg
bQgAYv8FKVvf9fE5UNuf///+oqj58e12YITdK4hiiHn/fkOc+u//t+lcTvv8
LVJ+/0I2E6jq8///T/vFGRgTDHsfwAT//gU5GAzPz61d19Zbkfvj9z+os/+C
jASq+Pf3x3y2QE3JH89+oLn0//+f//9cPMUQV/Dk5w9kKUhI/Dy2MaSs8COW
IPz17//2/BX/78EDAKT1HyRsnn5eIyA2b9OhNyC3/f0L0/MPGF6///+7m1cv
6Jszt+vPL7CrYSaD9f874ZzTufjC3F9wP0NtBIX+ux8rP/z//+blO5jyP7Dw
+/1t56//L789f/Pvw98/4MCHxcqzN/+/3fn3HciKnnjhJ8xEcED//P/l5k8Q
72Xl/1MvUcLk+8k7d0CKfj8oN1z3AqLp3/8/EENPb3vizh4euOWY7NRlCEdC
PfLILJVB2GduurnRV0gS+4cS2rvm75y3aPl/TPAXjP4hGwc1ExoGv8AK/iCF
yV+4yXBF4KSAMBGGEYH8HwDjYd32
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUj1IAzEUDh3ESRxcBAcdXOoopQ4uDoJScaho51Zr61KxFYrgpoPOCk6F
DrooFRUHBxcFRSgFK/hDUZD6Q2vVWvp7zSXPJJfr9RrucslL3vd973vX51l0
zlsQQqF2Njnd4ZFg0L0y1ck204HQgi/gnRsPLHt93uCQh1/rkS8QoBSah7Zr
CZoH4RMmxLguPjVinBrptCmNH6km5Lq4waCoCQrqB5mtfSgKIkOLWBzPRNJr
vT4Ohs0MfEE/45sxLNio0ELFpPKIAjfbEx9Soswl/CG0BpDzu3JFquNRLV1D
Ku2MhZ+rMii5tHxQANnxb9HkH4dPF3GmcOcM+lnBLV7S2dW35Dlqc5TLDF/F
pOEaQDx6XTnaQCjyWlJrIsiTVcKZK7aLbKy/q9vxtSeVEKmnjrO37wCTaPAM
8hVptqDlKn/YJjlqjz4oDEljIlSnZMoHTtahcH8p2XiXuFuMFCCRQnD6DX9K
k9FEbxyyugKpx7zRX73OulIb7lh6usIcSJWWNpx1W23ZlxKROM3eVGE3YTk0
WcmroESrlpKG9dToUQNDLwnrkKLpxk9CpXgOQ6BlqPL9Bz1c5+g=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJx1UrtKA0EUDVaWgtjZ2PsBtpa2ih8QNT4QIq5CsNTGxg8wqKhgKQg+QLSw
MBAQBB9BEUSRmETRBI0b9jFz73XnsbOD4LA7e+fc15lzt2dkZnC8LZVKzbVH
22A61+846YWhjugwnJ2bmshmxgay85mJjNM3IsK69Ut6YWwQ/AOAAZSPoRUH
ZkM0IMrvD3FP2gDELZ+MruZuSiKTm1oQGx97k4WrloqUIEdDIYLpVCCiX9JQ
rZA+q5wYY4oZYKgdX2HgV3aPfeKcuKgFKIkh+VFIma6LNc6ZzUFmuZF50bUB
YCmg+cvK+ck/8kiyntjdTRmqCXD5RFnPDUZwex9pqHAk7fHp8mSnsZh7JNYg
Fkb8GKEWspw+3HI68z3DhW3a1+2UMujXxlfWnr3m0k7Vpe8g4ahkPZ/1+ZlX
XH+gt6aXDBikcEFL0PhYzoxOJ3mo6JabVP9+LfmrR+9Egf1n1Osv4nTwdVG5
M5eXWQE+sQcWnvVWQmZPRQqNohd3BS8vZkFGBlWC65kkzWK1mVSwleAY3wNs
BJRkZE8FVSNVF8D4QAsvLeH7BQvR/Rk=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUj1IHEEUHqzSKBK0szAINhZqIVj5U6Q4QsCs+AcRVLw7BbnAKRqTSyEi
nAgWihaCdoFU8af1xB/8KRRM0EYCFqIgYkDDuXvuvDcvszM7exsyMG9233zf
+/nevOr7YMUKGGPDL6Sxeseak8ne8dZi+dOWGB6MJ6L9kcRINB5N1vd5sDJ/
k1qorNAWhfrWf3IBePeChyDKLU+BBoQIBIYEATegSIQbIksLocyc/ltIT1yA
X4nKIxRYiMPVntWVLwvpRXogctEElDEAf5VHKmota35D4kxwFYwT1BS9Xku8
qx4Yt0mTZECd4Omu9vPGJmOxr/9U4qWHs+mpqsssK2S2V0S+MeBkpxlrv1r5
2J0NGjEAoJP6UuvgbdvckXaKkNAIB3uMNc1saxXzRG+Ds8Xqal7uy8Zy5PoU
gehpwMlKNbLObulXQwoaREmLve8YGmIuZkXQhPAHclp5OzqZbr2mP/6VxxZa
ofud3e9Ej5mj32qKqGryg7vk2ADfPlkTRI70uCqolsFWpWe6ImuXgGo+z9wX
BlyHfoyeX6Q2mzIYdKgey/P1+lI8dXxBzk/HF4Xn+5h909JQsmznXFO8eSte
ufyc3+QeuZZDiLCgZITMj0d2iAKMChIWABXHAENXoI6/5JfSHQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUjtLQ1EMPgiCk/QHuOjoJopU6OLoJPgWXJTW6lKhCiKCi3YWsaIUEXQS
BOeCFJxUFAedBJUWtYjFF2p7295zEnNyeh8N9Nwm+ZJ8ebROzQ1MNwgh5pvo
GZhc7I3HJ5cGA6QMx+Zno7FIuC+2EIlG4sEpDWup/QBtRFDIAvwqbZLoCbAR
apoCZLhkC5iIGsYACOGYSCqKo9lZ8TIC6EdWnZz+YmSw8efykwsoRroektz2
xI3YeUQpOantOkh9HG8TQ4mihkvmQL1UNR9SNteOE6upO2ZHFQ194F7zM/0j
t2LPa4KlzJkL++mSEGmNUwodiNQTgqun7hVxWqrnx4AcWt8YOhot8ajq0srn
2+JPOSk67pR2gRdEkreJfJfoeZBYrk1dGq70KOt+OdCc0tS86TsL+NsQbZ3r
eK55+goqxolBET5o/KAGzLj0TMC0f3L41h4KvhbMUlmqzv/3bDYbXE66lwEu
pmzT93cs92J2xF73aApPqd3MxbV0LL7ubbS+ziy0fOPiczA+GytbeXTb1Vt0
wuhiVDWDPoL1CaQmYTM/ZTipOgCC0wB42wLw8yD5ByTD6Lw=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUs1LW0EQf3goPfoH9OJdT4JIexJByaGXFA/FSxObqgdTSApSWhBv0YsK
hTYVrODFoqgoQQRpwEP9QDyUpgVBFKOkgklMSN/Xfkxn9+2+rN33dmdn5jc7
n23x19FXLZZlpR/iEY2N96RSsbfPWpEZSKZHh5OJl5Hkm8RwItUdF7BHaoNY
XJ2CMvkDBXMRFDCDZ5SC+IBxHvD8PxuGj8ntAKVaZDiTZKJ3evVIahk33VFS
z49UfxXgr2EAOrDc7LYvuAqqOFVq+bh3la82oP6j/rPEgXLio5hCg2mIU0X0
rmvEQYOLixnamBS3XayCy6RQ+fUC6jSuL8IMjWwxAIRHFrM1ZaTMbk+udllp
eSX7YX7hkIZJSFq2xx4/efriwVqpCjbxpJAogL+XsTpH+rs6rTIy0LQUBT+l
hR6rI2INYr2pqrI04qz2B2BncrRvKqrRoHoDpGKjz29jQ4s+4r1bISSByr+s
APUg92kd7mRwPtfVvCwX17fPZ443c85v1R+fqx6S3MbX9Oa7uS9bn2tEF4Wp
Di+83y9mnrfvuzfgoES2XxrKmJe+H3wkZzXwdMYEeHO0CLjmIOjkqciFesag
hmFqWCBgihMXzkK8PO6xEE46vze4/wA5wOpD
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUj1PwzAQNWWBjR8AA4IfwdoRxqJOnVq1VEiolVo+hMSA1B0WBsRfQGJh
qQQjTEyIobChCgptkYIa0iS2z8c5TtIklnK+8zu/O7/LaqVZ2MkxxtoLZArl
o3yrVT7eXqKg2Gjv1hu16mZjv1avtTYqOm05/BAV0lKBTS6AyFOZPRlCEgHj
RxeJARIHMZ9hFoEdvH5rZwqUJlJV3HFny0YFA7T9bOnJZGjZOlWlGyEGqXfH
B4nSB43JRLseIg+bTDMqiGJfxG+CGU6HP8O726wiyHW+Y31dsJ6vZqwqvIR/
OL7CJ04PMI+Lu7FHjn2SO3tQwVkgE7mcshwu1tdKpcO+bsAQSQACPButty7m
V+ZPKQyRsKYYjybYP2CLDF19D4wgSjP83rwjfu7NsUdXeIJk5mo2DVfgc696
3uHEL8BONam1u2aXTUlioqQRodHGwI56YcV735+NILD6Fag4ON0PzCyCwEcH
PcuVAqemVDB2GVaUgodUYIyKOFOyq2TB2Il/WBH2KCAz5AhMJmep/gGGv/pu

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk0oxEEUnyjJQYqTXFxcpC0HKYQbxR7+sgrbtpslxardRTg4Sk7C1YFW
TuugUC6UgySkHKSsjwtpkWXXmpk33sz/e2rezLyP3/u996Y6NKENFxBCYsUo
tOB0ezQanOkpw0dvJDY6EgkPdUbi4ZFwtDEk3aqMLdRiAlByoQ73Al0JgqqX
8gRQMUKPEWYYk09ADQfUcGWlBrawvBk3kbmFYlIAiwEa/wR3BZo5fh/98wOr
1EkPCTF58SSJt4KEkoOtibSdWNXWkyBdY/6jRLyloXwH4XJ6WQgDP6KLnGdO
hf/gdfvywyCOG4sRbyfBNGZNpeD5WyLZtVBxX0m8y92BjXUHUdPhzTeJ8uz2
7OrFVoPRAawuC6uzdWtHiAKuQFnWZ27U23F4zf8UEZc9m7mIN2upRcibKtBn
wxnkl/rjc75pj1Iz6hwO+zq+qQ0UkX2g4OBqAuf2Cknpk2P2zDBIBpN9TdoD
Uypd6n5Z3A+kpu3bMR2u/yHpsEVIa5rrd2HmxN8jEVYIqbdmw6jd0PfdEi00
xVyNtFml8wvCiSZt3DDfjW++uIrCHgO13IQ1OutObWxuG9g/U3DV9A==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771693679884857*^9, 3.771693696550557*^9}, 
   3.77169653855478*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"c7ac60e6-949a-4912-87f3-f4fd9701a62f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformation", "Section",
 CellChangeTimes->{{3.771693802426177*^9, 
  3.771693821687667*^9}},ExpressionUUID->"f09d7984-2384-4230-b463-\
87d1325cc2e9"],

Cell[CellGroupData[{

Cell["Data space \[Rule] Latent space", "Subsection",
 CellChangeTimes->{{3.771691668769582*^9, 
  3.7716916855203013`*^9}},ExpressionUUID->"032f982e-ef52-4c71-9727-\
8ed48d84984d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampledigit2", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
       RowBox[{"HoldPattern", "[", 
        RowBox[{"_", "\[Rule]", "2"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7716939139817066`*^9, 3.7716939332203903`*^9}, {
  3.771693992255554*^9, 3.771694009821824*^9}, {3.771694045101285*^9, 
  3.771694052286661*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"4d645742-cfa2-4247-a9c3-b5bd490788b3"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ctmMLXjkvKmJmJJbT9OVa59GhjdV5G8c249N4IZdHCrhMEQplO4pTL
Y8QtJ4Vb3y1u/++45PKZGnAaacN0EJfUKgbVT1gldiSKsDPmYbXOlZWJiYmR
ye86hszfbkZhHybOfEMm98/ocmeYpD/bM839f9WGyRZN6rko4/8SRvWn//8f
0WZchSp3i4lpHRfXORBzKZPVbxS5nwZAZywEM//kMR5A1bhcRKQW6vxVjD5Y
/QgGyUJPcUsOEAAA+izHcw==
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{51.99999999999996, Automatic},
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "}"}]], "Output",
 CellChangeTimes->{
  3.7716939352304916`*^9, {3.7716940366247454`*^9, 3.771694102894614*^9}},
 CellLabel->
  "Out[204]=",ExpressionUUID->"5513ecca-779f-470b-a176-046ca7e9a550"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampledigit8", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
       RowBox[{"HoldPattern", "[", 
        RowBox[{"_", "\[Rule]", "8"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7716941687665825`*^9, 3.771694173586684*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"f4564381-48c6-4e7f-811f-d38b4ae1e161"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4Etxbt6O19hkdiRZMDEyMaV+wZTaJsjEJFm4OpJp+///V2eFIUtd
1meSLL75//8tpu75njwydshyTUxSJ0H0SS0mJinv6ShGrmYSevT//695IkCp
PjTrbkpo7fufocTEpHP7KYZbipi4JZkZHXa9weKFWiYmprKdvzAl/t5WZmRk
NH2Lzd/nmJhEnIGWfcbUNUWNs/bF/1uKTNYYcp+YOCeD6GUsrNvQ5ZKYaiEM
XrZj6HIOTEXPQLQ/C6bcHSYmRUMgYGOKeYXhlgtqQM8xhSYnY/PDh+dA8Bub
DP0AAO37sIA=
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{42.66666666666647, Automatic},
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "}"}]], "Output",
 CellChangeTimes->{{3.7716941797551746`*^9, 3.7716942028011937`*^9}},
 CellLabel->
  "Out[208]=",ExpressionUUID->"ee7d5064-c645-4d43-88c0-2290cf3adea7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "\[Rule]", "Z"}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"11f1412a-8d22-4d8e-98ee-c3d02861492f"]], \
"Subsection",
 CellChangeTimes->{{3.771694215015539*^9, 
  3.771694230929942*^9}},ExpressionUUID->"e1d6e7d9-f863-4c16-892c-\
f6e2701de71e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
   "trainednet", "\[LeftDoubleBracket]", "\"\<Input\>\"", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mm", "=", 
  RowBox[{"Length", "@", "sampledigit2"}]}]}], "Input",
 CellChangeTimes->{{3.7716941304846277`*^9, 3.7716941319442735`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"8bf9bdbb-4dd4-4617-ae0e-bde0b6b2968f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7716921050171056`*^9, 3.7716934451985416`*^9, 
  3.7716942732109594`*^9, 3.7716944203642473`*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"ef7230cf-8681-4cce-8bf8-21befb46ad82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"mm", ",", "nn"}], "}"}], "=", 
  RowBox[{"Dimensions", "@", 
   RowBox[{"mppr", "[", 
    RowBox[{"p", "[", 
     RowBox[{"pp", "[", "sampledigit2", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771610786839265*^9, 3.77161081163018*^9}, {
  3.771611456448844*^9, 3.771611461718235*^9}, {3.771611856825675*^9, 
  3.771611858934649*^9}, {3.771615039148193*^9, 3.771615044813901*^9}, {
  3.7716934746173563`*^9, 3.771693475578439*^9}, {3.7716941362700057`*^9, 
  3.7716941373557806`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"01758d63-8f02-4ff4-8aa5-2bf47719c3e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716934775979586`*^9, 3.771694277417776*^9, 
  3.7716944219345565`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"5628a9dd-6d71-471a-a56c-aae8580ba93a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<white\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<black\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.771611474368038*^9, 3.771611549075735*^9}, {
  3.771611636693874*^9, 3.771611640498125*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"7388e50b-fcba-484b-b152-2e995bb0386d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "checkerW"}]], "Input",
 CellLabel->
  "In[236]:=",ExpressionUUID->"3e3dca7a-e06a-4164-b693-0999f31a34d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716935045750237`*^9, 3.771694281605623*^9, 
  3.771694425146659*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"be57b1ef-290e-45a6-a774-7c461339bfa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mapping to Latent Space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"2", "\[Rule]", "Z"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8d59a7d2-bf10-4ac6-b6b8-eb4d76b79a03"]
}], "Subsubsection",
 CellChangeTimes->{{3.771693514505464*^9, 3.7716935433854847`*^9}, {
  3.771694288618898*^9, 
  3.771694289359172*^9}},ExpressionUUID->"e7fec1ec-650b-42d7-8750-\
9008c0b3482e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z2", "=", 
   RowBox[{
    RowBox[{"trainednet", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"mppr", "[", 
         RowBox[{"mpr", "[", 
          RowBox[{"p", "[", 
           RowBox[{"pp", "[", "sampledigit2", "]"}], "]"}], "]"}], "]"}]}], 
       ",", " ", 
       RowBox[{"\"\<checker_w\>\"", "\[Rule]", " ", "checkerW"}], ",", " ", 
       RowBox[{"\"\<checker_b\>\"", "\[Rule]", " ", "checkerB"}]}], "|>"}], 
     "]"}], "[", 
    RowBox[{"[", "\"\<Z_out\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716935564331055`*^9, 3.7716935652731524`*^9}, {
  3.771694301061452*^9, 3.7716943034302287`*^9}, {3.771694437049867*^9, 
  3.7716944383529716`*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"8a1491b4-614b-4888-9d5b-6d40b20d5ebc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"Z", "\[Rule]", "2"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b91eec14-c46f-42fc-9f93-b2342ca3ac77"]
}], "Subsubsection",
 CellChangeTimes->{{3.7716936230510497`*^9, 3.7716936347948513`*^9}, {
  3.7716943082413425`*^9, 
  3.7716943083015766`*^9}},ExpressionUUID->"f2cd47a9-e6cb-464a-8b59-\
ab6244fccc26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputdim", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"[", "\"\<Input\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xgen", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "inputdim"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<white\>\"", ",", "n"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<black\>\"", ",", "n"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7716134354233828`*^9, 3.771613463698782*^9}, {
   3.771613520254919*^9, 3.771613523950416*^9}, {3.771613564154632*^9, 
   3.771613565464787*^9}, {3.7716936848724704`*^9, 3.771693685283576*^9}, 
   3.7716943132551885`*^9},
 CellLabel->
  "In[217]:=",ExpressionUUID->"7bfed89a-04de-4722-8db7-d3bd2d68c5b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "xgen"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.771613589600627*^9, 3.7716136134357767`*^9}, {
  3.771613677472085*^9, 3.771613681185937*^9}, {3.7716146155159483`*^9, 
  3.771614630210746*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"c292d22c-9bf0-43d6-ba51-d2c626fb0c91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"mpr", "[", 
      RowBox[{
       RowBox[{"mppr", "[", 
        RowBox[{"samples", ",", "\"\<Inverse\>\""}], "]"}], ",", 
       "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
   "\"\<Inverse\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7716147710497017`*^9, 3.7716147933882427`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"f5a13c5c-9bcf-4b4c-ba1e-9cb81207add6"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJyNUj8sA2EUv1gQi8XWSLBYGAyCiMQgImLRWJqmSUtbIk7SSkRi82cwGaxi
EjEYRCPKVF2lQWrohWAQOpBISvW+e++5+97dubJ4ufvuvfven9/vvdcSmR+P
1SiKkqwzj/Hw4mAiEV7yN5rGhJqciavRqRF1IRqPJnoilpvPfgmBAJCArIcI
6R8iPXXW3QCUKqdyLdakD/5KjWQgxwMZP3nA/u7P50jIKFFVGeltq9Z/LhHo
Ai3c4MDAUiE0RBtpnfPr8gLswEqse3g4kyfDsCwzkXDgA90VpnvbNrPE4MEt
h6gfB9XI4/IFU7PLGE7kVaa4nU/fuIzsR94XdXq/3dFIsvAmtWV9rfeSwHB4
uywtOv6BoaMn85fZI0bouj3MtSczr+9cwhZDdhueOxuaHxd08TMW98j70mpT
a/1yyrIrFhXhdBz3qGvbXISx0dkvoDL3QzZO0OV1aDK1ehpU+js89Dnp5krg
oLSrnQX6NBsMOKCATrJvhxrFc1WEeRKlCn0Kun/xEgBkGh90i1RmXXJydog3
pFIGhoAgZ+7tKXKAMz7ZcEAP3mrF+LuPLN9JmuQ3
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "}"}]], "Output",
 CellChangeTimes->{{3.771693679884857*^9, 3.771693696550557*^9}, 
   3.771694326369071*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"24223211-f3b0-4ecb-9325-4a1f0c7dd91f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"8", "\[Rule]", "Z"}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"d8c95482-ce89-4ea5-97d8-bf1aa9d79d0f"]], \
"Subsection",
 CellChangeTimes->{{3.771694215015539*^9, 3.771694230929942*^9}, {
  3.7716943785026274`*^9, 
  3.77169437893001*^9}},ExpressionUUID->"7b1afc38-ccaf-42c5-8249-\
ed671720f568"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
   "trainednet", "\[LeftDoubleBracket]", "\"\<Input\>\"", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mm", "=", 
  RowBox[{"Length", "@", "sampledigit8"}]}]}], "Input",
 CellChangeTimes->{{3.7716941304846277`*^9, 3.7716941319442735`*^9}, {
  3.7716943849825525`*^9, 3.7716943863823957`*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"16574dda-d464-4d19-92ad-7ea64847278a"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7716921050171056`*^9, 3.7716934451985416`*^9, 
  3.7716942732109594`*^9, 3.7716943899703827`*^9, 3.7716944458825097`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"9d0a4ebe-9e4a-4e52-8a72-bd9cba3e67a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"mm", ",", "nn"}], "}"}], "=", 
  RowBox[{"Dimensions", "@", 
   RowBox[{"mppr", "[", 
    RowBox[{"p", "[", 
     RowBox[{"pp", "[", "sampledigit8", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771610786839265*^9, 3.77161081163018*^9}, {
  3.771611456448844*^9, 3.771611461718235*^9}, {3.771611856825675*^9, 
  3.771611858934649*^9}, {3.771615039148193*^9, 3.771615044813901*^9}, {
  3.7716934746173563`*^9, 3.771693475578439*^9}, {3.7716941362700057`*^9, 
  3.7716941373557806`*^9}, {3.771694381706278*^9, 3.7716943826967363`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"2a078536-8f81-42d3-b916-ae0cba98904a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716934775979586`*^9, 3.771694277417776*^9, 
  3.7716943918281126`*^9, 3.771694450008357*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"a08076fe-ee00-4228-9d7c-f20ee9cab8da"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<white\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<black\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.771611474368038*^9, 3.771611549075735*^9}, {
  3.771611636693874*^9, 3.771611640498125*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"824fabb2-b4b4-46d2-a6fc-e7e11500cf58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "checkerW"}]], "Input",
 CellLabel->
  "In[229]:=",ExpressionUUID->"6cc56443-bff1-42cd-ab91-2697904eab81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716935045750237`*^9, 3.771694281605623*^9, 
  3.7716943949896755`*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"cc3b57df-12b7-4636-a4cf-7c057959bc34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mapping to Latent Space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"8", "\[Rule]", "Z"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d56c28e4-6e35-4b4c-8ea3-d0c7727a064c"]
}], "Subsubsection",
 CellChangeTimes->{{3.771693514505464*^9, 3.7716935433854847`*^9}, {
  3.771694288618898*^9, 3.771694289359172*^9}, {3.7716943974562817`*^9, 
  3.7716943979259806`*^9}},ExpressionUUID->"735673c4-496c-41fe-8664-\
c4664edf88a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z8", "=", 
   RowBox[{
    RowBox[{"trainednet", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"mppr", "[", 
         RowBox[{"mpr", "[", 
          RowBox[{"p", "[", 
           RowBox[{"pp", "[", "sampledigit8", "]"}], "]"}], "]"}], "]"}]}], 
       ",", " ", 
       RowBox[{"\"\<checker_w\>\"", "\[Rule]", " ", "checkerW"}], ",", " ", 
       RowBox[{"\"\<checker_b\>\"", "\[Rule]", " ", "checkerB"}]}], "|>"}], 
     "]"}], "[", 
    RowBox[{"[", "\"\<Z_out\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716935564331055`*^9, 3.7716935652731524`*^9}, {
  3.771694301061452*^9, 3.7716943034302287`*^9}, {3.7716944547508545`*^9, 
  3.7716944608344097`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"6a436662-5fa8-455b-b8f7-87d1c200c50b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameterization", "Subsection",
 CellChangeTimes->{{3.7716946195278482`*^9, 
  3.7716946227415953`*^9}},ExpressionUUID->"3772c025-6ac5-4dfd-a28f-\
7402d1d4b366"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "t"}], ")"}], "z2"}], "+", 
   RowBox[{"t", " ", "z8"}]}]}]], "Input",
 CellChangeTimes->{{3.7716946499909515`*^9, 3.7716946790765066`*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"455596a8-7399-4765-9eb8-bba4eb547ce3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"Z", "\[Rule]", "2"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "048ed9d5-702b-4164-a008-e5387ebb29d2"]
}], "Subsection",
 CellChangeTimes->{{3.7716936230510497`*^9, 3.7716936347948513`*^9}, {
  3.7716943082413425`*^9, 
  3.7716943083015766`*^9}},ExpressionUUID->"4b4afa33-5fe9-4e98-b0fd-\
65344bc92714"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputdim", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"[", "\"\<Input\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xgen", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "inputdim"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<white\>\"", ",", "n"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<black\>\"", ",", "n"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7716134354233828`*^9, 3.771613463698782*^9}, {
   3.771613520254919*^9, 3.771613523950416*^9}, {3.771613564154632*^9, 
   3.771613565464787*^9}, {3.7716936848724704`*^9, 3.771693685283576*^9}, 
   3.7716943132551885`*^9},
 CellLabel->
  "In[217]:=",ExpressionUUID->"dcb1c464-61e1-4df6-b2ca-aa689506d7f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "xgen"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.771613589600627*^9, 3.7716136134357767`*^9}, {
  3.771613677472085*^9, 3.771613681185937*^9}, {3.7716146155159483`*^9, 
  3.771614630210746*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"805a7954-c770-4105-883c-4901114dae08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"mpr", "[", 
      RowBox[{
       RowBox[{"mppr", "[", 
        RowBox[{"samples", ",", "\"\<Inverse\>\""}], "]"}], ",", 
       "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
   "\"\<Inverse\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7716147710497017`*^9, 3.7716147933882427`*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"951edc1e-3fec-43b5-a07a-9bef2721cb9f"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ctmMrXgUvKmJmJJbTjBVa59GhjdV5G8S249N4MZdHCrhMEQplO4ZTL
Y8QtJ4Vb321u/x+45PKZGnEaacN0CJfUagbVz1gldiaKsDPmYbXOlZWJiYmR
ye8Ghsy/HkZhHybOfEMm9y/ocmeZpL/YM837f82GyRZN6oUo4/8SRvVn//8f
1WZcjSp3m4lpPRfXeRBzGZPVHxS5XwZAZywCM//mMR5E1bhCRKQW6vzVjD5Y
/QgGyULPcEsOEAAAOC7Hng==
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "}"}]], "Output",
 CellChangeTimes->{{3.771693679884857*^9, 3.771693696550557*^9}, 
   3.771694326369071*^9, 3.7716949777436247`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"a0da53af-4855-46d7-8d67-23ca9a46eade"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "z2"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7716949020347314`*^9, 3.771694903837324*^9}, {
  3.7716949647092514`*^9, 3.7716949749287004`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"a108e232-4f21-481c-99a9-b8098e19ec6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"pp", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"mpr", "[", 
        RowBox[{
         RowBox[{"mppr", "[", 
          RowBox[{
           RowBox[{"sampler", "[", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<Input\>\"", "\[Rule]", 
               RowBox[{"f", "[", "t", "]"}]}], ",", 
              RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
              RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], 
            "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
        "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771694996713468*^9, 3.771695018819934*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"ea90030a-fa1c-42fb-928c-86813fb1f1a6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {826., {11., 17.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$2003179$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$2003179$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`pp[
        $CellContext`p[
         $CellContext`mpr[
          $CellContext`mppr[
           $CellContext`sampler[
            Association[
            "Input" -> $CellContext`f[$CellContext`t$$], 
             "checker_w" -> $CellContext`checkerW, 
             "checker_b" -> $CellContext`checkerB]], "Inverse"], "Inverse"], 
         "Inverse"], "Inverse"], 
      "Specifications" :> {{$CellContext`t$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{877., {58., 64.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7717109015612535`*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"5ed33a6c-67cf-42a6-99ca-106ec2e6cd38"],

Cell[BoxData[
 TemplateBox[{
  "NetGraph","invindata2",
   "\"Data supplied to \\!\\(\\*RowBox[{\\\"\\\\\\\"port \
\\\\\\\\\\\\\\\"checker_b\\\\\\\\\\\\\\\"\\\\\\\"\\\"}]\\) was not \
\\!\\(\\*RowBox[{\\\"\\\\\\\"a length-784 vector of real \
numbers\\\\\\\"\\\"}]\\) (or a list of these).\"",2,24,5,23486086176588293169,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717127745316114`*^9},
 CellLabel->"",ExpressionUUID->"ca4546d2-e62d-4725-9bd8-81644dcc55e7"],

Cell[BoxData[
 TemplateBox[{
  "Partition","pdep",
   "\"Depth \\!\\(\\*RowBox[{\\\"1\\\"}]\\) requested in object with \
dimensions \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\).\"",2,24,6,
   23486086176588293169,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717127746508064`*^9},
 CellLabel->"",ExpressionUUID->"71d4e52b-7beb-4067-a1ce-18f168830817"],

Cell[BoxData[
 TemplateBox[{
  "Image","imgarray",
   "\"The specified argument \\!\\(\\*RowBox[{\\\"256\\\", \\\" \\\", \
RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"28\\\"}], \\\"]\\\"}]}]\\) should be an array of rank 2 or 3 with \
machine-sized numbers.\"",2,24,7,23486086176588293169,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717127747237315`*^9},
 CellLabel->"",ExpressionUUID->"8d993f3e-c493-430b-814a-3a26e3f6c49c"],

Cell[BoxData[
 TemplateBox[{
  "NetGraph","invindata2",
   "\"Data supplied to \\!\\(\\*RowBox[{\\\"\\\\\\\"port \
\\\\\\\\\\\\\\\"checker_b\\\\\\\\\\\\\\\"\\\\\\\"\\\"}]\\) was not \
\\!\\(\\*RowBox[{\\\"\\\\\\\"a length-784 vector of real \
numbers\\\\\\\"\\\"}]\\) (or a list of these).\"",2,24,8,23486086176588293169,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717127751157117`*^9},
 CellLabel->"",ExpressionUUID->"7292acbb-0443-4cfa-866e-7f0d1d9a6f46"],

Cell[BoxData[
 TemplateBox[{
  "Partition","pdep",
   "\"Depth \\!\\(\\*RowBox[{\\\"1\\\"}]\\) requested in object with \
dimensions \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\).\"",2,24,9,
   23486086176588293169,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717127751765513`*^9},
 CellLabel->"",ExpressionUUID->"781cc79d-df2d-49f7-88f8-4c5a0a5356f1"],

Cell[BoxData[
 TemplateBox[{
  "Image","imgarray",
   "\"The specified argument \\!\\(\\*RowBox[{\\\"256\\\", \\\" \\\", \
RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{\\\"$Failed\\\", \\\",\\\", \
\\\"28\\\"}], \\\"]\\\"}]}]\\) should be an array of rank 2 or 3 with \
machine-sized numbers.\"",2,24,10,23486086176588293169,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771712775244367*^9},
 CellLabel->"",ExpressionUUID->"0acdb0e2-96ec-4a8b-b7e7-ac9f588ffe2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"pp", "[", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{
        RowBox[{"mpr", "[", 
         RowBox[{
          RowBox[{"mppr", "[", 
           RowBox[{
            RowBox[{"sampler", "[", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Input\>\"", "\[Rule]", 
                RowBox[{"f", "[", "t", "]"}]}], ",", 
               RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
               RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}],
              "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
          "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
      "\"\<Inverse\>\""}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7716950429937534`*^9, 3.7716950632092237`*^9}, {
  3.771695095838349*^9, 3.7716951076636515`*^9}, {3.771695209077845*^9, 
  3.7716952409255543`*^9}, {3.77169527699704*^9, 3.771695278081248*^9}, {
  3.771695318805798*^9, 3.771695364645755*^9}, {3.771695398455397*^9, 
  3.771695400145628*^9}, {3.7717106734912663`*^9, 3.771710684083756*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"95adbd45-a102-464c-8c71-37212610aa42"],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{
  3.7716950934435225`*^9, {3.77169523576426*^9, 3.7716953083506145`*^9}, 
   3.771695415504054*^9, 3.771710887722937*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"ebb30626-d86a-44f8-9875-f31022f4031f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Appendix", "Title",
 CellChangeTimes->{{3.7717118011178293`*^9, 
  3.7717118024758997`*^9}},ExpressionUUID->"7d77d778-79db-475d-ba03-\
f24dd2763c5b"],

Cell[CellGroupData[{

Cell["Training", "Section",
 CellChangeTimes->{{3.771689110883404*^9, 
  3.7716891124539747`*^9}},ExpressionUUID->"dd791fdb-1561-45fe-867a-\
9c5c34dd246c"],

Cell[TextData[{
 "For training on the dataset, we use ",
 StyleBox["LearnDistribution[] ", "Code"],
 "which will attempt to understand the underlying distribution for the given \
data. The method used will be RealNVP for which we will attempt four \
different hyper-parameter configurations. We will then select the best model \
to perform our transfer learning task."
}], "Text",
 CellChangeTimes->{{3.77168911638334*^9, 
  3.7716892836185107`*^9}},ExpressionUUID->"f76dadcc-fcf0-4699-9512-\
2c707452b63d"],

Cell[TextData[{
 "We use ",
 StyleBox["LearnDistribution[]", "Code"],
 " to train on MNIST digits 0 to 8 by the RealNVP technique:"
}], "CodeText",
 CellChangeTimes->{{3.7716890346597056`*^9, 3.7716890866338687`*^9}, {
  3.7716893117378855`*^9, 
  3.7716893525193014`*^9}},ExpressionUUID->"cf5108bc-98df-4aac-95fd-\
a9c5d0690031"],

Cell[BoxData[
 RowBox[{"ld08", "=", 
  RowBox[{"LearnDistribution", "[", 
   RowBox[{"digits08", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RealNVP\>\"", ",", 
       RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<CouplingLayersNumber\>\"", "\[Rule]", "2"}], ",", 
       RowBox[{"MaxTrainingRounds", "\[Rule]", "100"}], ",", 
       RowBox[{"\"\<ActivationFunction\>\"", "\[Rule]", "Ramp"}]}], "}"}]}], 
    ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<DirectTraining\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771605984527101*^9, 3.771605990606498*^9}, {
   3.7716060686194*^9, 3.771606075764079*^9}, {3.771606180080907*^9, 
   3.771606201423688*^9}, {3.771606249977477*^9, 3.771606268433043*^9}, {
   3.7716063200173893`*^9, 3.771606325090946*^9}, {3.7716063567448263`*^9, 
   3.771606357759158*^9}, {3.771606390454715*^9, 3.771606392335038*^9}, 
   3.771606423430073*^9, 3.771606743922409*^9, {3.771607516938183*^9, 
   3.771607529895606*^9}, {3.7716127920719314`*^9, 3.7716128117082253`*^9}, {
   3.7716329163061285`*^9, 3.7716329338746176`*^9}, {3.7716367281374855`*^9, 
   3.7716367302783666`*^9}, {3.771637023743662*^9, 3.7716370260543165`*^9}, {
   3.7716371690069284`*^9, 3.7716371708534274`*^9}, {3.7716718191926947`*^9, 
   3.7716718549823165`*^9}, {3.7716719653812103`*^9, 3.7716719745425177`*^9}, 
   3.7716748304184074`*^9, 3.7716748684758997`*^9, {3.771676920288616*^9, 
   3.7716769302399607`*^9}, {3.7716770609450827`*^9, 3.7716770988895683`*^9}, 
   3.7716889264763813`*^9, {3.7716911113650093`*^9, 
   3.7716911122160406`*^9}},ExpressionUUID->"6c617d62-ce15-4d25-a368-\
48bfaba12afa"],

Cell[CellGroupData[{

Cell["Training Results", "Subsection",
 CellChangeTimes->{{3.7716842738529606`*^9, 3.7716842746735744`*^9}, {
  3.7716849383294783`*^9, 
  3.7716849395111203`*^9}},ExpressionUUID->"b84d282a-f92a-4ff3-9e0e-\
dffff649e47e"],

Cell[CellGroupData[{

Cell["Model 1: depth=2, coupling=2, activation=Ramp", "Subsubsection",
 CellChangeTimes->{{3.771684281130022*^9, 3.771684302334175*^9}, {
  3.7716843737841635`*^9, 3.771684374934842*^9}, {3.771687864730096*^9, 
  3.771687866748969*^9}},ExpressionUUID->"f7adf46a-d6df-49a0-9302-\
efff18b1c80c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trial1", "=", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\<E:\\\\train\\\\TrainedDistributionMNIST0-8_depth2_coupling2_\
nonlinRamp\\\\traininglog.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.771684153325078*^9, 3.771684196414751*^9}, {
   3.771684249214076*^9, 3.7716842514716187`*^9}, {3.7716846508693895`*^9, 
   3.7716846525711594`*^9}, 3.7716858008375463`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"492bae76-a971-41ab-a326-112cebabe95c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 40, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ProgressFraction"} -> 1, {All, "Round"} -> 
           1, {All, "Batch"} -> 1, {All, "ExamplesProcessed"} -> 
           1, {All, "ExamplesPerSecond"} -> 1, {All, "LearningRate"} -> 
           1, {All, "TimeElapsed"} -> 1, {All, "TimeRemaining"} -> 
           1, {All, "CurrentLoss"} -> 1, {All, "RoundLoss"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ProgressFraction" -> TypeSystem`PackageScope`AtomShape[60], 
              "Round" -> TypeSystem`PackageScope`AtomShape[34], "Batch" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesProcessed" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesPerSecond" -> 
              TypeSystem`PackageScope`AtomShape[60], "LearningRate" -> 
              TypeSystem`PackageScope`AtomShape[60], "TimeElapsed" -> 
              TypeSystem`PackageScope`AtomShape[34], "TimeRemaining" -> 
              TypeSystem`PackageScope`AtomShape[60], "CurrentLoss" -> 
              TypeSystem`PackageScope`AtomShape[60], "RoundLoss" -> 
              TypeSystem`PackageScope`AtomShape[60]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[624692076], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[624692076]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 21, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "ProgressFraction"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "ProgressFraction"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Round\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Round\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "Round"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "Round"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Batch\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Batch\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "Batch"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "Batch"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "ExamplesProcessed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "ExamplesProcessed"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "ExamplesPerSecond"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "ExamplesPerSecond"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "LearningRate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "LearningRate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "TimeElapsed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "TimeElapsed"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "TimeRemaining"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "TimeRemaining"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "CurrentLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "CurrentLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1544446112][{All, "RoundLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[All, "RoundLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.025"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["54080"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4037.59"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000755397"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["523.088"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.49013"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.49013"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[1, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["108160"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4077.89"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000903126"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["508.128"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.36416"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.36416"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[2, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.075"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["162240"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4151.49"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000959603"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["40"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["494.323"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.94696"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.94696"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[3, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["216320"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4089.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000982858"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["53"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["480.943"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.72447"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.72447"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[4, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["270400"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3845.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000992676"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["68"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["472.998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58877"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58877"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[5, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["324480"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3742.91"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000996862"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["82"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["463.747"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.51964"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.51964"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[6, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["378560"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3781.07"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000998654"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["96"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["453.169"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.46301"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.46301"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[7, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["432640"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3764.17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999422"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["111"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["442.402"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.41653"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.41653"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[8, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.225"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["486720"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3761.51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999752"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["430.654"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.37575"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.37575"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[9, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["540800"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3799.68"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999893"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["139"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["418.411"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3739"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3739"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[10, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["594880"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3782.08"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999954"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["154"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["405.758"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3521"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3521"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[11, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["648960"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3803.23"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00099998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["168"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["392.745"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.32311"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.32311"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[12, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.325"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["703040"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3762.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999992"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["183"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["379.542"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.31023"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.31023"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[13, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["757120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3800.08"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999996"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["197"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["366.134"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.29954"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.29954"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[14, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.375"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["811200"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3782.72"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["212"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["352.616"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.28872"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.28872"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[15, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["865280"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3817.61"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999999"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["226"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["338.994"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.27133"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.27133"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[16, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.425"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["919360"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3754.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["240"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["325.243"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.26955"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.26955"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[17, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["973440"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3746.03"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["255"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["311.432"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.26094"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.26094"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[18, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.475"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1027520"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3766.29"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["269"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["297.585"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.25138"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.25138"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[19, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1081600"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3796.27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["284"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["283.685"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.24215"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.24215"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
                  GeneralUtilities`Slice[20, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1544446112},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1544446112},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1544446112},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1544446112},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1544446112},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1544446112][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1544446112]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1544446112][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1377., {405.5, 414.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.771684197340315*^9, 3.7716842553372927`*^9, 
  3.771684657283047*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"bbc1c622-2d4e-4754-ba32-55a3c2a42164"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"trial1", "\[LeftDoubleBracket]", 
   RowBox[{
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "10", "}"}]}], "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771684742640148*^9, 3.7716848093324413`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"8895ec99-34d7-4e68-bb22-86f4c456e43a"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[{{1., 5.36416}, {1., 5.36416}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {
     GraphicsGroupBox[{
       {GrayLevel[1], AbsoluteThickness[4], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
        "Round"], 
        BSplineCurveBox[{
         Offset[{-2.82842712474619, 2.8284271247461903`}, {0.9947065200686174,
            5.457826175557905}], 
          Offset[{-2.82842712474619, 2.8284271247461903`}, {
           0.9947065200686174, 5.457826175557905}], 
          Offset[{-4.242640687119285, 4.242640687119286}, {0.9947065200686174,
            5.457826175557905}], 
          Offset[{-4.242640687119285, 4.242640687119286}, {0.9947065200686174,
            5.457826175557905}], 
          Offset[{-5.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}], 
          Offset[{-7.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}], 
          Offset[{-9.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}], 
          Offset[{-9.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], 
        BSplineCurveBox[{
         Offset[{-2.82842712474619, 2.8284271247461903`}, {0.9947065200686174,
            5.457826175557905}], 
          Offset[{-2.82842712474619, 2.8284271247461903`}, {
           0.9947065200686174, 5.457826175557905}], 
          Offset[{-4.242640687119285, 4.242640687119286}, {0.9947065200686174,
            5.457826175557905}], 
          Offset[{-4.242640687119285, 4.242640687119286}, {0.9947065200686174,
            5.457826175557905}], 
          Offset[{-5.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}], 
          Offset[{-7.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}], 
          Offset[{-9.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}], 
          Offset[{-9.65685424949238, 5.656854249492381}, {0.9947065200686174, 
           5.457826175557905}]}]}, 
       {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]]}], 
        PolygonBox[{
         Offset[{-9.656854249492383, 12.856854249492386`}, {
           0.9947065200686174, 5.457826175557905}], 
          Offset[{-9.656854249492383, 0.856854249492387}, {0.9947065200686174,
            5.457826175557905}], 
          Offset[{-65.65685424949238, 0.8568542494923745}, {
           0.9947065200686174, 5.457826175557905}], 
          Offset[{-65.65685424949238, 12.856854249492375`}, {
           0.9947065200686174, 5.457826175557905}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
        StyleBox[
         RotationBox["\<\"RoundLoss\"\>",
          BoxRotation->0.],
         StripOnInput->False,
         LineOpacity->1,
         FrontFaceOpacity->1,
         BackFaceOpacity->1,
         Opacity->1,
         FontOpacity->1], 
        Offset[{-37.65685424949238, 6.856854249492381}, \
{0.9947065200686174, 5.457826175557905}], {0, 0}]}], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.}, {0, 10.72832}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.08]}, {
     Scaled[0.02], 
     Scaled[0.0970820393249937]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7716847991613884`*^9, 3.771684810794427*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"defc9a30-31c0-4741-8d36-2acb1811cea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model", "Subsubsubsection",
 CellChangeTimes->{{3.7716849941355886`*^9, 
  3.771684994695011*^9}},ExpressionUUID->"92bb55ee-afee-4df2-8d93-\
27691df57c1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ldtrial1", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\train\\\\TrainedDistributionMNIST0-8_depth2_coupling2_\
nonlinRamp\\\\model.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771685041855238*^9, 3.771685078627839*^9}, {
  3.771685830885846*^9, 3.7716858438397894`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"f750522d-eace-4d8e-8dc4-5d7ea14c0945"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"ldtrial1", ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716859081892233`*^9, 3.771685918297155*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"6f8bd9c7-9062-4fc5-9dce-4422d3902d3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUjFoVEEQXZImVQiCIiQKWticYCUIViksRGxObaxM8AwBOeHuQCwNNoKC
FnaiqVSsRDistJGApNFGLEw8EcVEE3L37+7/3b87O76Zf/9cuP1zM29m3rzZ
I4s3qtcmjDHNKVzVhZvzjcbCrQsz+HOp3lxeqteunq23aku1xqlFgc2NfhzY
BcdMlmPKxJyGHLePjIsZESBwonwpF5NT8Tq1Q+FhziMJRoEwB0B7KevUIGSS
llI8cVE2TV4zD0sHLkRDQEKQ3j+i94G8R0DiDuVs2o1cnh5H4C0JFue6MTu2
9+Tcxjp5LvpwnzNlz6vt7cdTZuWomZjf6v4O/MeSt9qS+PzztycOHXy1asyd
TrLz11lQosioAmGeNaZrWzx4d/hyx6G1k4EHWtJ9umfMQ854c7eNgaFeoY8r
2LVUqQ6Y5OQCRRE1V1bIyAXZegmxQpT5igl8Jg5I4NPbs29UE8iRoG0G+Ya5
5T1K44vJY58FM9YhH1trx7HRLnKEhKhPNmQJBxCOZyoH9tVGuMhWw9BHttU8
/eFrdb+X1iR+WWEcWuFy38x94Yqx5eaEvtN1+LaZWd7mafOg7F4MLnqHR+Yk
Phev8K+EZEmytCxVqv3K5Arzt/ekXlmtZkQ8PJR4utHlvU2i8Uh4WFp4eHeN
+/8nlQXpjAXy489Abv07j57RsBQmxyBKPO0FKerRM0og6OYtjd5ejCX1f8yb
1o0=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUktoE1EUvWQhulAC4kYUcSkiboroQqjoRtxFui20TSx+iJAWRNSFCOqi
IkoFF10qRqQUPyi4sBWpFkqLVEz8JFWxFolJY6aZyXzem+O978XowJuZd8/9
nHvu3d5/OnUsQURDa/mV6jtzIJfrO3s0yZee7NDxwWwmfTg7nBnM5Pb2i9uW
9lExtBcB0O3jA7Hc+YNAQCj+D/HfsyqucYjWPxNHKLTYyzNJJNgebWO1j9Dl
bxC3AzyifDoQuBGZ8IDddaQQE/UyrzUH93wqc6TrIS9ZDScSYN2VXQna9L6K
3xFG7i6yuSXYZxxyij+Wd1zrTtK9hYaD1Z1Ny9BFmbisM1EEPoztm3v7lzQX
10+JvgPfgOTX+WVMzLO5IdSF7K9akXuvnKvkoVf8bQU2vWu3BaUc0Wpc/oM6
nnGbIUJlE4duAHy5r5l3tTQzbUspz4fRMmJa/gMO83WApiinjZXhqNGWehLM
pCUmBk1B7dVmaoyppanRhZcnho1fKBU1z/AS0TjXvPF46sjujZT7aUpqKHa6
w6JdP+9Mv341Kvp1FTrz4tgeovW3g/ARcJWxCzGUa8h6ro/JtAjvFxxUXzBo
tsCXNwevlDhzVFeK1b1INGK3R+YQVZ8/xGwFH6XMXIroZN1qzeMNESe63jxZ
6p49hVs3ySQNzbJpHUdxuYTFDVsv7x9gYDN1dqthJfdVU0HzYDEgd1Mt1tJK
IENRyjRkl0/8VWcRI27DzAxewIOziuvYyoAOO15sX/8B+ESvng==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUktrU1EQHqrVIlgKKt0oEtCCoGvjRunCRRZuGhUEBVMaq12kkAohILgI
/QUqpbgQRSi6UtC4cCVUNwo1lrpsUbFVYvpIcl/nMeOcOTf0XM6595755vXN
lxmfHrvVBwAzA3yMFSqj5XKhmh/inyulmTuTpeJErnS3OFksZ8cd7Gi6iRRZ
JF5GkyHiT8uPLEzcmcjl7tL+ZShyMKtJ4HHsDNqGPpL38X7G9jxcLEUKjXux
GckKljc6lEnzUswb/6Jkd6A0rw6dYyeez0ISkWolKdxKvJjb6TvEx7UajLh8
CjGxSndJPxkB2DMK0D94kO3P2i68z4YAl/jq8MXK84nbFyD/iCuhRLnSqAG5
7jYtVT9oOsOhYVG69Snpl5KSYjKVszcy132BsY2labsjZNLWz49Ta8aR4/tP
iVSk2wHRunJlry0n3LsgKAr4OgziV2qD2WeHlpBrpBzqCubTQt0TynbNVCXu
RMkfrZyrLqGS1NZNwxr+3FzebNIO5Y/AfB07q5FMBlFZZekp7A9W/phFgMKJ
4csP3/x28zCe6cdDhS9va/cG98H5AZg69bolQ5OhGxN8zcLxk9B/YOHli/vT
q0q82IaR/dFtXD12s5Y53XD0rMfUoZ6iQv1v+/Psg9ze79xQ0OQZkq/dSYIV
Re++zW3I1KVXSykvrIKkXX8fOnVRR4mQOFpPMLyaSFu78mQx2p7+UMSBqL1a
pEjr5cFxlPTENKY6/g/RF7UB
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUstLlFEUPxZM6dCDDCqTmBGmKCNXhYs24iJaBGIFLdo4NYktphiLDCFC
d0GbCGkRQkZBuwwCs6IHQWH0F7ioRWbUonSc73Ffv8653zcfXb7HvefxO7/z
O7dYvjR4YR0RjW7kz+DQtb5abej6ya18OF0dHRmuVs4fr16pDFdqvWUJ60xf
yGrAWFjeuFiOmjfydwgQGvnbxBonDuO93qQRi1H7CMAq4xHgFCRc8KyFjmGg
jOYq0NZnRxJg4awHlhVwJcWxmFm8Dbv853EL05uoc6YP4dzvvXTq4ET9Hh0q
bqHWPUQvoNN6CkSld1iifMf0yutjhd1E99kcKu8dOIPI3KLc+F3g0zmGXXXM
A1ojYmC4lR6iSfzF6lVq++GJC0nPS7vnj3JUfoqXew8vaZWIoLT56ZVozNIR
as93Dbx3riGWOFVGWNtX+yv5faU5NClKk97Dh/rCjvU0Al8mFCVUom0gz83C
rtJsOoTEZoUpSzjdvono6AevtTwaSWJklL7T1sVdL7NZO8l1LJlAhAhsH/Vf
nrkRptMVMZvomqjj7PiUDCsw4ZeMaRTpz5PbaQr49qw2txjizZOFZnMMMU+b
+e6MEbXM/8YamnBOeH4d29CNnd2F1qKfauSyTnj100MeQO7ER4n+hYwIi7TG
Q6RtPQdSjcx/WvK6SJ0P3qaezOWSy6lUIrJjPzfvxYo11xbdWIWG3MQsyQeq
OBmL9dobLxhv/gHS85u/
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJwtUk1IVFEUvkhCtZBaTAW5KCilWrWpIDdtCncxYa5aKJlEYDAjRNAiEArC
iKQ2UYuoNuKiiFAJFA2EgjBJYgahEcM3zozjc97MvJ/7877OuW8e3MO9953v
u9/5zjk+eDd9q00Ikd1LIT1w71ImM3D/2gE69I1kbw+PDN3sHRkdGh7KXBjk
tM7WAkIAzdZSXrkBiWoQ0yGihRh+XWm6S45awYf9mjqg6FqUvVMcDDQQ1GwG
J0Soy3JCHdqsGseQyRooMpS2kbQb3gZ+QyM2OC/EQdEhklc1w6t8jVBv4UX/
CRJ+7Mg4cqhrw1CXHibJu5R4uCvVTr/ng3/MGFJ1Ja4ibjTDpQlhvz5dY0mS
yY2txVRKT7vF0SupnsvGYgIf0sQOAkmkwR3xdnNi0qspa0ii1ZqhnKkbovfX
zMyGm1tFwqas3nB9trT24KToXphOrOWqffjbmPnx5Oq+hbFDXenrf6tgEynY
jOD13PNPj74AzzqmtTLiI7llYMgw7ckPHrD61d1Jnl60fIrQ2nXZJVUH0f90
zDYpKFZISJ1Jt6TVRPXDKTBQ7QSQKmo2NVyuo2DBaytxSA35E1pyCy6+FFVb
CfeMiKaSImLqFZZobhwyIt/fg8V6adOQkVp6IInrov+cePw9t1+kOt/l8w+X
NyoMoz8oO0K0i7PcgT1tZ74tz3vvSZbtAkKFN8j2XBw7LU69cqq/xz97LdnW
GrkyOlnIzc0m1TfDJJYTRbxCtLSy9GREaVTJItOwA+TRaFdsaRJcKTTNmd+Q
FhYZFSGOTRRj9z/HfrDY
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UktoU1EQHYqgVojFX6VmUTdiq9Ai4heFgpu0u9YqdaONxtIqEVLpB1yI
XYmgghU/O0G7UVSMQoigFopQJaHYuAjYTYMuWkF4+d13f+PMfUkvvPvunTlz
ZubM3R291nu5AQBGN9DWOzjelUgMTvY10aU/Pjo8FI9disSvx4ZiiSNRhoVr
n0K3DJrgZLT7KWuxKvgU3Gm5m2+VrRsMO31EMgjDe4CVNR9ikY8KbUU6L0pD
8Yy25JDCYaSsxWgXXWakRQ997QdZNC4azuLcmmJ8qZmNif5SC5zKWs0py28+
zsL4qZ77SWrnJTVnuSuL1jM/dwAcI8t6CF15e3MLtD8PyK0t4dmW4+dg4+Gv
75/B/nunSZx6dwb/7IPtPSG4lZvIdxxqa9hzp1So6WG06mqeWLc5Mp+LQMfR
vcT95JPiIklHNZudmpm7sYD4q+/CQAggikoGcR5+uDv1RVeo+uTJxuaDsOs1
e6yjNQWcf5xKLaMJdQLsBPjMAmqSS+ASprq7lxYJtwm2hSG9LNTaHN59ezhp
DMq5VoCLQiVZT2lRVKkeb5WlE6+I7wxFVIX0CalcPicOeqm2kXQeiUAYq2uz
4kXO6dYTj37nKkgyoRHS1uyUoKI64cDM7cwP9P0yGatuKooaRJNpb4QX+bHv
aa1FBn0TTI8AhZWRrWEWOLug8R+XTkEV1trXOJxeme5veppdLdKYA5nXEhYH
rgK0nPes4KKpD+MrF8beB2NEaYwNpiadLtX62y05Jk3Pq65XleU2MnhClt9Z
UKBg4v82O5HU
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk1oE1EQHuoPJW3UaqEt9KAHQUoVEdFeBPUgVvxrpSAKxRRj1Gpak4hY
wR7Uix4U9RJ/7h4NIt5aUfRgzakVNdZCSiyoJKlNNrv79r03zrzdiAu7++bN
3zfffBuGRvrPNABAspE+/ZErexKJyNVja8gYiCfPxeLR073xVDQWTfQMcVhn
8CIKgZ6HKG1EBzXSEdHV+O9xsIb/Py5HsF9qlOhJPuFv9phU8rhBZLVCNwqD
WtqpmL+ilsoyUUpgkMKWq8zZhCsp/VDEoqrX5rqamnq5eVwwd0t0QWkeSqEw
S1elhdeZ4Y9VpUbDzW69sz134db4w0cTB7dPzi26+BbgZAEF2lzuR4xIgKa9
apaB/ylAV0oqGk2hLQqF9bCy7/yNr94Sl/l1HLo9RmEz7F2UtmUfYyQSymS0
2j5emnIMoAe/oGT750Zu4Lso2jkFsGoife1bvvpe3F7LvoIhySO03UcHALqe
DkYGR/sAwssAppksM3+uPdocH37w7nIoFF5NWekDlKAM+Zg9AociM2UH2qFx
3Y4QrPCyWFOGIaFfQivA2LMT0LYcmi51hu9TL6F96mcPd+y/OJnpaNgMO8v2
h/Hik5pZhiaqp/OPz26at65vbdn9vPj5VYYbEdK6Ml58yia3tYVTd++MzLzJ
0w4ohwrbxIdZHbSk7/VOTZV0ra4RNICV2WFJVCtCOjy2cZnaWtYpZD2STwea
skxH6/vNfC7oTuhNKpoxJIpFx9SXvvikg4FeLDeQEYtB+EqqBZpjmMqzjC3R
V99fckSNPA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Ul1IVFEQnrTCyDJEU9oe2g0rpGjDl2gjiXoJK8qwkILa1W2pZIPV0h5C
JAsWiqB6E0p6iGCLtPA5IgzqpQehgsKKFvShVZPdvX/nnGnmnHv33Hsu95yZ
+Wbmmy+cuNp5sQoA+mvo0xkfPJjJxG+c2kCHrnT/pVQ62XskPZBMJTN7E+y2
2d9IS9JW9Aj9zydEl++kdH0zOyB6GCyp9AU7Cse3lJUiVx1CS+gYHWHCpH9b
qkBaC/M9uceFJdvgSyFVgF9WYw2NVSe6c8JDz/bBTJiNw+EwQMu6045ibEVZ
KKf3Dydwdvf9d6OFkVVrPypLB1FGiv6FAIchXqT/fH3k3NnfnMc2vd0J39sP
WWkLzF6JQlPtXcdvzcEo8QODjqIGX1w4D/DQ0q0IftkEY4Ru5XF8KBa5VeTi
DYNsWoEL+OfT37lUWwiWmVWJLpdPpob61cM/3S9Ppwf2QPo13aNlWsvB867r
7W8mH7XuirY014DLhbgCA0KHoqPv23pxqhpih55JKsUTAdOIL3/M4OWRMwd2
dEQeWIxIsSVqkRKLianZr7CvgPiqI8U9CD1eobCIeCyZuHn8KHwWk007rXJl
9igL1mL7RoBtW9d/m+6r+46YJ4NyXE4oSqpPM3ByvBtCTzQtjpmiEMWlxS0r
YQ1saowBfODqbOHSeFGVCUFca66F6u2360JvsZKNVcekL89k+ezOzRswRxoh
BsrztL/SE0CPOXMM6zRuLQ2jNKHbDhSqVUVDlcqrKNNXIHpKF+75bkr9B8ci
hkU=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFkk1oU0EQx0fRIoraqlBQCyqSVi+CJ0E9KBUUPbX0WmxsLFKa2lSMggiC
iAp+HEXx4EEtePASFFEPag8VRDxIEcVDLUlMW21o3nt5+/bj7+xuggvv7Xs7
szP/+c1sT4/2nF5OROOr+NUzkD+Uyw1c7G3ln77s+JmhbGbwWPZcZiiT25e2
blsbD6AUAM07DOwnJHQseU/gDYh4q4PNSOyv9eBllHVnG4TW9kTr5gUOaYT1
c451aU/5ZerunguBehVBHKrSHxMvSmeACbQ00sd/m2C2GtRqCaKQr0hOJfXH
22noR5SbrGCm+nO2WIxk4KMhejc1B0x0LRse+fbsxsO7z60Mp0ArPPlyH+i+
kGpvO0D3MF32tTm5CqVfpfLv7BhRKx3Bj0g75XD1C8wrTvCaOdGSL04iblZp
T2otjiGXE7pwRjv1zKaCQVpJD2y5wrHllBy6Zs3RTVrfffb88RcWHuNzmNhJ
WzZzHbSJ1qRoyrItsX6IxFaSBJy5eDnfSas73pslXCXDsATiGPHiPHQIFPrb
N68oiOgSUSChHOk6a5JhYWbh+pYuulWunKQrotFB3mrVUL/C94PU0juyf/LE
tK1AJiwfRn7idHna2za6bu3unZ/xfxkTJB/uXMs9Pbynjyh19K9vKXdRMR0j
XhI9ps5tO/qHF6TmQMb1XIDrNKwHpzZs3PVGIXECjaPpZyfmOZv/OuHDKR35
FvlOwsSsO4SbUmapY0jByJg1Wy1C4xyV46waSuHHKXSdca1gH2mpNJH7ofb5
2eMfIIWvFQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uj1oFFEQHg2KjRKjCBJFD6z8KSwCaRRE0FjmJBKEFDlyCQdyyp3gTwRR
ULSxlBTaKFompggKVirEQjktLqeQmIvGoEby4232dt/ue+9z5u3lBt6y7818
M998M6nMxfTgRiIqbuFPuv/KiUKh/9rZVr705Iu5oXx24Ez+cnYoW+jMSNie
xgFMDGOBKADgGxijoGLAIsS62Yg/ikMRG4mP2c8Xjw80u0MXyy5oE8FaaKt9
YFUCY7mLBYis5kBlGklRrzPId78mVEmcRmyxGPia6QSGIeLl54BLroHSdMcP
w6rgR61ApT4ixpDYzcrAeB/R5uOn5VG8VuBldn18vTqPI23UQnUhxa1IZkYT
jd6KTRmXOGj/j1/4qaQyl2b4oxsr/J3F+z46dKCq8U+KiVqcwqut8a3cw7Cx
6S+6HnJCYRQ6xj6f51f3nWJvCXVEDTF10vl52kmd53JdwkWUM46mWDQyuTt1
72k4vINo8nNDf2V5AsYGz451UKZMh4na3/1JMiFo9PGpQDNjpbtc7+iC81hr
XXJ4K2+r0x/Gl79NfJ14M8XVFGuslWvQYOoh8HsOGOl+4vi59pixWMUD5l8C
3amOZSPjlQCdcCrhNl7VwoNEf3kRvNkXSubuFuH7yda5B0uDvdTSxS9qSbGi
OpGF67TThgu7aFvvQrIFOrLra1Yk2rppb1vu/kyluXrMlTdHY5jo+naixzK2
RMsQdd0QdDEK/VoivSOpGOK2LOHcTCXmRu9pHSf9K04QAc1l/w9k1qGI
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9kltIVFEUhhdm5oNFBOFDQojVQwRFQUm+FEYhGOWUVNBDmpOEMdE42AVL
uhBEFwzBLkIElYJR0eUtsKCeRiLmoURIUkNsuliOzjmzr39rnzO2OWex917X
/a1V3ng8cqSAiFqLWUQaTm6NxxtO71nMh/pY69HmWLSpJpaINkfjlY3OrCz/
awBKs7QG4A+BNDB+sIcFnAlm+VZABXdChzo+epBGK95omJyF5FihAlZpg8Ap
50KovIsIk9hQOAsBp3cXyrgMKvPu/Cj0PS4uO1eDMchao4Zo+ZaOgfSLHqIi
+uV8XFghnVEf2z/p7R+Z9sZKy+5DyR/Il6nSRIevLOx6BgzuoKK18asfhwNf
A2ulhUj63it7iai8G6ci1J6F1a4irTIAH+zQW6oZADoKOj9YKJfSYyDg96kv
P889fyNwrbUtlsqzg7KeA9Nf9TQ1MdKxZgHtO5tkjfMzHBl68FbTBT70VlMF
Fa5PuAcyQwjBKGU7tXzNpmpX7N6wrGpJJSQz0PxCNc6cbhTSsfp5JZSYuL2X
XuaJsvfgpJjpJLdObLr7KIFPfKe4GxZ+uh+6zml21lZ3bqTHh7wQS9CA0enP
3URd76fuPIxsW0R94F4px8UtOb6yZJc/dXH/quaKzUkv6BO3UrpRmW3jiMXr
Sqt6MperGYfvMUtOZ40U9uD8pbQ6up1f9GCIaUgdQFFBr1Jn6q6/Tv4Gkgdu
fpthHmElMsyZ4yB/ge+pyXAmdZA04Gp98wfIjI20pYd97orI5af1/yzZOR4Q
nMnXhgMYo2UwfdlQm+UiRADbUXBTy+3lQFKG0wj8A5XekpY=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUstrk0EQn4opahFF8JaLCB7Fowgq4qEUvNgSEQQh1aS0hyipIFU86cE/
oKIHsT14EMFLVbD04KERteil5qDgg4RiDJJ8efV77Guc2d0vuHzf7s7Obx6/
mTk0fW2yuAMA5nfRNpm/eaZczi9M7SchV5qfnSkVrk6UbhRmCuXj0wzL+l/i
AFEmSBvyUmgQNd2VFvYBE6cwaERs6JX0gkX0G2rFH2JELhQqo7WzwEho7WCs
loJNUTsj6xBjksmbj8RaqXwOc++h6oGh1djkLFJXXn6kY6sTJgxHjCUHMoYS
2a6xRVW3pemnbtn0059WP1CRMpgY7JgkzYEu9a+VhdwasdL4Q/dr+N/SxeK5
HNwnoMAes9DSpMzlw0frWfjJvPEv5WC5ClfHL2vXl4+QHAe/ll8HjW4v0EOf
z3MbG4uXY4OzAI+jeoiVCIXhjBL1AA7u3V240Hg2CqOXqvXVzyuVhB3Sd+/U
xBhA5vzJfTuzkF9tPn3RDFKXdwA24SjAlQMAIytBexB32UZQxjHAtw/tzAk4
PJaBs+scxEj0bbm4yVV7dff23MieceEqpTF0vYwY8Z2ub+GYavTIITNTXLmm
jbpF6CUYj3B7QF65OkprJYYlPw3vaBZaVHMXjgbJ9V50W7cWY8KoYV9tP6Tg
Lso3T2rKZahjO0lccuWp/h74MbXLM/GH1kTND1PIh++yQ/up5BA0dx1L0lmm
MA71D46GxMo=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk1oE0EUHjyJp0YRhYggXkQRPEgRUcSDUNGLVfEiSIoxeImQWMRD660i
1INHKfSgEBC8elCkBw8ixUYrCBZTikWLNW6apLuZ3Z198/zezCoOmbDz3vu+
972ffWO3Rm9sUUrVt+JvtHTndK1WuntxCI/L1frNSrV8/Wz1drlSrh0bk7A9
+WVm6y9+GTOxwTMWG1u8OUlS+U4JJrhC7jsXfGKwkYM7Bs2syVs9l7EAJLER
xgwe7QIN/zuGTSpIyzESEzCGJKNQfnyxAh3023h1JBxQBH2a62fGHZ5CCPNM
A1zaYH46PHytESwy3puiIc0cL05ED9SBE+9DTrTWrEOoSY3twYPbD0ZOPumE
YMsycprw6ZQiRetS6R3rX6CKXTLoE5kS15ndpcabCTKIDpsCEruufePv7a9K
7bw6EUCZiHAqMuiabHzu/5hC789NnF9PLf9/iNurr46rHYeDYGmTuRt7GPvZ
PLwAVMGpW16Y00yE/lnH0N1fVIVn835YI0e/ELmpMRoxH1xR6tRbPNsZr2x7
jIqSnLXXbxSKanL9jZP2/FGT832QEtaaSHdvqKJijj5Nzwz+jm4gC7L68uB2
VVSHlnXr9c856UuWypYkwBtam9q998gHEHWhzw3Zs1rS4Ghxq+OLFWuc5avn
Y3rhBnGauGBsjYVWKQP+aOn+4kLP70Iq4xUhRjC+2NiSJ8XauJxkZKso8t1D
5iSvjB0ryiHYY4kSHa68P0j0zV0=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUl1ozWEYf1pLPm62khPZEHKBokZkkykinZtJubSTY5SOOpOPRW7kUrQo
N27cyYXR2AUXwkit1abM4kpHmzPn6//9fj2e93n/Z/P/934937/f82zKXeo7
1wIAg8tp6+u/2lss9l8/2UaPU4XBCwOF/Nnjhcv5gXxxX86arU8XLn6K9wRR
SnuRThq6UyBG9tROblhoVJz6Keet2MLIpaDWkp4qWQxoU0inSKwirE02wiD2
K04pDT7l6Db0m6ns9ufqc6JRsazsRaiNwXcbrnSvhJ3QM3FPmmbxxuYWI+s6
oWPNZoDTdY+rQa1tRqPxdTes7mjb1pJtPwQP0SQkJp+QnWcRPz7Zc3RufKz3
hkUhCbASAQH34jL+Gj0Gv5kG6XFM8vOi5G9URfxy6xEjiVFotYS7XPvz6hoc
eOZAYaSNTwcXaxqPp2e79ra37v6qhOQCqfAkoKXDsROl9xshs2t/dn7eZrL2
Ju0A1lB8igO8M4114RhiogSB8Sm9bGAdJ78PDQt202kpPvmh0tU6JvmhzgXR
lIs4qlg0AU7NjOMHgMMeBhFpmeyZkoX5cu5iF+L5LQ8UShU7rrHy9sio9nM0
PXDzINxOy0TNHR6+XyrfBWiFzKrMCwdZu3YbrIz0nFm2Y+2KrT9+2tEiSToe
Vqmj6kJp4ls6I81cTJniXYf/8cszZ5RkZrRJWXKtcfeQ9qaDT8YWaHNQ7BLu
JlHzL5zkH+GUvYc=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUktoE1EUvVNSUVAMblzoQt0I0o26UPyAClVciLRFoeAiKaafTVrSQqmU
WlFxqyIKLe1CBDeCH6xRlOii1YWY4GehRQu11FZl0iTTZmbyPtf7PkkdeG/m
zb3nvnPOvdvbupvb6wCgdy1tzfH+o6lUfKAlSoczyd6ujmTi/MlkX6Ijkdrf
ptK22oUVROQyRPNwvTMu7JnCNrQsaQsYIr09XH2YgghmwRonUPqmlMWGqOMr
tPxVYIgBJbGSq1D6RpXOQ4kXJ16U1G34puyFNYCHeXy6dHPs0OjfxQwd/6Am
Y3kDPMbcENzDT423Hi72bxu2ER85WeDhLxdz8zFSDOvqIcusuMBmSTZ+ADaf
AqcLvuRtVaZZ07eYvbAnBnsbnbESlyRL1kQw/LrBgfuYm0kXsCKNPEIxkrpQ
zEBkpJLO/zAOCGWTVDLlylQPOCeKP3H03f+2K4vksSjsBmiazBxPB0vMUAmF
IPOmrjZdaYiu2QQxiHwvFnhF1RKSwCKsg76GHRt3OkrftCpISMYkUSnhh7un
b7y6E/x+cnbfJdS2Koju23poRffIe/yMLx/BoMuYCklljAxGWieKAX+bnTkX
O7iru6zlCtTzIt1230VWf60TthyGB0Yz4Yyrs+V5LLyOtPTEYfCjZmjiVJqL
65cXnt2e9LMw7hnvhe46kwR/3jk8NDdNuXN2kJDmklebLL4tc12NaZQmUu2e
yaFZZRZXCXXj9HDzqr1CWDZ2KKXBhrVfxOgfzUuoaw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uj1oVEEQXkQwpYix0sJGhXRWFlpoI7YnAbEyIeeR5gKXQJAQENQ0oiAi
iFFB0iqmTgohBttAmiCIhXrRuwjGl3tv/+dzdvadCzs7O3/f/J2enGncPqSU
mh1h0piYv9zpTNy5fpQ/4+3Z6Va7OXWtPddsNTsXJpPZyfoCsGQREIiJ5wtE
oSDDOn6Y9QHkIv+0KBJJNhGRpZW4GBKFeMJnk+HxiRiNsv5b2IA/VZaLv4M1
TITDYOfJXWBG3UooOkcUUIIfPLjPYIvq7EaWePcfTe/tHeNnbfrUJ2ckf1+j
R6DopVrg+7+xAxPExUn8CmQd5SR7SyTFwNRqJzkZ4/f3VxTzzkPqdNHDVhX5
btJvPmVRmfwkSZv9tpcRLeaudKmWEzMx9Ajft5bWXxH6F18/++bwNcEF8XYH
HxfPqRsbXMuREyufP9CAYazPbV0fHRltvH/TevHo3vyvwgRunIOX6ujtYXUc
6C6cUZfeDRjFcWfynBz+lrtwISwodf7xAXJt9Zy4+Rymws/xsasPuQVOI0r1
nDhKgi7Y5Mvq882YUGKKJkF5QwwKZnkf+hLQ5KhpZ1B5QdHYRdTcDUreqZEl
yfDTWVY380yNxA3S6LSCAVqpl2kagsSjqqPHbPyjgHb1FtWHk5CBGz2UpN2k
KPsh6VbBSfeHx8q4Zc+1Tb8QTNb8A3DM4iE=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uj1oVEEQngiSgPgTTCFRECsVG8s0EpSgaCGSILZezCXR4sQXg1oIVmqR
3kq7oMFGwdJCEERTaOFfYmG86MWg8ZLz7t6+3dnZcfbnXN6b2Z2Znfn2m9k3
enl4fBMATPWIGC5dO5plpRsjO+RwtjJ1caJSHjtZuVqeKGcDoz5sT/o5LGR2
Xhsbjpa1N1kutLejt4nWxofEPRU2bOPSSWNIhC6moSCbQZqQhiwTpYSE3Gi+
HIAr6a4Th8NwMy+41eZpgF3h5HxB77CGbV6vfl1l6Oremxxp+bQ/v7xbZT4G
cD9XHojUIk5fvvDWzk9u7+85VRUsKqLz19E9EfkZzh/Zufk0JWQGqfOAtoS3
jsOWjYTbwyB2Cv+6ELHUBwfWQiDq3ApEh4aLSEcG3Z4b9MxQeDrb6GI10ldS
CYI8LrxbG9RyNp/GBp9xJwkH3ar/eSFNmb+wf3zoFfq6Cv/Tdm73DOviEkDv
oG4I+RTvkGO9dAeeO16+u63r0MHX3GmFoGSXN27PPTQNfvzofV2qrmAHiCBu
04NbbVxgJRNRVOcWNwIbgQ8ncWu5bH5rrr2ZHoJ7eeysjn67Tup7Nju7fF3G
q/fDL8GS8OiCf+j1lTMnyk+/TQJsPRzaimlOuHDkajdrzabw9HERC9bEynqn
cWxjlNS1GHUnaxws501E0WBlBsOQMpnUNGJLKkSin2vxao5DlSihONn/AGYb
y4k=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUktLlFEYfulCEkYG0mYKkSjatgjcFA0Y1aKFkxOSi1KaxC4TjEbkvk0Q
BC1E+wVtyhZKq4Qp24yrpCAKkhmccGKc+3c7l8f3nPMpduA73znPeZ/3+vSP
P07d20dEU128pcaeJnO5sWc3eviSzk5NTmQzd69lpzMTmdzAuDE7EX8AAg14
0FrxWUe8mYP5mTO/RfxpY8RLGlxb2JDAJsKgSuuYBAu6JQwgd07WW2ynsXdF
luaxH+MsdFGAH3MzgwurBXs3QVEDQtQapfK7ywd6R85eSdz0o0gr8+YDjY3F
+5duj6S6ThElp+nBd+XtCTVwhI6OHu5+Mkn0qdg0uIKMM91MPiS6SEtz3ctA
x+cmhJIjRY66guLXDxh6UbGVKeuQ81QuT+Dj84MvgbrrVrhblG5GwZsLdBJh
FUow1Xe1uk6uHaPe668RWBJnYsHQOAy9R3Qo8XnTdJtp6r9OIXx7eh5iSYcu
krbUatl0SGD9/GAdWysSOoznBFX33FxqleAPKkUuVpvszVto919r2GjjW/p9
AWL9n3XL3gJ0IH7ngb/ArZ7hNlrtVTtzBeH5+idedfh2Zoj6FiDqy/EY0VFR
LX+u/04hP0vHE/OlatBsG1HJOP3FNO0nVugwGl690bJYoGz1ErNEfUQzbG98
S2lL1760nstXaXSr8kWWjDLMEBhuyR21xYMMTGnc4IjbxjwpuBFKOBFob1d1
7cAiysmSBScgpJWm3gYT/bxp
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk1IlFEUvZoLg7KfVcgsdFFQbaJcuIhAN5oQhGJKA8mIk7iZYCaoWQRt
W0SuXLqKFiWUq2gVBUEQgjuFGhQS+jFmnHGc7+e9+073vjdCXb73fe/nnvvO
Offrn703freTiErd8hrPPRgqFnPliZOymCyUFuYL+bnrhfv5+XxxcFbTMu3B
sI5TAFaGYYaDsbLgGGDEcOwA56Ap0FPnJy19GzgDJDptMg7jIHwkzzrjwsIk
qYClrCQ7yxFss1Vt3CHh+gH7NqSjTUMe6hsbJhrK/nAWETwBf62xQnm92fg8
eunMU0UYBUYexyAajlDD61vU/Ur2Yg9h60TDE6Kj61J4s9RJD7VO4I/E4usI
XaSisv52jRJPJfV0ZGwRXa3sgm1jhqajSA6aRjTHit1f2/hUN/jypzLWP6Hq
VFnqXRJGiY32XtLtOaLVYE0L1ji2SEWS4WnRceoIxbXYG98O1tTfV+hYF3W9
3Y5isYuFq5OS1vu3JLALu+XnCOqS0A211X3PUuYZ6tXFjZq0I9BnA0489Ndm
C3UMTq1W8WbpoOVZClenFy4n2uPHHeUdrrzjUBCu6RnVxJfW9mjPC6kZ6X67
o1XwDsweGmvZsysm0RZ47RKUufH+0XLv5MBIn5A9X4UxXqPc9VPoD/Sc6Dh+
mjQQc6wyrP4rhm/mZhZ66dzHxZWpy1uhVupCF51XxGG4Q7tS/B/qkxh/+Csy
Gr7HLiB1yv9AxVPWvXauL8v4CzORoo4=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUk1oE0EUfla0P4hNiyIYFcRDvRRF2urBHxJBDB4KlerN0uDa9mCEVBRF
BVEx0ksFQRDRk2COplhosaWCgldP9dAc/IlFi5qk3Z/ZmX3PN5NpMrs7u/ve
m2++ed+3N31l4FITAIy38DQwfD2RzQ7fOBvjn8HM+NhIxrmYylx1RpzskbQu
22Ufqg+FAvXbJ0IKCVHyTBTYNFJVz1JxUEqSSuL6ysjcylz8Jam+JDAZzgWy
BhRFDMwAJqzhRW1toHQp8jcHhe/5y8JXK+QS2g0QfQy5YEdy9Ovi/R5IEs3R
D/eLECQ1pkJ63c7naW5rbgPY09S7Qr+E5cEnog7YAGZs6tkKvU9gUloCvMGH
rt1d7qn4xEK0NAhwG/oNY3u0g0fzNwEWfxMN9UGjYUgyJAdeJjh0eu372PbW
C8uuUAypyWrUmTv7OXfu6Yu7VDStifhSGhOnFwrxbshN7EsfrlCjX3oUnuce
td+bn509tC3nr5oUMxEh+h4R423sV8XJKYi9Kn403BUFIc1XkX5OXZv+V8mX
ytUMwDe9Wa35fysGtxzSHw68g+4l1sBDI8vlTyS4cSL09J+EjveCBVEa+BnE
8zMs1VpNwFvm4KyPbtlD5vHgGHHr5wqEDsBj6xOpKe6MJ860djotEDt5ngs/
s1fYW8xF0VuAFGwxMsSGDpTerLslMHskUycAjvd1bh7VikUNF2kPlL0Slclq
pmzQ1KwaU3Hc2FeYRGiMZUfDj7xOuy90lcaIgsggYFDHCuk/uxB+Wg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUjtrFFEUXrQRbPwBKdRGO0stFSsbxUi0NcE12Gx0VxT/g5VYKNEmSSta
GMIiFpoQEFJEBTFGAikk6GxmX87c9z1+59wZdZjXeX3nO9+5x2bmJm8eaDQa
nUN4TU7fP9duTz+4cgTGVKtza7bVvHGhdbc522yfmeG0ierxJlC6fHSWYkkR
/2N2wOKYh8dREWIhIdhEgQOBnGdLAJTFqxSgGADkYvLDisGkDjF9jE7A7NFI
rQnU6egGWK9BQoOElY4pCCBFTussJ2QZV0MKKHfZzLYePVx9vUhxn4KryCLN
OiqXMjNY4dwyN6oqs54GY1A3pN4zNtm+K4KUGXLPB9awMBqq7IggzMYL45eb
Iy0/djj/Zj+Ww0jK86Rcvp77THka7j7r5qUlDb1sml8tu9vHL9KAvlw9vAhX
L+O5PLfDvTFx+hWm3l25Z5G/1SVva+Xi42sn51SaF4P1OsuYOFbRDwevr/NW
uqj+bePHQkpMWmuZS9bGi7VAJtsRsCooakT68Y5QMez9vwjQJ5dtf7r81I/6
zn7rclf08AFbEeDP81NAAkGleN1FElQobZ+69JZsCL404AhXibVCVeXU0tmj
J76ybuOFPZaU/q2X+gt3vvN39Iv2BBAK8xaDj7IcHvHnk/M9HC/4POm/J7Sa
JujSeheTRPBbqg+rzFyfNOhdMKp4lXeGm0Uh8gerQPMl
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUktrU1EQPqgFEVF/QBe+ETeKK7e6srrRFMGVkmKsokRMI6ULEdSNFH9A
FVyKCC6LhSwsVFz5QAWL+EiU2BqLWGOTe54zfnPOvfYmd5KZ+WbON9+cbSOX
S+fWKKXG1sOUyuOHarXyxPAWOCerYxdGq5WzQ9V6ZbRSOzgisMH8ZWIO+BrP
eHwQC2PFsI+Oj5H0ULSBgrOSd+JnAWG3CiBrCVlr2Aa4BtFlsiEmJdGXmm7P
LgXnQtGU0sEo0Jrd1T27956IMRO7WuO9YJrD3zYK78Gmp4BGlEjKTytjmjiu
9qsSL/RyviGx8hqQoNSkb83OsxW0Q8b7hPIZz/RnHi/jdM394GLYxpRQ/TD3
SJ0/dg8R1HRRGLgQRKlrm3bt3P7aQYkUpETGcfnIpXa7fuXwk+eOM8+66CZ0
1dZnht//0FN3Fyd1VK5QD6edAqTN/HDtwL4HogskxscwUfamAeQi8+eXO9ap
d5GjScW/aPrWH/497fjV1B2ljs42kPBJux535+5//ftdh/p1uQ58Q33BHsDZ
MmVuw4Hxn9yZv7n59JAaUOpiopFKz6jbDqd0Vz59fItKZbBQi1GxJPYrzE0G
m04LyAX+LwqyXcO6wU8RDS+4UJNyCxk6cnVMPrGoBiq4RlgAL3EfWkEVEwdL
YrImybErNkZps7SqW5pWUJQHkLPe5X8pDSW78OLERvH2FgUkKwrhH6RnyY8=

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUj1oFEEUfhgLQQhXSQp/SCdYnGUgEAzaCDY50c7iQi7B5hIuoliICIKV
WIiFKDbBQkPEIlyhYGHAE7FQUNEEieJPLpgjt9nd25nZefN8b3dWzsfs7My8
/+97w5OzleldADC/h7dK9dJ4o1G9fLrElzP1+fMz9drUyfqF2kytMTIpZvv9
58iRiCNURGl+iflLeRlLhNQvKXl7cpZSTTZ7EtE2U1hRGW/CSpuygesPwRaa
dbFK5BYuVEL+eQ+NhHx0SB2iDToLK8i+2jnHFohkpKLwYbdLL4dOrUoKnRbO
PaK1m3ePTjx9sHxs6GqeP1FI1tDrTYreHDlYXvrWXR+Da/+3lLB7uaQ2ddA6
Bx+5PlajIKApULGLHr0TEP40D12UZjErNqWNlBSprQywDyMnyhQkPcx71rTN
OfFLIKCEMHj8Ry/SCcfg7gyF3J0enY2S2F4HKE1NvNXsZHNkXBTNDTxn/N8/
3nsA5lqJB9JZE1P78zhME31fvAcweodUJIgzb4IJ3QIYBNgHY7uZ1AJpRlMK
aoLI8KtP91nlEpelwpyrFsCVldWd9g2AgRcdKujVspm1jN2f7Hw4Lci1uQ1T
pLe+NltPqnBbXmUWnMGEfODwGTsur9NvZEKthJFiGIWOol+G2kg7KmYIuR7j
JwuTYLtrZAqDdpau4KmYUL/+lSEGfnDkGBfPZBxyg33DK+0aHlmt/NVm5aTo
4cWiO/UXLYXBTg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1oVEEQnmgKY9DEysbCYGcCAUGIheApQq7Ti1ooqIleDhFOvARCCrUJ
sRAEkWhhIdgIKWxS+UsIapEmWhiC+EMikpzwTO7d3du3v+PMvvfOg93b2Zn9
3vd9Mz0jNwqj2wBgbAdtheGJXKUyPDnUTcHZ8ti1Url4NV8eL5aKlYERLtuX
LkSD9NP8b61zsVAW0fKdQYmOUrQEHZUzFp3hUqSQiijhJG0qBUEuz84EoY1E
Y0QSC8TIEBbfWzS+kmFif4jStxw1eEWo64ylJEbWekwT1n3J/NcX5y4OPbs1
/jaI+TvKI4lQooityAFsb+uGCw0MMlYkxNm1upk+3tkBuw8XfqitX0I3PUml
0UbErQdyG7hIV8EbuJM6olEtvYvVZbhZxZf4YdYmXDP9VSp5eMl6wT9Rap3a
oilmpo9XNpcHoPgEm61njBo1/+Dnp6MH2+HMLpjSLjUr2+/O3T4J0Dmzv/S8
liR9yjWNIdAHgwD99SX23Ghj0HiNIR4b3HJy+UTXlfcLIStuJNqJz7cvAOdf
rc/0woGJhc01Hf5dRbbff+x6H8CR+d4OyAPkP9axGniHHYE/2knDcfoUjcie
djhak7ga+NYTJ2dnAfb2t0FXX/n+vfWYXFy03EDrFX5/vYK1Ehyaw99eMONx
TieEHHH/pH2X02Y7m01TwlnK+L/L1s+bb7LdCDBzxNEQ6eSJYK3Gt6s1fTxu
fJKmZb3IYJIi24JiZOXSzD+murNr
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UktIVUEYHoMiKOSim6Ioctkm3IRYBFkYLWph9FhIpHmVCG6gZbVOkqJN
u7qQ1KYHLdqpi6IsLgW6ULK0iLDgeq3uQ++5Z87MmcfXP3NuDeecOfM/v/+b
b1fvpa7+dYyxoY306eq5enBwsOf6iRQdTmaGLgxk0n1HM5fTA+nBtl4Xtr3+
QhgAWsFySKFRQgjwMhCgviJta7QFVcQIahwCWmpKSbzOBeXPGtYmRm4UqKxM
gji82aAaA1YLAW+glkH+5lyIuZk3EOSiBzaGss5fPLWZdb7/ibGcr6gp3MT0
UvJDgs0a2Y2GgDJEUtolG7HylrH1rGF0W2oTNfcecoUexXNK2kl7C2PXCgs2
9Ng0qoisGt6xpa9Yhh1hqWNk5FKKWFGm0TjL7s6237cwFxnrrkTQkUpmXwtx
5/RnnhDQynYvehi0pBvudX9roc7gBNvwjdAny822/Mex6o+v2vftF9yxp70z
nuc0pmMOpQOdj6d5RANbeDa1zuWXqC/UOdY4lMuXnroMayVRILLdbOtyUaJM
U34AlhZ8ed+1MDnNzqzQz63ze8fxadzVsipyV2dmKdxd3A9kn9AVH38gEpiB
Qv5jCzukjRz5CicJNuzpgKT/WFZEUwd+jR1epTJfnh2ZopQ48HFEx+KjtuyL
l6EKUfg+VRNKJRcITfmjHc1sT1P/5LwWePe7Tpmr67BONN++cm8mrkghvRic
rmRdiAarhTWKtF4jVE5yQ71M5T+vXgK+oEFsEnkmgowMaRAi/KdoEVR5SBZr
EgDW47OxC/gLOV6yLg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1oVEEQXgKKYKHpVFIo2qggWEUOU1hqI0RFVCwSPGNEL3oRJWBhkUYs
VLTRTrBREC0UjCgINiL+wUXtwnlwSfByIffu/e/P58zsO24fu29n5++bb2bH
+NTo+QGl1PQGOkbHbhyqVsdmjm0m4URlenKiUj53uHKtPFGuHhhns6FiAw6w
Bsgz0MqQ8xcAMWS5hMSEFA7Fg9bW8sWkEOf+ynM66NX518gYeXXQHFgX1p1c
tDZsK7UzAKclVa4tyDwkKUnReqbUmbmpyTUJwAcrdE1tPNXuNi7fBO5t3U0Q
CUnC6FMsUy37Ri6MXPzeST+dLl3PfDIyoL/acrf0+td7xK2TV9p4+llrcpPI
Dg/rWO1IQaiHi08e5Aw69lgdEkMqrR2W0XgbGQLLaqkr1sbZVLDN2z9k4jNm
sWEe5G7+vdk+89vT5imyLjT56tePhLi8bc+do0BTEzWeUbjggz6y68dSHH6b
PXtpuOapNOzt6Gw2FkX6if1Dj3UUwThpGZyAFixNvAjRDYRRZIx+JV4o+lML
ETHXtDOfb6HDTmQUdxrPV6BdnLAkaW2r3iP+0d55BFgy6NGyZgkEx5m7NVhy
CN51mUxd9D199YUIPD6wSXE3pb2SRZK+vK/UuvVqsC15dQEtkrBO4/bwwat9
wkIndcj0ZfhrYXMfih2JOFgJkNLwZsJufyLp7qT/ZOq403kPvJ9tB2MyPyIJ
UpuSBVf+Hyn91QE=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUjtolEEQHiI5oyI5hViIKbSJIhpJmmsVLFJYGBELISZHzmBzgYsiitpZ
Kr4KmzSC2FhI0NpGEKyMFgFFfCCE6Hnm9P7H7s7OOLP7/yIO+2B2Zr795rG7
Pj95tg8AFgbkmJy5eLjVmrl0oirKyebCublmY3aieb4x12jV6uq2q9iemcst
Ql4WMbFTBX2KcufRxPIoB2OpsleLVc0w6QNnqEgueKBl74NnjCiF0FGmTk6h
U5+VaI5R7tx2kdeVkX81f73jsDRr7I+OKB+evW0/2Qunk8IiFFAQ19c+Li/W
AB7fHoRPTjk4sRCiZ1z9yYsTm6rQeFA5dCfScEXK+dfey9dTo/WDML5/xztr
SQqAMUuSvLrM769dmAYY7Eb/lGK4rpSTpYfHpIw3smi0sRxFBY5frlX696mK
gb/+mJFEGeYmjA3A9lgaecdEqhWCyS8d3Tg0vGU5IppIE0Om9OX5yNZqpet+
W4N50YbABx2e2jAGfVN/adgiTuSWMOwHONIjJEPaLY6NMSk+hWHYBiNXUm1z
HiKsiYz55jSMDs0+Wml7/k8M34fNe+6m3FYwDGhZ2V++BzsPfBcCWdIz2lKH
ZAMV5PQMjGvtv119kxQkmOKIWJu9WBXNdlY+x/GJIoOgIGuJtd66X2x6YdbS
PNeozIn5n+HSTbEm6ub1E0WyrsST/godxMK5fBSc3PEfg+i8+A==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oFEEUHqwEmwNBLFKojaIoRBtbmwOvEVeEhICQwzNI4AKXgFgECzub
HNiIjYLETomYgIjYmEIsBLnAoUKKBC4kiufd7u3u/L3PNzO7hw/2zc6b9/d9
752sL0R3DgkhFg+zimbvXWm1Zu/fqPDlZnPx7lyzcftqc6kx12hdrju3ieID
UsCAZQBlobUcAdpqyxbtzJSzsuR+nVvmtfURTrTN+S0pnyF9nLEgKGU4Aycy
EuN0QAwod1pIMs66m2p/dclLse5u3y5fW4nJ+SjuEq6TbR1zk0lnoXZeiDel
Z5D+ZwYkKudSmNp6YcsRWovXz06eWVrdzrAHpfGXbQSu70qq/tozfHWpOh+G
HrNTyoaubIr2yKIqrmvjTMZzo7TOTcKEve/g9cSFVyb2gZwuY9g61ubjscbG
LpaPt8v2qFSjbxdPHK3OP1ixe55CNuZUsIOhmBQYPIXt4bsqg2zwQ120f+3s
bAH76EuiMV0S2ujBC0bVM78Zl3QME+mCmhSWJ6g7yPQXKJlgCJ+amJg88MOh
8VY6TsjAM/zg+4H00/rT74YuDHGrZGQyv8/DALqbn06/S5XhleCZBxDPL01z
ZHf1ZRT1ypESZ1FS4nFF5Lglph492ZSGylpuZfh4WBOnKtNrFFYpYNfk4WE0
c6T688BmyEMRSo0fBzwNWTTl98sviy220QHk9Rjvx39i/RNUKOFH4NeP/gFl
udaI
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk1LVGEUPmVTlmniYsjyA0EILGibEIQRVlCLjGAiUzQnMWWssQ+GclG/
IGwpRItoUbuiCIY+FoEG1bioRZRUDsOEkNo0M/e+n6dz3nvH7HLnvXPPOc+5
z/Oc0zY43nN+PQBMVNPRM3CtK5kcSJ2sp5dTiYmR4UR86Gjicnw4ntw3yGVN
4Q9XL82HcTcKVC5WQu3CFLTSSvSFrJSKssuULFo0Bv+7fFfiE1ogWlEJO6x1
aPprpuuh6dIvDnkuZdEL6sz7PQAd2wAyi56SIa0QO9sP0NUOkUgsq4UJqFhi
w8TH9l+MwfabG0mVt7xCX2cVMgQ/OzSTeL1wrhk29M99Ecp3MCsVP2Dv8xzi
uz7yI7Xu6XfWHxC2hI20p5fxaxvlGrvnX3JYMV1RpOYf09PfjgDsiMCdzziv
0RBd6qc8Z19+CloaWiff5Er/rFGhf36588SuLRnm5xQqzSqLgt+snGuGYxT0
nC0ataWmxZ/Uusy1V3qXcGVpseCM4ZzIo/7zEKJXMV/sPj1VyKE23AalEtpk
c2byei1cuEsSRglB0/IEcyj/yPbdyoxD6gO+Ok5JMF44JqG8bNX9B28//Saf
HgE0wOFwCmR0CR/fjsbOdJ7d+WIEaqpg1tDAeRTsmpnpJas2Q031pt21AD43
LBgflWU96QN1UWiBrbyjENhhtAlWDJ/Q12+0Nh6Ee9K5IoO4byvLWdkeutkQ
I4NVIy127faJUIQNvHbJtU2UEs64VYCVJpgLHX8B0NSNBw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1oVEEQXmIRNSIRLC0MCCnUgGAkjYWVXntyYCVcyBkEuchFEEkjGMVW
0FasBLGw0SIgqEhAESSohYUouSvUoLl4eX87b3c+Z3af57t7+3Znd7755ttv
YnahfmHEGLO4U4Z68+qpTqd57ey4LBrtxYvz7dZcrX2lNd/qzMzqsQPVC3nY
eQIyyOgzInBZIMRLHZ2OXr4oJEJh7inuweU6eu/DChpkZmc17EiPZhSOwDqk
4AgV1lKjtLZU4PiwzNjpfpGju/7u3vNHRDnFOr4iwThhTh4cG91nZs49eEXD
1EK2Usw1p2uHp/bsMKapuAxiydIfLLpIaXNluTa2yuyFXaibREr9X0DPjB85
mkZA56SXMreK8pOQJQ1z6LWyprKMnZdOiVtR4OvkxHRkEbCKwAer8tnAZXPs
DUSNzaE8DvTxIZC/NyPmqUrDiWa5yCNd2QBeTO03dYEvQkYsJ3s6efty0uz+
hmIYRpn+EwG94+ZGt8eVVKBIJNcig/tm9HNY2oqq1uOQaq+bXXJPcolZaqPW
hWYPRMA/t5e+KOetIoqixwOw3uzdNfAWsOYDF/LRGtqM7Xz6vf3jw7PB92Ct
mOaQ+AFt39rbj+q4PDJ1lcfA/k5j4eb5M0/W1VLRGF77TuSP4vHpS0vL/ao5
Ftw0wHo1BaEqE2I+dKp0LUurgk7+v8/El6y+9VGMMrhSJ9Ij/wUul9Ov
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UktoU0EUvfFHcSEKavFDUbopInYhYreKFAqC0KJb22Ks3URJhNCNXelK
N9qdIIiIK3EhFPxgtQY0ogvFgtWFC7E2tSYlLy8vb+bOXM/Me68DLzOZe++5
5545B8cvD1/cQESlLvwMj5VPFItjUyPb8edsoTQ5UchfGCpczU/kiwPjLm1/
+okVFoljwWKxHe0OmrUYK8kKxUTYLLsEv0ys0pjp+I1jMeIrjQEgitlYnaa4
3ORsOcGzyl0YLVw3WSxZoBGlSO2GtCS8SxSASEdzhBa+W7CCIjazh8C+l+gR
0lFmPK/7uBud2kpbaDdONJeBAvH3yyLliCbf1ueIymsiij01iX4252+dIjq8
2AB+ZTYUVglPkdbrBz2biTaVHbwCUEcUWrk51OrCdbSYAXQ70KHrAt1wbzEy
y0nq7v/YEB1XIIb4aVFoGedq32miO9P33tW0ow2tgaocaFg7fw4U31dKj6X5
Y3k51cZk8jw/8/DJIvYvlPva0rGoLOwwbHUJigkdp33f/q1L7pi6QQRv9qKX
Rmfmaya5NhKxO9kV/UfkWveNIIgajpFJC+33D0bbVflLOwGxFKckEDH9kPm2
ebptx8CeT07CeuxfFG9uwgiq5IZob9/gIHJDXsczqnnzypGjPQd2HevaWI1t
2GSGWbLp1LNfa1pevbk0svAZhooz/wkn1RAfXrXOjOyG003ODGn9QB1h9tZI
5tPJExq4TXmz+SYIu2DsfKpSgdpibabyf8b8q0c=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUk1IVFEUvo1hJTFG0c+igigMd2FGswiiZRAKIxXMSgcniXSCUYhZ1ipq
2cI2UasIWlWLFhGkBIYIQRoSmjUjYT+Tzo/Pd9+7957TuefesaAL791zz893
v+/ccyR7PX0lIYQY3U6/9MCNc4XCQLFvFx0u5kevDuVzg+fzY7mhXCGVtWkH
/Yd2KQRgQ6M2bID7GfK4s7QxZ6NRQAFt0ykvNtph/Le8i8KxhTDO1CgBIba1
MsbyZg7KiMHJjOTnym+Dqy/fp5Z+UQm4aqa0uHK8/Vjx3WBfjzhFjoaxHCzd
UG+cIEH7R/aJRHJHDS15bUsxQliXeHtL4uyFox1CdHkVXhn+OPMY559PVWZH
RFsauMJ1g1ivdY6XnszMBE+Lw3sbXGWcFLmBQmTfjJ9OPnxwUqQckragEelW
ePPeo2hptloR3V0GQybBVxoChYkSndWl1mKNGs+IHLJ7iHXbjDYh+m2jHRXb
E8ZYncSgnLm/VazwJeCbDKCJ7Bq+6JmudohbnjuFpOLWRuH35WdfySNErana
+kFhZap+51N1HTEQB0oS/j4cuZZfz5FRR/zWkvxgMQlUR8STtECDef2cvHw4
ozafmjYZSMR5XJh429ufuTsNfo6aLVfXulu3Hdq5u7eEDCTd1HE4+jIs9rR3
trxSFk7G5p9ZMlD+OLew2CRvWLPmidEhX6zjZm4QE6Dyj+j8Ckgr02BQRbEQ
/LhFrluO/x+nibtN
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk1IVFEUPhqEBmULoZKkjH6w0JVIUEEFEf1A5NSiFpbWJJFMOGNU0KYg
sBa1sYWbENoFYeiijS0qLJAgo9qEKU7aK4lyxnndd39P59773uiDd9497zt8
55zvfg2dV9suVQJAropCW8f1A9lsx83UWkpOZ3KXuzLpi0cyvemudHZ3py3b
GL9YfjSiNKglQ+Mzbtx/o12MfBH948LjFtAW1BS5RQUahVToEhSyhMgUMk+T
9BHcJlzI8YljQ5yOFok8JdEriy4+bzxzZ1R7ShfjCRHnhgEqoSq3iKhUDNhZ
LC3A6hW00/2giI6Hlcrb3QbY0nQB1kGLG04lA9mYbz1KLRcO7a2+5wcU5W4y
nBj+hEGeHay79TZZN8ZY8cvYubHZ0o3Bke0PaLCYz8pipt5PsZmvBVqrL1U7
rZZUVkrOTRr+6nD1xyejQ3f3D+ISSKrkz/+mz9PUYwbNzf0xIRpjOxcKlM5/
QPN526bGN25GicLpJ4vIGQYBlh7B5p6gmOxNuwoThlam/vERWFU3/S5YIHV0
LCkP6fhwX1/v+ho48foZ/gnkjxkUWugSzs8yfa0e6geu1Ox48U0gk8tcwRCa
alfuOnuyBY5/972Yptu39/kTUxUVAFvbN+yBX3RNxmjvISLmyHeuAWgA6JkU
zlKhN5jyu748BQPd7bFUaKRSWnJqq/FfpMxfq76MllvW7cFtsRIkB9lNO28m
BTyK9aXpLZOWZBVjCwSW3VO+bYz+A4oprtg=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk1rk0EQXgRBD4I/QA/+AkUQvHoUC4WKPyDFWHqJkApG6qFKb4L4A8Sb
vRQLghQPBU8FpQWjIhRC21QlShLb1/cj+zk7zuzuWx2Sd3fn65l5Zi7M3p25
c0IIsXCKPjON+9fa7caDm2fpcau1MD/Xat6+3rrXnGu2r86y27n0R5CI6LAW
jWjQAt18UjsEj5NgMzKokzi07KxLdnbRXaH1TqdUVfJVpUfjIYV6hJCXslIC
U4ADDq19PXtk+Z+MHu8+wjFajWvsZHF6gDjGA4vJTIcNdrd6scTVdbe/iTGp
4loMMuS2WEd8ldP7ww6V7lJglPcMQH7dPHIgIyOOOsTOmTVGPxwzODIVnptA
ZdRX8YRzfJfcCiN54MSamjvqnNzYebOBuxHHRygT+tifv/JYiBs4zDar/7gn
qZ5PidPPVsQlquHbaw10OB9iHI4+rywv0+2gj8USFawJsqyHV2L1S6LpfkK3
NDAqaXUC3T0MDJps7+ewdwQAlmtytlRS/UjjKnqjUW8tTy/c2htruk9onl3K
U+bDt9YkW/ayDOew7CyiKmjqJFYyX7JP16d9GtCXqTAD40Khjn8SsJo+L14M
1G/t/rGviTye5ehR4/JD3Mp5CeJ4VES0vICOeigGZKB98ZRSe6Z8Um+Grudp
4rIErdJW27BuPnJ47EFLCmF/wGg2AUT9X3L77aU=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uj1oVEEQXgwBLYwiiIoBSZcUNoJgo6CdlXAS0Ea4Zy7Bwju5CFHwD5FL
F026BBQlkEIIFgoB7QLRLiikiKedmuS8Ozi8d2/37d84M/veLbx9M7Pzzcw3
MyNRpTC5TwgxvR+vQnHmYrVavH/1MCrj5elbU+XSxOXy3dJUqXouIrfh7AM+
FsDTXzsNGkAZAGnZ4lG37KJRdyj0ILfTLyXXYHDhgWBpsFhLUAeGnWWSKR76
BzFp/U6lRX6aYCRYmb0ODR19KzZYTAzYJDMT/tPm3JwQLygdQpwzjqzi7MxO
rQadvy/PH1zhIvD6BxCDR66jS1yzePLZxyG7h9TB749j4mH7B4r1U6KmPPLh
kMjUb0XiOrfEXxkQJ9dD5SaUuSqOvKOq1XsxeG8PdJ8Y5lyYEMuvUGrdHi40
+1w1JEi4ckCMNDCkvfl4mxAqtJKOXBWnvyLZOPnGvYlzyq635aHTRFOjC13k
Q0kMSuTmtKLsAE20t2keLSzQcNvC8KSxKKhfcWbm1mBaAzKFPxI627uvKZIN
IwZjEtA7m2+KdYXO0QOedmJD762X8Gj8zKLCMO74hTZOoMfRCJx+uXTo2MAz
CvJczO/h2Ew+MgXJ2onBaz8bKD+9sfudEyqQBOZFobHHIBej2Q8575Rrwr0E
6Hrv5TzFUpb3xvYg314bSKEzr4PmhFivzgdis711/aaogAy3ybYB4D9rJs20

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1IVFEUPkRFYEWrVkEUTdGqgiAjiP42QQgZLvrZKE1awZQamC2CaFUr
g2rhIkMRop9FSBZkRQuj0jDFNkZUlobOPN/MvHlv3s+99+ucO6MH3uWdc889
5/vO+TY1Xao/t4yI2lfxUd/YcbCtrbHzxDp2GjLt55sz6bNHM1fSzem22iZJ
21D98gba0zBliEX2yOWBxIYc+BoFGHbFjE0wgQE0Aolw3OMzwE+YRMJFEyWc
VYp1ILnlN8OlPHSAMIRCxWKgEJUiFKaz7Hn8nlsAKklQWMzJ7N83BITS1uG2
C4BfhlHSf2z7Xlrd8u3jmiziqCwQIvvKU8jfpBaiFG7R6T8cCzHH927OwjxA
dOgVPdGpu6eqPeAu/mzmQQiuG8frPgtLoSd+UEZr35ZcBD/5e38l0WNUSbiC
eOYInbRTuU41dOHdEjko49Uu7wrmxO9f2z07VhqAj7xxTFHpr7wiw8jfT6Su
vsWH8d6n8cWYn6kikKbUIAT3SM21CRS6WgWXCkONpEy00eG8kO8HEf77Qhaz
4FEu0fpn3xOo3y9HgWn8sHeWhp9spbhHW2RqErjdcY/0sHDk/eRpJ01OAblJ
vICePdbfQOOMEzy0UpEyne09I0P13Q8QTu243GuJzdnJFKh/z6O6h7tWbHvO
cEelmskKFNn4wJmRO920+/Av4DUz4Xzu5fi8wAjZoos+fBLdKMGnF7QLY3WS
RA7/RNWFcJPY9yuulioxlkxEM88oJeaGMi0fKpqBw/oJKvuxBwuGa4eK58L7
YsfzkVMKVg5epU5VbpGOrPhZ2f8Brfim6A==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1ok1EUfXSJbm3RLhVEhA5OgosKiuKkIMVIwSJS2poGl1RTQQSdHETF
wa1QqA0qOjirs4LGrWDQToaupY1pku/n/R7vfe991Q/y8t3vnnvuuee+I3OL
5YUhIcTSPjrKs/fO1+uz968OUzBVW7pVrVVuXqzdrVQr9ZNzDDsUfxr8OIBf
DP0bhMeqvcBIB5USyFDstIsIl0jLWVi4SGJjasCh4wqmSALcQAUYZXxbnTfO
HQ2FgOReFoYwVmOzvLBYujOIUvypI3fn65v+7anStlcGZSC9TssoxcHayArn
EhNFweQ8Wh9Yx7HRMdEkmM5COTJCdLPOr1Zj68Xqk8ZvIPetciaD0nZj/MJM
c2b/M/pkOWNdpoIQ6VqXhbi++og75zSeC5zGi+1vfhOnR1oA9e0yWRp886y9
/hkh5pvp6y36koKtjqREix28m7xSEeIHOUQKbVxDYe77Ewdocf/gCGaj++cj
8JxSx3fZ7NBMkWKFz2OPXzq0q+LB0yTl8eIOZa+TY/rh+gDtSVFqFy77QyY5
vA/4eerg26430dqoxOp0Z4CNTiaGllM/sowStUrcp8NCTHy4UftCCpTiZrRW
X5piWIyK+tnp4hKlrlCjDV6JS9fmv2+zm9jTGOTI4lpJQ9fNFlmaDVpSfx1g
PW+G/L+ar2FhnWdzvEQXAY73EV/5+AsX6smD
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk1IVVEQPhREtGphCzEqFwlGBEE93EgkbdoIvWhXCx+9JJAXXIUUJCKI
iKBFi0SE0EiCCFpkQoukFtKyH0wJ7NXjpRn38h7d27vnnt9x5pxrP4d7z5wz
M9+cmfmms3SleGkbY2x4J27Fgasng2Bg7OxuvJyrDF8erJQvnq6MlAfLQU+J
3PbmvwEFuCwJbQD8ReLJGm7IpsBIVIFteStoyEgJ9CmygNss/Le0g/IPUvoL
xXZHTUENeet49SVw52xRGtBCeGAaLodDhw7OEyrFe0YQMphoDjYwQHfHvnV0
zdxTLkSVsQtBVVXXoHxtRwCN9N+kZvf3FV6jjLqOsKH3a4STeQXwrXCgCBDz
yT3t7GjqcuSYpbPNjvWy63cSUP39VSxappiD9XHF58Vbj+uGQwJ1EaM7lUUd
JGR0v+8RNFClYOWXJYiUnArBP2XsufyESg2vqNEGnxR53+3MzeKbn1Ru93Gf
nRaQsxK/CJafds2FTzoOs+/Kle4IIPH1/MTS1L3VZxO9bNcPBEnTVBIUJ5pa
K7+b8w8eFtqOwTr1vmnAZsh3htltCAtfxnEMPmIYAaJ+e/StazboECQqFraf
moRRduLu+JkGViZ9P2sqQqcaG4mmmFswnZqt4anVDBF2gy+WGGtHG7HrabWt
UKAxaQC8QwtbIBoy42lKCNXCDjXjpenC3ykSOH0mhUTRA1bmr2gn6GYoX6ty
gyII993MNPw5K0UF0hAhtS6fzLqhUg5tvJOVmyoIvNg=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1UkloVEEQLYNoRBJHRFwJCgq5CF4U0RxcouJ1ZAQhHhIyhiCOMAmoiIqI
iriAR0EPbuA5ECJhvAlBA0FccEhUTIyaRVxm+b/7/+5+VvX/NkwPv+pVvXqv
a2PXqezxBiLqa+Qr23l6T7HYefZwhj9yhb7enkK++1ChP9+TL+7oEtj69FcD
HwdE/Gfhj5EAh1xs4YxPG2dRsRpKweNi1BigOSGXc/wRSAnfSBoyRnE9uMBE
jNeGQwbOphTc11iE0k3H3MqmU0Senw9RRxs9Z1YjhJqzMiLqwHRzlgeni/3f
ESoO2CiWEWUqPGmixZzrvXasfc6lowplhFm0NO5vuZrD23FuruFHcT5V20rU
fOXxGTiF2QvbqcSNAknX57cQLaRV+y4zLtbjB4m+MqFRDEAlt4yZtknmA/CJ
e+C9lQRLVmtpE7V6HdNOtBB9Ea0IYzV3cjOtIS/GOgztXKHjMHkDLr7D0g78
Af4qvLlENAFbtUif5vfQurYBQemXRA0/K2xULGZx2aP2zP0SMIGRqeqDI4Q6
J7TPsLV4NQkMUmvHQ0SDJciLx8ZWRXuIKXZjF20Avr0YHoM1zttvjFiK8g8M
7B0bxfXyjPZsYlmAyLhfONGNGzefYffKUStEXo+/mPDpUZQ/TrLodKWM3yJ+
i9BgZvXd8yNNtCiz5JY4hZjVV7R1WoCvly8guvf53PD/bs6bBlRhbhMtpXfz
JtBIT+Db63Rn0w1WsnxaIomjVuJhGCUojllr6n5M3kfZUA4geTUp+AckpJxU

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUjtolEEQXoXDlBoLmwMJpktpCoOFpBIbkUi0E3LkDL5OuAgiQgobCy1C
rBRSpAkKCcRGsFIJcoVNEMUkhigkuRPuLrnX/++/rxlndv+7W9jHzM58M/PN
DOUeTtw+LoSYHaBjYurxeLE49eT6SRImC7N3Zgr56SuFR/mZfPFCjs2y6ZYW
w3JhW0DAxEibpDpaChEg2JCGXoYFIL3UpATseBDt+NI6OEnnbdCSNeOmYUCZ
xHjBBkTASKdxkh42glX2sL6xUS6jc5hCUiaK/0xlf35za/lr6XcrcgEpeNG1
vjCa+dJ+s/LsM7iKJFvCdBKSKGnvREKcEt+wsbaqsE6ZojIulvinVm/viKXn
06UXm+YVF0kRIaD+6EiUtRgxhnppbhdVorqFEEES4IBeGveuDf1FA8wFORNu
oDTGWB+JzFvGSozzNLhe7Yj7QtxgZiHRXhUpZNol/+XOiPfeiCnu4bXKEeKe
EIPVAJP4+i0eiuxPMnARUk+/o2wGcslP/1sYa4akr46eXg3xAbWhbrWOZIOk
aowjQpythfSM8emubGGjHS3Nox4eeAechbaug8yMKnyI8dLLxV8fH0xmL3J7
AXYj9O23l8XdT+czt5ZvihMZ10zJMn58cHts5P7g0/Fz4tjwPS7SGtWdC4t6
u7Leqs6J12s9Hw3dxkd8HGCHp0QxWSqUYfuj2V9gkaeYB1f3yXZhIF06KMiF
Km+ouZfO+P//6ifL2A==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7716859193228817`*^9, {3.7716885920817165`*^9, 3.771688602282712*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"eabf93a6-413c-4986-8d7c-229dadc374d3"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model 2: depth=4, coupling=2, activation=Ramp", "Subsubsection",
 CellChangeTimes->{{3.771684353176707*^9, 3.7716843788931103`*^9}, {
  3.771687868868864*^9, 
  3.771687871830336*^9}},ExpressionUUID->"37d87131-a10b-4009-ab0e-\
ff79f831021a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trial2", "=", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\<E:\\\\train\\\\TrainedDistributionMNIST0-8_depth4_coupling2_\
nonlinRamp\\\\traininglog.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7716842661097937`*^9, 3.7716842679253855`*^9}, {
  3.7716843328657722`*^9, 3.7716843342790008`*^9}, {3.771684663376523*^9, 
  3.7716846648724213`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5b9dcd2a-3595-4207-8c48-056ae75ead95"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 40, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ProgressFraction"} -> 1, {All, "Round"} -> 
           1, {All, "Batch"} -> 1, {All, "ExamplesProcessed"} -> 
           1, {All, "ExamplesPerSecond"} -> 1, {All, "LearningRate"} -> 
           1, {All, "TimeElapsed"} -> 1, {All, "TimeRemaining"} -> 
           1, {All, "CurrentLoss"} -> 1, {All, "RoundLoss"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ProgressFraction" -> TypeSystem`PackageScope`AtomShape[60], 
              "Round" -> TypeSystem`PackageScope`AtomShape[34], "Batch" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesProcessed" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesPerSecond" -> 
              TypeSystem`PackageScope`AtomShape[60], "LearningRate" -> 
              TypeSystem`PackageScope`AtomShape[60], "TimeElapsed" -> 
              TypeSystem`PackageScope`AtomShape[34], "TimeRemaining" -> 
              TypeSystem`PackageScope`AtomShape[60], "CurrentLoss" -> 
              TypeSystem`PackageScope`AtomShape[60], "RoundLoss" -> 
              TypeSystem`PackageScope`AtomShape[60]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[814800399], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[814800399]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "ProgressFraction"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "ProgressFraction"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Round\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Round\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "Round"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "Round"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Batch\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Batch\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "Batch"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "Batch"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "ExamplesProcessed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "ExamplesProcessed"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "ExamplesPerSecond"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "ExamplesPerSecond"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "LearningRate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "LearningRate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "TimeElapsed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "TimeElapsed"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "TimeRemaining"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "TimeRemaining"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "CurrentLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "CurrentLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][{
                    All, "RoundLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[All, "RoundLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.025"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["54080"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2003.66"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000755397"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["27"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1042.91"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.48493"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.48493"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[1, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["108160"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2003.47"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000903126"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["54"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1020.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.376"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.376"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[2, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.075"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["162240"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1989.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000959603"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["81"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["997.906"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.97142"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.97142"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[3, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["216320"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1920.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000982858"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["109"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["982.518"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.81401"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.81401"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[4, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["270400"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1915.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000992676"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["137"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["962.401"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.6592"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.6592"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[5, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["324480"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1898.92"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000996862"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["166"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["940.804"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58982"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58982"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[6, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["378560"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1896.22"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000998654"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["195"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["918.168"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58071"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58071"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[7, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["432640"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1886.34"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999422"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["224"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["894.398"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58636"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.58636"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[8, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.225"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["486720"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1898.94"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999752"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["253"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["869.739"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.50442"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.50442"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[9, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["540800"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1896.08"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999893"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["281"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["844.054"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.45932"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.45932"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[10, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["594880"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1886.17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999954"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["310"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["817.773"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.43324"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.43324"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[11, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["648960"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1857.31"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00099998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["339"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["792.036"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.44015"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.44015"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[12, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.325"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["703040"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1857.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999992"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["369"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["766.456"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.4141"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.4141"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[13, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["757120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1899.66"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999996"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["398"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["738.345"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.38839"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.38839"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[14, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.375"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["811200"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1877.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["426"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["710.341"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.38443"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.38443"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[15, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["865280"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1918.51"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999999"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["455"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["682.34"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.37966"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.37966"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[16, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.425"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["919360"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1934.61"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["484"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["654.163"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3556"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[17, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["973440"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1893.95"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["512"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["626.04"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.35989"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.35989"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[18, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.475"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1027520"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1896.72"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["541"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["597.662"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.33788"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.33788"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[19, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1081600"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1869.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["570"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["569.846"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.34411"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.34411"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
                  GeneralUtilities`Slice[20, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 59371782]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[59371782][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1377., {405.5, 414.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.771684385109838*^9, 3.771684665991428*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e340f147-fc7c-40fe-83f1-05e8b55de0d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model", "Subsubsubsection",
 CellChangeTimes->{{3.771685005737775*^9, 
  3.7716850064874945`*^9}},ExpressionUUID->"29bd20aa-c895-4a36-b125-\
6eba6c8127d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ldtrial2", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\train\\\\TrainedDistributionMNIST0-8_depth4_coupling2_\
nonlinRamp\\\\model.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716850980385823`*^9, 3.771685110875313*^9}, {
  3.771685563341236*^9, 3.7716855698853397`*^9}, {3.7716858540785203`*^9, 
  3.7716858641011515`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"63c705bc-1aa9-4a89-8478-96a868d4557c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"ldtrial2", ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716854599143934`*^9, 3.7716854792666187`*^9}, {
  3.7716855567162714`*^9, 3.7716855573547983`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"75bb5056-e92c-481c-aec4-d165b4574a05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UktsjFEUPqQSC0kn8VpoJiFUamVHpBEkXRCKGV2gIVPGEDpNppNI2dhJ
mlhJFNsuEFZlb6KJaELVojHSlQWCeVAz/9z/vo5z7r3z3+Q+zj3P7ztn+9hE
5spaAJhcT0cmd/NwqZSbyqZIGClOXisU85ePFsv5Qr60f4zN+sJGWtZqOjuI
ii6tI8SYHpI1gr4shqU77pMOw5Kly8loDAqOQZYmmKI0wdHdbRtzAs2mbKP5
cHoZwrOvcq+2YpsXMD7Q3zvQE8J4K7VKu5nPbQYoAIz/8J+Ga6GA74X8PLgj
/QirPy+c+h0QOH+1vIwrt7aO/LVoG0q7AlkfE9BnJxUW+/skZbf6k46Vo8ED
+/Yc8WJ626ITVtqhXOVRVl6d64VNd//It4N7yzLyMFgnrDIfDwA8VvXZMmzY
tU86dj0ZtOKzcPof2T+ZSK0pdAkkCIpj1L4GSh5mF/juWCNUtwHsLzASeue9
71xhJEPSNtarsQPVIG7mXSs7JBNWs/Tuiy9Z4eIQNF0t3GACHE9PH6EXsWqW
euBEDTm8q1IIVTk/OlujBKsf0rAHm+wgUQqXZX4Y8PWv6oO54Y2HqNctNz80
Dlqj3gJwPHN9FGDd7uzTgNqgUo5UgNTtg2cu5QBuuCaIhBW0FYBj9xdmZq7O
1ZOZsNYDb7y88wZbse2yLBJKSSsxSsL4Q6qEb91CGQf63IcPSZMRox9GrkHy
KJDiP5k4tEQ=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UjtoVFEQHVNomkSxEI1G8MdWolYJi4WGSNSAxQYLsZCNrouiu7AJfkka
iY2ylaRaRLGICApWYqGFNqZYP5VEBZEYUIwYjLvv3d+MM/felwvvvrkzZ+bM
b9totXC2AwDGOvkqFC8frNWKV0fW8eN4ZexcuVI6c6QyXiqXav2jAtsSP01I
ZMk6vjULxAKLbfKHH8pE2Sq+kAyr5MUiW7W38P/LXxSs+GhKKPVA23KOzMIU
rYAxEqQ2RN/7bDEoBM52ayl7nQD45GPH44zn16x5srvuNSjxGCuWtrNM6l5O
Ds3Sn7mfHNWgVCWMkjC1nm/tHZp8sLb3vjXKx217I7L8O78erlXhZN8rdFxu
EnKQ8JbmujfPLC597bpe1+h8Zsshd0dLe+C8IZffNPHDe6RoBeBzdh2wkZJZ
2DWfKEoZ7GKhFqkbej4oqh9rSBBFqHya4dw5BC+WHw5MS8ZZ5aHNRNOQG9kB
uRkWtQnhVCp8bL/VGAbYeY+cu/ueSVLMpoMqhb7c+L7iG6KPF55Kcop9Y2Nf
l08NlgAOfH57o9AU3T9CLcXpNvXwfuzPrx5+dOX2RU9nrEyoZXhRjq7ZsH1V
J1xqVB9TYuPIuAPShHcDp5sTcPjmQuLbIfviPAC5s27efqfmL/pGaCxSqNzK
1gjU+T6obARBSaHt4m+cRReJxBdjU+NBD5Qslei11ZGAZAaUoWXZccVRGHS2
yP8BBF68Rg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUr9rVEEQnruApIw/QBTBaExSGLCw0cJCu4NgIIknKBEueEYF7/AiEQtD
QBG7iKiFVv4BapEilYJooSiIYiKCHIKVJIHg5e7tr9nJzGweLuzuezvzzTff
zByYrI9eKgLAdDcfo5WbJxuNyq2xHv45U5u+MlWrXizVblSnqo1jk+K2b2t7
4hWIotwd3hb5FykaVIOL5MiLBy9nieQ5iiUKxFEMqDHUoH76QTag+PkskleM
HG1BMNKTif9BRJlQdwg5PplgY2wvlhe/rK6oO0aFe0aF9ScTIxcewuAQnMeM
/xPeOSfEw7AdhmAX7Dh4WtlDylpoZmDbboCxeqELuj5ycpS2kQTf/Fxp0RpR
8y4cub3hFODRbaWWrucA4+VfogBdqpXEJx/iPzxU6b9WGHmaBHHFnFRBSup+
PCqeelAslT7YpJtPTKxEC3t3Dsxl11/+8XmSIUn15C7Dne+c31+NgsySasSE
9Po4zG+wbyZPsaU4RFoWl8dQ0CCWXGoY14zot3Qv9PWPK287pSmnN0lKk8dA
WymhiCHyGFry4s91w9U1pOyVFT2MidjmcNZbsnv2n2XHpYX7n1DYgtMIXICA
SzA4a9ZXv723qQXe5KTRmHIP9M08mzi8nDjzxdb4br4XBobrcO9tGi+fD4is
5ucTR3vh6wsVFkwaNnKd3N5SEdwXr7lizEI+kh3tl+OaBh1GGWu+g/eiWSc0
iKOhTZDjuoY=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk1ok0EQHSqVqggKYgQFkeJBvHgQETx5ENSbCRX1UhobkxhIMbXGf1F6
kCJFrD2I6FU8ieJJFAteFOvPoRKhngqBIrS0zZfvZ3dnx5ndr8EuZLOzO++b
N+/NnvxQ9kIXAAz38JYdqB+t1Qau5bZw0FcdLherhcET1cuFYqF2OC9pu9If
ybLW8I58cCElpCkmxSdD2r1RSGiQw8jExuVpQSSxwDgdKYhsB08OmWh/Uonx
N4KyFJCEliJlGGvRY2xn+39hWwql14ZPSsU/P9s/C+7iScPTcNV4taZe1ml2
rklz357XBwUeMRalkfgG9/pxugQw8/B4lyRHrp5BTfoxwPrekzlYd/D8IPQr
0UMeQyfJIYBNE19eP3uxE7YKBYZQgqwG/ZjfWIdLREHr5t7+Xy2iFcmXF7LT
Q6OlO4SIn4qVM5OjazrL391efmcVLd0G6L3elKyUD//3AfyuXBmHzLYjI5PS
mHcBNbNpsJvlDFzcl336ljAWo9Bazf3Fi8unujOwA/bDGNvhndBKvpjqu/Rm
DDZ8F2vTm2RVN/YtHIfds9xaOzYYKqGhhI6ORN9b5+CBN8dK42bFVSZskmp2
98CEdyB03qL75iuohAunc8cefeAgFiquWMyThPNf3+Pf7OZ7UkVzeZvInBhy
E0c0szhSuh+otp+WVWOlmYCWAYqNjorSXaqqCqbOHoCrZs3keFra6Zq64mfI
P2AikieOtaOXiC5I/wA58K+O
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUjtrVFEQPkYQG9EihYKNWomgpRYiWPpCiMkP2MVrUGSFjRBsfJSCpEjj
WhmwERGJoIKkESyMiIWNKKl9rBjYXc7uueecOfM557FrLtzzmplv5vtmDjRv
zFyZUkot7JRlprF4ut1u3Lq0Ry5zrYWr863q8pnWzWq+ap9oRrf95UcALDHg
AMiWPp9WKveQbAhja3l2NsRgubq41WCb3WxyMNFl4lmHMEEXfIZNMB4a0JJu
JA8jgavl0uca758u3b52vSsW76MjAT3B1N8/312c6zyvDn4ckd1SHUNb797+
rKG7GOYkZiuVfLCcSzY+PmWThJPpjX4DGVCYRCeaRK+ZgQUJ2cB1SLmCzyJ8
aq53hdc76kkuCpmRwHi4+jV0bXFHHetEDO0yOJGga3jB6c2qHeoDSS4RjIpm
UiA6Xxhnp9X2V+AAkzFBo1z5YOXe+V1Pjn4rVcZNDn/iyb/cN7WEzR8Itu9z
9bEBg5T4pLoQ3aVIUacmHwp92WfV4V+b/Pdr1MvrwJxBYYPF7m3SmwfnHia8
1OBI3cpCy0o9frP3+KFVi7FgJk2Eh62UunhEqfs66cmlBYGHInZ/+VHj1OrG
/+YIdSrtCG7txdDF9OxLEOcZk7Vef0aToUQcodR5L5ykN24sRkShHOzMOHGR
H8yeo3LEprCPE0GUswSDfyyE4Do=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUjtoFFEUfYiIjWARQUgQxIAIKlYiWAlahBRCxFoSXcMWrrhZkKiIoIIo
AatoLQEtFBs/pBCETbI6KhJBC6PghGQVo4nOzs7O+x7vfW93Cx8zb2bunXve
Oefe7SNnh06vE0KMbaRtaPj8oXJ5ePzYZvo4XhorjpYKpwZKlcJooXxghH/r
a98OuQVs6kDLhss5yAxQ3YhfTUOvxlrtv3LAGfy3MlAltKWH4qSEkj7hDKEY
6zyopHenOZAQKgHlVCeJSM4kXKah0udHJuLo7rPJ2tSKW4CUDcJhRLOGg2L3
4R279lw7MyCuLH+hArhwuMZVIfYKMThXWSyKIhJmbg3TgKzdm5+9ceHEdwqt
6boDczFBXBbHQCpV3pHgl1Ysoz712QesQrpKxFsIPKjQvcJfIp0ssRutdtiL
bSI5d6uOFXwyeB1Fyw/fkuzMg2qYxnT27tKbyvTNy48WTI0ISHaUPGeAFkx8
9OKHyaUUOpgjYZzkvHYK1Qcxfs/mXcNTKsuhVj2hxzN28c/7O92k00GQJ0Yi
5P3I8+9QVfipmg3DlsNV11//wZ2xvuO0faW4NxAz/WKc+kUt0EwK+aB4ojkh
519sEz1PLTSRzNlrBxqp9Nuvl71b+3t7Pvp2N8PpVBdVhdiwRYh9m06yLh/U
Yc6A8n4hdvbdxhxPEM+Xb7dBEvhKtln50WnjuVYYVWQk1BjNo8d4xoPSLds+
KM1T4DqyqcaFg8lZH9AhpTUJ/geqMM81
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Us9LlFEUfQVaCyFpF7gwKCisfQSFQUEtNYbAiBhpkiAnGoWoXRsjaFFg
EBgEAy1UBBcGtUm3wUT9AUHmogYmM+fH+33f7d77PnvM971vzrvnnnPvu0cn
743f3q+UmjlIr/Hygwu1Wvnh1UH6U6rO3JmqVm5dqc5Wpiq1M5McNlQ8GBAR
IiBa+gEmxEiIwLRiks1GAqL19ElPj0BHO0dTcCB2YBxTYq5QIjg6E5D2lDh9
IBU0wumRJjKYmBuTYxGKNkBA6m5F0fftTvzvhT161HcbRCZqD0pzAmOUGDq9
fnqFMiDu3lDnb9pohML65GhFfZUcq/2H1AeUavmUdcPy/HfETnvu3ONHH9mx
lhoAmf2TNVqbm1h7yfWRBUcKxnPPyCrZ2LULx80P3Fs+MT8r2I31MtYnFlPR
FFnJi+utBep+n3rdZQw8Ju4H2k/rdfj7Ynqkb/hU3UXt+D64PmpnggGlKq/O
HhlQ1z5nLSMV6gR2/kB/6c27k0NqtMEajr1CVu3u7KCDL4uH1f1swEGIuakx
A+/3jVwk051ffzZa4Amkyly7QRfj7InhQUqToIXbqYjX8HZprRnXqIBvApj0
W+p1kSOOXRprPlGXZ9Fta7ptupokjWbF5tPno0o9E1YI7NBL/Tw4LuC0GgPM
Qybx1BwTi75JBg1B62IkpLhe0eqiFvni2cpzwyHG8iTygdeAMdOsByiywh49
oHHhH92xy7U=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUs1LVFEUP0SLwiSpFiWjTNYidDEVghVCZhD0SSpREUQjjRLKDMwUIUEg
uYugVcs2/QMhiC2iTYtCCosWQa36IjcRUzPv3e/TOfe++7D7ePfr/M7H73fu
7sna+NQGAGhsomm8fPtYvV6em+iiw4Vq48Z0tXL9ZPVmZbpSPzTJsEL2G7Qa
ER1aSYtBP6yfjc5OFtnmpMJ1I4M6QZM3aI7ih/IhQkhpI1jniOC6+mj+Kl56
jUqj1Al5+Ws6kUdtbHbX0aWsDorH+ZUwKS3yzxnoHxtcDIXFWmTYtHcWYejU
i7Zx/xWTcPp7AD2jjYe+EqsZoIlY2mrSzRNS4si107/ISRrkzzodAphXx6FQ
LM2f+xmT6YwA0Xl6+Nb5ntreLUtCr9fGesBl6NwP0FtaaeaKOabExgV8udoH
0M9QkVWfcUgv3l9zWD6Y5o0IuVjNGRj+gjg1sMd6erFDhmkCfGx9n90M73Kn
vJl/id7ij26Ax4b83FogQDsS/RPA9q9ydBsMPKc78ZvgwjnpHGGWobAi3s/t
gActgreDdGi891no6Joo7euFMkucie38qobhDsDWju4Tn5/pSIvLVGiSkQMj
G4ud8PaDQEOmNO9igqT4myt3F75pDieMMjLaCKvpnQqlExezyDyrjapyffTg
jG5yI7kSyRgVPJTHWN5qg9pGYcMbEeHZ/gPVD6xw
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUktoU1EQHQtKBdGiGwmCVhGzEQRBpF1oFWy19UM/VINYE0wTCaQ0EaSK
FUSxC0H80CpSK2gV1y60IMWNgloUGqwWs/GDn5r6kryX5L13P+Od+17j5c4w
lztzZubM1Ef62ntrACBdq1R7+HRTKhUe6KhTj65k+mQsGT2xN3kqGoumtkfI
bY0viOgqEcwzXHSQLIkVTgYTStDVtvLSytGG8N9SXfpW4iDTbmWhHSnYM+hT
mRra5lyg7QXlZYHcGFVgI1MfyC1J3rmJns3QEEwnqBR9JHcVumUWHx8CCDTF
Xj4YmEUsoKQUjgovI3Z09gC0TP5+dSH+BR2rRKXq9rBZtVoH8TcGmlNDo9+M
pygpRqB5Ay7CpdTZWzP43hSPEtPjL8ZUMY4GhV3wvD/zGt/OYSl7rXVlaDTj
M8G/41U88wMvA5y7+exosG3iilH2OFLtWAbi/Se/QgCN22qCx6beIVZczRU1
I2QeLaxt6FQ13SZ6fV5djz6l7sGK5XDkJ/4/jChDJvHj9SUqbCzvcEEsux43
Wn8d2bB6PxynBARnS28wxGChLdzVuG7ZZxqOPxBvvDhrnA9AOLIJ9plzwtBQ
RfopoprG39zu7smHocTQdJFqtIXOVGEKZLi/+072Q2bjlh2f9EZYyGyN7OKf
9c2DfQfG10J9i7hLg+XVIkutcVgU2Lp0MRycsaRgulLurd38nlWqM9gJh3Mo
uObDPwo4OzKcGHTm9bZVd0rjSsrr0Ist+HOdjC+YUrpOlUhaSekvlFR8UpBm
UtKCCvwHm9uZtg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUl+ITGEUP2QRLxJ5GCXJg32waDNSVvOgVhNq/Elh21k7pimNmvVf/jyQ
1oPNg5ryoKS2lDYltKu2DXnYKYoVXiYpJLqYmXu/e78/xznfd69xb/e755zf
Ob/z5zsrB47ljswGgKH5dOTypzKVSv7M7kWk7C0PlYrlwuD28vFCsVDZNMBu
y+NPY/thWejgD6Khl0+MyChJlKxIiVJh06By/kKSOwFkRqXwX4w2zGWdlI11
1CxoZ3MU5hfeuJqbjtkol8NbRMvsD+eu3XI9JDdOHkrH76PW9dH32XlpbxKN
sdkxMjHF93ulFEBq1HtkPGUTJ7mxvh8W9GwDOM3Ky2cyjGM4e3PrivzwKoDx
T4hv32HTFsNAREdtV9/OW900KsRQzwim08kAqqsLh/FFB5wII56Z5CCJvsQG
+kXYsM8PDvRnqWKp/Ei3u5yCritjiJdnvXKD5Ua4E3IJN3cupqLqT/qvtaL/
LoevwetYMs7yJcgunG5RFilsd0ZMidLGYeu3FCB71NXi4j6ehMFiaGWAdO+E
nZdVQ/n79qHzbzzuRt8BWMbGwEJck7qwrus+K43M+h29HkFkFQ7DD6m+GbqM
b4/vzimOJWN0s9Y4subBa9RerXp2z02PERG3zv08TZ97PvK12tOZmWyKQLY7
NBT55WLts/55sHviB/MpkdRi/74JtPQD1bRpCHSISPqhLWgIrSN74T5HaKN0
Qk7Oym2yMskCots0Xq9kL/8CSqmz2w==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oVEEQHqxsAhZWIkGxClgJEomoKFxhYcDoVaku5ExS5CQXMVhpEMRC
EATThIiKIHY2MYiQwiIQU6RIEYOc2MidOZPw7riX/ZndcWb3Pe/mvd3Z3dn5
5tuZOT12d+TOEQCYPcrTSGnuarVaenDrGG+KldmpiUp5/HrlXnmiXL0wJtdO
ZoM8GhJBz4OiRO2zHbmemcV66mg2Hvrs2PJVZ3IfS9aR1nGvo4sSi0bky4Y/
6ggM/U2TOhvQSkTHX2raOovbunllIYa1/1mg2PboIdN++tYKgojxPnJmVTsH
MDBYeLInJ6nyESww141CxdPj4/3XnnuhEPmlvBBGTV4XAS4vq/gMQ135xWMO
zsozbUSTXAnytzVCfDS0+Joit07gE6Cd/Ls77zf2d3tzygmxSVgkrTodhFOX
pY3aiUfWycel7Zw0+7mWoZyuOg/3iRofpuF3tyQYlMFh6FutNxoAb1qpQFqd
B1b0eatGzc56ctuHVAdfx3qzWc/BZzZCtZTWotnYfrn48/vAAe3MA3wVJ+2s
QjZqpPmLX2j/XenFDMClP4G1xHEB91NhdPIVDP9YOTF9o4hyrGJrcAXNKYAz
8GytJyMxfMjAdm15aT0+x3f7TVKbVTK8CA8p7zUnvjrcQOd68XIRXIexp6TD
jQ4NlWb+hrISWEJlGOofqEHUZw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1UjtoVEEUvQiiMQgWixYRQwoJNitCCrFRAxaxkpUoqAiJriEoK26CQQhi
oayCW9hEsQlLEDSFjQiCEBfRInaJYFzjYixE9mf2+z7zZuZ4Z2Yz8B5z/+ee
MwPjNxPXthHR1E7+JcZmTqbTY3fO7mFjNDU1OZFKXh1JTScnkumj4yZtf/eD
7CCCPRoKEj7/rQGBpjSXVlmEKgikFyESHFQhqlLaIq05g4ukcVqH1L6xbDMI
7VpJpYIIgR3kF9jhicDcPSCEDhH4bUQRlDSjg8gHnhBd/PRg5HXbdlV2iLLA
RMXAPjH4guhciU1poDJW0+7pMQ7R3G660Ec1rgojrTxTrRLvDyxdHv7TjhZW
kJkh23QL+jT1PWwglJvDNRWPD8WWNzbYyxsFwPUfp9aBxZX7z2trFKdbDe+n
2drUS6Lj82VeiNfwmqOUrfO1C5fh0ORnVKwl7hG5QGhgRlh9eWOxGgjoAI8P
0apdwFImGO3b2/35pXoRy7lLRBlOlzJE6BmwKL87fzqLj7O0nWiImdJOKCaR
m+F7Yb70Jru3nyinYEhkNSRLFsJXLLLOG3KosiU2j2ybPfELH3L7eg733NXN
pmVFurCvUMrXn50h6o39thpoFk0aQv21wqMrAzHadfDIoGwUHSGw+kr8hR3U
m/mCTX/9q2U6KHZf2ZxRb8crfgzwdEOie7izFPC+LXQstei4iJGHewemt3KZ
/0TDrFsV2j6xlsPqkhF2V4vcm7GGE8uGeIR0DmXI6dLQ0e75tAQP+g/nV6Mg

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk9IVGEQnzplEFRISXSx6FLXiAo9hF6i/xtJIB5c2hapNtgNxINQCkEE
URAYEUWBJGgUVAcJutQh7OAlgtKIdktYbHPdp+97399p5nvvbQ18/2bmm/nN
b6Y9ezlzfi0AlNbRlukfPFQs9g+d3kiPM4XSQL6QO3e4cCWXzxX3Z9lte7Ks
MQ5JIjR8KJQSLV2MkJoN3kiiebOoQ/+yOtFLFf+K/Qy7rLLdOvJI/6JxLrSJ
j3KWT4m/I/xffHpnDWdXU68lCn4L9fWPtynHaTS6avjO+6/g0kqNY6pmCFHL
zAfRzwW+Lwhn2OhQao8dPt4sTx+Znvn+xnJojUkhtDofwa7M4N1uWP+Sglgu
P/BgKfQcbLuwODtxFjqmKoRNOSUcWY1VFisj1zjGqfa+L0si5UgyNNSqzL9r
x07eM3EpGJMZ8daofqg+7D3aXULtZGrRykiL6kZ2K3St2d33qaFiBP9kuQfa
dkLrcd8J4iZRM1777MHY8/FCB3xj7cyt2+IXWmqOMdrZtz1PsPp46ODw2Dz+
aOsK6txiozn2nfGrdXzVm98AsG8Wg2iRyI5zCrzfCi8GaEQ2d8L1OnpS4i6R
vIeWLZsAWk5MXHyKIu6/Tjo8+Xnvjj0HJinEnCjHOpeOQlhpjF5axprHLaOk
dKdtWuNqs1pNVGmpvZ34tkSdJ9IYP0o25S10lNlg1BwjlSTzdTg/Ny5mycMn
Qhir510GaTJeRAr+BYRywrk=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUk1oE0EUfupF8JBehB7iIdCDghQURUEIFFSstmLTNooIkmiM9ZBCGtAi
erSgxQqWniPiSQ96UOitVrAqCooQ7aEKQUGhP5tkNzM7f883sxs7u/Pz5s33
vXlvvlR+PHNlKwBMbKchk7veVy7nJoe7yBgtTYwVS4XL/aVKoVgoH87bY8m4
Ixr3o0YjJM3SoP0UaqnJNL7zxc24tbbnlLYoVG7U0RQ1bfGhRC2QtdtayZbb
FTSEjkTVkAsXFNvcmBCFw3Fik24lXJdc65C521BEjiZg2MTFOUgPLy3NW/iq
FOhrlER58tFY8/fj2QJkLhxtLddRv6ddbiIyQI/jyrm58TtPvq4EgamzzevC
IWlD14PFyVrwsHfmFgtdxhIZ/KxKGaDHpMfwx1T3fvhfCYF/3j3/JPGbWrVl
moYctlCbzVq92cAvL5eJ2ny/CheJzbFqWwL/2en89IIKcAPvnTmGr3xGII2M
/PztTUhc8yxBJZGGcq7BpbSUhqhbdYATnIynx/c9OLAHgCiVfTHEYGEoC6fu
F0e29GQr5wH6X9uyUeb0DO1aEgZh115IDo5ACs9W1+w7MnTe4kz20jaASmK2
2jWws8p8x0iXJNKPo3eHjvSkAW707Z7/5XUEYGF0yPzVjWL3joHez7Tnxx5C
i7hCUwApj2ylhLK5mQ6aqNcPvmg4TdiyGBTaRjWUqQ1+ey0iCDdlFwvNNNc/
xArhnQOxjgwPOxrTUY/BSpGiw8jT0bCRsebR1ZaYdWRyVP8Ah0ytOA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oVEEQXqxMF7GwUYKCQvwDrYwoRDt/sMhhlUITvByCXsid4j8abKOl
iBIlFjaxkNhYKQgBiSCKBMF0BoKe75Jc3kve7s7bGWfmvYsuO7uzu7Mz33wz
2weH+4Y2GGPqG3npG7h2rFYbuFHq5MPZav1ipVq+cKJ6pVwp1w4NitnWQpCI
skBgA6UInk8ihBkvTh5lhGInv8ZPqykhshWwTplsGWHbDlUNIMbByQF8kgL+
74WshNSRqRMvZgRyyRetwtXtKMJ5u2QJ9L+T63e02Pj25lLP/m7GXppMY4GL
/NWSOfkwplvGdJjOPfw4rmkIOhnmychr5mbXXnN0293vLcWC6jRMknPTH38m
8/7O9d4uwkCSe/DkfNCEOMTc1It7EzGoR0uauogTfYVoopFSqleWqVCgorD3
D89eeWUEivx5CYjADNBytJL4gteCGKVdIf/SOHkOObs5Y7MszbH+B0peG4kG
eH+ga+epRzOjW2bXPaU6Hw8zHWaTqZiezaUlrmCGuchffjlo9onB4atDbvWm
VkfxODpv3n5evjzz5/SXH8+ruxvUDCgw2DP2d9SnkoS+sr6W0dPfwGwGV8A8
s+Pl/U8UR/8KTu1OmhvrNeemF1scWwBSLPbOQc7RcXNkYSGQhJHqsMZIgvfA
ezRixgPTAqANK/8saotmirlZdJYADIA2LzxoXfKmzDtovS3Sdm8oaDFI2dNf
nMy+bw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1oVEEQHs5GwcLKxsDhDxgRCws1gopiIYLVBQmKCBc8Q0AucBGiCCaa
QlKEQEBBUARBRBR7y6CtFoJY2UgsNHBE7929fbs7M87MvndZuL233zc/3/zs
nZxp3KwBwOx2uRrNuXOdTvPu+C55XG7PTk+1Wzcutm+3plqdsUk1Gyl/zJF9
jIH1RLQ/z0zMOSuYCCOJCyWxxKJejhnFH12wJxlT2KcCEi9H9IKTF4dgDopa
kECO809/mQCeV77qrPH/HNz2YOHewPG/LymLMwvLMn0Krjd2v2DOMrH3vCWH
50brTV6Dzq9NxqKSFEWMc3wUlvuoyd5phS5pKSxtHV6RgP4xfFPxLhAm17Dx
+sRYX7/WYL6sTG9iSY33b73hH0W3e22kGzFxWluQ3vHX1QsrJ7/PnF5QqKCg
lLRQX3R2aXH1/bFLqjppdJKcvM97zO3W+Pn9R7LfedXOagJiObFzDxxenHi2
oRqJB0PaoqzfmQd4aG5lL4l7JknovFg5sE8fSmXK2RSoH8yucWU4PUoB1SYg
UXa1DpolLztsbnJ+4uf1Q7o/CfXVmij5AV5CDUZ7FqvUH6REncjTGuw483bT
LD0JjFkcFvgIjj+hmHTEfKC7YFvnRQp/lGKCbKo0SmwxzU7KcFGXsgyCbsBD
LWXiqh8x7R9V21keQtzS/h9mQsop
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uj1oVEEQfghRG8VGsBDFwko7C7VRDhslYJEQ0thc8DzTnHqnhFRpUtiE
VCKmMRC0FayiwcKAXiFoQDBi/CEhCuY84fTu3dvd+XFmds+992Zv5307M983
c2zixsi1XVmWNfaKGSlPler18vToATmM1RqT1Vrl6qXa7Uq1Uj8zobDD6WVP
HFgXsGPUTY4ov4IBHXFcxB7NwsDj1IR0YPRiPBLpXXko3QKwTV747wuMVIQQ
JEPy6APitT+oKbwV5F3u2AmsH5Oo+ZMLDgiRy5dXtA6PmpHYYbG6YRB+f0qY
zXu7EtLtb5/4O3D3+dHS9fn77VYs0isPWJ+e22D+/Sq7uMC8OvlL4T2wdA/W
Xi70tlu4k40BQ597A74S91F2QaMH3gTOmTCKGFVZPD8DsWI30E8/OAV83PdV
KAnLu8thM885GGlBUuhuj78QLK0vHZnZCaqfhghs4jUb5yRy6/Hw7lmfc9+0
t6zC78ehJrp74weHTqxFiZOqsgp4PTz7dCg7u/9mV/yd1B6MlT4b3XMrW3x7
ek7DvdEbXtM6/dblNrebxZ2qB+QO6aiY0pymxH3eWiYn6ftA0k2rVBlj3pfW
dabeMW+JMsKNgvep1T9VgpPZwxUJr6IUZKKBjRDBhyvSui9RZA9KP5ewwUDw
93jpCZheTLkpmoJi2tOUpLHE2MPUFVShnOF0TB0H8fQGDbLSHdE//9bayQ==

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUstqFEEULVyIuhLcCj5WQgJuA+JCEEQQhJF8QIJjcDPKJCB+gAvRjShk
43xAFj42AYmbmEWIYHwkimKYCYyiYdCYnkm6u+pW3eO9Xd2Torue93HuuefU
5K3ajQPGmOlDMtUm7lxoNifuXjsqh/HG9M2pRv365cZMfareHJtUs+PlD+8B
/QLKwQzIIWUQuLyKiysnfXWldYb94e2eLvLMCSGQ7KlyzmQlH80oBwc4PwzO
FGJkCnoZ7ex3jQT2+xB0u90TqMtrVU5iv6uPmizZ/Nz7eenwkRpCR2wDw3FE
2H/7dOzZYOG8OdaPEAoXKxnZejNzTnCfNiPbFQd5hJzKNP9uE8kiEo7puarX
g14nSTb3Cfi79LJA7yqelIW0g7YFrgrFrywjuFgAF1TsIpNCHxpz8VtJYA6f
FswD98dbLaOjXWWyRaEp9W+fPXHSHPwzO/9oNnbDBaFMCMXKi9HamQc9i/zX
3JUnGtCFvCz+XqurTZHToD7S3iqCBfUW6y8IIbbOf1jvIs0UApG4c1GGIBcl
ZM8fy31sGJdC0C7D/sPH9z9k4yta0mjS+40dYGHQ9hLGV8QU6tjL0N3ovNmw
cE5jMoZCEQbJIdlZ1eCiIGlRUGEKGC5g2q+rW1q0xokgqAQZKB9owYEo5rEB
Q+H6TNvDRGrpoq4FcxaGCoxakir+AytU48c=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1oFFEQHlIFCzktFKKISiCNgiCIphAUBEVsEq8w2CR6xhA4w+VQFK5J
c1UKG68R0wRCEIUIks7GlIIRA3qNIigEND93697uvr/PefN24/Lesvvmm2++
+eadmHgwcq+PiGb7+TUy/uhSrTb+eLTEP+Xq7NRktXL3WrVemazUzk942NF8
Q56Ut+WtnXP/TxyM7NRojqY2RKzzn1pzRAvALwsVpz7EZ8qZgFRMKDTYy4RV
yhqtkd2v7xgJIzOKawgJupyklljXwbOnT72Zf/o3FV2Bw/jV7KOp/v0D+8pv
n3d8wAUSeInlWy1gffk60YvvWVGUCeEUiNZYUW+FjtArhlohtUIcNc58UB7b
nEaCvKAKsrfrBGeRbUVfImknpPTEoctXEPNJb0NyjEJoGF400SZs2u1EBioV
MyTUg94+TqU/nBYXPsPmhmmzPEO3abj5qY2I8dKb9rRWI9lovCc6fPXmYuvj
bpYPyQRr0gSLn9X6183VMVoQEZmxwTLPEWFHxQneXTxZY7TOxC3nM1Vwlrt+
eeEQEAcnRY6zyGX/Hh5aY1gHiSpGaRBxC+nWyvSBwVaibN64nybfgTuNh/Nz
x4bo3I1fbdYuYp0Tse71zOoAz5eetUvYDRPy5ZXy0/g5RvTk2w8uhfxuITHe
dKu9pqS4ncZYlxe0KEwIo8mkA4cui3WhdI7UYXThGmf+VPGP2etU3PwHSibD
sQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUr9rVEEQXiwkiIUWioJNSESQIFqIhyBqYRGQFCc2YmEOz2CKEy5CEAsr
EQKCf0AsVBBtFCwVFQliIGATJBEsjKg58Qc5fbl9b3d+ODP77uk+3ns7szPf
fN/sDDYu1S9scM5NDcinPj59vN0ev3JqixinW1MXJ1rN86Oty82JZrvW0LBd
5cvlIkbmyAzMnnVfLnGJJTbmEkMx2VET5NCnkMj/LUEgsIjIgJGRkhORAyu6
JUEQIxic2D70k6VWtPr08OqkorxcSmQkCiJZXby/1blJJdL5QIZdrbUd5z49
eqG+HCsBAVGyX19/JuZn5lywqGSaku/sPLESCsEWd8iUs7I2VTPb3N6Y9AVk
n3ZJ0rvZ4REsW9TtCpI+/FuOC/ixOnb4ucQQxG+3F8v+ArAvmFb44/zmZQl9
sGnobhB/iMqn4B7qd+aA1dhYmysVBIY8+szEdDqrzGcGjxmiVM4JfQ7rxoK+
PD07dvDIq74qiYgVxJva0Wvu0FdW+QHLzmCh/+Uw5xZ27/+JgfSUOcvAcoRa
/md66LEb+B7LJmsmAKTrv+VO3nANKWaAhAaLklfELi8+mb93M65FA9Is2fVU
3y/mBbdn31vmdW/1BS/aeEioX3q/faSOqqAXQqKeEep9VlNJFROdPBBI00vS
bfo3gtIT8P3gNIDVlIhygNSkQr09AkOUGn8BIKfeOQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UstLVGEU/3ARriSCaFNItQoihBZGIlG0kWhjuGqTNlcRY4Qx6KG1itq4
ah+RQv9CQuSqVYuIoiQkGCinhPExOt77ve736zxu3TvfnfP4zjm/8zvn5MTs
6GSPMWaulz6j4/cuNxrjD24cJmWsPjc9Vc9qI/W72VTWuDDB145XJ0EfXwIJ
rEV6/1n1KUn1bAt8J6Cgu0iebGWpoRqJXASHlCgHYNUaYlGGQiTNGwJ8ErH7
dPlNQS5vQ5dzAp31JkEoDw4Wn5hLj79Tcf4xAAdsIUbYn7Xbf4CZo5+ogHjp
aCn/Jbve6uzjqhmhu1AfYyLgdrB3hZRN03dmvS0dq5dc2FpzjO+DOTJE/4wE
NirgtEP94OMOXs8uSJfaaiHJOUGxvYcrjxZ2pbNd6zihB1OAZE5NDvffefu8
nQuvqBi09Fk+MWz6zMDAN9YkFXVpBe32i7PHzrc28FsZgcZGig1773vMtaV2
i0xOPUlI4GKr9x++eleudZgjzphXXwIZa/2r6NpmrmOsIklydOZfAp9NDX5f
J1hWnPMaDJJpyCxxQ8pzYNHJIM2vzVvmGbdUsiUIKYrq5tj8oXMzwfvEZh1E
5Iqk/biYnW7y1UBj1hFEYSx8RRtmWlvrBlgJ9VF2jKWNFSs+CrT5/zbUa3Uw
zgVGkKKwLSuRKuZR7VGF0aWoG0tVeDkjh0f4v50a1VY=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUz1rVFEQfdgYrLS3EfwBdloJVmK7opWFG11XCW5go4gg6fwHQQxooSjE
YGEtsiIYEERiQkIIkhQLroUaQ/a9fffO/TjOzH3v6bC73Jk583Vm9sT0bOvG
oSzL5qb4p9W+d67fb9+/eJSVS725W91e5/qF3p1Ot9M/My2w49XXg2JEBOAD
JkZeIYdDksAqiZMCfLI6+ai9QWm42tjHyARzmFSO4A72NoeSKEisZQtbDWjj
v9AAsgFRO2HUh1djfhbIVVcQnD4IM8+B4ZKX8qVPLngfYuDHte5juAcFZ4hS
ZYR/8iZbHAJHqmQgAmyqzzIZA2b5gC3sJCMA9tWVWU6+lT5Do6uUQWb5fnOX
u0J0kaTbCOdgOfEmym9nT7Mp55AyRfq64q8vu8euvv4onISmCx0Pa0uDlcUn
nyE+JrGWDeyvHs66O8MXfwQFS013JcLvU9nC7NdnV1a5mDDjjBOUTpLPz+NH
+/b5RyYRrqtKzPt3TwfY2r77Uiy8EhlZ74F4Xz8fvl+43PqEWApXQbJ5DvE0
4SlHy4PEbpSTcDqc505khbSPPYyr24g+J3ZamZRLqIzXRxzjtBfSoes1w1Ah
eZ1tGJE9sGYVzgmMNshnVcik1LBHhRwJ8Yn5KllMrpKaO43Wh1TLxSjhpo6O
8kfAX1329Aw=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUr1rVEEQH5JCLQSbNKKI9iGlgohoZTqNHiiImODzvOaEOyUcKIr4B1jY
CKYSTBPQQgQVRbAIRrlYWKgYBWOCSYwkJu+9/ZoZZ3bf4fLe7s7H/mZ+M7N3
7PLIxT4AaG+VbWR0/EirNdo5uUOEWrPdqDezC8PNK1k9ax0YU7dd1Y9cMDMG
zuVgItkMMjs2LioYvRzBzYtStCqwUbdo5sDw+oaeyBtJRcGWoXT+Y060tLAu
2JwWxc3/kafIlhbeJgSbb4R4Ji9Dms1sCsTGRpVmFxRBxOzecgzeg9UbpcuP
iYx5Uy5CCdew50KEJS6qEITatOXyXSRV2dF2n22iQhQlP4DZFxWsl2Rlk3xR
3AVyBuBLzAvZa15TXZXk+3lrz5mjc1IqIeZdZMMfvmrk/GptCKAxH+mXuXIQ
2EZL5MVHQ9tunx/XElbLaFCA08vh9ymAQ2eVForZsFW+GAAGXi7VoG/Lzs63
lHxqSlyrfP/c9YHjl6BLsYOVWT+3emzwJmy/KyXxMUpcRVAv/+sw7B7mT1x8
f8L8UBIsCTlHWnMCXN934unzNzOPO9cyaNsEieSQrOTWP8128vPB/fZO/6T0
mdarcktF5vSy8v7Vyt8SU9vSsAhX55Up9mqsqlCNh46VaiSwCxQ7bip6RWQi
xpKoahymwkm+vQEz/+cshqP0OKQJCRrBO4wuQf4E5NOBNkhqyP8AP/jUgw==

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1oVEEQfsTGUlAbEUGw0y6NYBUQRLCQBBUhKIm5xBSeeBf8SSU8S4kW
GoJgICaNh7FINGrAsxDPQpTz58SIEsUk5EK83O97b9/uzDizexcfb4eZ3flm
vvnZ23uxs7/N87z0VhadPVc6Uqmea13b2DiRTA8OJBN9R5NDiYFE6mCvuO1u
HiBF9sNYJJA2rCNViCIKkUhruVf8yj80AK0zknEwRhAGQJExZAJrI0FEFGjS
BMB+FiKnISDUxoBp3gja1Ek4RKHYIbsUZu5+Umjo18J3WjUC49RafDRNYeYh
29WquvUotDgGOCpcjJ/VHLBEl66XDHKCGlMBxUEzo293ZnJCbzE/IVltsZop
YEhT/Z83KmIXc8/y62RDgkiugtbfU8DxVTTf/U79pc3PxJKKSjXJPleeLbg+
SUmxrauOT5ZY2cj6I/k6glbcIikv4rfs/ZkXo7mx7ae8I2dDZZNZwWd19oJ/
KN2+yzt24HJJuSZJ4fY9seXMYNeOwzeXzG9qDaA5vurPOyMnh7tfzn+l4vEO
XzAKtaCA+3/ea7t92p+eLqzdS99w/O0vw1t+fXWP10cNhNrkg9hQsBmVtZVz
w8WGnfgHph+gdEy7FdDPV0yZlXr89COA2yG2TNwgvfbnG6sc/4170MwBMCKF
ldzQxA9794rcwMmA2wND+/ZnylLsl+yCarakJXDSG1+kePmxN0fKTsdxtIOM
wXXDuHXV1OobUiQXbt1UjLwVrs+RbsZW/0cKYv8D74LVug==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1vE0EQPVEgSuhpQsNfoKCAkg4F8QMc4UQEyUgOEqJJQwklUv4FRSiB
ihJFFBaS0xiEACeOYsUbcre3OzvDm5lzfNqb/ZivN29mbeP5+uaVqqp2rkGs
917eHw57rx5dx+XxYOfp1qD/5MHgRX+rP7yzoWY3u59Fv38mU+03/Yo9EASn
2OqGxZAQeCWzzNKInLgv/kZqPVJ336/uIoGcqqcmoCiFXd9+vQ1Vda96Z86e
FkoOyHv0ae/Zjd7V6tYlGItusVtdHI4mTVk5EoCsbgtEmiUmKZnIXdullmRK
GYcgVAx/zrkuSRW88AxeuVbGaokoEhDyQiIu0VQI1ZghpzQOZ0Uil8ZxRmqR
EYX8mI9a+ZOloOhUurDJq5kH1vMFKzzwGYxcyyvj4lAXhoKMFeCfyUim8s3Z
Oz9e0uE+7S/s0dHPPnw3SghYWfLZ3Kk5lPhze3d/EoBT0+baqwQVv98Lv6ke
fuQVhYhrtY/fHrC2VVcbsqbT5qFEdX/deGump6PPsTjNbC8q/6pyILLnEbND
zzYmajo5+QLTRnJZjowYwehbIW8Z26ohSlesR+FLe8uaMI3FzqUsKbaU3E3F
OV6VSjK/tlMjDpl99qkSyujGf2Qb+H8=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oVEEQXsTCwsIiWEhArLQVG60kVoqNJGgriZ4hICdcFLGIKRQbQbAI
BrGIhViLpIlGvOJQIQEVFSxsIncJMT/k7t7bt7+fM7PvRQdu383OfPPNfLNH
xm4MX9ujlJrcR8fw6O2hRmP0zsgBci7WJyfG67Wr5+o3a+O1xskxThssfzYC
IQc8EOlDDsSilbPg0zuw5xEoaLz1TgOOMgtw3FGewMgJUdBafK6JIt2IecmH
y5yPkp/bIGh4w8yJu+rgSfa7W/q9iNRPCv1ozdqPH7hglu6F1hAt8o0MXcZs
/scKF+h0WCYWv91qv+cEF2Pk5g2XePilTf8j7u09XNI7b5nZ4WUTgVQqjDqq
2rrgUa0MTXb6MaHXzesr6tmCdOAMX1P8zf5TTzOs6OcdbFyaOgRkISSVejPn
Ly8Gv/l55N1XKnP3wXq/bNTMKzXQpyHj2qs2FbLTczvWlcEBWtanrdzwpDuI
M0vThSlkOGQUmrh/7OzQ0uJPTp07+B1RpHJwUxfUYOv6cXXrl+kHLM/P6l1d
7IsTZ5rfHi00Na3CbXd0tfYkAYlbuT7JXC1wdxF/VrBaysUHETjK8b24lgA9
AjtP5aKpZqREkwt8ld4S64zorY0EFMEttsJboYgiNL02AfZ5ooBuR/YpcRme
HJckT8YN6rwMyU5gZB7vkcsLTt17G6BjwD+T9/cX0r7gyg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUj1oVEEQXq0UES2s1EJtLA4bsUgbu5RGLIQDveAZbE5NghIrey2vsQvY
BaxsjBEkqJUWElFCuDpe1ITL8+7tm/37nJl9F3XZt/N2dn6+b2bOztydvn3Q
GDN/iI/p1sPJubnW4tXjfLnWmb8z22nfmuostGfbcxMzYna6/kpQAC8HeJER
qFLSX/lHkNPFJMI6VfGR3xHENQYQ2ECN95eXSww5Mq8EouwNicUPI3V5b0z3
+7NYqlpPUbsE618uHFs+0/iCDxlKjpNF8chMNZ/eO7kLhq9xYCmKa3UTnzZY
0tZuxVpKnBj4jSS5l1eKyP72J2VgUbHAUUL/8uIAKENBEoTNI3NyyqjXul9I
LAmk2b0TgJr0wasn/QzPIqSa4MiX8NQ8YZbW15Ql5Yqk/Iy0NmHaLHdQ4m/d
SPePyUuZpt/+r55yuWK6KzuCYCMONF5uUcQQxZEbA+fFftNiS8CIs7Zp3TCz
Ksew+NqvYtISDz29+/j8onZp2Hu8useYU9111llqrko7sClDkhvumbYmeYu9
XzbgxfkLr9nWSbeFCuUs8c3h66fONba/jaEnjAfBp27j6IElZVjt95Qkqy1G
1eeecPL1JAqakNK/Rci6PIJVXRZmpeBSUOier8EFtvRq78euRDqPYbzr5Uud
YugchT+CWuRn
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUjFoFFEQ/VilEbRJIVpcLQh2ErCwjGCTRBC7HLmEWJzhIhgRktaAhaid
haJ2YnOlCJpUB0JILDy0ElREid4lt7f778/MH2fm7+b8sLt/Zt/MvHkztfrN
mcVjzrnVCXnNzN++1GrN35k9IcbV5uryUrOxMN281VhqtC7UFXa6fLg6sXqy
yo7pEphJDZL7aAwdMHAJiQSKYgBG8UAskPmQNdFQ/0PgENkbRjxEKT5KzsJS
hlixkECt9v2Dm3y2/cOAApBKBYJ+5Dx07pR72n5e0SQLA70RX//Y3qkdn9xi
y57y+cRu4f5X9l+Wp29oH1iU9ch6yOZ+q9V57a03wigxNJIWQBxk0G4gqpSJ
SH1JLPGIR2rZb5DECPzf6X/atxpodJAFkKpE6p255w1DVgOstvTK/v1o5eI1
rgRGLsXeePRkblMcv14N/vQER0gjC+fduru7N7uu6Iw7XkMSM4l07nKf/+KB
eKycr4YoTDvnkhEIk77mjyonvFiRaQF3gQc5SvdxPHG+cv7st+7247c7aWAl
zUKUjvzATawtbtbcyU77Z7AxkFdxkpRvXu6vual3/RyCMcQh6WqEI72YP/eU
UVIFUdeniKI5ZsOkrLLirMhsv0KpnI4Nx7IHcaqpA0RlRkEbDzFPAy04Z9B1
Rc/lBuVi/QPNGOXl
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UjFoFUEQHQTBRlAsTWOjEqwsxOpHm0AwFkZSKUqCPzGFX/yJSCwsFEwl
lgoWaUWIhY2kMCikiIoYEPn6UQQR9eej/pz/7nb3duc5s3fmuJvd25md997M
7Ju8PDa1jYhmd4gZm7h2vNmcmD+9S37GG7Mz0436hZHGXH263jw6qWED1Qd9
PIILQGFguAAzQi5GlgJyjALlY6q1KA/EqlfjxBf0MGguwMqXVj44NV7POd5l
zmJk0N/Ux70P6AtwcEUGkwwrpfUNw0Ji7sSSraA945cyTlPF4XXZn3otifVi
AKvLiiMR39Tgnr3UQx555shoUNYbgp6j275OKz3xBI46GELnIdEd3X89v8wo
oYKC/HiXPyNaVq4m60al7JSy93Rz6G3R12ABzOC41BcxDxBd3Pirsp3v6XFA
5QXPEC3IUiD5udmX4vh2gLOyMQGbNBLr+rF1cEW0oxMvVzePkMtyYxcWT5Zd
4D9bDUH7bkurhG9Pzn0Wj1fCfdhUw9yrW08lPfCydvuFilW6StOL+bSbHiBx
uDI8FHvBgf3/pHh8f+1Rt4PadvqQI2gLNXME9XZ1/rlpQdS8UXkce2ziXWcT
g/D9GNG9L72tZB5lxxO8PztA+w//VnIh1pIDqlHqXNp5ZrTGNlO+NmovbDWA
S4dGr3KaxVRSMC6lRESr86exoQLjsmYsDYhrtFleSdOJ5DiZ5ajm+mr/gnf/
AFY7yiM=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oVEEQXqxSCCpX2IighaaxCIjEwiKFiIUWCVZWCV5CmgtchGCwUBAP
ESwEtbORaHNlmpBCLURMk2iwkCB68Uwkejlz73z3dnd+nNm3Pm94b3fnb+eb
b/bYxMzo5D5jzOyALKPjcyPV6viNsYOiXKnMTk9VytcuVq6Xp8rV4QkNOxJ/
FkGOQlEh/SC3AMqC3gZnENSTd54ZPFuyPlitLk4yLIsBw50Zk3Oo1lwg7iGl
Z4Mlt2l4SoTgMjmdfthM0TssgFm9S1AAv7wztNEVFRJqAXtLwcNErpUm/H5H
MXx5xSkKSieYyanFdfiQGRDUXJuu5wWt3ieHHdzltplrtOeNGdvSjrWqesB9
pJXWrUfsiOtCVcpgAwkBl+TfPWMYdrlWMuczLsSj3GCNuVp//uDsAXPBC8rC
mepSvmSOnzxqzOG0j3ywoWwyf27mxUhp/4kPvP0m5CFEKntKGi+bwaHH981i
GuclBKLvSpMgcasL7R9fb59a974nc2PsBXplTKI8vSfKr5trBd8KM87z3RYQ
7v1+q8EysoBEQja1RMNqRGdFCvoMtbkciqLZ3P7c2ms2ZMaSQBQgJbJZ+lYb
Ns9er35idMXYc8TWJ09Kl5c2+GeuQ+jQ5wwmTN87DgKL/wVCDxLRXNfy2lrW
xdC+jyz4vljC/FHwP4rim+0DkUHho/RPtDvr+C9YHthp
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oVEEQXiSFhYJiE0QQwSYWIthYiRYiNgo5BCv1gucRkFMvEbFQEVsh
XWwj2vhTBEFiCsHCVGIRRMVCQowakNMz5O3b3dmfcWZ2z7js27c7+803M/vN
nrHLoxc3KaUmNtMy2rx+tNtt3mhso8PpzsR4u9O6cKIz2Wq3uofGGLarfDEi
In8yQsKEmBL6KtAxZasvgBgyCDDFoMXPosAISLvwjwcZKdTaCiPtwCRhiAie
KNHYld9V9OTnZAbHIInn8Qe+IA6DtVzlVLzQxLWfb16i1196nqMSYcppGQK8
ev1pEZdunXlUM1zcDOebQX9oHlaX6PSt0KaNdPXMvbZStO9ns6+yPeDsqRF1
YGr7w8EzJQAXudrkcVodHBp/eoWNlu59hMgwj2vYu9Y+NvkM7i+TiwOX35Wf
IITV+cb0kTnEr97xM4EENNFp+25hXb/t2OX3yRFlDkcVaE7w6tyDiLkuHQ1r
JcpRROydO98XMFM57YtsPBx+fD5byuzTvTelChKRkCfVYhTxvgNamzhVSiWI
968nwwtQV2g+k9Drol4YtAU0t+x7vFIh3D5+FkICn2PlJrqrdgwrNTKkdk8t
aaxTLJVw+vNb96udext3bhpgJpuwyO4jhg8Rs1wgZckdd0hi82qN4f/+KmtC
SD54v9HF7AQDbS0JBRjrDLVUV5DiHf1L5wy6gKRLfwEmAt3b
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUktoU1EQvQiC4MaVK0HcuHRrXah0JYIotFRQRGgxFkGjpNKiuBAUXLQ7
caNCdSsuREE3AQXxA9Ug1r8IQhqa5tnQpEne/c5x5t5U+3jvvjvMmTO/s2Ps
/NDpDUqpiU18DI1ODZZKo5eGt7AxUpw4M14snDpYvFgYL5QGxgS2rf8hPhRf
oA6ysOT4aqLD5p7Q9gjRym3EsjvA9298EoIHkTh9xLl4amNtiktULujoo16f
nGF5e7lxQgkDhCTCu+gkmt7CfaXu+WToxPonGk2LbKtSjYAYqtGHZA5aI5/k
toXLwr3mMN0V2Nw7hjy6xj3vXNczYdVDP3j7CpjZdfwOFpue2/dSSJCRhBsP
X0LPqkpey6HrUnhOwkwB2T71A8u3p2Fcrd1sYRWhw6WY4OkjyosZjqlp9Oj3
CxP7Ml6TTM6i9+WTUnc/8K3DFbh1M2J/6+njC2r4mcUCN54jF3dZ6q22UcEg
169WvFkbcjqrh7dz8+w5dPnI3pGMQuKS+m1388aljq6e3aPUgDowMx+HHGKc
b+HW0QrCt5vnru6f4vDrko3XGr1q9+Tcz9ZXH7p1nGTn/4QyhfLnK88bcRy/
nnAun1YqArA6c7Xv0Zp/vxJ1k8LIyIaXEs0bL1n6mwsCgeRta7k2XF+Qxmhe
BvkoCzhKfUWhWMojqwvWr8mM8n+jdKIog64R4RGlBFr0Q/wzLGWLECKlheYl
ONJM+xcyd8rq
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUj1oU1EUfuriorRSgoIdRMGlilYKnQTRRTsIFTcVGxNDBhNMS7VFRIcM
ihShg4ODm1tCdenkYIeKaAeVgFJTtfQnbY1JSH0v7/59nnPvixbv4x3OO++c
7/vOuedAPDt4fbvnecM7yQwO3TqVyw2NXeigj4uZ4XQqk0yczYwkU8lcf5zT
9kcvAAkY2KMEGQ3lvsno6AcEDKcZKAWt8fcI6RKpBmgpV0SPtLUCIoQPBAi5
nuB9S+CAl85NTvkWRVsVmqAV02DjWsmLxRqU7agIWDkO8+vRg7tXyyufUQO2
6CBpolYoPiv8hKi8WrTJmqCUtq54UXg9ucp6P6wxnu0oIsbaxFhfapac+fL3
hm3I9VQliPmpQvP8apX0T/d0L9p8GoXWJiDPL2Y7R+ua2jrS980qJC43MYXa
xL4fzLOJJ7OSJwcCgWuphAXFs9abH/PL4PlAthvRpM6YBpmZ04l1jvwO2v+k
0fljsfhcBeh9fps1WtwWQmOkXh/Y3Xnm3ga+rvS/JwWBE9QkVmHwaXruzc1s
+uGVQ19YqaB7hFoOSzeWHGvode8av8yN1+19Ukn64CXuRs3s9fZ0eazeDbzO
5uk749fvbOs40Xv4KJo2bmWqEEHrMRZGj+8YKFLkJdrrxMevvM3fP9mTGBEt
iSoNS225Qo2U53WVI1+4nTL4/2gXU7xd/xKMnaAL2UW0nrBrE0ZrzNboqI2Q
ZDl2E9hiqbjFP3Z2zjQ=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UjtoFUEUHbRRiJDSQhALwSKFEgJ2EhCCIAoJ1vKCz2jzAhuJCIIKNipa
CCJoY6F2eZBABDHYWAhCUAJGU4hCUvhJMDFvd9/szJ3j/ezLLDu7M/dzzj33
HhqfHL24yzk3tYe30cbV4SxrXBvr58O51tTliVbzwqnWleZEMzs+Lm4H6hdI
/MgKsiVUQAcgICLWJj50kZK4eCRCDir4utIwdpI7iA/HVNB/wCfJWBIsR+Az
KnGkECkZkAKaP59iLgn4r+RD+vrdMyhjCQYUPCKI/eXeNw+A7Y2nl6KYKAo0
IRTMbqV9/Rdf3XO7NXes0yvW+o2PUsBdN4ReqXK/nnvQ7NCilDx38LMwjHU5
4uRvu8lVzlCtPelakBbCW0F39h1+Ps9qfbn/7ZNXBQPIV2zr7nfuyGPXf94d
nW6/XTRJhEvODBoDWchc35hzgx82jSDjmKhb7/AHjwLmTr43ecno/5PPb49y
BXhxs9eypIKKSMzNY/mHc6frTmpoKvONv52oyEsj7iGWyrp2ZRM7WmfIX43c
8iZ00NpDLYGAzww8U/lIOo0yaJMMYnP4TM62IvqgTevNhKwFd1aCChsFI8Ti
MMwWTvQdCz+hiN4y8UyQua2+Xi5gjHdWmWunQe35VCS1UQoyOzJzpN5FBctI
hHJHA4RgtDjKSu9s60wErtGGSzIzCxlAfv8DWKbdYg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Ur9rVEEQflhZWqZQ0T/AxkpEC7UQC5sTKyGQkDPYnHARxEIsFAISUBAx
REuFgIhwBAslRC+mFIU7CASMhkNiYjS5d5f39u3Mzufsvh8L7+3Or29mvpnj
4zdr1w9EUTR1UH+1sdvnms2xO1cOqXC1MXVjslGfuNS4VZ+sN0+Ne7fDxQc9
TiAg658GzujFoEQYSEWtQ0FxXBIuNcAagjppoPfHj9Y7sgllKnury2yA8wDm
xRog4kMViHJ/veEYw2t31wpJZaSk6a2xDp0//V+PTjxHJgKXOuekcAon5vnz
RwZMImJUbZH5jzX1IAUtRBe+bWRQZUDlIlB2Y9it6TNLO2BFS31Chq/TgWLg
90jUaw98lMcU6zgAJOjwYPHoU9YIp85MSKpCLL53220nlOXdwXct++CE9jDA
7MX7GYzzBfRBxK7wWpZ/rbMzG0PNDMs5lHhjYjVL/OzN1wdbJuRWQoM9jGA0
mvvc/IBFLGE3jVOvlpw8xutjEyMPV0Cr8zCrKz4gS6rAVndnpgN8eYXQd6jc
lm3MRqNE+DjtecjHUJ3t09Fj+vuy1TWlIWwH+ZLoZ+3T+3uXn4QMCSpSWCnY
xzrenoyW1SugmUCNjl7npEPob871EmVZaxC2LrDmJ8jb6+x6OkTPP3J9VQ9j
b9PqNtlyj1xOWck7h8VSNMn3WEKk1qsLoA8p1wDO5VOSslFiyrOIEP4D6XPq
Pg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uj1rVEEUfVhZiT9ABH+EYGthYRux0Soha7Bwxd2AH50gWIillVpZi4pp
JIUELLSQoISQxugSiJgVs7vvvXlvZu7M8dyZtztv3nzcuffMuWfuuZXbSzdO
FEUxPMlhafnuxcFg+f6V09xc7Q9vrvV7q5f767213uDCirqd6X6wOQQfOQsi
u0cAdJsaF0ZPvIfnNsBbjlYPhINZeEVGJRTvO5uLRIaX2LkEDckbyf/mxDpJ
G9Ar6JTvrrBV4ePrwx8WQdqQPQIaiCOdOMG1Vxs7oyb5Bn4yBwWOdp98/4rf
zIqMHY0i0ElZjYvCN49PzWAtnVvGtjZHCu4Ul7xcf9ahJJ4tAfTc3jp7UALf
MgmmhTK52GPesfdBc9YjHxvfrUN0swRTU1FPr1iFRFUVSYr7yc7ffJPELK22
wzFDVIcD9qRHChCZc5LRg0dfGjFVnKHOFsL+ez8kWbNx/iHIl5yJx0UV4ctP
W8Ae7P7nbTi3SE0BG0z/NEAWYkpA12YeQaeaAHUd+JqTZGw7YSwZjX9ixGRs
8/QtLSZqgyeMGEyx+uINZnj3/JdTby/6nKwbZdRK797+5u7LkorAdFJkyUNp
jo/gt6VMEvLpysWbqiUwX6cTnyCEVIqaiwlZ51x7aFI6WnYsmmBSnKH0ba4U
9rKROagmjlyTmQ0X/wHB5/vO
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUjtrVFEQvqSysPAHpLGxELSUEEGxDEKKSEAshCyuSxQ2uBFDQLAQxM4i
VhYBCTaKIgQEEQRjsYUIkkAQAll8a4yb3eQ+zmMezsy9WXLgnjl3Zs7M931z
jtZmJq4OJUkye0i2iam5c63W1PyFI/Iz2ZydbjTrV8aaN+uNemukpmnD1cfA
jMQBxSCy50IcxI45itElu2cMEre/lJCzSMDkNWZOZgmD5pVLnZiy+VzlkzLk
zFLl0WiuHkg9A9i1zKKFRlMsG6qbEPcvieNJ/eEd7lcRKzFY15PR+yv86dTJ
P33BRNa2r7w8144dfrz1q3c5STbedxE9Z1Th3V26NLwcOX19b353u4PsHEWO
WAJ9cPrsXwO71pGegiQKVxFH8O5dSxYE/Vbkdy95W9jnjKC3nJx77aVXXPj1
saGntBNDrnfQhLLVnubft+de2NmFWCkkEkbpIHbxueoQD9CLVhr2vjeOf1Du
aNqGfcG9RovkvMoKqclKRSl+wEzm9+1WQsIgig8dk8L0KgD6jLsjZwKhYQDl
XWhJQB/E3B0/0beBsAcspxYRch02LYze6MRMoRi4EuvGG91/jF/MDPZgA61f
sEP+/OhtMPTgy6aaQF8d/2T/cdH4hCDxwUvxWdHb+RLa/+DgsAOYVN3VZ5uT
K5upiA9BeEUR2sjIiaylPCtfPUvDae9GUrSay6tImfEfP0TpDA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUktoU0EUvQjFWhUE3Vj8BdyUIhhRyFI3DYUq0tCFumo1FhFSTQttceHK
jftC92I3/lDhgWBBpCt3ARF3EbUNiJiY8t6befM53pl5Lw7kzeSe+z3nluYW
pm/vIaLFYf5Mzy5fajZnV2uH+M9MY/HOfKN+a7KxVJ+vNytzzu1Y/gOQQcOf
2D90BmFEZjPAAqkwkB61MP5hbfCGQIJMW2scBMWGPgrMKChpLBg0nNV4Y+Iz
Ok93xyL37fmsAqkx3tFygOairatPddGcT5CGYPH65zjRkU1vNiiOdqBuL42t
nbnyBT4DIF0GB/A3e1At1a5XVzAIsm4IzZXV131EZaL3HjGuM+kn5LNO54lG
Z6gmM2UHVGkXndyIlml7uHww+twzbeYvH5/Z6E11N9CZpNNH6dHEm8LsWjEy
OXzyVfrtJrNPpa0EVjmru7TChRP0ZGeKDlD57fqzj5xQcZiXQsvO+FB15dQo
kdje+PXdD8aADkX3Rq12jfZvwl6791sqpxMPz2MY3D1LeOG0tuKlKwZtQgzr
tTW2ENEQ0XOg63cBWd8FeSHWPh2/uEoj3T8mtjZGIpXJlc5kVKEK0bn7Jv0Q
mIRjknXnoq2Hl0do4vEPgb+Be5ErxKFSdDrv4gw7EEKEpeB0JmildvvcgdZ6
sDOet/BMlQq35AaLRcMu/vsh367w9i6BpFQENW1AZL6HeuDvlty6mv8Ag1my
MA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUjtok1EUvjhJcRCXImZRBLeKqCAu6uggQoq6ODTFWFyipKJ1ELSLg9hd
W9BWB7EaQe1QG8WmbYSUpr4q1aKpg6Zo0jT2f9z38Zz7J8H789/Hueec+53v
fNu7z8fPbmCM9W7EKZ64fCSdTlzp3IyHE6necz2p5JmjqYvJnmT6QDe5xRq/
5RZwcEWz8Wm2GkADx6OmIyj0MG5nJYDE3+Kno0vcQWCjjYbm2ryU0BoctCKr
MA2D0himrTYWBLdB4w2MlRguAaGEwNfRVM4VwNhWolWY/wvFZ8OvV+Y6tzB2
M7BRRox886IYDsDAtcQPDiV28l4UEFLsl8HZGizEyz8BPBPk244bBx3DTLZ/
HDyoZhcFFf3toxSIWwviYyr/ftWumIlLRSXA8KojCVx5uanCndn6q+WHt8u/
rJ2ermGmqH7C+j0Hk+2DT7Nda8szNyaKHvEpwVqqv17as3NT2112aqgwshDA
GlGvQICP1IgaY/vv78tAZuver2HVk44zaZVbfz8azX+At0sdfeMVTfBDItBS
o4z/CaPhweitq3+cr8X3DDXAI+69sYr/8vlkIeDoZFSEkrvefr4wj6jIUzU6
Si0GHmI5w6czoMOKMBIadCEYQyLwnjC26Ht918fAta6lEYGNiB0bKuUPxdK1
wGlFUOFKanxgiR2ce+y3s8Mleo0EEOU1CICxbV27GNudJVN0G6kSwvAdSpXt
6Cc5QCAc1U6dilxm6ogobEqQ+vO/8FwW1IgJjEJpa9I3kQbQVLCO5EOE2H90
M8pF
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUs1LVFEUvyRUK3FRLcIIXRREQS2ikCCileAiNGsVNNIogUwxStGm0BQG
wUVBf0I4IVEUhEYtst0Q1CJoEZHTaKMIw+RM79377r3ndM657xXdYc675+P+
zu989IzcGBzdoZSa2E1iMHf7XLGYuzPURcpwYeL6WCF/rb8wmR/LF0+PcFh3
+veACPSTk0QWPSJJNmhklw8udBYTBNJsFm2DHcQkihOd3UkI8ZadxiOnYSTD
AiJyR6wtT31bcy7Fw+wd8YH7Vw4eefDqSw3/O6C3wLg3t07s20nclUEfgAk1
hmR1vU6o9TnyHC4Tf+39X8zF4Sgw2ry3OJ/Sc6GSiurB2IQE5RXDLbBSPb0+
c+rYFlCgdbg6viwhGrXAwszdMhpsEVjz/XTzX0+A5NObfbhhpi4MPZ6dLP3y
jq1EFm3LAv5E/ProvOrsOK5ebhvnxQmQtkE+zwfO5i7TTRtwoXNZk5pY/fD2
40YrzM2HIWgdPv5dAxtzz4zwMEQ6YWArg6ET+4WalO65DHpbDzPjsNhVtnU6
aulPsyrX1qfNdqM0XmsLN0lnq2svZpZGlercq04e7etdWkf8DSn3isWFA2r/
nkO7Lj7s/vFZwGUvHGWNsXSp4+rrlQT9dzaFvjimQgNIntQlM0TpspDHGQib
GIhCeoOsITYzBiFNpH3Q3oW0vLARTTAwZzaOO8oFa37dTmvymCSM/AcDD9A7

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716854717636337`*^9, 3.771685483729056*^9}, 
   3.771685558058649*^9, 3.771685899212947*^9, {3.7716886225449667`*^9, 
   3.7716886294581623`*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"316d7468-5341-4b1f-845f-def36e8d3482"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Model 3: depth=4, coupling=2, activation=Tanh, L2Regularization\
\>", "Subsubsection",
 CellChangeTimes->{{3.771684398813716*^9, 3.771684456615881*^9}, {
  3.771687873599885*^9, 
  3.7716878753005333`*^9}},ExpressionUUID->"f684709d-c0f8-429c-bb74-\
18456cb090c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trial3", "=", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\<E:\\\\train\\\\TrainedDistributionMNIST0-8_depth4_coupling2_\
nonlinTanh_L2-5e-5\\\\traininglog.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7716844597110853`*^9, 3.7716844750415*^9}, {
  3.771684673031827*^9, 3.7716846745022764`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c11b3709-aa26-4337-b8a7-ddd5c96b2ca6"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 40, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ProgressFraction"} -> 1, {All, "Round"} -> 
           1, {All, "Batch"} -> 1, {All, "ExamplesProcessed"} -> 
           1, {All, "ExamplesPerSecond"} -> 1, {All, "LearningRate"} -> 
           1, {All, "TimeElapsed"} -> 1, {All, "TimeRemaining"} -> 
           1, {All, "CurrentLoss"} -> 1, {All, "RoundLoss"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ProgressFraction" -> TypeSystem`PackageScope`AtomShape[60], 
              "Round" -> TypeSystem`PackageScope`AtomShape[34], "Batch" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesProcessed" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesPerSecond" -> 
              TypeSystem`PackageScope`AtomShape[60], "LearningRate" -> 
              TypeSystem`PackageScope`AtomShape[60], "TimeElapsed" -> 
              TypeSystem`PackageScope`AtomShape[34], "TimeRemaining" -> 
              TypeSystem`PackageScope`AtomShape[60], "CurrentLoss" -> 
              TypeSystem`PackageScope`AtomShape[60], "RoundLoss" -> 
              TypeSystem`PackageScope`AtomShape[60]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1393035516], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1393035516]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "ProgressFraction"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "ProgressFraction"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Round\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Round\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "Round"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "Round"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Batch\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Batch\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "Batch"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "Batch"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "ExamplesProcessed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "ExamplesProcessed"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "ExamplesPerSecond"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "ExamplesPerSecond"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "LearningRate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "LearningRate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "TimeElapsed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "TimeElapsed"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "TimeRemaining"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "TimeRemaining"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "CurrentLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "CurrentLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1107473482][{All, "RoundLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[All, "RoundLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.025"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["54080"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2076.98"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000755397"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["26"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1032.35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.76077"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.76077"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[1, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["108160"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2073.99"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000903126"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["53"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1000.06"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.9716"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.9716"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[2, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.075"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["162240"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1994.09"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000959603"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["80"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["982.897"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.85842"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.85842"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[3, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["216320"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1992.23"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000982858"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["107"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["965.054"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.38514"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.38514"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[4, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["270400"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1989.63"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000992676"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["135"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["942.112"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.33374"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.33374"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[5, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["324480"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1887.01"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000996862"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["163"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["921.825"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.13796"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.13796"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[6, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["378560"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1960.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000998654"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["190"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["897.265"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.07973"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.07973"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[7, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["432640"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1991.57"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999422"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["218"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["873.787"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.01825"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.01825"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[8, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.225"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["486720"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1902.66"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999752"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["246"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["847.192"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.97451"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.97451"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[9, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["540800"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1992.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999893"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["274"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["822.584"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.01392"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.01392"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[10, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["594880"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1958.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999954"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["302"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["796.359"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.04671"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.04671"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[11, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["648960"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["917.203"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00099998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["339"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["790.697"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.90602"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.90602"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[12, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.325"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["703040"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["927.836"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999992"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["397"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["824.546"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.89485"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.89485"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[13, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["757120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["632.187"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999996"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["478"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["887.923"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.17093"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.17093"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[14, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.375"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["811200"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["626.371"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["564"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["939.934"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.93439"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.93439"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[15, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["865280"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["792.391"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999999"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["657"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["986.246"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.83487"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.83487"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[16, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.425"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["919360"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["917.087"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["717"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["969.545"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.80393"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.80393"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[17, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["973440"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1864.21"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["745"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["910.939"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.78488"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.78488"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[18, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.475"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1027520"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1852.58"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["774"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["854.988"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.74329"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.74329"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[19, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["845"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1081600"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1954.54"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["802"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["802.171"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.72594"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.72594"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
                  GeneralUtilities`Slice[20, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1107473482},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1107473482},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1107473482},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1107473482},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1107473482},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1107473482][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1107473482]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1107473482][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1377., {405.5, 414.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7716844778822775`*^9, 3.7716846755583467`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"d495f91b-85be-4819-bfd7-3bdfb368665b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771685012466586*^9, 
  3.771685013364049*^9}},ExpressionUUID->"6cfc934b-88d3-4257-990c-\
81b7e9b529cf"],

Cell[CellGroupData[{

Cell["Model", "Subsubsubsection",
 CellChangeTimes->{{3.7716850179123473`*^9, 
  3.771685018395153*^9}},ExpressionUUID->"b000ad86-55ab-4dc8-bfe8-\
33cde89f6c3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ldtrial3", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\train\\\\TrainedDistributionMNIST0-8_depth4_coupling2_\
nonlinTanh_L2-5e-5\\\\model.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771685115950841*^9, 3.771685130278328*^9}, {
  3.771685498225999*^9, 3.771685503459396*^9}, {3.7716858735485725`*^9, 
  3.7716858857497253`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"4768d639-cf46-4a13-8678-fbee66a7efd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"ldtrial3", ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716854912631454`*^9, 3.771685491364045*^9}, {
  3.7716858900984497`*^9, 3.771685890298489*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"639bd400-3778-4880-8ca6-d30a7008dd77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUs9rE1EQHjyJJz3pQRD/gKLiwV+IbW+iqFSCCHpobFoUSTCxGPEHxZNU
DGKRolAP1h5E0SIJhWJREAuJ1bYqqKAVa5q0TVqTdDfZfbtvP+e9XbC77Oz7
MfPNzPfN1nCsrXMNESXWsmlrv9QSj7dfPr6eN6Fo4mxXNNJxMHox0hWJ7w4r
t83BBzj8ou5AgtdSWLyz8f9ZUcbTS9fzUHcdvXf0sSXgVWsuUMaIDaegHE3A
0O5134nB7sHCGEOZqHGQaf9S5wKGQEOMc8wt9EFyfulHqJJMvShgidKnvo+q
tQJdwqzENK3LLP9Fg5OmCWS4OssEuBdKP6FvmMAcsvfDfX4ShrvQSi9vjlIs
nGREiVIrpGfBrrBDdsMgY8SGWn6UK3UFVApSTeGwcQwhovn9KM7hrbDvNBhO
KB7chcdAMx1wUf/J+/6TNUf4bFmCe0IRTZgqIj85lHqT5U48G+6Kaqs0zPYj
fsOs3B5IHmFaFIvL2oppzNsSrkk9RFt2DeSYME2H6m8BTF0VuLqPNeulYR1p
BRLZz/Co7CJFxLeJGb4s+/xLX8r+7p7tT0Pnuh8Cf8YLkoJSoSU/j4176b2X
56ZLmAV2uFYgN3A6eeaEQshjbCeTOxPIqZ78i0OpTfhgZPbY+LSNnuOKqzGl
4vzGq8+W9eVd4+4DrtYjBes4voaCy1Lq9nawXhlg0RB6mKQ6v+ZxszWOORrD
4KoZlH6pWORfc1O8c1ImVB08fCpKhTf4Dq+B3PURlkeT5rGLcHRbAE9cTs+t
tQpWD46S7qtpV/3W7H+94a1E
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUl1IVEEUPvQQQQaCDxZFUtCTBNFD9BJZkhhIlGJhYKVpVuiKutHPq2EQ
/WxCmCBilBlURCCEUGJBP/SHtWhpD0mbkWu7rrt7d+6dmXu/ztxdH5rLDMw5
Z777fd85G+pbK08sI6KOFXxU1p3d1d5ed74qny/VgY5TTYHGhr2BYGNTY/v2
elO2LrfheYC0VAaOhgftwQUgbA+W5oSn+QQyfjS7PHMISE64kMoGdAL4sYDf
2ZyADQVH2JB2BGoAFuJTjKwktA2huETyozTURgybcr0g0hx0GdOD4LuUoN4n
LdbJNJy0J3xUsw2H2TeGdm3tafc5UjlGGU5JuDZ2F6zdeaCT6GoBUhYnHBfK
J259w9ihm1YfPt7Om2Is1qo9ZqIMm/jDvgkk57/ub938CBjxIRcsGOHJsNVj
ru+Xl3fdQ3R6luMG0NXCCY/Gakzu88qqUiTmi38aYZxMiggfl8Z+sStD3UTH
I+O9eOWwJyyf1+GIHmVqApXXKO8IvaD4iBTw5SUn5PXuaDKTQE3xqsfHKghl
Mb8hvuehHszgHV5fIHr6Ep1L/eCWlYf20Opzn7o+7CsZ2oR4Q5Dua4cz2k3c
KtzWRkeDzeNta6gfsT/PigqbsZjKuoLhOR6BEKhoaxRWovrGqDGNWarkIiYr
gtRfJc7QlTtvp0vpwUXfZb+5XDsxuIPq8mu2wCkhCk/CNYjGskhqJvp9/TDj
UpDo7t8v7IpU2mUdrEJwWfgyhQ5SC5XFDAmZMS9lrr1uvFkODAbmWDHPC3Mx
zvBDldWazmlWZiB5cs2Xyf3Y+29CeQKzlX7AZkAeJJkdbjbGXkpxhGOOp2Ep
1oZ/MaqaBA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1UltIVFEU3RRBH0FFFH0U9DSMIBDMIKIH/VgfhRkYfciYMxaBU2MSgYV9
pEVEBAkVWZRFb6GMShqkAiF6EAgplBTlKxydccyZe8/jntU+Z8Z77z73PNZ+
nLX28qpoWWQGEdXN5qEsdGJbLBY6uXceL/bV1h2uqQ1Xl9YeD9eEYxurLGxJ
3jQkhC8AA0j+IWDDGJvU8JDhiRbw4QDuUYAIIJDlVzNsCpjIKnZNKejA7njQ
WlkXXuAthxQy52rYhYPaIGmppIL3AO/QG0zHHjcOqKfseK6zfOXnLynIbj7W
2mHYfl9JlO7iwqkgnjAuRWACA6nMVENLXeGTdWsiRI8//BUZSGPjaTaTKCQq
2lpZcjoyp7ipS0AbjhUYxZdBkhqvXqCn1wdaYkTTV9RcqUS6lSjuKPm6Y+7+
ux/5IJOnIcAbKuiFGvd+oSTvZ8nkUhBffOZ78hb+eTB97csWUHtDjj4b6FuY
KvqBNEbko0lQfdvtPzYhH+mBphpqhEsxMIaJhRdJ0igyzCR/3TMr/J73PkPF
ZOLFHjpAoc58Kc/o8tJXdiIxqKGP0YaH1crmSgXo4NIEjAErxFsRqkcztJIc
kSWjPj2aBIYwzOjyo+vhWdks/efp0h3NeU1rKjmEnZV03zYCq27F4gL7D/W0
HTn4PF3BSrxOWNk8SNc78RvDL5tnrS7atKiYVuy+ySxLm0tnBdK9g9lroej2
xrPzaRU2u5ID201Km9R4g7i3pfvU2ih10Cerq7E6IPAsPT8NEkDXqDdifjim
/RydatKBACcXjJ9rM2SVsdewDehbHG/5xte2pV2RRgW5M5nP49pVQ/wHSQ6b
Mw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUktIlFEUPrSyTbUMCqlVu4qIaCW0CBJa2QOhKGdqGgQx0B4IEZImQiFB
llIUSLYwQqEICqwoo0UL08xHmtIDRgZ0nHH+mf9x/3u/zrn/zPRz7/3vOec7
r+/cnfGLdRc2EFFrFR91sauHWlpibce2sHCiubUx2Zw4X9t8KZFMtByMC2x7
aeegARjAl0O+kLevfQQh64osBLI8MXlZeF5QgMcYV7wcJxS4oxVQ9nbDAv+1
lVyEE1jxAjiCDo3AtHi4uSy6iRTRE9AzNyWOnFBDawem1+fK0v1frtf8YKzS
Uppr2A61mS1H6ID++WJX3yoKlbyMWKSAqJ3vpaL5UFFFwBztXTxtVVgCCjqy
sxgY1P15PmEdHGTWRW+Dhiov9d+bRIYbt3hjmyp3dmpHLLUMMMpwlYW0ZGXa
WHQx9iY16eFXJrvWOQikeWWNlMG+44ex/h6qFzP134HsbHs3sGpDKpwl6qvu
HO5YxEjP5zujH3/vJ86dt+m6qIY+dNzApkY6TtSG1CPr5Ef9Dpx5inM0Txup
geDldodHZZpaY71H2hmnkTH0v6xfmMUU0TRkar6rlLS9htd/W+/Hp4Ctd8lS
6f8nNfnw6/ww3VqYeYXqlSVEz8Ba3qL25NDgtarp0SvkfuMKPdEWBZIB3dy3
rZEm34EIc8syOF9bxn3/8hBPsKmhCQ/odoVOUwr8eM/A3Cd5H8KZJdwtc2+H
GXFvQlX29HQQhqbyBGTaJropIY29GFY0yGtWyCsug/lqgygVxWRJGe0G/wDw
Iq0L
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUk1IFVEUPgRBixaRRRspRAhqUUGbIhcVhFQLy7CICFJ6mRaGPk00MluU
bVokuLBaRJK4cBEkWFBpi4rIXpZFUBn9QWpP3t+8mTd37tyvc+68R3eY+3PO
ud+533dORcO52lNLiCi+jKfa+s5dbW31XYdW8KGuJd7U2BI7ubelPdYYa9vW
IGHlxV9BaYXiCFKhsZs8NBR8hH6AghhC5TuyKnjsgoE2UB6gXa0m8Bs5dmdD
lx0GgmEUbwJfrngIM4hQUASPTuNDAB3YxCjKL3kC/nhMERVoNao9LHpa7I7x
TMiQcJ6tp4GPgDv5SQKNb8H4bXkO7NkQo6/AG1wYmbF8ENqFZ32itaue9z6u
vnydh92ZAiOmmH3dwvdbQjx59g7yjr0kmrgFfOn9M51CkDNBcs9gUlJp4e+x
NPPPbzd/zqfg4ue7Fx2Y/cuI2tIwV55i4OF8JjE3OIbrdI1u4JuAKu0jBSJU
IIH+V8f23+RKbY+XdMlNs28yUb5u4t7Bu1t6jnMgv4HvGY3FdIJ2EA1XXaTD
2NjdR507KWkLwzlraOsaquViUoAPzZSuzM7SUEQdvbR5CrSPaGLByxKdxshl
zAl5ERMP8Isq+5FNM9DumsdrCUqIMw13BoXsaHi+Y/ptKwMvpT5XkoXCMCMR
mbGmS/djZcurq1b9eJLmCjCkdqT8YQj16CitpO7y4XEW8r0FjLTRCMzUaFXZ
kTPSBkxMhA4d60sj47PCKXuw3QZP6yw3ofRfhBCZpbekrsYrmWxDBcUmU6Vs
0WoCy1VWFNzc/0aU/MbJl66IYPofGH6ezw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUj1oU1EUvjiJk5OLHdRBxVn8AREyutWIk1OLMYgQJRW0HQU3J0HBmlrp
UHV2E4rikKQGCyqtVqtUU0NI0uQ1eX/3vnfv5zn3vVdD3kvud8/5zne+cw5P
3sxf2yOEmNpLr/zEnVy5PDF9aT8dLpemrhdLhasXSrcLxUL5zCSHjaWPAgx/
AxWCP5GyPwYajEiDmM865jD4MFGMONIMMS4R8QtXZAetnRpMbC98S2Ef7zvU
PdxqjYhII4BPEZRPNy5efR7ZmGr1B1JGk6ggCslIFKB6itAIisGsLPAbQ/u/
CeNp6C9MR2U56W8S9vOrJQskzAjdJO/p4gADyGi3kDF/OtRygOezh841hluh
ZxIDiOGNbjtrjgzb4riorHeZPgK7pNuc3gBWnhwVzwAqHsKnVkgkaRGO10VD
5G6MYSulCqh6AMTBwKsvvBTFi3c/Md55sEypYbBhpdTlOqbFvtnXcLexuZTD
AnZUnKppNfFRPJSBC9lsHREiBzaUZHh4j/Gld/2VDUMV7s+/nRNgPSqxKtqG
V9OQfk/NjVdEnW6oe8qUimZn0oN3XoiZip+NQGnCJaiY766ePHvi2IGRhz7P
zTeEk6NwIDu9RweFOE074rDCALEmrmSN+n5rvpa3TVujXajMV5b5a/5b5nI6
bmTbNMAa7MDlfxxxyN7SDi73sgXQ2R1MKJP6qzPuh3RdqQcDW5F2jUR34GxG
GJIWlZDujlni8QuODLW18x8X89gb
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oFFEQfnhNSisrLSy1kZOIWmrjD1h4QS01MWcQ5MS7gByCFkfAImKh
lQmCKEKwF1EQjBY25ymoQQTlMOZCkkt2b3fv7fsdZ2ZfwIV9O29n5ptvvpm9
E9crV3YIIRojeFTGbx6r18ebYzvxcq7WuDpVq06eqk1Xp6r1IxMUtju8oAEU
4GPB4ek92ZDxD6n5IsF1UjKcZwc+hm5kDCHqHoful760seJwbxViMiR86+Px
iWG1AYd+bY1jbLvsb0Mn6UGOTjXYxmRQcEKM3DE98DoPDApmCWYiZ9ECGLAD
3dJjLa6sYN+NsqeSedEFGpkHsm1bHK0INVxOVqlSaJgThyCnn+Rg/mykvz2R
0EOw3K62EL+LElbjIaxxSkFTYWFHFNaTweiZyxABdFPkkBOwowir3Dq0V3/A
mgY5+5nzbCClCkvHyGXh/PPTWz7onkLR7hbivZ0riWYbFqNQEvXTKwGgtUdc
OvvmAQUXEzr09QPTvPe6VDooGuLZr97S0GJeorV4hLJlmxlUx27Nil3layAg
06ln2JeM3k9HReukmJ+bmYSYZrq9AyaKvs8cuHuiuVB+DC900NTlZkMpA/79
/cMXnvqlRXgFUtJAWHbJwv78uP/iCmx6Eqr4jwnAukKkkdDA/g2bx/0FdTx+
O3wHrXDsJqcgGlhg5cDnkrSmeO0429F+JCRhTqVwTdOskNkUO0o6Oen+A4lx
01yQ0xal2Wf+Aeqp0rQ=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UltIFUEY/gmCHnzId6ELFV0IIYgieqi3gqCwC/bgg+ZRJLA42kUjiwqK
yKIQQwgqgjKqBx+swAi0i4rZ5UUKyZQ05JxVz8Wzu7Nz+fpn9tTs7OzO/Jf5
/v/7VtWcqKhbQkRNy3ipqD6zO5msbjm4nDeHG5sa6hsTtXsbmxP1ieT2GutW
Vnxh4EeADyC0i4CRgOI/rewabyJp2FF4yoeOIgS8U7CPMMCwVAiRm0OotAtw
o8AZpJ25oCsonvgcxyccY6eauQ2avH91Mh8UY8BIfocWypg3g+7KjfgQn4eK
TRL9DFQhwAaqQQeeWgsnQs56FHTWGHQnzn2pBEbwducVuAIKBVsQo+mtXdE5
n8al0f7m3g7o0CWWnA2yp5UbATE9fG2kbwc8GVkoHCXzCDeVXYZp78HSjm+g
UYgg7k5hIRqg1qEU/1ZuHdzFn5MI4trl1NwE2t+9iLD46iGt9HCrtd4CiMev
2mPUAny9eGr140/w24+nU3PF9uQXqQSPqvqO1L3+Dtvaz4xKar5Ow8+/X0M3
8Wz/nfEM8MM7P8K2IO7AbCkdJejc3ediKkRQzrTS/5ai7V5a/GwDFoHrtJlN
A1iAB2TmDUbXOpfpwTfbiNY1UE8MJbB6MKdTiLwnH4kO0b71NzDB/GnIHIzH
CXx14cEfonLqrMpiKKOEiAnMhExszsyf3bKnhPocAzxUFJuFgzVRSjTbJWxV
7tQwgQWJmJGxyQMvrXa0VZ6WWUQa4y7WAks7n6wl3Dbb2N4IJwKrgwDaXcAy
1MbVoR0oxTxHpqgwAatXNkTxhTb6n2j96C+h5ayo
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUl1IVEEUPolJ5EsS1Uug9SD01EtEvllUVAahWZIipaRLgRusghZBJBRZ
iRC99FJSPYREESmpYUQPJbWgpYQuufbgD6y6q+7u3Xvv3JmvM7PX2OHO3Jk5
5zvnO+ebPY3XqprziKh1Cy9VDe2HQ6GG62e38eFcsPVKINh0+WSwrSnQFDrU
qN12+xOAx9OF4o//KZjhwEIaaQfSv4DkqRSMLyD0ybd8k8aIDMMcbZY+whKr
ntmJjRDK4FYufsE46E/vd9iQwtqwCs41UwwmRZWF+bXLg4tIeyIbTWYwsLzp
9H6iA51UX39nZx3mMktZHCeJRehVG9FVen4rWEB0UEF5nFbB57ZPvRg8E394
g2qO5X/CogVHSMvzi1iTyZV53ONu0PhSP/MwJSIJl61SRIGB7qKOlsCHVdtx
OVxKVyQZreaAKVS/tRFO8VVKmFoZzCW5833tW2loeor76LgGZPJpOp2T+Kmz
VdRgBPF1HdNjusoWC2PRrwFRXVD2jM23kW2rZUTSdH9hYv7mk7oHVEyVK1j7
L8y6PcuhY8DC+YofpTT5OSFVipG25MtYx6X2riEgIZC3i5r7+g3MMrKEI+W8
X9bVlnQVEkWUr4aH9O/tRBfCrNQaRukUFUV0KhY5yUQmnpZQ2XT85bvw8b07
9DNyEro4hwVVw8NEq49DREfpBL3RL0x32ciEsRjdHW2hIz2b8wOP3jtaH/M4
EhA2zVSXt1LpfermJJajPCU95XHr3F78ZZ+Pta97RmxNPSp0Hx1DM+5plcyB
I7HqnovcoXIPUuupiegwQuU42WYV+Aff7Y6a
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1IVFEUPvRHq7JlUFS0KDRwVUSbyEUUJNREuwg0TYvQmLGy6IeiScip
hWB/i1pkUJTRn4hQlFhUmCJYhFHalE3GjNPM+N68ee/e+77OvW/GGd57557z
ne/e755vVW1z6MAcIoos5Feo5viWcLjmxO4yXuxpihxsaKqv297UUt9QH95Y
q2HLig8A4cPjD5SN0k/ql+dySekoDzmDHAf6cYrloLMI162uIeEGNcviIY4P
MCg1my61Fwo/bB27atDQ6mOooOqmU0jmObAx7ZaSine2p/EgYGO4C8vjijQ7
b4tPlEfpEYdeltEjh1uvcygdCOaJaKW08undaJyhqVuR747RrGubicro/NW1
dBKJX/4YdY/irafp839RBqKbz9BB1FNgKXg/bBmdjgeaS9h76Cf20ZmlLxBh
4DiMHM/vu00XroUII9GPRMsvlhO1DyHv6EOL0dhRqgr//jeMllgjracNxzC2
87W5D+XsKNC5/a/SSA4mE2920Tw+tDBiC7re2U1dPrJfUXWK1gSjy/FolMz2
XPpElc8fcqJ6/qKBFfRu9cthyZ0sw2Xuzita/WVqJ+qifqRYgR0MRQydpcYU
ndb1I9H7bRnYxZFyawa92HSnYkk1dSzog1DmUiwB4UIKy1o8QJXNFetuJNLI
eewEs5/jSyjPHe/tb4s93lr9ubs0c2EU+nxB1iRwz5p0HEZmB4wd+K90p0ZZ
ZtY+nBnbE0Eb5zipgntwtRvYjT4vfSGVtsVMBmDWqbqJJ9++SJmTrvGVtsWU
yGiGP0wyHTiT9xGzRveMxyzLOE+v/gNMNZW/
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UltIFGEUPl3IfBErIoJ6KLAeoqAgsIK0GxhWlGVF2WWXNhFqA5XMgiRN
7fZmkvsQkhkktVpJJj5kD5JF1EMXKDfQDVbFvIx7mZ3LznydM6MNzMz/c875
zvm+863yXio4P5eIyhbyp8BTsaO01FN5OJMvhf6ykmK/79xef7mv2Fea7ZW0
FTMvTMDC7GMgoWj8j8lRAimO69BUQOcsVTJNydNsDnFcsoahwbadejduGLDd
m+nC6vJhKAUSMEwkYIcQSwKaZtlwoEzEY1I+BiWrh6iYlBDfuEItn8JfGJbl
wBB15RKl0+Nc8n1Ey80RzYW3owh3Yl4dpTGp7fWZm2qfodPrtJV5g1Ge5XpN
I3Xu7qB1XRiYMM2ZgeNOUrjnKNF8ynnyYRTfERXMmeHHEtiFLc0bcppO/coH
Phu2RHjqofBY6y2ac5eaL9R5CHtGdMNmNqyMsD9Bx2htdTstX+DNJo3ZsUrJ
pOhz/NqdizxkS4CC94uo5p0RDnO7pNNsPyro5OK8dM/Ge28PXm1ASDpZKagY
nXr/9MXZAGV9re1uoiv6tJCW4VVW06pruo1ltO95Q2DbkZbhqDbuLFNYNLZj
8A/L9giDrYeqgg5fBY7shuwZNxRp7Dv9cNYCMGX+A8A0UoumEPlRRGtUTEtF
XAQbBibDGIq8eT3wYEklNZ+J9uiwXT0nI8hryx/vrX65voTEXkwrZTmAvIgI
9eO3L9C3k1ZyqLcNSrdjDxP2JxSupqrNlPZqK1FGCfpgTbj7MRNfLgtS/Teg
P2PpT6lIupZiF0JN8lHRDMVEh1jXZNfpIpnjTaRS3DjGOLbh+tkxy3/DJ4Sx
7bpbCMT/AUG3fwE=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1IVFEUvtQiiYigIJA2LRLaWItoMmzRMigXE9OiSFIbNQwFFUShKKIW
RVDRwjYuCnMR9AMWapFkEKGJ/Ywa1FSOTTTpTPP73n333ne/zr1vmsO7P++c
e36+75ztzV3h1jWMsZ4q2sJNfQe7u5v6j26in0hnz5m2zujpQ5290bZo975m
82xbeYFEA4IOaS52SaO1KoGi0TmBCuCoiH2s7TXn0ubQUoHJl/CMvypB5Uin
FPzAYsJImfnrliB+g8UQWSBHqSHT1rEA5E2ay6HGUcbuKOhZzFlfTyJfonPm
/ij6UV1bE+p7WUClZNriIPtzXNpTvRbrXNf1kLIWCqIFZfmF9tsb61niy0qK
/oLKkX5VpAceFiPHiYxkCeNwVZkSj7tQXHzjHZH6+CeKnuTqP0RwX/FC/GLL
rokLN8rg4AtlsFtxOhqGTkUYm89bhgwdNqih5uqVyZG91XXsQYuzoIsBm1xY
cpbrWDuq2PrhmuET+OA/9aQI0CkPg9fYADPSv4Gx3jlkKo3QSIzFDrNzje2t
DycZq731laJ6gAvBZRyIp/ARycLc4G7M4KYBwR3ru3jyB0cxYwCc/bzz9QC1
QlOvqJLppfGtU5S78HMViY7Z9Fs7EfRZsH9ibCj6bgnfJ56t7NicK48MpC+W
lpvuMXb30f7oizfHHqMoTB2+Eh45zrvvr4cNgK4jDezJWD6YGCU0l44JUMiO
bDlwnuwh42KgCd8mdFaDvHo6TmhVoOTBjAYUaOmrKSCrYRLRjBlapOTasx3L
2rZ5Zbo8UWkjtF8ZTAgt/wHrz6m2
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUk1IVFEUPgVZLYKQaBG1aFsLWxSl/VDpolCoTBtskShO6kZxTNJNf5gF
EbWKiKJFIEMaTPQDgwgKbjITkn4wbZyZyp+ZmtfMe/PmzXv3vq/z3ryx87iX
e+459zvfOe/b2dxZe3EtEXVv4K226fKxQKCp7+xmduo7uttbO/wtJzsu+Vv9
gQPNTtp2b0kAFoSEc4A0kYNtQEfBBHKazCJn8dF2b7QcspznZud1A7bzZRmi
kGF67wRWEVYkVj0+OU/T+LMUeT4EIpDOHkMVotIFAu5UbaqhKupddku7FOGi
zIaANio5VV6yTkkI1aGhywIz9B1a7/Rfe4For+IwsfNOPduIA2uOUvA1MDZR
RxTiitwDTIGojC6BttRcYfdHaXgXUeeEVuSqUgbkezkTj2EsTnsYm5hEgmva
qh1lxoFt8w+Bd53DRxr2HT7ute6NbvY78CGJaBPRObpeDK3wnsx+zgCT5her
pZIam+uxXJzNACooFotghdOe1t1tx3+zdqhlN8eFysTzg+eHfBWIYJHvDfAN
0dv7S8BvxFPRuZFX4kRoclJ3QpBzRM8KY/+YGve/H9TObB1w8bgLBaAyTGuW
iWh1aQ+NNhBNCW5fxYzNoF2P3hiZn/3Gg2qinvIX3LYnEthPpojm08MjFe10
kK71EX3jSM7ELyYeVm5/6r3Bbyo3OgMj7OdiVh4JLGDscbrx1tV+avPtDnax
mBKjNv9aS1WMvwqSYh6ng/cojK/AohHzRKHDVQh7ZsZibhLatJlmMu6ojYIw
IrxUYTLDlJNuctiEo042RcDULCOvs7YFLAFDwpOMBWlBK+qWe5D/AA1yiUc=

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1oE0EUHhTEQw9aj4pgi3gTtIqCInizBw+m1JtgirEIGiEVxEPBg+jF
g6VatKLgyXrxUJVCKYoEL9UqImK01TRtpDXGmCb7Nzs/n+/NJs7uzs58+715
73377Ri4mDq7TggxtJGmVPry0VwufaVvE236s0PnBrOZM73ZS5nBTO7gANO2
tR4o+AiVhqcBuqMYkEpbGM8aGSggAAjjIU0sYREb3sSODslrHRHkE9E6nseT
RSsugFbWgVImWMRngjJ/i3A1X8e7HhjatYZiAs31e2KX8IGmoURWapfRoEKU
x/uFOIJHw1hFNSnb0kcD49dub90i7qM8P3bopok5EAijVsl7jlG/c2guYTMC
Lt6hCCRC9O/seb6sUPWFK5lHCF3huYTuvVx/rSpO15Q0cLlc4/PY8PQt08fF
NKbckdY1LVG/O+nNUmHhwgEx+tWgSWCiY/mvV2qErE9h5OTucdHgDsK2eJzb
eMgPE/QKRemEiWBUbDwXJGdWsSZHr91grfxEMx9rQXkNmOtSiJoT51NvQorT
LMmSh59AyX4XAw+BWuH4SgeM0UEiONHfy1vpJyf2/Wg0pz9/YSwyrPUFoBLn
r/eJ5Ynfi8hPJpJoKGqimaq8DrYf7sydukPUX16io6Yr/iBKD8Z61wvRNTPV
tgGbhnRTC4t4IbpFRydeFi2L7nxkjGMVZlcgUs8+EVREPWnLtj3x8U/JmYlM
qn3nj/+DnRMxNYZvTeyTuXwXGbed2PohjhtrFSQryUWT7xW/tdYun2/+AWzR
xlc=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1Ul1IFUEUPkSE5UsGPRWCRA/5FIUh/RskFBRk+BpqXiWMK/6A2R9S9tBT
RUVJlGRmZGUFUfngQ1qBGYV5lR4qEn/yKnp1d+/P7uzM15nZdXZnOHPmnG/O
fOfLq6gtqVpBRA1ZvJSUNxXV15c3H1/Lm9Jow6nqaKTyULQxUh2pL6zQYRvD
CQkhJMLhe3p1/ZQrPKF4z7+rBFQaahHQca4J9LwgHtopQ68Mpx6cDMtbhnWA
FNIio73IsL3EEQvoHNM7qN8KyjEpanKcY9H39nozvSO2lmtLpRkPnoSDvjLa
lHtmVdwkZJJAUoJvWuTPLdhD2auJGueGGMZVBh7jkHHGJLpApahL9NBjc6ub
gZzVGLNO3YP8Lucv9hINmDf4GtuBLfAndXTOu4PLw+uZrE+/HDEf1GMhnpy3
sGP37Q3vVx4m2jIWvpspScTagZaiqtrinURrstoP9huimFe9xnfVEL26lUtV
57ZV5p3+OGm8EDwnuB91hZeQxPezDSXntwMjwZkl0DOli37ehjeJ1mgXFZf1
60ebNEnUcu0fRjsGgQHQkbtPc7RXSmXNLAD3Br/hhUhwn7YS5ed0kvAcTpvG
F46y7RMvgwLQRpEr3Bp+upp62Ho1nsCNkc0ndZMXqPwznixqun2J1BBTPte9
P/cnhvEDFKd1ToAguUkTwrMsotfUfpOxiKwurkTXOc3lChuxgg+x3n1L9Cib
jjFVpkFaUPC5jP4DX2uIIXGxu9fW7qQ5mgl11DF6H89C20sjIxVfabNGbN8w
IUNNJn1XN1CGtAt9yBLOKMWGD5E2elXSD1QrArl6ukH/AYpxl0o=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUktoE1EUfbjSjbgTwU0RF+5V3HRREMGNlYqgWJRWYxAkQqqVutCdttAq
RFRQFH9VLCJiqVa7SFtUtBCKn4parW0x9pM0SZPMvJl5n+O9kxF8MPNmzruf
c895da0nmo6uEEK0raRXU8vphmSypWPPGvrZm2g7Fk/EjuxMnIzFY8ltrRy2
PnqgAgQSgB8gWr6Gi6LxXcW4ZQQSXhYUUVWw2oQgLV3bynfHCg5/SGNRpRSt
6MfUDrv2o32o4lkXFEIFrQxRqS73bV4tPos8SuifHykiq6zlwotAHhODAs80
CqBKN36UQw6grfTn2/tldBPBPHeowqQ1xegApekkMsjN5ig2/3Yh3ctzeMRZ
wfjz64jNL/TQ2cRwfKCD+kxFDN+MU21LUXN1zS7REx78vtqAxokUyVV3Z9F+
J4OHWMhGmMuUeM6NYsOps7RPAhVShDKVB9YKX3+OYldqSCL9m1WqCTIbvufl
7KWBVfSxr6cXy3k4UhselwOvY1AcPMMqYFoEnTCGOtkl8YTOpu4L8bJp8tX5
c6gX3wmoUkMj8BTobyA7j3c13kp14Vo9E2S/8FG8aO7Gdjq7h85DtGWwOAzt
kDbAFaEJ2STERVnYunaGJ/oEGxBTuwWjuADx6F1+9MvwjhGJgnRD6pacQHD7
Jt0zYGlKyBQ6NYIJltOjomVqK0TjAWBmPLTtATnM5pM4SuHq49eHKTEoRjoG
fCssAjd0/jn8UCbXqSoXfsWhnErNKYv/F6fpUH9aTkARmiVX3JBGk2E7H86c
ZtBjVGIMxlP/KpjIRlsx2oP5YPk2678QfbYy
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUj1oU1EUvrjUQdDFRVrQuaKDIh26OKkgCCldutSGxFaEKGlVRETagm4q
iEVEUKQdHNxcnKouUikVrIONIv5AjUmsSV5e7ru/n+e8m6Z98O69753zfed8
3z0Hshcz53YIISZ30pIZu3q8WBy7NrSHPoYLk+fHC/ncqcJUfjxfHMhyWm/n
hYeC1M5Yh+6jJC2xBv/0tCOBTxKOGMULYaTEtkcmILhJDLSFtQTTlEhgvBSH
8BSSTp7yPIjM8slp/HgirojXyw2ql5K4xhZhqU+IB5eq/5i2QSCFmOlUC1H1
y2Gxv3z/uWM6S7k6fSODJJGvlnc/KwF/2lxMSZLQUUT1e45cXqJjjbP9r9CM
jB+Wwck9J0IP3Q6IeYN3bz9en36L2DvT3oxRxTrLiLB6+/RJyPq6ItWIQzGf
kB5F5/lje++h2gUZsoFdcu3Keq53n8jN6jQQk12R3/SzOnOHruXozHwzNMHu
toJIfMVS/8jKRnauAk3NyK2OfVIaFQusYyLzzaZ+8z1Zb2BVtDZ65uza+8Wh
wXz5M2wM773tQM2tvonCz7tUUqymF2QsHMUp6BQWRb8Qgwcfv5iuKP7TaYn2
VnLhe3aXGJgV736/iZpUS8smNLfJ8h+NMOPNhRXYFkMI0QSNB7smhz+JG3Pl
Wtdqo00cRqCO+MPfKV9D2n9QxuNm0FbsvpYuRIglTJQLsMDT+VRm2yizIHQM
SWkdrA53741y6fClxSVj/X+mPsTP
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1oE1EQHj15FD14UUEFxYOeRPwBQRDUo5UIxYO2GEuhREyKpdKDIoVK
QCrSWw6CDUHB2qINtgebSoQqKFp/iWnR2NSQxLab3ey+3ffejvPebrqw8/bN
zM583zezq/Na29WNAJDYRKato+9kPN7Rf34zXSKxRHdXLHrlbKw32hWNH+lU
advDF6WN9Dg+GcZR0MF96amDXg89iRRyVXj98VGSFZTgSeaIiuCM0V1wylIF
XH3IIFkgb4b/SeolyUHVTZxD88upzDAWhKtjyhsUx/ocFgnZ8sS79Hfy/NRA
VGAFGz3HAfp2HF5ZMvfDxCoBb4FqUgnAC49LCvi35Ci5jHXELr69nTiqvn4r
CItNdC2bqa5cx6vYkHS1bubKT1xFV4RwnKC+TXyqd+7fWtPFpNBOixkYfY/1
8uXUoeTUZBFrAV8i5+HaZ7RePoM9kwd2Q3uohSu8oN2HkTOw7eDwlvw5aJqU
LjU79C3LyeyF3utqaABZbPjaL5TlxIaNJ+HSXyyPvhkaNCy0rGBMbqXBMDK9
+m8Mlyu14tYFo9WO7BhG4Eemv7KgVOyJ3CtqsaQtleyPMJd68LBqUgtp5KYK
VZIRfZ/aeTcu5muD892VP6aS6XlaiegH8IWAF4DZ8a9YxxLVS59WtT09R3xq
p+DYvpnFaRwgPbJYQoVSOpoibICZE4XZX0uk1av2WdKd6UWirbBew05AHBmo
4/zdvCbGQz3xE5cfiYxWUa+rcDybS5eKMvREOGQmg80UNB8RbBKB9vRflhvq
yFsLIVu7IdUXZyi5YvYfTqG9gw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1Uk1oU0EQHurFg0KhHkXakyKiBylUBMFTGwSVSHsQrSQagwm2JpXaIv6D
4qHagyBUUPFSlYrgoepBIy1IsWoVRKiCh6ZprCjNa5O8n327nzP7dMMbMrOz
38/stiR748cbiKhvNYd44szufD4xeKCRk86evhPpntSxWM/pVDqVb0tK2/p/
H3gFMCHgAbqGKOcv8D2NChBqrnNFIww48PI5+rbJN4Zj2fsN8J8Fm6HGm579
IfRgShZyCbYlAgLqzFdGjW4AF/FWVEg19EOEtg9bRoi23b5CsaEOq4+riqHD
Uhnjrwbo0Abamci8hmPBhUr01L5/vPtkLEcU4/ymy1iucPFhNYYF4BtmqLtg
1SwzGwdf9isO6jXHQ0eT5JNijo8Exkr28WeZtU1Nj4szE03AtaxFgSj6n1p3
UVisCpLMRBtYWFPBuclmolPzVbhuEPkXe7zmKy1bqfEgXTMiPah6RoigAoV6
F60b2L+W9mRnzAoz+eLOWHtz7573F2hzMx1pL2UzToSmlRY1v3Cr9BAT2/dR
/NIz3PtP5FTUB6BpCNfbumlklGjH1eTwkAjRULYje/Zw73Q+nQE13Lk/9wXG
k7Ep6CIT7J1qTxSPPr38mF5g1lfyOvwqWFZYHqQ3TZTLvb/Qdf7lDzdCNOwA
nxmYVq052blpOKmlVwfaXqqL2uJSdbRAj4g2ds4+WKnb5yLnTN2Tq1Rf0d86
8HOigBVjy3yqynBilSfD5OLKTkQt6cijzD16d9IAre2gI/fRyHUQBr4TtUDZ
fWXsg9P2jj1bj8Ky+QvgD6iE
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUl1IVFEQHiJC9qmHwIIIrIggepCgrJfqrR7bCOxRczWhlNQKIRWCQKTe
jOgHJF8T+6HMCENMXEIKwQhpNUJdd/Nn2e3evXvvuefcr5l716jhznDOnG/u
zHwzVfWt8cYtRNRewSZed/N0W1td5/ntfLnQ0t7c1JJoONvSkWhKtNXUC2x3
WQFjNBwAv1nhsRogKEG7im82fAX4IYBFQWPDhDDlMLAMZzT+is9BEB+foNyU
t/lQUuHRl/8DRWCI8++Xn/4Uf2Dgwi9xkF20R/cQddXU3lkyYVolKMBis7j1
BoeNUPUB+iFRsAMooxAoH/np53Gi6uNElYPhG2vAtXvQs8D615cfGx8dOvKM
Bt9JOheB5pRAWn9j23Pmym062EgzQoORWEvMhvaRxIdX41wCjXLZWljQzBDW
UbJ+STuYv4WlZICoSu5AR3QK1Fm4SjoZ8RS67Ajh5ef6iGZW02EXjrxwJhSk
bOv1vWPN/SmUZh38I7ZhAl2KUW/lMnKb3gDX3sNswKx0HY6dou8CHIgG4cPb
oVLIr2MXUS2d+IQ12jtyNGekguQSUNGfnpgAdRD1Ta/czQ0vRkNGOgV62l3I
LnfvO1fVusbOqtXL3JMnExyKWQtvEIy/KOYYb7KX0BCOU+QBdtIAimoM+PJw
TGfQiUlYsic2MswsPb7fi+sXh1NMLPvdQJaBp2cwRydBT9C/DdWTEY9sjbDm
Yio79fZzwUMmCBdN2DJlCIM05m1mwahw63igWkuQ4r0ueHbRkRgnpF6mosJD
IJ+P/0XufwBco60K
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUk1oE0EUfqiHhiIIhSJYpEWtggcRVDxEbEEFT8WoKD20TTFWK2khEYMY
BPHmzYuHKCgEq1JQUCrFomD9AYuWFoKUoDYNmtCkSZrf3ezO7ueb2RWHnWF2
3jdvvvd9r2t43HdxAxGFW3jx+SO9oZD/+ukt/HN2LHx5ZCxw4eTY1cBIIHR4
WMI63GkagAXA1pu8oqJDgD+jKv8gKrCFs+MpsTwMxuuwbOciSjLEl00IHi6W
g2V1mpoolZc5rwJrHDDUO7X00I3X+LCV9k7hj53m25ZhCmgmVqu1x98nCTRF
Hq/4UeVUTZtTCg26ubqMI/SJ6NulzR4xD6EIqNd4Edlu6i3vo20DpfXf0BVZ
0wV4n360lkCjdGuWj4qqYhmsmqinssinvY++RFGYzdpocKzB1OuqkjzWGpHB
1AqyqURmQhbOSU3GaKqOMNE133nCuWmsMR3DJWNZxcG2ThA1iEZjr57ltabI
8EWhdPz5gMvb7jnB8u88NbPC8AKUOExrru/YfRz0H+JYF14u3K0oxVlzJjaX
bqvj/bvIQJyu4KYrv1oNM/G2X39SQHJy+uHG4J0hKT2EzXxSGhYo8xkzlVrx
TPvu0D1pjN2scZy1/UUHivgK5BB9Q9SzxPSksVhnL2Kt7dTPW6SZDCnmLIy0
nb0I7qLWnqO3+2gHx2IV1lKaZNY4b3nxOJ9t4rm/JRE1nY7QWDhrvplDrjvc
2REklRJIqiaBJfOyAMnS4ovn8TjtUdY1IJvFxv8hmCiE6bhqyK2GisNL2axb
uuOAcLuakU35gO5SF5KnbCk0rH+NCs12csu0fwE32pBo
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUktoE1EUvbpS3LhyVUQXuuxa6UIKdqGgSKQgurElaRExhbRYlIhuXKng
RqQgdGVRECzYgkhAom0qUkVNQfxhm9aS2iTNbzLz5r03x3tn0viYed/7Offc
c3BwJDa0k4hGd/EUGxjvTaUGrp3dy4f+5Oil4WQifiI5lhhOpI4MillX+zdN
yDC+ksWDDzcAtNaBp6wH5QIWUPUAnWEgByf8DNDyZOG9VfzQCNhDi08QulQ3
ZfFDB23d/1HguE7Ta7Ith+AM/IrQSYfnD7yHYNMwgeU0tibPqrjEoIktzPLo
utmO5cOve5ibpeM0XbhTK+VGSGMRRuktronHURrJEE3yroF7RFc9WB3BGgNo
bM/yTEaqWuqfJMbCO99303DOO+dKqJQkQmOS8/ZuJ6y9BnV7DpytqTxjjBMd
ywhWqQbPdle4HtTXv3HyKm5lumneClU+8zLhlvl2BVgHftJNPKRp3Q5qx4Ei
3AaWcxt6Jn+ZKE+I/FD4ipmwEixk/2Bp9gldQYsJ1ybk7+5nxAr4C+SMXXyQ
oZfwrBQR4Gn6I9LoyS1uYuVXluLvLj4KW+2qYBVrfUT7atnvqo7WjQun3mYi
IMw/XiA/eGj/bbyaxwK6UrCWYSj43BPFoe+ffPNl9cesObAj/jySkOIylNGV
arWS+1RjCq8f7hsqNjr9roPxtWBFXzgzRZJGpGUiTTE3/FDG7/flnopcBSZq
nfQlgDUukzu3dtrdiOwj0gyLTspphcp6HATNFps3ddvPyhRGUWVuOANXyohU
O8phf44cStWI1z9w0bqX
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1IVFEUPrVqERJBVNDCWkRQK0MaCYKCFkFYWEEbIcemwYoJZoRI0GUQ
tIgI0kWEUQy2CBIXFbow22SIZFIYRGQ2Tibz/37ue/e+r3Pu07nw7jv/9/vO
OfuTt7qubSWi3Da+unpun8xme+5c2MHKpUyuL51JXT2T6U+lU9lEUsL2bXyI
jxPxZSoiKgeeMaEYIqurEMpYEQa+/EK5AnYrMa3or6z+NezS7HMBT7GkHTVu
MIIPk5hhv4c4M+CyJY58NF44SjRwqMYlPgJ1tsPdeBK4n96Ny8+XDP6J1mja
+eQH6MBbFONwAdmwP980HCxT6gYwB7+u2Kk9jZiFzzETL+arwK8/+deNMqNR
2rLQzE1IKSxo8+TBcnFVoAYIxcokXBuCoZ2JY/RMEooqBuMFRumC9wlzN6mN
9o4KQVOLHG6IkoaWHb4/09jBNF2hldCC5BBliTD6tda7RMneJXEozVl1VOBG
bohv0+jgyczmuyH0jY47V0U9Wnt3/cQR6niZd+O2GGgDVBbg+xHOn+smap8K
8KXOWY3A8vvJ8kytsWsLneo9vYoy+AEpyTDUrP4NjE30Tfa/okUB5jseszV2
VFRpfTgCOv60s/M7ogg1wWHzsIh2tf09XbxHLW0oxVORbXADeOvIJOhNCw0e
Hhyexrrsh2wFdBjowp6p0crw49z82XzhB8PmqYubdyJA1dap8TYUPFR9zb3y
5MUglG66S83xxwmybH7TtiFFdlM2T2ixcglnMzFqZijRYmsUlmxUIDbgP33E
uvU=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk1IVFEUPsQUEgRRIVG5qCDctArRRZuiIVu0GYm2ztAkbab8gbCN0CpC
WhVIRYugkqCYQShcBM1GAhmjHB3LTCR/UEdH5z2f77777v069z6dOvDe5d77
fec757vnZOp24uYeIuqu418iefdCV1eyt+0gb65lum91ZNI3rmR60h3prpaU
gZ3Y+cARwoYCNC8CW3yglQol4Ikq/g9pYXyt3dBsophzgCrcWhpP8LqFgDcr
9mw7kpESUsEDfL4ONjx6mmOYCFiTWTLkFRUgEFg70kOX7zmcVfuPtMFj08hX
oErHiY7FL6L4L7PpoFp1GXXuKKVotTgbeqtTtYott3iWhs/fZ51lILegqsLy
Aszjh3P63WEaGv2mkZdhpcwFcD+BEa2GD/rj7ROLBlvZXl/CTvsqhOuujBHt
M2Wbo6WhT1bLOOiD+c1Ew/nVL+zBLIiy1lTJbMY0pSgmBxgzM1RPPSoP6zqk
kGLvdGe84X3wGyivvflIreR4YWSzqjyk7IvMnevA51Jny6U+ap00VfINu5qI
HaDnjb6Vz7HegG9JvF0Xp6gx9tg6IRJXf9Ul29bZte3AAkqIj0Q9Tb9yxwkb
UgpD1WpRTY1h5k/f+ODPQqX9SYqihFIjkNCFD4e+jpyh+uXN769jo/vtS2i2
gmsNnZdvyQYGFyae1R7B9yHEPLLU29LcsKDKJVK782PfAq6enEw3FdzZOZTn
jYtSmwmyPUURQAlo9lvxrRlX9tT1a2nsuzBrh+HssmQkICJg6AhOFHi+ljaj
KY5HUnucM8RfEHuqUg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UmtIVEEUPkhQRFRCENGDNpCKDSKwF1FL/SiKKDKMQkvUNgtjpbUHG/bA
oKI/QYEIQQURJBREsCJEoVGBy1pJD/HBliXtruGuuo9758698zUzd925zOOe
78w5833neOqaKk6VEFHzHLlU1F7aGQzWhg4vlD+VgeYzDQH/yb2B8/4Gf3BL
nXJbVpiQQ8jPkjuHA71hxurAdjQkp81gixnUdn1YTmNpwNB3BTcFCkNYTJp4
1FCg0CHkKgQTOqYDJz82Dpg6p8Vg5ZHj0tVGKvL6CCbwO3BrYKqYKa8C84E+
QoAyZV/I8+GAgbwMM5PQTj1ZRFTe37G4huh0e0wFdXJudPGpjWgVfqCzdHQ9
UchMs5wF25JsktPA7kdn30wMj35fQRTeL5+UK5LA25s0ojnKayVuHtuywZAX
rWHaBCvx+Wmpz0u+a/GCakoi8ygdvNAZrSwr5xfPHZqvVebMsqV405g1NBcv
F1DVn9DjljaqeZ7S/NSSMY/RHaL2xveJoW83luD4ZmV1KVp4FYr3I9o9wjFF
O1D9E1mkGFc4uk7Q/T51MLF2+x5a3VGo0zib6onj3TakJ/8x8C7ykjcWURCT
Zcn+Qv3DdQ+SroQr57UmVLmFW94kqigoBUYPMNzYS5GsLqlKJysZxj2enMRf
DAb3bUUs51JnMDhEvGV503Xcxscrd6m+FzYvCMMN5sSCu5au2ejtfrGBpHgo
MhdceXUMVvs89Axky/K7zch0Fxoy+ZhBdPnq7K/TGcHVU7QyphRNvccwwaxi
0YRTPMqG0sNtBJdpAZUdiKw0ZAz9BqEw8R8CPpVy
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUk9Ik2EYf+kkdIkWO3Wxm3WJDpGH/kzqIBSU1qVDMGuNICZtRXoYYYjo
YNEhxII6BIF1Ucl1UCoFWXSR1YRIzLU2l9pmuu3b9/f9fj3Pu81e+J73z/Pv
9/s9X2tPb9fNPUKISAuZLv99Xzjs7+/eR5crocitYChwozN0NxAMhE/0cNjB
xgdpgZesSd5MaKbBLxYc9Q7dJuPAchzwSVIIRdqQaK5fypouP2rNRxN/Xd6r
bOi0StZo+NbglrDDJ+ov8i0lgfWNda4OhwukPz8QHsLWMS5m4qJdmITGNlVq
Pj4rHpFLHOvopmQ0qvNKnBTi9otrj6djnv3ieOdrAebhEG7C8vPqSFuBrnPw
QwwVodipjljRUKZQqmKM+TzL1M1VbidlV9/WSxOJdnFg/o9SQtPIKYsWNtlV
c1C7fPpSocJZelUynPy4DYOvLkZbzz3bRQjFwa0gvwlDn0md6k9RQVK6ruUC
FumaI2W25ybvTXCW1WBYn8hGulDOIuhNXndR25Uf1aqOAcTOPi2GBr/1HlFv
BNE2Keb9QtJGNpp5ntVW+la3YC2xJDYVU8PwAvF0WXu4WALTkTqjpr0yMija
ziOOj7lMAUu/JxJPKlH+CRSgXGq6qh26IEQ0OYyBMR7DnS/bRE4zd14aOJO5
KLyDe32HgzwonjE1Y+prFWCrMvpm6tW7iCOEB7Fh8eGTzVSoqZ4Flu2pH1BZ
s0cT818bBI3/VAlfGbJvstRU1NDq2bwsC995t3VIV8lmNqWX6kD/ONdiYUxK
ao6FvNIxWGwp/wFjZqHu
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk1IVFEUvhRBuyLcBG5chrSRolpKtFCKQmlhuFGcrIwJxzQqqEW1MKIW
QlhCCElZukjQoh8lrMhKXBRlY1JiTOLMmM7PG+/Pu/frnPdG6Tzeffec8513
vvPdW9Z4pub4BiFE22ZaahrOVcZiDedrt5JzNNp2sjkaaaqKno00R2J7GxlW
WnxRsBaAhXZgc05rHwpZqWCgDC2cLkD5gIa2ISpYaa8AOfyf7+BLkwVhJZDx
LMyzfJB19ORRtJ7JCgzFJz93/GLP6LVqCfP69ARGcbv9hIjMU8AhbTpTOeM8
bnzjPcZQXiaO7Fn8maXmLgcUtC+538Ep8XEUz2eQGExmCPvNcl8Z/PoBuJwn
2QnEl2fh+exYa7Q9NM2IpYI/2Zt4EX8KeIRUVhEfyeNQcuVN9dWRehXsw0hI
F6uLH+6/u3BT3FrRaYo7TzNgiUgB808GRpo2iivIOGQ5rEi+UKdU7HG1qBFb
iJxNM608pA2FRne3KO18cLH/WEcn3tq5IKaCfiZ/B+LHtR0dC33t2y7PBsrR
AfnMeBULDX37+yj0aGJwU+1YL58VcjBJhiWRGO+BMTqZ2yXu7hOGKZL51Fh9
we9YN3tepRiqI7ltOFoBM2j5U/+wrpXQA/fKkxpxrFvqq6gCXZ+WT12pzKuX
FFmG81k42nYdaKVUxe6p69kEa+EWuaTAwsmeSyWHKTm+sjyNvwjI84QGGcxh
e1SUGJwyxSZu/Zsa/t5v0lAypM2S+A5FyRwpm5PFI7HSZ4Bdq14FD6uKP/Ko
RLM2Rq4JK4M7rfzwEup/S6+4bQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNU01IVFEUPjWFLgoEiyKEslUEtSgkoU1FStGiMHXTxpmahqFUHCURgqyg
ggjamSBiFIRt2hj0g+IERWjUsj9rxLKYRnN8M+/vvvvu17nvvazLu+e+d+75
+b5zzqtNdDadXU1E3ZUsmuK9BzOZeN/JKv5o6ehOpzqSZ4529CRTyUx9QpvV
RFsgWp4WKjh9X8L39ONCarXwJDwlPTuw9PFvFQMpFTzfVoHpypUKD6nfXGVD
BFeeBSdKmMNDlNihBIcDS5e3B9tkzfcvRLVDLdnFn5zLdwIQQksbM4+ws71+
HVFqikOZK2ngfus8f53mt8c2ER2jC5OyzA760mYWoPsbiE68aWbGVD391gCs
COWVEaLsWF3bq9FnedpB5ZACO7oc/A7Qj1ltNzDcuKY/Au4K9i48Ly7kLcOx
jMLM/oqbg3ACfoJR+pbD0TkHlj+8wJEHQR6hNI6wer6UFtOea7u25bNrOUKp
oDr6iovzY3aJ6/ELoxP3CnAFa3zBPQF+j78f2XZrnq0WkjR8F+8QOOgazb/c
S/toPbKqq3EPncblJQ6oYaLsTb8mSoz1LOdx8VId9eHG3+74jOgwNWA6pzAe
o6vUOsR6M+yaUI+N9KdTwFxvuiFB56Dhi7ChgJmtIUwMdFHl1kMUbxbsV+J4
QRPN/O7b1Lqqorq66rhpL2p724VwkYP5FbRrYzutjQ0+yUCz1JylKQPiT+MH
9GgCk6zjVEIZcCRkSbgfganiZgKfMuychuJzYTRUz0BJKmWFyHl4hf/fDBoR
1WjKFY+rrQFDSV0erj07WNEf8AeKappd
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1IVFEUvripRVC0DiJwkxAEbmpRZAYphA2GjGBFMzRKi5TGLEYsiCFE
oSJ0URFSWBSGMkSLFklERDhh9p9FRlhOkpo1P/f93Xu/zrlv7F3eu+edn++c
75yzKd7R2FohhOhcTZ/G2OmaZDKWOrCOfpraO4+1tSeO1refTLQlktvi7Lah
/CoEdJR2NOjJlwxKgA8UPUX/GgqeAzguy35gneAZsmlDAiDhjEP6rPYD2Lvs
BeMVwpsOQXMmQ/4WKnT5ipEXz+5wqCyVyOwgNHgS5psjxGbSLbPKUKbAhqi6
l6t6t6dFfzP+QlJA3qaks+Th1mj/vqEukWDEsBbKWAwgGfX7I9wdPH+pm/JT
GBUSaIaszr4nEQ/OpFuGTLkum0sHPn4xxcLnscNnScjBMjbMKnBxYx5mTqJj
2ILRex3GhNglCUmeT3JFBvv9+t083y63EIXFcmW28pm5vtkr/SE348t8roBl
G/Rz/Pbzi9AzDyklFaWWCtApzJLl1PSh0Zqu/Q1RJhcwbDHtIHYk2SzEjrqJ
XnFB7BY7W/NhkiwuZ7ojQuw5Xt0nKmu3VPVMilmaKheRR8XWSYGng/Gexw1C
3KxsyRBtj63wRL2I3seutfcir8TAmvXZsR/cE+4P9eUacLUpcnB4JBUVEbhT
MK4KqVPlb4FPwAm1t2rg4wRP1JT5YSrzxl+U4Aae2/jhi/KNi5VnIedRTYqm
WlyonQ57pBRzlzRDkm1q2pS87be2q+K7WvnQqjxq/X8t7QiV47FCrUyF99CE
w5X88Q0ctbKN+g8pNP4BHHO3TQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uj2IE1EQfliIhYVgYaOFjYgKNhYigkRE0EpOBMUqwVxUJEpOPEQsFBS0
UBFsT64RLNRCUFCwumsstNCES6FyuXhczK6b20129/1+zrxNfCFvZ+bNfDPz
zeysXJ2a3iCEmNlE11R5ttRolG+e3kLKmfrMpVq9euFE/Xq1Vm0crLDb9vFf
KegRUuTOAc5qOIyADNAWqXFOsgzlINn+/+SwgDGSntBEG1mG2D9IGJdDycJt
MArIAqcK1X+G9KNc+Dx/2Rt1X6tAO6kIFNqkHPpIIPiFUUriKhIKc5n3jR2e
iPvoABFBaPRgqFCXQlmo4OShOzsw6Lz2rqmhYoYk9KgDOxfuOzKHPhIKyv0z
uGED9UPh4hffkrSqoWMKQ5EMRuVjobv87bk4DskNWG/6ST554sVXrT1CbB03
T/hhQuiwCol5L8Teu/vFGwJnFgzH657vGr0rB8ob74kuKU6z+4Qgf44uzN7C
47+eqSKnyTL+hKMPp25jZa3FGJIvoATVzNip+W7bte9Ufkgc2yFVH+wSL3g4
sG+Xzh6+0ZYrtuURM8n+01wzncrD+WVPyliXD4TAHzJEWCxtjiiLdj0aDpGj
O0mNQwn843nxktvKv9ItudI4KhCyhWdCPF0aqNRRT7FfljDDJ8cZ0N997pjn
YE0tUiSRRmuGdWY+XU1+d2nRIoKPtadE8Zgm60RppaQyLPOliu4LjiIGoT11
RvPuFoE81ny9TcrQV0xAJvdLKyeBiqftxgmc+wfrK9iW
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UktIVGEUPrSqNhbUxqQHMjSLHtCDygxqEwhBabiqFmqTPUxtTCTEjYsM
N9GiICrSKQmpoE04lWQxiwFFxBzNlMomRyV1dJ73v97H1zl3rv5w//vd+53H
dx67KuvKrqwjoob1fJVVNJ3y+yvunN/EH+W1Ddeqa32XS2pv+6p9/qOVYlbg
PhackwK0HDIUYJoONLN8sYHO0GCobPmzAhtrRyzmoJTgCPuZUOJhwxQrYwUG
hwrHsMghNF2HEzA1YXMUzKKvvaP5WxL456QRt2VzbgBRwTur8guf9QsKa5LS
SeqbTnT90AK3SI6SIDbSsFiFsQWjsJJofEsFL2hEjBXiBtLsl+pspT6dkzQP
YsJDwTfJOCvX9QxLQWHTSMDGTDQDDC3R1USP2w9DEnZyW/TkJ01H8kNRlbfL
0ZiTMnzCfA1bBReAp4cu5k13uzXIa4KLm1UZZCOx4Xd/Ado7L17cw+wMdsfU
+3OHN5fUtN7tTZ/EHu9oxHX9qoEeX6ARosBUz0e0Ep2mnJ+NhzbC5Pm9r7Su
xdM3H8rn+sWFO6osPGqsv99RT0UGQhhjxjuIuJAGloaoF7Qh1M5TgpVHW4n2
f+HhZHUYMyHvc8DjzG4JLXQ8GM0NQfraHUXbVGK5OPgZL/0Hirf/6l8QklvG
JGomcS9w7Enb9bMbyUuXHkBqk9ItROI2XpXSmW07DrKSIzfH1R9IRNOSO5HB
/PdxohtEsRYrgZ+ry6SnUxksmmNT0XB5KQ3EFJSjxXKKdDsL2Us9KwqSchna
2iKuOKzwVk4Kb6tL8e6YTlmKGYaGm9N2dsRehRLAUP8BM/uT0g==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1IVFEUPrRq2TIogmjVoo0E9repNtqmsARdGGippDCRBhJlixJSioTE
hZJgP7QwKkqLyIySjLA0hhQaNQ2mZhpHx3nz5v3c9+59X+e+mek97uWe/+98
5+xsOF/VtImI2jfzVVXfcbitrf7SyS0sVEfazzVHGs9WRi42Nje27WvQbtuL
R8pgDb4IAM8FJP8qkLBhBbYALFcggCOSgA+4/PaE5Gce0oTDKv3NwLahEDhs
Ln2CE/GtLMn+Bb3j6CKBkhJZIAEsCZ1nAqkbNIBJhwUNAMY8pcr62B+zC/fv
UV/vDghPKaGAY/sJ/eMb31wLYjU6SIpyRVgcd7B6fhqIGmpqYwXLVOuUsDhY
Ar25+pwxziwilUGi2fO0gRFD3q3BmBZiv7EoF0z9lMyE7hdpzGV+5pkHWEkz
geWvrMxwQwEsJfBC+04CfzlZ19PI/95ZvI1E2eKrR2vfkTZq926rgAHJEY5k
48jwaO/0CYz/ej8eo9buiZHZK2GYDWQJNXV/Tt2Ms0hUfhwXiNEo2+eKc7Q0
U/E59NxNR7fi2YF11irGmWbf3Lu8mWdeY3XXeKiDu+pTvqadoVArR2TB03xL
NNY9bN75osej23vAx0iGKZ+0HKEPvR35In7OO3DGcrGciWeHV5oeHur6YRSa
U+Fg07AvvxyKXR8FXrecnkqEbOoTIAd7dZCosupx0x66xQktzSUPL8eTypmp
zk/l1NP/sXMyuw6YCPxwW5QOlxgZisbno86GF1ZhLXMvbE1NWEBjsDwTcSPp
q4JPEDInBBKuWxiaHrhbtAD5wNNaXnAZaLuroXj6Km1rYT8Zie7b/weRDrTt

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UktIlFEUPgRBhZGELYooI2zTwq2LiKbaKG7SopWBkkoQU6hkUmEPhBbV
KjBKaCGZQRSZYJioCYoPpsgs7IEZMzLj1IwzOv/7v/frnH+sC/fnP897vu98
++ouVDVsIKLmTfypqm0NNTXVtlUXsnEq3HyuMVx/tjzcUt9Y31RWJ2m71y8U
5Cg4tg8fWAUMcXhi5CRii+lAG5LpWxn2e45EAf1RKi0HTmC6gVsHLV10m5wO
K8XGGwOu5UuuB1shC8RdYKmmOKFhrVroQ1ypBGAi6/Fn5RNNgE5jHkntcj+p
4Uo5y9hOdIvnLv19g/txQ9uKaon42AI6erCFrrVXCgzN7z1Gvi4LqxNv6TxK
0QPajCiXfoWRh96PiV8LiERrCvcKH9KpS7DxTY2WTFOGwb9+RFfJ+ynpX/ha
fDPLGGWESzF8ri3qyJOWDRoaeO9xnxkMUS+oCHd1DtoMRgl4enpiDmPHj41d
OUIPMYkU/gwGzyUQiyF65uL1Q0Qdt8cR1lZuONIbz4FX4M6uxWanWjeOUHEB
7aGXiseMvwqmhX6nHHxYCh3mQhqgCvZW/ujU2tTI2Eng5AuqBk/0YH+I2oH5
PpJVxJjX9CVwMyqhFlqkbdPs9sdHBLzCQM7xK4i6qCd0Ez1lNBdgswI+VdK8
9wRbha4RmmoYLu/H+H1Zu15j0haAA3R51/OhNNCMYdeAI2SaoqJIW+NO7Chg
cwVIi0z+HcdJZJOD1P1NyJUQLDsff8aDshTZzxpyBbDh/y+TP99goX7n0Kpy
jJRWOr92zxOYmDQD/cJ21R1Wag7rr+r8zkTkbHszwZTqL90QlMA=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJwtUkloU1EUvboS3LjKwgldda2CuC24sCoOVTeCkjbGtpvUpopKxAmkUisI
Ba1VUCwqCCJFKwqWUCuVtgFxAMUpiUljo635yR/yx3e87/38zxv+P+/ed865
d317d+vRpUTUu4yn1raTzclk2+l9K/jjQKK3qyMRP9KSOB7viCe3tMtjqxtD
aIAIABg2UOc9LBfqMRCYvAhPhw8Hnl8DNAewYUlYxvCejz0LfFEVLp+C5whG
OA0HqEd4I55cLZj8puXWDUNRc7CgkDq+ZB5mNUul8xU2//VHFdAli3W4mC0z
LcPhCfM3nCU92BNi0wZmcDm8qGRgaJooxuTvTrzBXEz+HOXBGhyX6HoXEQZK
iNH5PFhJcdZmHiZ0ekqU4nOfft3KEM7hbQHBDFsiMOtVaO4JVupFYNXgthMZ
IAtMssq6wRkOUZSGC/mPDwYW4Vm6/Q/CFYHkbxI6saN7NMfiIlekV7YyzIO9
iDxwJzIWHO7H5kckHeLhKSujupMrvEdx50ba3km4wFD9jwjlcVrHwVTkNl3l
om1Qcb40UuHjVXxOQBaeaPmL/VF5m89Ge7xoC0hvVcguOttD15o+7A3952ih
TX5DE22ie5eGcKovAkrjuSyQgCsT/67hGK0BczrIuVKq6H4glwClckrS1/Bu
nHOPtLxkEWaY2cYZYoOqFnYz1ExrJ7gxGnfW/vKcC3X33Uc/189tkJFlATcQ
d0VmavAxbnJvsW4/7YQqEWiyNdR2WHERQvZZoIrMdTfTP4PamC61e6qPWH/Z
Cbg18Epa/P21WanoQMNxNMg2eg7Cgu39BxlxoVc=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUk1oE0EUHiyIiKKnHkQPvViEoh7Fm1rUgl4qBelFGkyDl7RNDSJSPEgP
XgR78yZFkAqKrQgFLbVawUYRRKGhJKQY+0NDN9n87M7Ozsznm9kNOrCzM/N+
vu9973UlRvqH9zDGxvfR1j9051wmM3T32mG6DKTHb6XSyZt96dvJVDJzJmHc
jsYfFACtIWGWgqZ7GASAoFctAmuHixD/lrTOUse2FuRmqK3F/shVW4u5NC4t
OSgXtdIeYSg4HPCs78NXil3/+HS5QO8CMTzlliCXY4nzZ/cXRzwX7URoECkE
z4jzbMfxbG/XfDvEYJHNd/Fg4h0rTFXwdbH5H13jkB/rO8KSM3x+bU7IkLIS
hi9s2Qps8PF0fsEhz7cEZbjomFAdv5ZSzzcjBruBFG0dfO0t5O4v9sBE+S38
cF2SKhIBWubusavoKKLW2Kp4n7G+Ae6Rnkrw7ebUASrhxuvyrpxhk5OkhXCF
4eHp8gYYG+0eY6vI06kyCH/ZN0ob1MDJsUO9Kyerf/A+ZN1ZtUZKq5YFzL6Z
dfDiEbaB7xf2XuncMU0IlenT74kWJ1pVaqFslFjnqoMVq7+MKqmaIB81jLKL
LKrMJ8y8881KKHLApxI7yKwtFHWFQlRjiIHKy9M9VAub+2JJmpmp095Cbf2J
eT8RRXHTOHiKONFgNbZQYtOnGPOGJQVJzgXh89BkIH2r2Pl5+YPtuUCktghq
Ogag3Y2OqkmNU3EdkfC+HawwnhgPgkeDY56loWZM3MwKbWgaupRIiCh1IKz3
X11fssU=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1Ul1IVEEUHoSopwiiF0soqKdoX3qJojDqJWkzjAIfCtzalhA0dCN8E8x6
C0LoyX4s9qHwByNIwoigljYE8yHJrCg213J1V9c792dm7nydmXsdmHvvfPd8
55zvm7Mn1dlytY4x1r2FHi1tN493dbX1nNtGh/Md3dcyHekrpzqy6Uy661DK
hO2KNwBNGwG0eQsEIjRnGWoLAq4PDmVASYCrtWcDXURLr7cqooYlUJgP3zcJ
dfQvCPBrmMhcECIJUJbhURng09eh2+3fMVQt4FtA5xBCEi4EnOWAmjt298IT
YEqCKplmEEZJHdbwLjMxA75Ui4AI95XC8OaLz52fq1hbWuXaKgtsyXUquHK5
FaUqin51EfBi1coGCUzfGkCZPisWCqkdya0LlHxkZDLXcL/mueu2Do9I2rQ8
W+z7d2m2aWB07rexTsUCIYUCZx9Y4sDuZD3qrGgskzvxmmv88aq5MJF9v4Ol
J9+GM8axEIp88dCYOnH4Ya2Y3584yFg+Ce+zJt+l5Q02lcf9j7Nfcke2m6tb
XNO2ILlTYXvZKDD/4np+Z10vYydNSSW4TzLHe+iWx/TrO739RGLN1ZVIPOVc
Q/umxLN7L8fY1mT9n0ePF5zYTYF+8Adnb1Amdrrz6DzeREMC3yVSQPx9UyzF
xrODnBjWmVDYnNPOCgkcOTPMS0WyGZ5xE7bRILcAWUENSzBuW+sDRLY9DSrk
j/uX0HJZIVQb0wIyrmBvWmtjkx0k84cr+3IQj7CMzXVtQWzAygy2Y6M8SBNE
1yB0NDah1SQkRXpGunT/A6dvtQk=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxNUltIVFEU3URU9BFB0Ef40/O/SCiiQEijfgzNrz5MaRKLphiFiKIICgqs
L4MGhB4oFQQV+WE4WArRR4SgiciM9PKVzcOZuc6ce+aes9r73qt04N7z2Pus
vdbaZ3vrpYZza4ioYwP/Glqu1MRiLVcbN/OmKdrR3haNnD0e7Yy0RWIHWiWt
KvwqkKEMoHkZ7KDgejx5umhdnuSUE6ABK0Ee1gQbw1fGPFchHDZItcu80PI5
i8BsHihzoCAZnocSMFzhVNWLY5HExDhSfJ5fxQBGinAmhg6eH7rDqUKqBGOt
YPR+p+S1j/EL+4hu+5y4nNREMf378y96TwOHt92n3S8CJqLCiJJTNJN+sunR
RaIb1GWyoUgDVlcNetYziqNNnbtqD10vhyqssEkO7v2E3MKJUTyO196dm/Jj
QQaX7u5jRUuouF+mFoNjH8+Bl3mK1A+MP3zOZ+nCsm8Xk4FhJSr7LoO+HZeB
5TfzN5HXoeMKzFNPf8AgVY0szP1tXr8/8c3NiUQRgAIbNs3EnFfoRjPVAV9n
dLkCY2Ac/ExlkygLlkvtLXSL/XACrhlkljBZmEeC7e+nuvp1NCx4WpCt1pox
ucACXoI2EmXzLMEUgyYrpAckbfbMvS6i0UB/ZbVL9U6uv5MaiXqomgtb3zif
Q66JTm85QmsJVEOvofH/GHhwkuJ8aStLAHfVbxQ75FvR9nYnUYb2/Jlk21yX
A7pkEHZaJ3NIjlnlucKjshLw4BXEecYow5NHZ5QtyftjwwXUcVYEhw+ZlWko
679oaOUpKxtXpP0Dfp+tFw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UktIVFEY/nHVJmrZQoNaJBQEBYFB9NqV4MJoUwQqPqjASKMHLSJwahXU
wmzRA6lA3doiqCQkelNE2hSp01STNY6j87iv87hf/3/u1GXmnnPP95/v+x/f
uo4Trd11RNS/gl+t7Wf29PW1nzuwmj8O9vYf7ent6tzXe6qrp6uvqUPC6mt/
D5GJIvATQxblflbeMZ8FMIJoJBA/Og78WAIcUuV11oZ8IJcdD8f6shrr4r/G
KoIJXTj8UAh06PE+b1CFXdLQjl0y8GFr2wu3MePxl/FrYBRrZg3w6OXay2Sv
/WKM86kwGhuEAVCsnN3YSPSTmp9w/iHKMdNzcVIFkEJjsaGtvm2ByzBYFMZA
FGMMfW+jqeL7iex4Cd4Pp5V3V5ic6xnnzefrKPFig3cVWypzgayq1dj53SPZ
gTsjaSA3PRjml90laYGew2zng9FbqQng/qruNW+xkDRGccQ3DOygyeGrUGkM
bthPWU5dsmH0N4h2XcTUc2Dp8U46uZ0Abq1SFnlPE0ZTVGj59BA3my81zaDC
oGMNMfxsiHWv4MjdzOExopWpqnTbSkKauM1+em/L8e5jw2wMmk/6qWCWZaCR
n78BPH2NzdSQ+cPtj8oyg3krDAEy6Zy/OL2Vtn1MJgubzMOy6myON0R19OYL
3BCVMQhCcLpThejeqwLbi1BI9MQfWmEZVVbNvpjccpoxGbeBJzNiS3BKtoj5
DK0n+lDTYFgphIktdBRtKh+a+28SwIPxHItYbvHfaRAYlExstVgOZaOQ4+yW
rJLI2IjRY+scr2VkinvM4p74zf4FHCa3KQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxFUk1I1EEUf3Tp4xCdokOHCjt4ECEw6hBkUNCtFCnMCJc2rcMma2GB1im6
aSV16IuioOhUFAWhpqaogVQbZRZa7LJtmu2u+/3/mPn13sxqAzO8efPe7/3m
vd/mwOm6EyuIqH0VH3XNHbXhcPP5+nV8aQi1n2wJBY/vD50JtgTDOwIStrG8
ASj4JbhswIEP+FkN8bCt2LMoBlQRdhUkyitbkqIwmnmMWbwF0rGikmCDBHha
rAjvCZXFXB7/l/9GK7+AblA/7WvEgHUiA07hysiWPhG9fOFV0ysg5hlyOXl0
E2lUrKWOq/W600JlFGAKIQhQ6yZazX8KB24zyVJJI2O4vvulNKgStyYxcK73
QyrLZaSUguq+gmhyGndzKM7E26gMloXycwZ1Fn8UMj2dB3qFi13K0PUQX0gA
3y5VoLoEzeGedEV/zDO8YOfwJUa0BQ/Rz455m5bnfzqTOvXo9U6aH0Fkglkj
CdfDsHYObnXcsWPxm6catw/S373oIzwrl4w2RTmsqlaGdwjJJ62VwBHbaBB1
0UjPekpUEV1buZuGicbSHnzu23sO38U522ioa/TwZZpBDeUjBlJL4ll+v09N
a2iKnhrvuLYDnsOD6aGLDW38voHufbUsXFfGIxooRtvv7EGwpo8+8wxkDoYJ
N05wf2IcOHoDtDxxz5cwPn4viiCM8gq2I9JwVTAC8OPKZVL0I4N8SoTgFS26
eZW78x3XbZr0GAVXLymz9Ny9gMEFKzOXv+Ab5CXZiTKnluk4tqxXVrODYjn0
HwJbls8=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9kr9rU1EUxy+C0NFF6OCg/gH+2Lo4VEQsOJRKFydTG4MWoiaiOBRR6KTg
1EJx6FQDpYpQXcwglYLSCkqtRqkY0yDNa0L70uT9uD+/nnvfMzfk3ftOzvnm
c873Hhu7OXLtAGOs2EePkcy9wUIhc//SIXoZzRev5/LZ8aH8nWwuWxgYs2lH
0i+AABxuKXS0AEQgIo0gQgwYG7VPSGiZpIHHFIzdURqdxoAtJZKzC/EuWgGd
IzqvYDtAZFMTsS/cCnB692T2RyCtegzNQyAef49mJHy0wffiKkQK5oTNzMuN
HQvr6cVpi01FVAqr/KKBTeqlgoq/v3JhQCd1mj4c7MMzUiCpW2V2YnD4at0g
THuRqFctFRYuvhoFO/l3N2lXIcIO8W87gC5wnJ1Glfi0UTAcQRzDN21KbHfm
z7Em/WJJIO0fv020CXoXt8sNfINSoOkIkq5dRhBu2Xn5sw+LnmX86ubHo+US
O/to1Tmyxtjj4DPwBNq4ztdW2S/aBVph5U8GWG7243mgnDN7bHi2oYSE+vmu
PPcUpUV8Ig23DluHIQzq0zemwkmQ4x4FfJm49MZ22l1/fWpifWOq3L9E0Imj
v8Fa0Juef6aPlT92G75t0HpJm9n/zjF5ZSZ39Lzn1ZxVoasiHHdHGnfnJg4u
UaayFJt28tqZZATkwtCDUsLW7XnQ23lU67jLZdJYaDllcoJQLhZLUlT/U3Ri
tHSuGcUhVUggKqHtLW5r7TBFemuJ1Zj06tI03JxD/AP7n9J7
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7716854923581567`*^9, 3.7716858934840307`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"f43a373b-9f88-4342-8f1d-9065b12bbb26"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model 4: depth=4, coupling=4, activation=Ramp", "Subsubsection",
 CellChangeTimes->{{3.7716844872459908`*^9, 3.771684502719043*^9}, {
  3.7716878775706234`*^9, 
  3.771687880070662*^9}},ExpressionUUID->"3cb124fb-4ded-4630-b484-\
f47f817c734f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trial4", "=", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\<D:\\\\train\\\\TrainedDistributionMNIST0-8_depth4_coupling4_\
nonlinRamp\\\\traininglog.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.771684505330644*^9, 3.7716845181934547`*^9}, {
  3.7716846817117643`*^9, 3.7716846833522525`*^9}, {3.7716870683253183`*^9, 
  3.771687088262021*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"b6daf586-6c1b-46ca-a162-e129777ebc52"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 40, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "ProgressFraction"} -> 1, {All, "Round"} -> 
           1, {All, "Batch"} -> 1, {All, "ExamplesProcessed"} -> 
           1, {All, "ExamplesPerSecond"} -> 1, {All, "LearningRate"} -> 
           1, {All, "TimeElapsed"} -> 1, {All, "TimeRemaining"} -> 
           1, {All, "CurrentLoss"} -> 1, {All, "RoundLoss"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "ProgressFraction" -> TypeSystem`PackageScope`AtomShape[60], 
              "Round" -> TypeSystem`PackageScope`AtomShape[34], "Batch" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesProcessed" -> 
              TypeSystem`PackageScope`AtomShape[34], "ExamplesPerSecond" -> 
              TypeSystem`PackageScope`AtomShape[60], "LearningRate" -> 
              TypeSystem`PackageScope`AtomShape[60], "TimeElapsed" -> 
              TypeSystem`PackageScope`AtomShape[34], "TimeRemaining" -> 
              TypeSystem`PackageScope`AtomShape[60], "CurrentLoss" -> 
              TypeSystem`PackageScope`AtomShape[60], "RoundLoss" -> 
              TypeSystem`PackageScope`AtomShape[60]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1869249948], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "ProgressFraction", "Round", "Batch", "ExamplesProcessed", 
            "ExamplesPerSecond", "LearningRate", "TimeElapsed", 
            "TimeRemaining", "CurrentLoss", "RoundLoss"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real]}], 40], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1869249948]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 21, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ProgressFraction\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "ProgressFraction"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "ProgressFraction"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Round\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Round\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "Round"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "Round"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Batch\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Batch\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "Batch"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "Batch"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesProcessed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "ExamplesProcessed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "ExamplesProcessed"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ExamplesPerSecond\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "ExamplesPerSecond"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "ExamplesPerSecond"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LearningRate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "LearningRate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "LearningRate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeElapsed\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "TimeElapsed"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "TimeElapsed"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRemaining\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "TimeRemaining"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "TimeRemaining"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"CurrentLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "CurrentLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "CurrentLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RoundLoss\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1446592648][{All, "RoundLoss"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[All, "RoundLoss"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.025"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["54080"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["596.916"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000903126"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["88"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3447.83"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.11203"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8.11203"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[1, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["108160"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["597.075"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000982858"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["179"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3410.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.25794"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6.25794"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[2, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.075"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["162240"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["593.011"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000996862"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["270"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3335.72"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.75826"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.75826"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[3, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["216320"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["593.41"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999422"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["362"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3255.36"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.26998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5.26998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[4, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.125"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["270400"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["601.647"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999893"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["454"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3175.33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.85153"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.85153"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[5, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["324480"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["599.56"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.00099998"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["544"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3084.65"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.82661"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.82661"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[6, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.175"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["378560"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["582.954"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999996"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["659"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3104.66"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.66356"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.66356"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[7, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["432640"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["592.002"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.000999999"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["750"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2999.32"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.44538"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.44538"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[8, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.225"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["486720"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["589.801"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["840"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2894.41"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.34333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.34333"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[9, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["540800"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["598.279"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["931"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2792.13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3967"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.3967"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[10, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.275"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["594880"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["603.498"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1021"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2692.84"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.24149"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.24149"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[11, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["648960"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["606.752"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1112"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2593.87"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.21931"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.21931"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[12, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.325"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["703040"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["616.653"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1223"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2540.78"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.5234"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.5234"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[13, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.35"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["757120"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["611.536"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1314"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2439.42"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.24437"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.24437"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[14, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.375"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["811200"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["605.931"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1403"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2338.93"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.15277"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.15277"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[15, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["865280"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["611.101"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1493"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2239.01"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.12539"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.12539"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[16, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.425"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["919360"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["608.907"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1582"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2140.45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.13895"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.13895"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[17, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["973440"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["611.613"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1672"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2043.85"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.10809"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.10809"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[18, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.475"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1027520"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["610.836"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1762"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1947.12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.09447"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.09447"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[19, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["ProgressFraction"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["Round"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["Batch"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1081600"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesProcessed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["610.849"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["ExamplesPerSecond"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.001"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["LearningRate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1865"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["TimeElapsed"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1865.11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["TimeRemaining"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0587"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["CurrentLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.0587"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
                  GeneralUtilities`Slice[20, 
                   Key["RoundLoss"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 (-20), {1, 40 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 40 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    40, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 40 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    40 20, {1, 40 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1446592648},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1446592648},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1446592648},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1446592648},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1446592648},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1446592648][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1446592648]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1446592648][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1377., {405.5, 414.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.771687089378914*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"0ab6ade8-6526-407c-a755-535a7111412b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model", "Subsubsubsection",
 CellChangeTimes->{{3.771685027548139*^9, 
  3.771685028084753*^9}},ExpressionUUID->"a6f9b2d4-5035-42f1-bdb2-\
ae8aaf4942ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ldtrial4", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<D:\\\\train\\\\TrainedDistributionMNIST0-8_depth4_coupling4_\
nonlinRamp\\\\model.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716851338779716`*^9, 3.771685136027275*^9}, {
  3.7716871216316457`*^9, 3.771687146658925*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"33811001-0b25-4755-98c5-befe07c67c9c"],

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<Sampler\>\""}], 
    "\[RightDoubleBracket]"}], ",", "\"\<MXNetNodeGraph\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771713246067606*^9, 3.7717133089612827`*^9}, {
  3.771713342227339*^9, 3.7717133428148174`*^9}, {3.7717134649250717`*^9, 
  3.7717134737973537`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e12ee345-1374-4d5a-86a7-23bc39b43c9c"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      ".Inputs.checker_b", ".Inputs.Input", ".Inputs.checker_w", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_4net_BBcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_4net_WWcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_4net_Bcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_4net_Wcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_3net_BBcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_3net_WWcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_3net_Bcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_3net_Wcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_2net_BBcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_2net_WWcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_2net_Bcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_2net_Wcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_1net_BBcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_1net_WWcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_1net_Bcore_net.Nodes.plus_f$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.thread_3$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.thread_0$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.Nodes.\
1$0", ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.Nodes.\
1$0", ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.Nodes.\
1$0", ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases", ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.3$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$1", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.thread_2$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.subtract$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$1", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.thread_1$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$1", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.thread_4$0", 
       ".Nodes.coupling_1net_Wcore_net.Nodes.plus_f$0", 
       ".Outputs.X_out"}, {CompressedData["
1:eJwt2HcYVvMfx+Ge9k57aO+9FREVEWVlFpEGEWXviCibsmeIqIgoexYRFRFl
zyLyq4go4/f5XM99Xd1e79P5nj/O8fzh0mzUxKETSpYoUeKB+Ee2EEqXKO4y
dhnXZd0vS4VQTstrqkiVUEkra6pK9VBNd9JUg9qhptbS1CDU0bpaT+tr2pmG
NKKx92rs3ZrYTZxvSjOaO9+cFrT0TCu7le/S2s6WCm3stnZb1+3cb0fH0F47
aOpE19BZu2jqRs/QXXto2oVdQy/tralv2E376O66h6Y92Yt+9Pde/b3bAHuA
83uzDwOdH8i+7OeZQfYg32V/O5u/vwPswfZg10PcH8LB4UA9SNMhHBYO1aGa
DueocIQeqelojgnDdLimkeFYHaHH6fGaTmAUoxnjvcZ4t7H2WOdP5CTGOT+O
kznFM+Pt8b7LqXY2f3+n2RPsCa4nuj+RM8Ppeoamszg3nK3naDqPC8P5eoGm
i7gkXKyTNE0Jl+pkvUwv13QFVzKVad5rmne7yr7K+au5hmudv5bruN4zN9g3
+C432tn8/d1kT7enu57h/gxuDTfrLZpu485wu96h6S7uDXfrPZru44EwU+/X
NDs8qLP0IX1Y0yM8yhzmeq+53m2ePc/5x3ic+c7P5wme9MwCe4Hv8pSdzd/f
0/ZCe6HrRe4v4rnwjD6r6XleCi/oi5pe5rXwir6q6XXeCIt1iaZl4U1dqm/p
25re4V2Ws8J7rfBuK+2Vzr/H+6xyfhUf8KFnVturfZeP7Gz+/j6219hrXK91
fy2fhU/0U02f81X4Qr/U9DXfhW/0W03f80NYp+s1bQw/6gb9SX/W9Av/YxOb
vddm77bF3uL8r/zGVue38jt/eGabvc13+dPO5u/vL3u7vd31Dvd38G/4W//R
9B8lC8V/AdmCplKUDaW1jKZyVAzltYKmaqGSVtYqWlXTTlSnBjULxffK5rvV
8ne1nK9NHeo6X9euR33PNLCz+V12trP5CRrajQrF3ch1Y/cb281CE22qqTmt
Qgttqak17UIbbaupPZ1CB+2oqXvorF20q3bT1IOe7EIv79XLu/W2ezu/K7vR
x/k+7M4enulr9/Vd9rSz+fvby+5XKO5+rvu739/eJwzQvTUNZFDYV/fTtD9D
wgE6WNOBHBIO0oM1HREO1aF6mB6u6UiO4miGea9h3m24Pdz5YziWEc6P4DiO
98xIe6TvcoKdjT8lRtmjC8U92vUY98fYJ4WxeqKmcYwPJ+spmk5lYjhNJ2g6
nbPCGXqmpvPD2XqOnqvnabqAC7mIi73Xxd5tkj3J+Uu4lMnOT+YyLvfMFHuK
73KFnc3f35X21EJxT3U9zf1p9jXhKr1a07XcEK7T6zXdyIxwk07XdDO3hVv0
Vk13h9v1Dr1T79J0D/dyHzO910zvdr99v/MP8CCznJ/FQzzsmdn2bN/lETsb
f0o8as8pFPcc13Pdn2s/HubpY5rmsyA8oU9qeopF4WldqOkZng/P6nOaXgkv
6Iv6kr6s6VVe43UWe6/F3m2JvcT5N3iTpc4v5S3e9swye5nv8o6dzd/fu/by
QnEvd73C/RX2+2GlvqdpFavDB/qhpo9YGz7WNZo+4fPwqX6m6ZvwhX6pX+nX
mr7lO75nnfda593W2+ud/4Ef2eD8Bn7iZ89stDf6Lr/Y2UL+t5q9qVDcm1xv
dn+z/VvYor9q2sq28Lv+oelPdoS/dLumv/kv/KP/aiqd/7OrZLEFLamlNJWh
LOUoX7L4Xtl8twr+roLzFalEZecr21Wo6plqdja/y052Nn9/1e0aJYu7huua
7te064RaWltTXRqEelpf0840Dg21kaYmNA9NtZmmNqGFttRW2lpTW9rRng7e
q4N362h3dL4TnenifBe60s0z3e3uvksPuwc9w/8Bl4tq1w==
       "], Null}, {EdgeStyle -> {
         GrayLevel[0.6]}, FormatType -> TraditionalForm, GraphLayout -> 
       "RadialDrawing", 
       Properties -> {
        ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{110, 0, 0}, {141, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{102, 0, 0}, {73, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{483, 0, 0}, {458, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{332, 0, 0}, {333, 0, 0}, {334, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{285, 0, 0}, {286, 0, 0}, {287, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{362, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{122, 0, 0}, {123, 0, 0}, {124, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{107, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{179, 0, 0}, {204, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{1, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{422, 0, 0}, {423, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{306, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{320, 0, 0}, {351, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{241, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{145, 0, 0}, {146, 0, 0}, {147, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{475, 0, 0}, {476, 0, 0}, {477, 0, 0}, {478, 
            0, 0}, {479, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{308, 0, 0}, {283, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{121, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{117, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{416, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{75, 0, 0}, {106, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{425, 0, 0}, {426, 0, 0}, {427, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{346, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{165, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{429, 0, 0}, {430, 0, 0}, {431, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{401, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{367, 0, 0}, {368, 0, 0}, {369, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{521, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{352, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{209, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{524, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{4, 0, 0}, {29, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{203, 0, 0}, {178, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{96, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{498, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{171, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{148, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{43, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{253, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{212, 0, 0}, {213, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{293, 0, 0}, {294, 0, 0}, {295, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{467, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{83, 0, 0}, {84, 0, 0}, {85, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{317, 0, 0}, {318, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{345, 0, 0}, {350, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{65, 0, 0}, {70, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], "inputs" -> {{33, 0, 0}},
            "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{52, 0, 0}, {53, 0, 0}, {54, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{201, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{433, 0, 0}, {434, 0, 0}, {435, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{144, 0, 0}, {169, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{16, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{180, 0, 0}, {181, 0, 0}, {182, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{262, 0, 0}, {263, 0, 0}, {264, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{510, 0, 0}, {511, 0, 0}, {512, 0, 0}, {513, 
            0, 0}, {514, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{107, 0, 0}, {108, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{66, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{79, 0, 0}, {80, 0, 0}, {81, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{537, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{389, 0, 0}, {414, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{425, 0, 0}, {456, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{152, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{206, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{370, 0, 0}, {371, 0, 0}, {372, 0, 0}, {373, 
            0, 0}, {374, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{208, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{296, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{320, 0, 0}, {321, 0, 0}, {322, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{5, 0, 0}, {36, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{104, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{494, 0, 0}, {519, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{184, 0, 0}, {185, 0, 0}, {186, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{451, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{258, 0, 0}, {259, 0, 0}, {260, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{247, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{201, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{359, 0, 0}, {360, 0, 0}, {361, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{377, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{136, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{311, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{166, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{460, 0, 0}, {491, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{48, 0, 0}, {49, 0, 0}, {50, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{125, 0, 0}, {126, 0, 0}, {127, 0, 0}, {128, 
            0, 0}, {129, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{387, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{135, 0, 0}, {140, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{487, 0, 0}, {458, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{207, 0, 0}, {178, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{327, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{132, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{51, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{300, 0, 0}, {301, 0, 0}, {302, 0, 0}, {303, 
            0, 0}, {304, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{447, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{9, 0, 0}, {10, 0, 0}, {11, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{153, 0, 0}, {154, 0, 0}, {155, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{376, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{552, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{95, 0, 0}}, 
           "op" -> "tanh"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{32, 0, 0}, {3, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{271, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{558, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{307, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{156, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{250, 0, 0}, {281, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{436, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{40, 0, 0}, {41, 0, 0}, {42, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{516, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{149, 0, 0}, {150, 0, 0}, {151, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{355, 0, 0}, {386, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{453, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{118, 0, 0}, {119, 0, 0}, {120, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{31, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{183, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{142, 0, 0}, {143, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{279, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{506, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{222, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{459, 0, 0}, {484, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{75, 0, 0}, {76, 0, 0}, {77, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{62, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{139, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{100, 0, 0}, {105, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{110, 0, 0}, {111, 0, 0}, {112, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{236, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{61, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{90, 0, 0}, {91, 0, 0}, {92, 0, 0}, {93, 0, 
            0}, {94, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{486, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{412, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{60, 0, 0}}, 
           "op" -> "tanh"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{157, 0, 0}, {158, 0, 0}, {159, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{482, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{480, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{227, 0, 0}, {228, 0, 0}, {229, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{276, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{237, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{74, 0, 0}, {99, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{101, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{240, 0, 0}, {245, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{306, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{13, 0, 0}, {14, 0, 0}, {15, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{545, 0, 0}, {546, 0, 0}, {547, 0, 0}, {548, 
            0, 0}, {549, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{452, 0, 0}, {423, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{380, 0, 0}, {385, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{195, 0, 0}, {196, 0, 0}, {197, 0, 0}, {198, 
            0, 0}, {199, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{424, 0, 0}, {449, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{488, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{202, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{113, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{61, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{243, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{394, 0, 0}, {395, 0, 0}, {396, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{515, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{174, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{516, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{355, 0, 0}, {356, 0, 0}, {357, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{44, 0, 0}, {45, 0, 0}, {46, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{28, 0, 0}, {3, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{553, 0, 0}, {528, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{557, 0, 0}, {528, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{167, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{550, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{272, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{172, 0, 0}, {143, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{168, 0, 0}, {143, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{523, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{226, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{219, 0, 0}, {220, 0, 0}, {221, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{481, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{236, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{247, 0, 0}, {248, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{218, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{72, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{534, 0, 0}, {535, 0, 0}, {536, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{173, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{223, 0, 0}, {224, 0, 0}, {225, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{495, 0, 0}, {526, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{96, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{366, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{419, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{1, 0, 0}, {3, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{485, 0, 0}, {490, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{282, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{177, 0, 0}, {178, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], "inputs" -> {{68, 0, 0}},
            "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{378, 0, 0}, {353, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{390, 0, 0}, {391, 0, 0}, {392, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{282, 0, 0}, {283, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{331, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{384, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{390, 0, 0}, {421, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{249, 0, 0}, {274, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{205, 0, 0}, {210, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{542, 0, 0}, {543, 0, 0}, {544, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{230, 0, 0}, {231, 0, 0}, {232, 0, 0}, {233, 
            0, 0}, {234, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{460, 0, 0}, {461, 0, 0}, {462, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{437, 0, 0}, {438, 0, 0}, {439, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{354, 0, 0}, {379, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{529, 0, 0}, {554, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{27, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{170, 0, 0}, {175, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{214, 0, 0}, {239, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{37, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{411, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{440, 0, 0}, {441, 0, 0}, {442, 0, 0}, {443, 
            0, 0}, {444, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{131, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{502, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{527, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{82, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{12, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{518, 0, 0}, {493, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{137, 0, 0}, {108, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{177, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{393, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{242, 0, 0}, {213, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{238, 0, 0}, {213, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{275, 0, 0}, {280, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{559, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{397, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{131, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{277, 0, 0}, {248, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{347, 0, 0}, {318, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{450, 0, 0}, {455, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{489, 0, 0}},
            "op" -> "exp"}, 
         ".Inputs.Input" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{341, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{555, 0, 0}, {560, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Inputs.checker_b" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{292, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{507, 0, 0}, {508, 0, 0}, {509, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{402, 0, 0}, {403, 0, 0}, {404, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{358, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{310, 0, 0}, {315, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{415, 0, 0}, {420, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{235, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{200, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{313, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{187, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{250, 0, 0}, {251, 0, 0}, {252, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{312, 0, 0}, {283, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{20, 0, 0}, {21, 0, 0}, {22, 0, 0}, {23, 0, 
            0}, {24, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{25, 0, 0}}, 
           "op" -> "tanh"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{265, 0, 0}, {266, 0, 0}, {267, 0, 0}, {268, 
            0, 0}, {269, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{342, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{317, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{212, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{30, 0, 0}, {35, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{343, 0, 0}, {318, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{191, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{26, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{133, 0, 0}, {108, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_4$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{520, 0, 0}, {525, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{261, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{533, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{551, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{215, 0, 0}, {246, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{398, 0, 0}, {399, 0, 0}, {400, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{499, 0, 0}, {500, 0, 0}, {501, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{72, 0, 0}, {73, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{481, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{418, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{98, 0, 0}, {73, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{130, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{87, 0, 0}, {88, 0, 0}, {89, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{180, 0, 0}, {211, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{417, 0, 0}, {388, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{411, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{445, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{527, 0, 0}, {528, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{522, 0, 0}, {493, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{472, 0, 0}, {473, 0, 0}, {474, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{254, 0, 0}, {255, 0, 0}, {256, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{37, 0, 0}, {38, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{471, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{538, 0, 0}, {539, 0, 0}, {540, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{363, 0, 0}, {364, 0, 0}, {365, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{457, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{405, 0, 0}, {406, 0, 0}, {407, 0, 0}, {408, 
            0, 0}, {409, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{328, 0, 0}, {329, 0, 0}, {330, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{448, 0, 0}, {423, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{463, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{270, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{8, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{297, 0, 0}, {298, 0, 0}, {299, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{5, 0, 0}, {6, 0, 0}, {7, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{503, 0, 0}, {504, 0, 0}, {505, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{69, 0, 0}}, 
           "op" -> "exp"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{492, 0, 0}, {493, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{410, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{271, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{257, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{305, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{556, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{97, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{67, 0, 0}, {38, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{464, 0, 0}, {465, 0, 0}, {466, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{348, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{314, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{340, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{383, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{375, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{78, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{323, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{319, 0, 0}, {344, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{142, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{454, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{273, 0, 0}, {248, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{188, 0, 0}, {189, 0, 0}, {190, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{47, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{422, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{376, 0, 0}}, "op" -> "slice_axis"}, 
         ".Inputs.checker_w" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{551, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{109, 0, 0}, {134, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{86, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{517, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{215, 0, 0}, {216, 0, 0}, {217, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{468, 0, 0}, {469, 0, 0}, {470, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{381, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{192, 0, 0}, {193, 0, 0}, {194, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{289, 0, 0}, {290, 0, 0}, {291, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{285, 0, 0}, {316, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{2, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{335, 0, 0}, {336, 0, 0}, {337, 0, 0}, {338, 
            0, 0}, {339, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{324, 0, 0}, {325, 0, 0}, {326, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{40, 0, 0}, {71, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{17, 0, 0}, {18, 0, 0}, {19, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{352, 0, 0}, {353, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{432, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{349, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{166, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{63, 0, 0}, {38, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{39, 0, 0}, {64, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{55, 0, 0}, {56, 0, 0}, {57, 0, 0}, {58, 0, 
            0}, {59, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{278, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{530, 0, 0}, {561, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{160, 0, 0}, {161, 0, 0}, {162, 0, 0}, {163, 
            0, 0}, {164, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{138, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{541, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{446, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{492, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{341, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{34, 0, 0}}, 
           "op" -> "exp"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{244, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{413, 0, 0}, {388, 0, 0}}, "op" -> "_Mul"}, 
         ".Outputs.X_out" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{562, 0, 0}},
            "op" -> "identity"}, 
         ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{103, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{145, 0, 0}, {176, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{382, 0, 0}, {353, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.subtract$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{284, 0, 0}, {309, 0, 0}}, "op" -> "_Minus"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{530, 0, 0}, {531, 0, 0}, {532, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{288, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{495, 0, 0}, {496, 0, 0}, {497, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> \
{"attrs" -> Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{114, 0, 0}, {115, 0, 0}, {116, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{428, 0, 0}},
            "op" -> "relu"}, 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{446, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$0" -> {
          "attrs" -> 
           Association["axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{26, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{457, 0, 0}, {458, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{387, 0, 0}, {388, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}}, 
       VertexShapeFunction -> {
        ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.plus_f$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$1" -> 
         "Square", ".Nodes.coupling_1net_WWcore_net.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_4net_Bcore_net.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_4net_Wcore_net.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_4net_WWcore_net.Nodes.subtract$0" -> 
         "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_4net_Bcore_net.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", ".Nodes.coupling_4net_Wcore_net.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.subtract$0" -> "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$1" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_1net_Bcore_net.Nodes.thread_0$0" -> 
         "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_4net_WWcore_net.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.thread_4$0" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.subtract$0" -> 
         "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_3net_Bcore_net.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_1net_Bcore_net.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_3net_WWcore_net.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.thread_4$0" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$1" -> 
         "Square", ".Nodes.coupling_3net_WWcore_net.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$0" -> 
         "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_3net_BBcore_net.Nodes.thread_4$0" -> 
         "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$0" -> 
         "Square", ".Nodes.coupling_1net_BBcore_net.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_1net_BBcore_net.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_3net_BBcore_net.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_1net_Bcore_net.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$1" -> "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Inputs.checker_w" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_4net_Wcore_net.Nodes.subtract$0" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_3net_WWcore_net.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$0" -> 
         "Square", ".Nodes.coupling_4net_WWcore_net.Nodes.thread_3$0" -> 
         "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$1" -> 
         "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$0" -> 
         "Square", ".Nodes.coupling_4net_WWcore_net.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_1net_WWcore_net.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", ".Nodes.coupling_4net_Wcore_net.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$1" -> 
         "Square", ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_1net_Bcore_net.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.subtract$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_2net_BBcore_net.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_4net_Bcore_net.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_2net_Wcore_net.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.thread_0$0" -> 
         "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2net_Bcore_net.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.subtract$0" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.thread_4$0" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2net_WWcore_net.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$1" -> 
         "Square", ".Nodes.coupling_3net_BBcore_net.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$0" -> 
         "Square", ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_2net_BBcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.subtract$0" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4net_BBcore_net.Nodes.thread_0$0" -> 
         "Square", ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$1" -> "Square",
          ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$1" -> 
         "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.thread_3$0" -> 
         "Square", ".Nodes.coupling_1net_WWcore_net.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.subtract$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.plus_f$0" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_3net_Bcore_net.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_1net_Bcore_net.Nodes.subtract$0" -> 
         "Square", ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$1" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$1" -> 
         "Square", ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Outputs.X_out" -> "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_1net_Bcore_net.Nodes.thread_4$0" -> 
         "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.thread_3$0" -> 
         "Square", ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$0" -> 
         "Square", ".Inputs.Input" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$1" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_4net_BBcore_net.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_2net_Bcore_net.Nodes.subtract$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_4net_Bcore_net.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_2net_BBcore_net.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$1" -> "Square",
          ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_4net_Wcore_net.Nodes.thread_4$0" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.subtract$0" -> "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.plus_f$0" -> "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.subtract$0" -> "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_4net_Bcore_net.Nodes.subtract$0" -> 
         "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_2net_WWcore_net.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.subtract$0" -> "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_4net_WWcore_net.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_3net_Bcore_net.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4net_WWcore_net.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_3net_WWcore_net.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_4net_Wcore_net.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_1net_WWcore_net.Nodes.subtract$0" -> 
         "Square", ".Nodes.coupling_4net_BBcore_net.Nodes.subtract$0" -> 
         "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$0" -> 
         "Square", ".Nodes.coupling_2net_Wcore_net.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_4net_Bcore_net.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_4$0" -> "Square", 
         ".Nodes.coupling_3net_WWcore_net.Nodes.plus_f$0" -> "Square", 
         ".Nodes.coupling_3net_Bcore_net.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> "Square", 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_2net_Bcore_net.Nodes.thread_4$0" -> 
         "Square", ".Inputs.checker_b" -> "Circle"}, VertexStyle -> {
         Directive[
          EdgeForm[
           Thickness[Tiny]]], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_4net_WWcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_2net_Wcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_WWcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], ".Outputs.X_out" -> Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7],
          ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_1net_WWcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_2net_Bcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_3net_WWcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_2net_BBcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7],
          ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], ".Nodes.coupling_1net_Wcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_2net_Bcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_4net_Wcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_4net_Wcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_3net_BBcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_2net_BBcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_2net_Wcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_1net_Wcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_1net_Wcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_2net_Bcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$1" -> Hue[0, 0.33, 0.6],
          ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$1" -> Hue[0, 0.33, 0.6],
          ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_2net_Wcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], ".Inputs.Input" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], ".Inputs.checker_w" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.coupling_3net_WWcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_1net_Wcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_2net_BBcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_2net_Bcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_1net_Bcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7],
          ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_3net_Wcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_4net_BBcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_2net_Wcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_2net_Bcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_1net_Wcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], ".Nodes.coupling_1net_Wcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_BBcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7],
          ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_2net_BBcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_BBcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_4net_Wcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_3net_Wcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], ".Nodes.coupling_2net_Wcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.exp_1$1" -> Hue[0, 0.33, 0.6],
          ".Nodes.coupling_4net_Bcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_4net_Wcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7],
          ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_WWcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.exp_1$1" -> Hue[0, 0.33, 0.6],
          ".Nodes.coupling_1net_Bcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_3net_Bcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_4net_WWcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.exp_1$0" -> Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_3net_BBcore_net.Nodes.exp_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_BBcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_4net_Bcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_2net_BBcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.coupling_4net_Bcore_net.Nodes.exp_1$1" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_Bcore_net.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_3net_Bcore_net.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1net_BBcore_net.Nodes.subtract$0" -> 
         Hue[0.5, 0.67, 0.6], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.6.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.4.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Bcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_Bcore_net.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.thread_4$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_WWcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.2.\
Nodes.1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_Wcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1net_Wcore_net.Nodes.trainedNet.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_BBcore_net.Nodes.trainedNet.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], ".Inputs.checker_b" -> GrayLevel[0.5], 
         ".Nodes.coupling_2net_Bcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_1net_WWcore_net.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2net_Wcore_net.Nodes.trainedNet.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3net_BBcore_net.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1net_WWcore_net.Nodes.trainedNet.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_4net_Wcore_net.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0.6], Opacity[0.7], Arrowheads[0.013387081391419], 
        ArrowBox[CompressedData["
1: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
T3XwEB7/xp38e0YsNZAnOfh06atlwuPJ/nBGhkGLBuKQyp+9HZ/1wN8pwkYl
lQqpFpVL3mvpg92PpkW3h9WR3zs2VSp4pj5smvH5w0/h+QPpSe45mXf/8XJ9
qHQL5YfUUxC/jE3xZXrpwfEP9jcO6yhDq2KibfkGPmTkBM1wei+H/P4Kq39j
ovmwW3R/hfQkJ5pFZaxN48GUvie9xfmqYPdFJyvrqh60aLLcx69gv/GNp5br
cz3giu4vkX5sj/jJX0PCetH9KdLrqU84HaTJhxKjuNTIIuxJ7uotfDIxmguB
v7Pd7p9RRzzzenfXrZ0cuCuX0Hh3DxV5V6nwy6YlHIgte7WeaqaBxh92pUlt
dGbDT829NrfX0xCT+SOZzBfJg55u8TbqHHDb8brhVLYW6qfzmmyc2Bk2bOjo
uRHSTUNM5pvk1LBRDjWdDXv+edPRp6qJ+KY+dcvKFxxwFd2PIZnsj2Qy/yQL
Ugx4wXM4QF97d+v649rIk8/fkc/rkfWkXyzv5S41yAM369jVH+M1kf9imPju
kpYejIjW+5Dbs+5/vLn9PhfSRPe7yX4o8mESLfVc2HokKn37PdzvzCdS+5y/
Cvf3ozustXQG3O77GOhmrAfSp/7ciXbXRvXKBf1aJTP0QM87d6pmIfYkV+zc
vb16vh5MNmi1Cr+P2c9yluWCfD7c4Dxz3RtCB59D/mnTKAagJlpfQfo6P3ZR
Dt0APorWZ5Ce5MqYyltb+AZww8TeOe025i0n+pZGJRmCs2g9iW9iWMbdCcag
oXa+3OOeNvITY2lfsycZg3LiFTvTVbie5JEPuSH1csZQc2FWvqAX8/5Gv6Ej
CcbQtet1p+CDcD4wNdXxc+tkYJVEZX6KUEV+XZSc144/k2GDa/2EQjM15El2
Upo4FulnBFk7b9zZL0uFxJfu5pqlxlCtXZGW2aSOfGMBU/PBG+HPf7bn1re9
FOTjWGkbvYeMoWj1jPZNLCryOU/NjzBlJ0OKwcnUH1XYo35i3yZsVTKE9dfd
nZt7MDcq3DVZlKsPUm+1JabWaSDfua18F+OLPuzoC80e89JE4xVOxFbpreRD
vmLTzajbNMRk/kgm80Vyoue9o45rOLBgYsin7EwG6mfrEmODD+F8mME0OFqt
rIWYzDfJjlcpF+z19WC5aD0gyf9KesatKeZC4aULayLomMn+SCbzT/I2784E
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
HIp+M9VRF1Q/N1+xEZ7P/w/ryuqH
         "], 0.08030620415473716]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
        Tiny]}], 
        {GrayLevel[0.5], 
         DiskBox[{7.54373465938645, 7.499647530509891}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.224246151967048, 8.904860989865613}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.860642065772758, 9.839303576221086}, 
          0.08030620415473716]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.396716443512002, 8.145290421378425}, \
{7.538433283821091, 8.287007261687515}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.455920558169556, 8.869764570801243}, \
{7.597637398478646, 9.011481411110333}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.123676266589706, 8.05905399299484}, \
{7.265393106898797, 8.200770833303931}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.015036824648322, 9.59560759410371}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.965864519779344, 9.582586821604918}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.022724437359162, 8.797752633608715}, \
{7.164441277668253, 8.939469473917805}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.749517190266513, 9.46577749395425}, \
{6.8912340305756015, 9.60749433426334}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.4991972487914556, 10.947589333588171}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.418355154704595, 10.922056338643312}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{6.5083975072780476, 10.14477362182055}, \
{6.650114347587138, 10.28649046212964}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.187726519428178, 10.794461595496406}, \
{6.329443359737269, 10.936178435805497}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.855896878467199, 12.252620425574}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.744525051661233, 12.211589009707374}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{5.930696575467433, 11.467596092524618}, \
{6.0724134157765235, 11.609312932833708}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.563291124895963, 12.09708991546839}, \
{5.705007965205054, 12.23880675577748}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.34030404376866, 13.26035758642055}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.204808802994065, 13.253975782140095}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.235578856600899, 12.466967121115683}, \
{7.377295696909989, 12.608683961424774}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.12878042083221, 12.526312498042378}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.010616089347123, 12.515156707671443}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.892746974603601, 12.501223557141255}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.77523834713984, 12.484520761994908}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{7.066531193371244, 11.732875965688596}, \
{7.2082480336803325, 11.874592805997686}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{7.134255367681353, 11.015528156466386}, \
{7.275972207990444, 11.157244996775477}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.201979541991465, 10.298180347244179}, \
{7.343696382300553, 10.43989718755327}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.269703716301574, 9.580832538021971}, \
{7.411420556610665, 9.722549378331061}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.337427890611684, 8.863484728799762}, \
{7.479144730920774, 9.005201569108852}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{7.447442717638381, 9.59025230102419}, \
{7.58915955794747, 9.73196914133328}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{6.966830878366858, 10.26616627662302}, \
{7.108547718675947, 10.40788311693211}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.093342218583119, 9.5568219850561}, \
{7.23505905889221, 9.69853882536519}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.203178793341509, 8.844402426345185}, \
{7.3448956336506, 8.986119266654276}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.043373928950857, 9.547302210173289}, \
{7.185090769259945, 9.68901905048238}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{6.900206492190506, 10.253473243445937}, \
{7.0419233324995965, 10.395190083755027}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.607632019304106, 9.409678412794664}, \
{6.749348859613196, 9.551395253103754}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.659089418786332, 8.618095119587888}, \
{6.800806259095422, 8.759811959896979}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{6.076076348663113, 9.949848640913325}, \
{6.217793188972204, 10.091565481222416}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.403101761116293, 9.30712682083487}, \
{6.5448186014253835, 9.448843661143961}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.070472076304151, 9.07373061461618}, \
{6.21218891661324, 9.21544745492527}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.371635251329212, 10.373903128236822}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.30460439484337, 10.321997037207181}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{5.57732763047437, 9.599891724868897}, \
{5.7190444707834605, 9.741608565177987}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.040237995605958, 10.086162297394695}, \
{5.1819548359150485, 10.227879137703786}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.31684498940418, 11.37608026869512}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.226524594060761, 11.299077105908605}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{4.553710346880768, 10.617636934802565}, \
{4.695427187189859, 10.759353775111656}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.980585140109699, 11.067944313820062}, \
{4.122301980418788, 11.209661154129153}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.164985820859741, 12.282919267180715}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.053646103372185, 12.178561363535955}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{3.48168641166367, 11.587823628600736}, \
{3.6234032519727597, 11.729540468909827}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.873934371920655, 12.000754070722456}, 
          {3.0156512122297445, 12.142470911031547}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.20114380832899, 14.686245754108828}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.0329660713207645, 14.605603591875575}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{4.357497206001481, 13.925854432290864}, \
{4.499214046310572, 14.067571272599954}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.201005367021017, 13.882719298565682}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.051734932964473, 13.80229635690484}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.90439820904058, 13.7183832958703}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.759076783605089, 13.63102658268689}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{4.397035265858195, 13.137758562388557}, \
{4.5387521061672835, 13.279475402697647}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{4.738795374010829, 12.503428623273757}, \
{4.8805122143199196, 12.645145463582848}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.080555482163463, 11.869098684158955}, \
{5.222272322472554, 12.010815524468045}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.4223155903160976, 11.234768745044153}, \
{5.564032430625188, 11.376485585353244}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.764075698468732, 10.600438805929352}, \
{5.905792538777822, 10.742155646238443}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{5.8453025983407585, 9.80740112882043}, \
{5.987019438649849, 9.94911796912952}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{4.72335776798476, 11.657228053060239}, \
{4.865074608293851, 11.79894489336933}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.116146121020067, 11.05316534695954}, \
{5.257862961329158, 11.19488218726863}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.508934474055373, 10.449102640858841}, \
{5.650651314364463, 10.590819481167932}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{4.396107009361417, 9.303049547346257}, \
{4.537823849670508, 9.444766387655347}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{5.011460855335514, 8.928197459948075}, \
{5.1531776956446045, 9.069914300257166}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.626814701309613, 8.553345372549893}, \
{5.768531541618701, 8.695062212858984}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.242168547283709, 8.17849328515171}, \
{6.3838853875928, 8.3202101254608}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{6.905781501644235, 7.873286581419311}, \
{7.047498341953325, 8.0150034217284}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.427265462694109, 8.42045229748875}, \
{6.5689823030031995, 8.56216913779784}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.779708379978919, 7.625493869017967}, \
{6.921425220288009, 7.767210709327056}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.67172304310899, 8.580453941093786}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.646809599379951, 8.536105588202693}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{6.177151278196787, 8.059498709202622}, \
{6.3188681185058755, 8.201215549511712}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.507565699360104, 8.328858257980015}, \
{5.649282539669192, 8.470575098289105}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.342421204084946, 9.15220713320286}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.304422256798652, 9.076421527628078}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{4.852462186069502, 8.628881307188237}, \
{4.994179026378593, 8.770598147497328}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.162967341102741, 8.85141490993603}, \
{4.304684181411831, 8.993131750245121}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.9580100663522435, 9.599808874967447}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.9098622020056206, 9.49132364992285}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{3.500985561476908, 9.135940069852166}, \
{3.6427024017859977, 9.277656910161257}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.7934219446597344, 9.310877105355205}, \
{2.935138784968824, 9.452593945664296}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.2691128197591475, 11.366787622596307}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.1793011768363257, 11.265133520397017}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{3.6930278882773924, 10.768294187413765}, \
{3.834744728586482, 10.910011027722856}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.6483848957233294, 10.70367592218219}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.5740714962727633, 10.611129827957644}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.5019563151736017, 10.516860736792232}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.4320792865230203, 10.42092085060779}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{4.101923070385267, 10.135623920237688}, \
{4.243639910694355, 10.277340760546778}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{4.663748598526373, 9.684484785257297}, \
{4.805465438835462, 9.826201625566387}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.22557412666748, 9.233345650276908}, \
{5.367290966976569, 9.375062490585998}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.787399654808585, 8.782206515296517}, \
{5.929116495117675, 8.923923355605607}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.3492251829496915, 8.331067380316126}, \
{6.490942023258782, 8.472784220625217}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{5.904460074425211, 8.916283891055452}, \
{6.046176914734302, 9.058000731364542}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.084730208171919, 9.0423409766561}, \
{5.22644704848101, 9.18405781696519}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.6817667159369165, 8.638953010080911}, \
{5.823483556246005, 8.780669850390002}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.269393359374391, 8.221459742217922}, \
{6.411110199683481, 8.363176582527013}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.653787044321435, 8.596472496208278}, \
{5.795503884630525, 8.738189336517369}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{5.047423979351278, 8.98570029149259}, \
{5.189140819660368, 9.12741713180168}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.4489712977463185, 8.187985248693268}, \
{5.590688138055407, 8.329702089002359}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.055700764636473, 7.690153696580726}, \
{6.197417604945564, 7.831870536889815}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{4.69113902387819, 8.182930446993486}, \
{4.8328558641872785, 8.324647287302577}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.380062828799307, 7.969808534914643}, \
{5.521779669108398, 8.111525375223733}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.317582298594417, 7.593949693087186}, \
{5.459299138903507, 7.735666533396275}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.9799431559565774, 8.02761646863812}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.9685065907566823, 7.943612998569131}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{4.599150985048588, 7.649003220664465}, \
{4.740867825357677, 7.790720060973555}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.8752371118337456, 7.619455805299726}, \
{4.016953952142835, 7.761172645608815}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.525175889492923, 8.003250140746655}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.5147154645656444, 7.885022223550848}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{3.155709286354114, 7.657589144288602}, \
{3.2974261266632037, 7.799305984597691}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.431294969116505, 7.5771333476350495}, \
{2.5730118094255947, 7.71885018794414}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.0679842300697633, 7.842847581409768}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.061701597809507, 7.6903758355837954}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{1.7110690733857337, 7.598325381532151}, \
{1.8527859136948233, 7.7400422218412395}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{0.9881499995737824, 7.466940052969539}, \
{1.129866839882872, 7.608656893278628}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.05930266848285193, 10.107977532359206}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{0., 9.93114398614787}, 0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{0.6414185131219639, 9.719777904426934}, \
{0.7831353534310534, 9.861494744736024}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.6356801577651128, 9.548117037438903}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.5893916210021599, 9.385000872105246}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.5469540821351986, 9.220840684106674}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.5083910411371173, 9.055727377865802}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{1.2343655059550271, 9.199131938318937}, \
{1.3760823462641167, 9.340848778628027}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{1.927533365208014, 9.002427179656316}, \
{2.0692502055171036, 9.144144019965406}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{2.620701224461001, 8.805722420993694}, \
{2.7624180647700904, 8.947439261302785}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.313869083713987, 8.609017662331073}, 
          {3.4555859240230764, 8.750734502640164}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.007036942966973, 8.412312903668452}, \
{4.148753783276064, 8.554029743977543}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{4.63257106076264, 7.9181331448248375}, \
{4.7742879010717285, 8.059849985133926}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{2.52386867438385, 8.401862508917466}, \
{2.6655855146929395, 8.543579349226556}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.2308697550764287, 8.262852023408593}, \
{3.3725865953855183, 8.404568863717683}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.9378708357690084, 8.123841537899718}, \
{4.0795876760780985, 8.265558378208809}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{3.9646023416982943, 6.609414141594687}, \
{4.106319182007384, 6.751130981903778}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{4.666257121205016, 6.77328913534682}, \
{4.807973961514106, 6.915005975655909}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.3679119007117375, 6.937164129098951}, \
{5.509628741020828, 7.07888096940804}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.069566680218461, 7.101039122851082}, \
{6.21128352052755, 7.242755963160173}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{6.7568353832448445, 7.348415384927167}, \
{6.898552223553933, 7.490132225236257}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.032025467631666, 7.403356322333799}, \
{6.173742307940756, 7.54507316264289}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.840567885896405, 7.083303091124412}, \
{6.982284726205496, 7.225019931433501}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.450921248953854, 6.95862810595059}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.464231081627491, 6.909533254522025}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{6.106584694009918, 6.970591351541026}, \
{6.2483015343190065, 7.112308191850117}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.440178699328232, 6.6934587764872635}, \
{5.581895539637321, 6.835175616796352}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.101997641257531, 6.4348436154211734}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.128005796331481, 6.3541531334740915}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{4.762612852693675, 6.448348665197901}, \
{4.904329693002763, 6.590065505506992}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.114822661207366, 6.123861048482281}, \
{4.256539501516457, 6.26557788879137}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.8007737329445463, 5.783876751484359}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.8424596501520965, 5.672748243887599}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{3.443211945602459, 5.862875436107668}, \
{3.5849287859115484, 6.004592276416757}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.8158904988184896, 5.491772969612418}, \
{2.9576073391275792, 5.6334898099215085}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.7843210981878226, 7.262329611417853}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.7914999238580576, 7.126874260248411}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{2.4361814608744834, 7.161855737433207}, \
{2.577898301183573, 7.303572577742296}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.519597897777113, 7.055128108484087}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.5314486674770187, 6.9370314525126435}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.546075012483234, 6.8192463476569065}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.563468833393194, 6.701838017934224}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{3.171254436466025, 6.997129730152398}, \
{3.3129712767751145, 7.138846570461489}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{3.888191403593672, 7.069072960186222}, \
{4.029908243902762, 7.210789800495313}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{4.605128370721319, 7.141016190220048}, \
{4.746845211030408, 7.282733030529137}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.322065337848965, 7.212959420253872}, \
{5.463782178158056, 7.354676260562961}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.039002304976611, 7.284902650287696}, \
{6.1807191452857015, 7.426619490596787}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{5.311600081831546, 7.390639928323026}, \
{5.453316922140637, 7.532356768632116}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{4.638525290041041, 6.906059937904587}, \
{4.78024213035013, 7.0477767782136755}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.347113027338757, 7.036742231017277}, \
{5.488829867647846, 7.178459071326365}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.058874077846747, 7.150768139337597}, \
{6.200590918155836, 7.2924849796466855}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.356926605839849, 6.986830811887021}, \
{5.4986434461489395, 7.1285476521961115}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{4.65161006137583, 6.8395113790642466}, \
{4.793326901684921, 6.981228219373335}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.497111534079526, 6.551906097342137}, \
{5.638828374388616, 6.693622937651227}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.278803223701912, 6.622013177204968}, \
{6.4205200640110025, 6.7637300175140584}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{4.960077848217306, 6.017181750986371}, \
{5.101794688526397, 6.1588985912954595}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.600864622954447, 6.347982699771446}, \
{5.742581463263537, 6.489699540080537}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.819712719977018, 6.03608656952267}, \
{5.961429560286108, 6.1778034098317605}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.631592462732006, 5.378612663749839}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.682307476793188, 5.310676183446713}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{5.268658213558723, 5.571852389245112}, \
{5.410375053867812, 5.713569229554201}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.772984559978685, 5.043428341027898}, \
{4.914701400287775, 5.185145181336988}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.6109559623987098, 4.341673585647152}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.6863531144583814, 4.2500082685669796}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{4.23300622412804, 4.566356187162409}, \
{4.374723064437131, 4.7080730274714995}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.7726541898193315, 4.001267483734512}, \
{3.914371030128421, 4.142984324043601}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.6839296367306575, 3.205998145720482}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.786306310141713, 3.0928340105688177}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{3.24405103990325, 3.5116215370743924}, \
{3.3857678802123394, 3.653338377383482}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.8204590101694236, 2.911251747537468}, \
{2.962175850478513, 3.0529685878465576}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.37692559478518195, 4.114835060585218}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.45855576763059336, 3.9471346597625243}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{0.9942514340563124, 4.275241116118961}, \
{1.135968274365402, 4.4169579564280514}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.1804389593064517, 4.119423846856367}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.261738681849951, 3.970629132087455}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.3465170871616987, 3.823788626702841}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.4347272288286854, 3.678983644275088}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{1.7821010592124122, 4.319414937276937}, \
{1.9238178995215018, 4.4611317775860275}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{2.414409412547912, 4.664900956507871}, \
{2.5561262528570015, 4.806617796816962}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.0467177658834106, 5.010386975738806}, \
{3.1884346061925, 5.152103816047896}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.6790261192189098, 5.35587299496974}, \
{3.8207429595279994, 5.497589835278831}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.3113344725544085, 5.7013590142006745}, \
{4.453051312863499, 5.843075854509765}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{5.103880559849452, 5.787250027062633}, \
{5.245597400158543, 5.928966867371724}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.2606861597306067, 4.654441898836325}, \
{3.4024030000396963, 4.796158739145415}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.8624275996593638, 5.0507772147676135}, \
{4.004144439968453, 5.192494055076704}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.464169039588121, 5.447112530698902}, \
{4.605885879897212, 5.588829371007993}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.544607409665481, 4.385576925759974}, \
{5.686324249974572, 4.527293766069063}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{5.9302611755787655, 4.994219362679047}, \
{6.071978015887856, 5.1359362029881375}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.315914941492052, 5.602861799598122}, \
{6.45763178180114, 5.744578639907212}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.701568707405336, 6.211504236517197}, \
{6.843285547714425, 6.353221076826287}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.018439636622185, 6.869627400837944}, \
{7.1601564769312755, 7.011344241147032}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.462914058681578, 6.400842532664861}, \
{6.604630898990669, 6.542559372973949}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.263968757112906, 6.739200749739689}, \
{7.405685597421996, 6.88091759004878}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.430058419912685, 5.647002064623726}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.473960181270838, 5.6213098200303655}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{6.819397294343254, 6.144397020176195}, \
{6.961114134652345, 6.286113860485285}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.538262529262775, 5.479669513774692}, \
{6.679979369571866, 5.621386354083782}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.834934118623273, 4.3279978349358865}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.910037297164822, 4.288667305062013}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{6.226724625939733, 4.82996298158114}, \
{6.368441466248822, 4.9716798218902305}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.992057145610783, 4.144502903047231}, \
{6.133773985919873, 4.286219743356321}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.362969336125143, 2.9517018051550323}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.4705879283168795, 2.90164684027853}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{5.695893326886559, 3.487645661585608}, \
{5.837610167195649, 3.629362501894698}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.508496114430352, 2.783279618254705}, \
{5.650212954739443, 2.9249964585637946}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.601756280284664, 3.293940595601695}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.7018095111652687, 3.2023489000786185}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{4.0671826981555785, 3.708466648500258}, \
{4.208899538464669, 3.8501834888093476}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.2714582792216875, 3.6614506872346118}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.362678441118414, 3.5855155638880736}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.455660126819172, 3.5117479082498337}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.550351847308551, 3.440188569482064}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{4.706970807818532, 4.106132477625149}, \
{4.848687648127623, 4.247849317934238}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{5.167955046387428, 4.659908583080181}, \
{5.309671886696519, 4.80162542338927}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.628939284956324, 5.2136846885352135}, \
{5.770656125265413, 5.355401528844304}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{6.0899235235252185, 5.767460793990248}, \
{6.231640363834309, 5.909177634299336}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.5509077620941145, 6.32123689944528}, \
{6.692624602403205, 6.46295373975437}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{5.957932968406414, 5.886869243819618}, \
{6.099649808715505, 6.0285860841287064}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.817428529086422, 5.069491763710738}, \
{5.959145369395513, 5.211208604019827}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{6.2312904566227925, 5.659316100371889}, \
{6.373007296931883, 5.8010329406809795}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.659089418786332, 6.239483101122804}, \
{6.80080625909542, 6.381199941431895}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{6.273270555608491, 5.630591069967304}, \
{6.41498739591758, 5.772307910276394}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{5.873401994400686, 5.03119172317129}, \
{6.015118834709774, 5.17290856348038}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.67807949589983, 5.418598043460031}, \
{6.8197963362089205, 5.560314883769122}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.186541365711205, 6.01644704381005}, \
{7.328258206020296, 6.158163884119139}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{6.669758922115518, 4.660794589793936}, \
{6.8114757624246085, 4.802511430103026}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.895006099624798, 5.345849819260319}, \
{7.036722939933886, 5.487566659569408}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.2697037163015725, 5.276745682688722}, \
{7.411420556610661, 5.41846252299781}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.9529524452412685, 3.945728924942662}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.036740994058963, 3.9328116073330195}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.201979541991461, 4.559397873466512}, \
{7.34369638230055, 4.701114713775603}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.218746375469085, 3.835075280361214}, \
{7.360463215778175, 3.9767921206703036}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.951640546218464, 2.4907582048145898}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.069665439215672, 2.4782128659544327}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.167920402716522, 3.1163325143623877}, \
{7.309637243025611, 3.2580493546714773}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.235578856600892, 2.390611099595009}, \
{7.3772956969099805, 2.5323279399040985}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.086300904613369, 1.0309626365204538}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.238638024575146, 1.0219900881037427}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.201679230510747, 1.6708713837721043}, \
{7.343396070819836, 1.812588224081194}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.3202856729792725, 0.9457461506932989}, \
{7.462002513288363, 1.0874629910023885}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.803722042853811, 0.062414275713426726}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.979481445851299, 0.}, 0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{5.061679409347256, 0.638827831692335}, \
{5.203396249656347, 0.7805446720014246}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.373667528389013, 0.6288213090752848}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.535941366595482, 0.5796612291063683}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.699327029125763, 0.5343331218399587}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.863734040454082, 0.492862087913859}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{5.592708900160913, 1.222493864814441}, \
{5.734425740470002, 1.3642107051235306}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{5.801616382279912, 1.912082225430098}, \
{5.943333222589002, 2.0537990657391876}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{6.010523864398911, 2.601670586045753}, \
{6.152240704708001, 2.743387426354843}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{6.21943134651791, 3.2912589466614093}, \
{6.361148186827, 3.432975786970499}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.4283388286369085, 3.9808473072770654}, \
{6.570055668945999, 4.122564147586155}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{6.933481347451114, 4.597562478375666}, \
{7.075198187760202, 4.739279318684757}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{6.412611929296233, 2.497725603464652}, \
{6.554328769605323, 2.6394424437737416}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{6.564078259287044, 3.20216324730618}, \
{6.705795099596132, 3.3438800876152697}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.7155445892778545, 3.9066008911477073}, \
{6.857261429586943, 4.048317731456796}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{8.230207889185948, 3.906600891147706}, \
{8.371924729495039, 4.0483177314567955}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{8.07874155919514, 4.611038534989234}, \
{8.220458399504231, 4.752755375298323}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.927275229204332, 5.315476178830762}, \
{8.06899206951342, 5.457193019139851}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.775808899213523, 6.01991382267229}, \
{7.917525739522613, 6.161630662981379}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.540600413542014, 6.711441301133137}, \
{7.682317253851105, 6.853158141442227}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.472876239231905, 5.987713896243482}, \
{7.614593079540995, 6.129430736552573}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.807149168468449, 6.790481933549767}, \
{7.948866008777538, 6.932198773858856}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.047734845066156, 5.39761189773108}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.097056948464651, 5.410053207908909}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.906889665431391, 6.0546238660684235}, \
{8.048606505740482, 6.196340706377514}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.172218024741488, 5.383430692943556}, \
{8.313934865050578, 5.525147533252646}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.547631305781927, 4.039654379808127}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.628768224885162, 4.0642344197925855}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{8.405331953244682, 4.701644553806291}, \
{8.547048793553772, 4.843361394115382}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.718336519474004, 4.048228539993312}, \
{8.860053359783095, 4.189945380302403}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.175532158908808, 2.727144556549047}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.287379051725384, 2.766862732003043}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{8.967428575522423, 3.372116425920906}, \
{9.109145415831513, 3.513833266229996}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.327401973673402, 2.738343287599609}, \
{9.469118813982492, 2.8800601279086986}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.6793707182776565, 1.7369426774769599}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.814931668107596, 1.7417298039266482}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.650878027897466, 2.3881678114335183}, \
{7.792594868206557, 2.529884651742608}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.899516468654383, 2.4684481685181057}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.017803879557217, 2.478212865954432}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.135828772554417, 2.490758204814587}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.253525790844922, 2.50607723806227}, 0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{7.828551300849819, 3.1202191381846416}, \
{7.970268141158909, 3.261935978493731}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{7.769272123913501, 3.838314133546426}, \
{7.9109889642225895, 3.9800309738555155}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.709992946977181, 4.556409128908209}, \
{7.851709787286271, 4.698125969217299}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.650713770040863, 5.274504124269994}, \
{7.792430610349951, 5.416220964579084}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.591434593104543, 5.9925991196317785}, \
{7.733151433413633, 6.134315959940867}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{7.472876239231905, 5.267176289187551}, \
{7.614593079540995, 5.408893129496642}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.945502010548044, 4.585654225901562}, \
{8.087218850857134, 4.727371066210651}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.827345567719009, 5.296437947015008}, \
{7.969062408028099, 5.4381547873240965}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.725898919664427, 6.010100527221509}, \
{7.867615759973516, 6.151817367530599}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.877422408067494, 5.305369136370585}, \
{8.019139248376584, 5.447085976679675}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{8.01227113101269, 4.597562478375666}, \
{8.153987971321781, 4.739279318684755}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.314753435575419, 5.43785647088364}, \
{8.45647027588451, 5.579573311192728}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{8.258452945302517, 6.220663698153947}, \
{8.400169785611608, 6.362380538463038}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{8.839916671842442, 4.89146935389614}, \
{8.981633512151532, 5.03318619420523}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.520476157158496, 5.53799446243686}, \
{8.662192997467587, 5.67971130274595}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.836186047061062, 5.751303981803138}, \
{8.977902887370153, 5.893020822112227}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.613044297068297, 4.550525847204126}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.681865239442086, 4.6000339869185805}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{9.290622649670782, 5.192142272285736}, \
{9.432339489979872, 5.3338591125948245}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.810216510778158, 4.687219936587285}, 
          {9.951933351087249, 4.828936776896374}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.63180919195372, 3.5117479082498266}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.724790877654478, 3.5855155638880674}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{10.277684565087409, 4.138906101833673}, \
{10.4194014053965, 4.280622942142761}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{10.83456074392543, 3.668652808727974}, \
{10.97627758423452, 3.8103696490370638}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.750947148169704, 2.56482301772738}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.865900451135262, 2.6651865712746945}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{11.314801387453075, 3.131490479924064}, \
{11.456518227762166, 3.2732073202331535}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{11.907601915721402, 2.697368808583614}, \
{12.049318756030493, 2.8390856488927034}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.801536665352904, 0.2742178744320318}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.970651595939916, 0.35287567638082074}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{10.511595194738684, 0.8955179979926737}, \
{10.653312035047774, 1.0372348383017633}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.811129383829691, 1.0776870796141305}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.961335740912793, 1.1563481393618762}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.109649586438477, 1.238521828911468}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.255988790965654, 1.3241626442226666}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{10.481332602360792, 1.6840245191051317}, \
{10.623049442669883, 1.8257413594142213}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{10.147059673124248, 2.322331695910711}, 
          {10.288776513433339, 2.4640485362198006}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{9.812786743887706, 2.9606388727162902}, \
{9.954503584196797, 3.10235571302538}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{9.478513814651164, 3.5989460495218695}, \
{9.620230654960254, 3.740662889830959}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.14424088541462, 4.237253226327448}, \
{9.28595772572371, 4.378970066636539}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{9.07235048406312, 5.031191723171288}, \
{9.21406732437221, 5.172908563480377}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{10.172452600624895, 3.1682920519218247}, \
{10.314169440933986, 3.3100088922309143}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{9.786798834711611, 3.776934488840899}, \
{9.928515675020702, 3.9186513291499887}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.401145068798327, 4.385576925759974}, \
{9.542861909107417, 4.527293766069063}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{10.481583438875688, 5.447112530698901}, \
{10.623300279184779, 5.588829371007991}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{9.879841998946931, 5.843447846630189}, \
{10.021558839256022, 5.98516468693928}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.278100559018174, 6.239783162561478}, \
{9.419817399327265, 6.381500002870569}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{8.676359119089419, 6.636118478492769}, \
{8.81807595939851, 6.777835318801857}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{8.023930745650201, 6.964554930077787}, \
{8.165647585959292, 7.106271770386877}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.48283841978223, 6.400842532664859}, \
{8.62455526009132, 6.5425593729739475}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.158670299176126, 7.207743978024618}, \
{8.300387139485217, 7.349460818333709}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.376436888553776, 6.353448364639445}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.402899931053874, 6.396889859367772}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{8.745535379247903, 6.752744373624639}, \
{8.887252219556993, 6.894461213933729}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.405197755165318, 6.459921963787879}, \
{9.546914595474409, 6.601638804096968}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.684732648154695, 5.735138331298664}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.725382509426446, 5.809535688683123}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{10.049304927143124, 6.13696624826539}, \
{10.191021767452215, 6.27868308857448}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{10.730516723141568, 5.890237987662305}, \
{10.872233563450658, 6.031954827971395}]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.052484863231081, 5.238957521852464}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.104431336859978, 5.345675958739634}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{11.3820448199235, 5.582527763123698}, \
{11.52376166023259, 5.724244603432787}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{12.08299388458745, 5.382728746657843}, \
{12.224710724896541, 5.524445586966934}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.67921664077533, 3.4840587635606717}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.772559858715105, 3.582479957228936}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{11.132513957114183, 3.9579679553884266}, \
{11.274230797423273, 4.099684795697517}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.323583010340958, 4.1601424534514635}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.401116204314514, 4.250008268566976}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.47651335637419, 4.3416735856471504}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.549732715017011, 4.435087644621432}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{10.746201351144494, 4.604674617939997}, \
{10.887918191453585, 4.746391458249086}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{10.20064716582573, 5.075360366675888}, \
{10.34236400613482, 5.217077206984978}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{9.655092980506964, 5.54604611541178}, \
{9.796809820816055, 5.687762955720869}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{9.109538795188199, 6.016731864147671}, \
{9.251255635497289, 6.158448704456761}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.563984609869435, 6.487417612883563}, \
{8.705701450178525, 6.629134453192652}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{8.987819510057392, 5.886869243819614}, \
{9.129536350366482, 6.028586084128705}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{9.802589996555458, 5.731961216947301}, \
{9.944306836864548, 5.873678057256392}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{9.22016155722457, 6.156168190299313}, \
{9.36187839753366, 6.297885030608402}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.647634917192883, 6.594139590327373}, \
{8.789351757501974, 6.735856430636462}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{9.249622998768743, 6.19763479788581}, \
{9.391339839077833, 6.339351638194898}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{9.841871918614356, 5.7872500270626315}, \
{9.983588758923446, 5.92896686737172}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.468727270837656, 6.598639335751235}, \
{9.610444111146746, 6.740356176060326}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{8.87994496288177, 7.117573140884161}, \
{9.021661803190861, 7.259289981193252}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{10.226265853735038, 6.5769459782843676}, 
          {10.367982694044128, 6.718662818593458}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.545292589718304, 6.814248258276637}, \
{9.687009430027395, 6.955965098585727}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.62099880719309, 7.187667934070806}, \
{9.76271564750218, 7.3293847743798946}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.08667334587503, 6.8462360649464316}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.101067392238775, 6.929783592955834}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{10.33703966318015, 7.107294208642626}, \
{10.47875650348924, 7.249011048951715}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{11.061545354667144, 7.111275237479763}, \
{11.203262194976235, 7.252992077788852}]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.541394306289664, 6.819246347656889}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.55602065129588, 6.93703145251263}, 0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{11.779279177754193, 7.047772462904646}, \
{11.920996018063283, 7.189489303213735}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{12.506081632819248, 7.102612498876539}, \
{12.647798473128338, 7.244329339185628}]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.003339067169883, 6.928122559333835}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.01499873685589, 7.08027760146571}, 0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{13.225110974760296, 7.056015840093851}, \
{13.366827815069387, 7.197732680402941}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{13.95221649558036, 7.161806451376778}, \
{14.093933335889451, 7.303523291685867}]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.931452531040431, 4.628805794389138}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.996958972366583, 4.803436306326911}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{14.219226044183854, 4.898135315895583}, \
{14.360942884492944, 5.039852156204674}]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.375192385496387, 5.20865873643829}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.427208695644286, 5.370039700332447}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.475413251916311, 5.532599943883665}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.519779360828434, 5.69624944864554}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{13.645022778729905, 5.439382919378803}, \
{13.786739619038995, 5.581099759687893}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{12.959228718785683, 5.6604280517095305}, \
{13.100945559094773, 5.802144892018619}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{12.273434658841461, 5.8814731840402565}, \
{12.415151499150552, 6.023190024349347}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{11.587640598897238, 6.102518316370984}, \
{11.729357439206328, 6.244235156680073}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{10.901846538953016, 6.3235634487017105}, \
{11.043563379262107, 6.465280289010801}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{10.294142417087977, 6.839511379064241}, \
{10.435859257397068, 6.981228219373332}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{12.384459695778956, 6.281664154090414}, \
{12.526176536088046, 6.423380994399503}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{11.682804916272236, 6.445539147842547}, \
{11.824521756581326, 6.587255988151636}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{10.981150136765514, 6.60941414159468}, \
{11.122866977074604, 6.751130981903771}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{11.007881642694803, 8.12384153789971}, \
{11.149598483003894, 8.2655583782088}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{10.300880562002224, 7.984831052390836}, \
{10.442597402311314, 8.126547892699927}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.593879481309644, 7.845820566881965}, \
{9.735596321618734, 7.987537407191054}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{8.886878400617064, 7.706810081373092}, \
{9.028595240926155, 7.848526921682181}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{8.191307552777735, 7.483842637932625}, \
{8.333024393086825, 7.625559478241714}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.913727010832144, 7.4033563223337975}, \
{9.055443851141234, 7.545073162642888}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.116983411209711, 7.751744825877832}, \
{8.258700251518801, 7.893461666186921}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.654337744861252, 7.966471484716658}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.642768832561828, 8.016005476588917}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{8.854487139556174, 7.838483011741145}, \
{8.996203979865264, 7.9801998520502355}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.530258419064575, 8.091924507347516}, \
{9.671975259373665, 8.233641347656606}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.020906178578597, 8.44232420130756}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.997761910197122, 8.523882283974384}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{10.216052479008798, 8.31296963967824}, \
{10.357769319317889, 8.45468647998733}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{10.874890780551725, 8.614393656650478}, \
{11.016607620860816, 8.756110496959568}]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.344293078996014, 9.046963456824956}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.306555017234201, 9.159493895323072}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{11.55529368881569, 8.851514565909506}, \
{11.69701052912478, 8.993231406218596}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{12.195321102698282, 9.20024676647715}, \
{12.337037943007372, 9.34196360678624}]}, 
        {GrayLevel[0.5], 
         DiskBox[{13.307935761304782, 7.5335594795002825}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{13.305541825232623, 7.669183801686693}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{12.51585393983274, 7.517803868430743}, \
{12.65757078014183, 7.659520708739834}]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.580429437743874, 7.766580903432011}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.572753854207257, 7.885022223550842}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.562293429279979, 8.003250140746644}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.549053955468127, 8.121199185792817}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{11.7870522908782, 7.708369063051441}, \
{11.928769131187291, 7.850085903360531}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{11.06802294893715, 7.661772404268758}, \
{11.20973978924624, 7.8034892445778485}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{10.348993606996101, 7.615175745486075}, \
{10.490710447305192, 7.756892585795166}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{9.629964265055053, 7.568579086703394}, \
{9.771681105364143, 7.710295927012483}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.910934923114004, 7.521982427920712}, \
{9.052651763423095, 7.6636992682298}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{9.634152396632263, 7.390639928323024}, \
{9.775869236941354, 7.532356768632113}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{10.323909441975802, 7.851164260857926}, \
{10.465626282284893, 7.992881101167015}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{9.61115114128983, 7.745570473232281}, \
{9.75286798159892, 7.887287313541371}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.895809332372837, 7.656734685376961}, \
{9.037526172681927, 7.798451525686051}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{9.603105123083855, 7.795797136207458}, \
{9.744821963392946, 7.937513976516547}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{10.313181417701172, 7.918133144824829}, \
{10.454898258010262, 8.05984998513392}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.478356651191406, 8.235398251069569}, \
{9.620073491500497, 8.37711509137866}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{8.694677725343459, 8.192921887602303}, \
{8.836394565652549, 8.334638727911393}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{10.03392700347311, 8.750836792509718}, \
{10.1756438437822, 8.892553632818808}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.381864949255908, 8.442856215451396}, \
{9.523581789564998, 8.584573055760487}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{9.174160451994917, 8.762281523547236}, \
{9.315877292304007, 8.903998363856326}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.528917198211438, 9.516587363385826}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.48063135428891, 9.586271330579805}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{9.741255189582587, 9.206778994611199}, \
{9.882972029891677, 9.34849583492029}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{10.255268927562714, 9.717380818692693}, \
{10.396985767871804, 9.859097659001783}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.585513003599308, 10.516860736792218}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.51339782250015, 10.611129827957628}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{10.811747465228875, 10.175099160360162}, \
{10.953464305537965, 10.316816000669252}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{11.291755536463276, 10.723589351506567}, \
{11.433472376772366, 10.865306191815657}]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.552041498381906, 11.619112605517117}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{12.45372232725536, 11.735819269132886}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{11.837309721782043, 11.194275100242455}, \
{11.979026562091134, 11.335991940551546}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{12.281825808812636, 11.779321713952545}, \
{12.423542649121726, 11.921038554261635}]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.825534235270617, 10.629424289587387}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.749873305583062, 10.799901071800333}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{14.058758589739844, 10.351732487066023}, \
{14.200475430048934, 10.493449327375114}]}, 
        {GrayLevel[0.5], 
         DiskBox[{14.022359464562054, 10.653195524746252}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{13.946361569989463, 10.804766735895821}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{13.866818192741455, 10.95450772281921}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{13.783773380311324, 11.10233556578953}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{13.26984078703216, 10.335390550057717}, \
{13.411557627341251, 10.477107390366807}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{12.625733615054354, 10.012434834535233}, \
{12.767450455363445, 10.154151674844323}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{11.981626443076548, 9.689479119012747}, \
{12.123343283385639, 9.831195959321837}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{11.337519271098742, 9.36652340349026}, \
{11.479236111407833, 9.508240243799351}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{10.693412099120936, 9.043567687967775}, \
{10.835128939430026, 9.185284528276865}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{9.898328499112537, 8.985700291492583}, \
{10.040045339421628, 9.127417131801673}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{11.780353161050593, 10.052753722142613}, \
{11.922070001359684, 10.194470562451704}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{11.164999315076495, 9.677901634744432}, \
{11.306716155385585, 9.819618475053522}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{10.549645469102396, 9.303049547346252}, \
{10.691362309411486, 9.444766387655342}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{9.507343290345846, 10.402054133436696}, \
{9.649060130654936, 10.543770973745787}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{9.100449880123058, 9.807401128820425}, \
{9.242166720432149, 9.949117969129516}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.69355646990027, 9.212748124204156}, \
{8.835273310209361, 9.354464964513246}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{8.286663059677482, 8.618095119587887}, \
{8.428379899986572, 8.759811959896977}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.946763391421291, 7.971564763983732}, \
{8.088480231730381, 8.113281604292823}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.518487015769704, 8.420452297488746}, \
{8.660203856078795, 8.562169137797836}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.689882952331651, 8.115871732498805}, \
{7.831599792640741, 8.257588572807895}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.722099718492377, 9.311835648811982}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.679132022120866, 9.339061246162986}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{8.171276184516305, 8.689318875634333}, \
{8.312993024825396, 8.831035715943424}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.475695026941544, 9.343710640772079}, \
{8.617411867250635, 9.48542748108117}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.3634028845594, 10.609015413190086}, 0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.289734522597453, 10.650971943707358}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{8.80996795617809, 9.982017817577656}, \
{8.95168479648718, 10.123734657886747}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.06868014289814, 10.658769138248832}, \
{9.21039698320723, 10.800485978557923}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.883645164042278, 11.967797768148932}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.77786012451918, 12.021619569560771}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{9.387840923631387, 11.30476514382753}, \
{9.529557763940478, 11.44648198413662}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.599979508086676, 12.002078889009203}, \
{9.741696348395767, 12.143795729318294}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.631682985885345, 11.56361638416954}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.534924486954697, 11.65868204875527}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{11.00774387115806, 11.026602132272034}, \
{11.149460711467151, 11.168318972581124}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.949428200462787, 11.21996999236497}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.860944724712153, 11.299077105908593}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.770624329368731, 11.376080268695109}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.678517029746782, 11.450936839886081}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{10.354320100397798, 10.651763083178793}, \
{10.496036940706889, 10.793479923487883}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{9.874079456870149, 10.114600754374885}, \
{10.01579629717924, 10.256317594683976}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{9.3938388133425, 9.577438425570977}, \
{9.53555565365159, 9.719155265880067}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{8.913598169814852, 9.04027609676707}, \
{9.055315010123943, 9.18199293707616}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.433357526287203, 8.50311376796316}, \
{8.575074366596294, 8.644830608272251}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{9.041292404038602, 8.916283891055446}, \
{9.183009244347693, 9.058000731364537}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{9.210555765677704, 9.728193588536884}, \
{9.352272605986794, 9.869910428845975}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{8.776135884066255, 9.153342468991498}, \
{8.917852724375345, 9.295059309300589}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.328128471254166, 8.588634527791864}, \
{8.469845311563256, 8.730351368100955}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{8.73519568444218, 9.183531144638737}, \
{8.87691252475127, 9.325247984947827}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{9.155968832845604, 9.768445156066536}, \
{9.297685673154694, 9.910161996375626}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.33812045915971, 9.40967841279466}, \
{8.4798372994688, 9.55139525310375}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.775808899213528, 8.8376643980384}, \
{7.917525739522619, 8.979381238347491}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{8.34090309163089, 10.177119598929185}, \
{8.48261993193998, 10.318836439238275}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.099598685588909, 9.497554192202312}, \
{8.241315525897999, 9.639271032511402}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.676048762162244, 9.58083253802197}, \
{7.817765602471335, 9.72254937833106}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.176291360467772, 11.04636898834448}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.092660596705475, 11.0602712672849}, 0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.777515422111531, 10.294794354447658}, \
{7.9192322624206195, 10.436511194756749}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.76927212391352, 11.019264087164265}, \
{7.910988964222611, 11.160980927473355}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.194722344169318, 12.501223557141252}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.076853229425803, 12.515156707671439}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.828551300849844, 11.737359082526048}, \
{7.970268141158934, 11.879075922835138}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.769436363575267, 12.463826330531774}, \
{7.911153203884355, 12.605543170840864}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.077247251813358, 13.962502488765944}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.92502624782792, 13.973266813593868}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{7.8118020956243175, 13.183117361985548}, \
{7.953518935933408, 13.324834202294639}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.701735681801949, 13.909587923254838}, \
{7.84345252211104, 14.051304763563929}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.544511267628671, 14.835548795687522}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.371064042954673, 14.904126997820214}, 
          0.08030620415473716]}, 
        {GrayLevel[0], 
         RectangleBox[{10.122198717005512, 14.129426000006383}, \
{10.263915557314602, 14.271142840315473}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.954931489271123, 14.289608809172893}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.794493668750187, 14.344465146776724}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.632809480576473, 14.395531136666442}, 
          0.08030620415473716]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.469968458076835, 14.442778500826641}, 
          0.08030620415473716]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{9.570901595760688, 13.564864362590702}, \
{9.712618436069778, 13.706581202899793}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{9.337787667257489, 12.88307822345344}, \
{9.47950450756658, 13.02479506376253}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{9.104673738754292, 12.20129208431618}, \
{9.246390579063382, 12.34300892462527}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{8.871559810251094, 11.519505945178917}, \
{9.013276650560185, 11.661222785488008}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.638445881747895, 10.837719806041656}, \
{8.780162722056986, 10.979436646350747}]}, 
        {Hue[0.5, 0.67, 0.6], 
         RectangleBox[{8.045545986273314, 10.253473243445935}, \
{8.187262826582405, 10.395190083755026}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{8.706504520287554, 12.319362592074253}, \
{8.848221360596645, 12.461079432383343}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{8.530271908708174, 11.62070923754298}, \
{8.671988749017265, 11.762426077852071}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.312876548698098, 10.93218183165336}, \
{8.454593389007188, 11.07389867196245}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{8.431341761490131, 11.644429488422507}, \
{8.573058601799222, 11.786146328731597}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{8.331880859794019, 11.66581530999123}, \
{8.47359770010311, 11.80753215030032}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.188713423033667, 10.959644276718583}, \
{8.330430263342757, 11.101361117027674}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.506787601356617, 10.31074003124714}, \
{7.648504441665706, 10.45245687155623}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.515265441887795, 11.031227761470086}, \
{7.656982282196884, 11.172944601779177}]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{446., Automatic}]], "Input",
 CellChangeTimes->{{3.771713960274273*^9, 3.771713960564582*^9}, {
  3.7717140840564036`*^9, 
  3.7717141029509373`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vQm0bVV5oLvr7H3a2wGXRsEWQTrBiLQXuGJLiAFE7BEUewwGQVEkdokV
kYyEFx/EkqBGOlEDEbEJWsEYK5ooCSksiqJEQlGEWyWJlIQQdcAY+33z/+b8
1zrr7kuS8d54e1wO++yz9mz+vpv/PO60d77ljW877Z2nv/60Jx1z9mlvf8vp
r3/Hk15w5tl8NP53o9G/+wb//cfHjHg/HY38r7z+lP98+//+3X8oP8d/+7d/
+/3vf7+8LX/ZM/7ysfJz/oILLvjFX/zFX/7lX37DG97wT//0T/H3PeLv/3f8
/a//+q//5E/+5Oc//zk/TzzxxNHcBz/4wdH4ZS972RVXXNHGe0o8/9Hyc+G1
r33t8ccfz5PHHnvse97znlNPPdVvnHnmmaeccsrqb/xuzPAXf/EXJ5xwwgfj
dfrpp4/m+P5oct555/H7cccd97nPfa5bU3xjzaWXXvrKV77Sb5x99tkvf/nL
P/7xj7OLo4466kMf+hBrHQ2+sXL//feznje/+c08zphXXnklH7upH//4xx1M
Yg+T22+//ayzznrJS15y0UUXjQN+/+2//bf/8T/+R1u9I18c+/2bv/mb//2/
/3egbcobfr0svgHc/viP/5h5Rx/sPf2P//iP3/72t336n//5n//sz/7s0wED
VsauX/ziF7NKZh99IL7ze1vNwBf42qfK58vMwHeEAsg799xz+fhHP/pRmfO9
ve/353Ss+P4alseEfv+MM8543ete9453vON5z3vec57znPe9730Fiuf16CRX
ARyAxijGWOSp5z73uQAVdIFE1sCQlUb4HdSWx97TGydXA9y/+93vjv4g1vhf
/+t/PeaYY57//OeDSAZhO47x6le/+sILL+zG+A+9tTzyyCOgj5+jHfl07p57
7vlI4Prv/u7v/st/+S/ulwW88IUvZHHvfve7AS08cF43ToXMT3/6029961v/
/b//d35dH+PDB3IL2wMyoznWNhq/9a1v5Q/lgd8M+P/n//yf/9f/+l/Owyqc
AeL6wz/8w9Gv9WYBYczypS996dprrwXmjLEuPv/e9773S7/0S3Ae9HvNNdfA
Mu4Z0r744iCXfx+U1O1zruzzhz/84WjMIKyt/PnXVu+HJ5njuuuuu+GGG5h4
OSDCJ/De+eefzyZZICuVZJ797Gcnf8J5bDBnXZSW3R2zsYOygvfHbB8PKP39
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
0xZBKbJAiJpqN/ajt1owrK+Er4JhkxV2Y52p2Hz83tUQZz1O70xTVtZ6iVyV
OPY3AI+nnHIKRh7KEAXNm9L1XC3HfKZZaxVW5PpqT9ZyasYaGKimUornTboO
uu4LGXv88ce/OV7Y3AzUo5RFG7xLR6waEzGkekgs5pf97Q6ALcBybrnllkfa
LTLLfYoBQGpfthjd6uLsHqMZhqua3BBD0bQFO0WRBwTXwW92d+KnBpOD2RzA
c78t07pUokbLO++8M2pV/cAy+aqtG6Ni9itf+cpWpxJWkoeyYEOVZCVGrGMH
qYhh8CS+8Y1veO/1NEKRBtLz6B6qTYefQdQeSFSFnh8yZr3bYZCPGN6fJs2k
2Kr0PKgbatWw81a4GQ4stGIdKSvbZ599irGhLvE6nRgofmhvatAiAmCqrJiy
y6sJIkhwNlUNutaVLrlnxYs3u3T0tPH888/3Zq53v/vdaBRbMItKedaGSsZX
gKiN/Ur1xa5bURRqj+9IzxFRKN0ni4BZQVaAH0bIw71WkRSz+YADIqezFp41
MKF7rYVknBtE3Xfffe123Y39yDUWkJ30gIRHdu666y5rypjRph4m04t/7QmB
9H+QX3jBVvXUPuEBre2yUgTBgfZmyZoCrMt7OzJj5IV9WRu5wNOSm1vga49G
U4POyEWL9SuDh3WCi2qj7HwBnPNe51IzxGxvfOMb0TPDrpzZAdBbPizLhHQL
X4deW6sIyqiPTnleYqZrW5bzhAEvPKmjpXmoGwKDihB2pcLTSN0/xi2oXjSj
vc17DBTs1euuuw744aQWLireYTkbp28+jeZjJZqideaxuGmziZb5HS0HAr2R
11FLL/WWI5yXmu28ljJyXr+xO4NU79LqUVRUwQdMPDbmmqET1gkj81OHSHfK
DlDyuGYcckal1K8O3CEpihFZLy484sDDoRA4pMo0eMGAAxcey4lf29mNxTvv
vBNITSNM/Od//uf9bqOz6WopbW1DQuzYw7gLzSI4+uijJaygq8n65WX4R3IK
+bRiLJsv8rB5OmxZZAQaqXkQ85kgZr/FU4iMxKI2F1tY1esm/V7LB2r3+K5m
UjqKM1xj9ljPkNpVFGwxCqBBZwApAMz3UF/FQgspNG9MD2FRT31l5YqNd5pd
u1Xdaka/6tnOjA3N77I8P4MiVESIA0NXGmNQhHpJqCdFIIhYkfcsyV6161Ng
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
Kx85Wz9+zBujBEyo981CvQ/gBjty5skvqAeTeRQRjHnN+enqe33GeZVkPQN2
zFZ3icPk4nGCdtH8LlGEsMUs8iuZW2UGVMrfyg0Eca3QdjvvvLPxn6wwwAAX
5DZMgfcZABPLUwl22NlleV4VqVE1mgObIfFXvFbLv9gSv9/T130jbyDRUoo2
x4/0bqr/GRBbHkhbZLrnpcrBpzi7VShO3qmd3RC/T4/XAQcccMghh2BsHNdR
YvGH82wNRsiHP/zhQn0hNzdAenqpCGusR906XXQja0zywAMPqF1qL4+uY4ER
iu9///swWXZbLR25NA48bcA4qH28ZX5ltMW25xo/tZcWO0BQFExLf8hqcGCU
zxvYI9oUggL5VyMbdn3KyAYv5oM/wF3tNmRt55/FrTX2IFEiWyEK1h2pnmbM
87PVi8nYDrTqpbkx4859OsSiUgx5vsqKnx+2anmj5FmPoTmBDpwUMlw7iENC
ad9uV6Br9EHRWZHI7F3mFyq046LUP8/q8uBc60OU3L5sSp3dwi6GkD2QlP2Y
ehIkT9lAeqU4f6782AmSZh+ICO/9gaPtyerW8351gwyAAd/z7LPPxqIFPEUr
9+ixVBRh56Y/CHp3bzRg3sI47jroka96FH66+hY8K0hZVKHkyPptDwliXjAe
1vfv//7ve0o8z4F78tEOl2q7IusymlDjthsavs1itqjpGrNfqj92CTkjF+xy
cIP9McYDylEyKsw8aWeLax/vqi218LL6sFRbImzYdjv9MrzjZimjVUpblwB2
7R3Qp8zit9YOeOuMO1rthpSzalZD2VNRUHjUIG3l/1tsjvYZJS0JTEkVfHhW
J2lze2jT6iYmsp8LKM70L7/a/C15JE6etf73pjq67oh8Nf3+HpWG5Nnun+My
R0TjZZddhoYxrmgWS0vLojw444wzzjj11FONUpz+/7T2LsCaVuWh5j+973v3
7nsDApEYLq3QERCxG7mJeDBqurlDlJYo4kGQgGDUjGNEnSgqpJXEOJ6DUUEw
Cscbk9RAppyTZBJTFFWkEnsYK9jlUApVUpjSsjiaOl31z7PeZ633+/a3/yZJ
nezq2rX7v6xvrfd913u/XHvtddddVxb49Y4qZyASmCN7saxXT/NalFYrZSBL
SFk5PxjXGdHfdXY/kNHyYTRaLi8fkFE7dtduU9ktq1SyV9+ulAeW7o8faGuq
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
49KEeOKJJ4yZGngt1By6wXJOqFRApVGXxeC2N+wopSd9N7TX+p0tZ81X0+sH
zHi+PiAe/uvxY6Jr5f0dl+9TQjdB7/ik0BPWt97Sagy26zVAC7Ts48lj4auS
Sacx9CYUF3p0BiX3Xl+twhqV1iD72saXHLNXvdeszarZD2crVJIpp7JZeAE4
yOpBXmEnX/rSl+666y7UKKhRvX/fvn1lRrF5laaQIijA4dSA82XunDurWg0r
c9Gd35uTK6Y5CA9zKt1sk3HQgqpoaG7ROBXrr59BV56GIZSRo9Jv0DBVmW6e
WWw/js4JyaPmMk8NmFtmXXjv8yZSA19Ej0RVNmgFPHxSVsK1+SMl17p0DXv1
q+1lbri7Uknn4+lTSSc7jk851rJMIRPpwmubE3/Sd1P5Rmglw8oL9HXlW3YA
q/Gv77W2QryUPbzN30IlS8q47bbbcmYL59PJMG4+GHObgQeAsQu2bJlbl5XP
UzkbdJQVo97kLsdS7bHrkmY+caOkGTVt57tlztUShsF9992nOg9VsYBQ1B3V
+gfHTDo9fsDCDEBtlxUdgSoMh5FVfePOOhZc3oo2A3YVlaxVS7EUJSfZOXWL
+wLyflinC87ziM9//vMvfvGLt2/ffuaZZ0Il/P7nf/5np4l1fqA+nXTxoqCT
uQGdSBh1utlQxm1u0LXL/IE6I+sodoa0hZydLgFbY0Nbt2494ogj+BvewkO/
+93vymFkzLrf+A09mImkMsS7qHhcEU6CGCn1yGua4iiQaw5NegXGodDbqbP5
h+o86T4FqHqBfhTCwg8DL4eKdXiFrF+Jm9qhKdayNtPLTICUXDKJfxUNTIyQ
Tmd1fOkR2myKFRG0zjsRE4u3sAVWgLQzlG7ehJFcXfDeZy4ZX4ZZQAMnnnji
DTfcIK/I2qhKA77aRYVOaHju04CxpilP3+m3zhudpN9Kx7aGz2roWfFrC2LH
3AXmnnfFFVdk7tjrX//63bt3K1YhHsfW28Sc39iZ5iuMQ8uA18M1v/zlL+te
Ssh30091JlR4229F5VKqkHN6L6QKKQTy1Pc8yoydJAa0DK5izpVZlP/bBykH
lEsxtZ/xzIBeh7FP/RBDi+qIHsyy6KflnM7YExfYnnHGGWC563ANQMoHjh7c
7T62u/iP+gObrdGxskBUsC5YRwVkskRFBb35coIeh7raAvt58sknncNikpzP
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\
\>"],ExpressionUUID->"b113b300-e77a-4786-b2ee-247cfdc79907"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Inherited\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Inherited\\\", \\\"[\\\", \\\"\\\\\\\"State\\\\\\\"\\\", \
\\\"]\\\"}]\\) is Protected.\"",2,25,25,23486100759169487882,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717141718803825`*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"319af7a6-d319-48e5-9ff7-1e5198af584c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<ProbabilityNet\>\""}], 
    "\[RightDoubleBracket]"}], ",", "\"\<MXNetNodeGraph\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7717134295695724`*^9, 3.7717134450541377`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"d8f788cf-a9e0-45ec-ac59-2b2b4bd7c69a"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      ".Inputs.checker_b", ".Inputs.checker_w", ".Inputs.Input", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_0$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$1", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_1$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.exp_1$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_in$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$1", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_2$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_1$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_3$0", 
       ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_f$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_0$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$1", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_1$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.exp_1$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_in$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$1", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_2$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_1$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_3$0", 
       ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_f$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_0$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$1", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_1$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.exp_1$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_in$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$1", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_2$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_1$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_3$0", 
       ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_f$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_0$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$1", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_1$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.exp_1$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_in$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$1", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_2$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_1$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_3$0", 
       ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_f$0", 
       ".Nodes.coupling_1.Nodes.Total_loss_j$0", 
       ".Nodes.coupling_1.Nodes.Total_loss_j$1", 
       ".Nodes.coupling_1.Nodes.Total_loss_j$2", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_0$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$1", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_1$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.exp_1$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_in$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$1", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_2$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_1$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_3$0", 
       ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_f$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_0$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$1", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_1$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.exp_1$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_in$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$1", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_2$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_1$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_3$0", 
       ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_f$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_0$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$1", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_1$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.exp_1$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_in$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$1", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_2$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_1$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_3$0", 
       ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_f$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_0$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$1", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_1$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.exp_1$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_in$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$1", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_2$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_1$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_3$0", 
       ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_f$0", 
       ".Nodes.coupling_2.Nodes.Total_loss_j$0", 
       ".Nodes.coupling_2.Nodes.Total_loss_j$1", 
       ".Nodes.coupling_2.Nodes.Total_loss_j$2", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_0$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$1", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_1$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.exp_1$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_in$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$1", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_2$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_1$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_3$0", 
       ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_f$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_0$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$1", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_1$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.exp_1$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_in$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$1", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_2$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_1$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_3$0", 
       ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_f$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_0$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$1", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_1$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.exp_1$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_in$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$1", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_2$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_1$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_3$0", 
       ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_f$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_0$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$1", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_1$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.exp_1$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_in$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$1", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_2$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_1$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_3$0", 
       ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_f$0", 
       ".Nodes.coupling_3.Nodes.Total_loss_j$0", 
       ".Nodes.coupling_3.Nodes.Total_loss_j$1", 
       ".Nodes.coupling_3.Nodes.Total_loss_j$2", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_0$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$1", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_1$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.exp_1$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_in$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$1", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_2$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_1$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_3$0", 
       ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_f$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_0$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Scaling", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$1", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_1$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.exp_1$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_in$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$1", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_2$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_1$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_3$0", 
       ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_f$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_0$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$1", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_1$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.exp_1$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_in$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$1", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_2$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_1$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_3$0", 
       ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_f$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_0$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.1$\
0", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Scaling",
        ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.Biases",
        ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.3$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$1", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.wb_convert_1$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_1$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.exp_1$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_in$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$1", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_2$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_1$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_3$0", 
       ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_f$0", 
       ".Nodes.coupling_4.Nodes.Total_loss_j$0", 
       ".Nodes.coupling_4.Nodes.Total_loss_j$1", 
       ".Nodes.coupling_4.Nodes.Total_loss_j$2", ".Nodes.square$0", 
       ".Nodes.summation_z$0", ".Nodes.minus_half$0", 
       ".Nodes.gaussian_coef$0", ".Nodes.Total_loss_jac$0", 
       ".Nodes.Total_loss_jac$1", ".Nodes.Total_loss_jac$2", 
       ".Nodes.summation_jacobian$0", ".Nodes.plus$0", 
       ".Nodes.density_coef$0", ".Nodes.minus_prob$0", ".Nodes.perpixel$0", 
       ".Outputs.Total_Loss", ".Outputs.Z_out"}, {CompressedData["
1:eJwt2HfUV3McwPHn9ytaSmnvvffeEspekWhR0ULZWSkjioZNolJGomETEi0S
GvZMlCJRyV7fz7mvP17en3Pu/eR7733OczrVHjq2z5h8QUHBsvSfaKGkcEE2
F6ZIcoAeqKEoJZJiWlzDQRyclNRSGkpTNimjh2iolJTT8lpBK2qoTBWqOn81
c3VzdWpQ0/PWtF+L2tSxV8c9dc11qed6Pep7X/VpkOQ0NE4aaiMNTWieNNVm
GlrQOmmprTS0oX3SVttp6JJ00I7aSTtr6Eo3ujv/oeYe5h4cRk/P29P+4RzB
kfaOdE8vcy96u96bo7yvozja9zya45Jj9FgNx3NScoKeqOFkTk1O0T4aTqNf
0ldP1zAwOUPP1P46QMMgBnOW859tHmIewlCGed5h9s/hXIbbG+6eEeYRjHR9
JKO8r1GM9j1Hc0Fynp6vYQwXJWP1Qg0Xc1lyiV6q4XKuTMbpFRquTa7Sq/Ua
Ha9hAhO5zvmvN99gvoEbmeR5J9m/iZuZbG+ye6aYp3CL67dwq/cVjd8fUwuy
n/+pTPMdpzHdeabbmVGQff8Z3JHcprdruJN7krv0bg33cn9yn87UMIvZyQP6
oIb5yRydqw/pPA0P8wiPOv9j5gXmBTzOQs+70P4TPMkie4vcs9i8mCWuL2Gp
97WUpwqy7/8UzyZP6zManuPF5Hl9QcNLvJIs05c1vMqKZLm+pmF18rq+oSt1
lYY1rOVN53/LvM68jrdZ73nX23+Hd3nP3nvu2WDewEbXN7LJ+9rEZt9zMx8m
7+sHGj7i0+Rj/UTDZ3yZfK5faPiKrckW/VrDd8k3+q1u0+0adrCT753/B/Mu
8y5+ZLfn3W3/J35mj7097tlr3ss+1/fxi/f1C/t9z/38nvyqv2n4g7+TP/Uv
Df8Qf9i/+p+GHIWTvBbSUCw5QA/UIlpUQ3FKcFAu+1+UNJfKZXMpDqZ0Lnve
0vbLcAhl7ZV1bzlzOcq7Xp4Kuex9ReP3R8Vc9vMfDZVy2XesZK7sPJXtVsll
37+KuXpSVatpqEHtpKbW0lCH+kldraehAY2ThtpIQ4ukiTbVZtpcQ0ta0dr5
25jb5rK5Le1o73nb2+9ARzrZ6+SezubOdHG9C129r6508/27mXsk3fVQDYdx
RNJTD9dwJEclvbS3hqM5LjlGj9VwcnK8nqAn6kkaTqEPpzr/aea+uWzuy+n0
87z97J/BmfS31989A8wDGOj6QAZ5X4MY7HsONg9JztKzNQzl3GSYnqNhOKOS
ETpSw2guSM7T8zVcnIzRsXqhXqThEi7lMue/3Dwul83juIIrPe+V9q/iaq6x
d417xpvHc63r1zLB+5rARN9zovmG5Dq9XsON3JxM0ps0TObWZIreomEqM5Jp
Ol3DXclterveoXdquJt7uNf57zPPzGXzTO5nluedZf8BHmS2vdnumWOew1zX
5/KQ9xWN3x/zctnP/zzm+47zedh5HrbziO//iHlB8qg+puFxnkwW6hMaFrE0
WaxLNDzFs8nT+oyGl5Ln9Hl9QV/UsIyXecX5XzUvz2Xzcl5jheddYf913mCl
vZXuWWVexWrXV7PG+1rDWt9/rXld8qa+peFt3k3W6zsa3mNTskE3atjMh8n7
+oGGz5KP9GP9RD/V8Dlf8KXzf2XeksvmLXzNVs+71f43fMs2e9vcs928ne9c
/44d3tcOdvqeO827ku/1Bw0/8nOyW3/SsIdfkr26T8N+fk9+1d80/JP8oX/q
X/q3hn/5jwL/lpbLm/PZnKcQhfPZ80Zj/4B85kCK2Cvi3qLmohRzvRjF89n7
Km4ukc++ZwlzqeQgLanhYA5JSmsZDWWpkJTT8hoqUiWppJU11EyqajWtrjU0
1KI2dZy/rrlePpvrUZ8GnreB/YY0orG9xu5pYm5CU9eb0sz7isbvj+b57Oc/
Glr4ji1o6Twt7bSiNW1om8/+TaBdPvu7bDS0z2e/i9ubO/izOtDRbidzJzrT
ha50c47uyf+h+3Zd
       "], Null}, {EdgeStyle -> {
         GrayLevel[0.6]}, FormatType -> TraditionalForm, GraphLayout -> 
       "RadialDrawing", 
       Properties -> {
        ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{374, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{24, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{93, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{34, 0, 0}, {27, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{370, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{207, 0, 0}, {200, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{36, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{191, 0, 0}, {192, 0, 0}, {193, 0, 0}, {194, 
            0, 0}, {195, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{284, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{480, 0, 0}, {453, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{519, 0, 0}, {512, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{197, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{187, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2" -> {
          "attrs" -> 
           Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{120, 0, 0}, {121, 0, 0}, {122, 0, 0}, {123, 
            0, 0}, {124, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{255, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.summation_z$0" -> {
          "attrs" -> Association["axis" -> "(1)", "keepdims" -> "false"], 
           "inputs" -> {{559, 0, 0}}, "op" -> "sum"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{142, 0, 0}, {143, 0, 0}, {144, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{360, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{44, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{491, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{315, 0, 0}, {316, 0, 0}, {317, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{209, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{441, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{511, 0, 0}, {512, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{432, 0, 0}, {433, 0, 0}, {434, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{78, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{318, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{458, 0, 0}, {459, 0, 0}, {460, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{302, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.Total_loss_j$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{278, 0, 0}, {235, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{323, 0, 0}, {324, 0, 0}, {325, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.Total_loss_j$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{445, 0, 0}, {479, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{371, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{157, 0, 0}, {158, 0, 0}, {159, 0, 0}, {160, 
            0, 0}, {161, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{446, 0, 0}, {416, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{281, 0, 0}, {282, 0, 0}, {283, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{529, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{265, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{276, 0, 0}, {244, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{69, 0, 0}, {37, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{369, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{83, 0, 0}, {84, 0, 0}, {85, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{488, 0, 0}, {489, 0, 0}, {490, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{102, 0, 0}, {95, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{149, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{469, 0, 0}, {470, 0, 0}, {471, 0, 0}, {472, 
            0, 0}, {473, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{525, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{395, 0, 0}, {396, 0, 0}, {397, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{364, 0, 0}, {365, 0, 0}, {366, 0, 0}, {367, 
            0, 0}, {368, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{173, 0, 0}, {166, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{247, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{201, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.Total_loss_jac$2" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{564, 0, 0}, {558, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{549, 0, 0}, {552, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{214, 0, 0}, {215, 0, 0}, {216, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{486, 0, 0}, {454, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> 
           Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{248, 0, 0}, {249, 0, 0}, {250, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{210, 0, 0}, {211, 0, 0}, {212, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{197, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{99, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.Total_loss_j$2" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{418, 0, 0}, {408, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{550, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{171, 0, 0}, {166, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{205, 0, 0}, {200, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{445, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{116, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{522, 0, 0}, {523, 0, 0}, {524, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{453, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{545, 0, 0}, {546, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{454, 0, 0}, {455, 0, 0}, {456, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{277, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{375, 0, 0}, {348, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{273, 0, 0}, {268, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{356, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{126, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{174, 0, 0}, {142, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{348, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{24, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{517, 0, 0}, {512, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{58, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.Total_loss_jac$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{141, 0, 0}, {280, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{2, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{386, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{496, 0, 0}, {497, 0, 0}, {498, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{483, 0, 0}, {478, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{376, 0, 0}, {379, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{554, 0, 0}, {522, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{96, 0, 0}}, 
           "op" -> "exp"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{91, 0, 0}}, 
           "op" -> "tanh"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{391, 0, 0}, {392, 0, 0}, {393, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{440, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{94, 0, 0}, {95, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{404, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{128, 0, 0}, {129, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{59, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{414, 0, 0}, {407, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{285, 0, 0}, {286, 0, 0}, {287, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{349, 0, 0}, {350, 0, 0}, {351, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{251, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{435, 0, 0}, {436, 0, 0}, {437, 0, 0}, {438, 
            0, 0}, {439, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{542, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{48, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{103, 0, 0}, {71, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{163, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{475, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{408, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{217, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{267, 0, 0}, {268, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{406, 0, 0}, {407, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{222, 0, 0}, {223, 0, 0}, {224, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{398, 0, 0}, {399, 0, 0}, {400, 0, 0}, {401, 
            0, 0}, {402, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{457, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{293, 0, 0}, {294, 0, 0}, {295, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{509, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{231, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{302, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{448, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{199, 0, 0}, {200, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{231, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{465, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{442, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{264, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3.Nodes.Total_loss_j$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{417, 0, 0}, {374, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{165, 0, 0}, {166, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{269, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{553, 0, 0}, {546, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{380, 0, 0}, {373, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{378, 0, 0}, {373, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{233, 0, 0}, {234, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{485, 0, 0}, {478, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Outputs.Z_out" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{555, 0, 0}},
            "op" -> "identity"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{153, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{509, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{326, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{131, 0, 0}, {104, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{145, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.Total_loss_j$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{167, 0, 0}, {201, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{341, 0, 0}, {314, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{265, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{92, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{513, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{58, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{357, 0, 0}, {358, 0, 0}, {359, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{23, 0, 0}}, 
           "op" -> "tanh"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{64, 0, 0}, {67, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{423, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{243, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{289, 0, 0}, {290, 0, 0}, {291, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{45, 0, 0}, {46, 0, 0}, {47, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{154, 0, 0}, {155, 0, 0}, {156, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{256, 0, 0}, {257, 0, 0}, {258, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{443, 0, 0}, {444, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.Total_loss_j$2" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{140, 0, 0}, {130, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.square$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{555, 0, 0}},
            "op" -> "square"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{390, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{330, 0, 0}, {331, 0, 0}, {332, 0, 0}, {333, 
            0, 0}, {334, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{310, 0, 0}, {305, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{127, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{239, 0, 0}, {234, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{475, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{31, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{68, 0, 0}, {61, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{237, 0, 0}, {240, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{7, 0, 0}, {8, 0, 0}, {9, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.minus_half$0" -> {
          "attrs" -> Association["scalar" -> "-0.5"], 
           "inputs" -> {{560, 0, 0}}, "op" -> "_MulScalar"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{175, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{452, 0, 0}, {420, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{10, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{164, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{477, 0, 0}, {478, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{136, 0, 0}, {129, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{225, 0, 0}, {226, 0, 0}, {227, 0, 0}, {228, 
            0, 0}, {229, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{521, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.Total_loss_j$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{306, 0, 0}, {340, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{410, 0, 0}, {413, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{74, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{32, 0, 0}, {27, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{466, 0, 0}, {467, 0, 0}, {468, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{441, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{409, 0, 0}, {382, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{179, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{60, 0, 0}, {61, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{104, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{71, 0, 0}, {72, 0, 0}, {73, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{162, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{547, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{447, 0, 0}, {450, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{92, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{236, 0, 0}, {209, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{25, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{344, 0, 0}, {339, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{213, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{242, 0, 0}, {210, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{15, 0, 0}, {16, 0, 0}, {17, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{312, 0, 0}, {305, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{57, 0, 0}}, 
           "op" -> "tanh"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.Total_loss_j$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{28, 0, 0}, {62, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{150, 0, 0}, {151, 0, 0}, {152, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{431, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{235, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{420, 0, 0}, {421, 0, 0}, {422, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{168, 0, 0}, {138, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{534, 0, 0}, {535, 0, 0}, {536, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{382, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{548, 0, 0}, {521, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{292, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{515, 0, 0}, {518, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{449, 0, 0}, {444, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{203, 0, 0}, {206, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{342, 0, 0}, {345, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{383, 0, 0}, {384, 0, 0}, {385, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{544, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{169, 0, 0}, {172, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{230, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{188, 0, 0}, {189, 0, 0}, {190, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{108, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{6, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{353, 0, 0}, {354, 0, 0}, {355, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.Total_loss_j$2" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{279, 0, 0}, {269, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{238, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{98, 0, 0}, {101, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{270, 0, 0}, {243, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{167, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{208, 0, 0}, {176, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{97, 0, 0}, {70, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{514, 0, 0}, {487, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{117, 0, 0}, {118, 0, 0}, {119, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{405, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1.Nodes.Total_loss_j$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{139, 0, 0}, {96, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{308, 0, 0}, {311, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{105, 0, 0}, {106, 0, 0}, {107, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{288, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{322, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{35, 0, 0}, {3, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{241, 0, 0}, {234, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{113, 0, 0}, {114, 0, 0}, {115, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{82, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Inputs.Input" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{132, 0, 0}, {135, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{272, 0, 0}}, "op" -> "reshape"}, 
         ".Inputs.checker_b" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{336, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{183, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{301, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{537, 0, 0}, {538, 0, 0}, {539, 0, 0}, {540, 
            0, 0}, {541, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{479, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], 
           "inputs" -> {{86, 0, 0}, {87, 0, 0}, {88, 0, 0}, {89, 0, 0}, {90, 
            0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{138, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.density_coef$0" -> {
          "attrs" -> Association["scalar" -> "-5224.89667195472"], 
           "inputs" -> {{567, 0, 0}}, "op" -> "_PlusScalar"}, 
         ".Nodes.coupling_4.Nodes.Total_loss_j$2" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{557, 0, 0}, {547, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{461, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{100, 0, 0}, {95, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{0, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{65, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{424, 0, 0}, {425, 0, 0}, {426, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$0" -> {
          "attrs" -> 
           Association["axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{543, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{202, 0, 0}, {175, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{266, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{394, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{30, 0, 0}, {33, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{500, 0, 0}, {501, 0, 0}, {502, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{530, 0, 0}, {531, 0, 0}, {532, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{404, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{14, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{112, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{307, 0, 0}, {277, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{79, 0, 0}, {80, 0, 0}, {81, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{314, 0, 0}, {0, 0, 0}}, "op" -> "_Mul"}, 
         ".Outputs.Total_Loss" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{570, 0, 0}},
            "op" -> "identity"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{133, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{427, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.summation_jacobian$0" -> {
          "attrs" -> Association["axis" -> "(1)", "keepdims" -> "false"], 
           "inputs" -> {{565, 0, 0}}, "op" -> "sum"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{198, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{381, 0, 0}, {349, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{130, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{462, 0, 0}, {463, 0, 0}, {464, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{411, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "0", "end" -> "784"], 
           "inputs" -> {{543, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{70, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{49, 0, 0}, {50, 0, 0}, {51, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{125, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{109, 0, 0}, {110, 0, 0}, {111, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{510, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.wb_convert_1$0" -> {
          "attrs" -> Association["scalar" -> "1.0"], "inputs" -> {{1, 0, 0}}, 
           "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> 
           Association["num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{11, 0, 0}, {12, 0, 0}, {13, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.Total_loss_j$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{556, 0, 0}, {513, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{336, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{146, 0, 0}, {147, 0, 0}, {148, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{62, 0, 0}}, 
           "op" -> "exp"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{271, 0, 0}, {274, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{346, 0, 0}, {339, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{428, 0, 0}, {429, 0, 0}, {430, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{487, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{451, 0, 0}, {444, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{508, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{296, 0, 0}, {297, 0, 0}, {298, 0, 0}, {299, 
            0, 0}, {300, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{163, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{304, 0, 0}, {305, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{499, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{335, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{252, 0, 0}, {253, 0, 0}, {254, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{476, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{503, 0, 0}, {504, 0, 0}, {505, 0, 0}, {506, 
            0, 0}, {507, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{18, 0, 0}, {19, 0, 0}, {20, 0, 0}, {21, 0, 
            0}, {22, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{377, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{137, 0, 0}, {105, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{180, 0, 0}, {181, 0, 0}, {182, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{184, 0, 0}, {185, 0, 0}, {186, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{259, 0, 0}, {260, 0, 0}, {261, 0, 0}, {262, 
            0, 0}, {263, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{372, 0, 0}, {373, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.Total_loss_jac$1" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{563, 0, 0}, {419, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.minus_prob$0" -> {
          "attrs" -> Association["scalar" -> "0.0"], 
           "inputs" -> {{568, 0, 0}}, "op" -> "_RMinusScalar"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{352, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{28, 0, 0}}, 
           "op" -> "exp"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{218, 0, 0}, {219, 0, 0}, {220, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{176, 0, 0}, {177, 0, 0}, {178, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{403, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{37, 0, 0}, {38, 0, 0}, {39, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{126, 0, 0}}, "op" -> "slice_axis"}, 
         ".Inputs.checker_w" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{481, 0, 0}, {484, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{275, 0, 0}, {268, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{170, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{495, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2" -> {
          "attrs" -> Association[
            "eps" -> "0.001", "momentum" -> "0.9", "fix_gamma" -> "false", 
             "use_global_stats" -> "false", "axis" -> "1", "cudnn_off" -> 
             "0"], "inputs" -> {{52, 0, 0}, {53, 0, 0}, {54, 0, 0}, {55, 0, 
            0}, {56, 0, 0}}, "op" -> "BatchNorm"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{204, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{340, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{327, 0, 0}, {328, 0, 0}, {329, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{303, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{232, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{3, 0, 0}, {4, 0, 0}, {5, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{343, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{26, 0, 0}, {27, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{415, 0, 0}, {383, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{520, 0, 0}, {488, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.gaussian_coef$0" -> {
          "attrs" -> Association["scalar" -> "-720.4478100324634"], 
           "inputs" -> {{561, 0, 0}}, "op" -> "_PlusScalar"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{347, 0, 0}, {315, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{221, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{319, 0, 0}, {320, 0, 0}, {321, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{474, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.plus$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{562, 0, 0}, {566, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{134, 0, 0}, {129, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{526, 0, 0}, {527, 0, 0}, {528, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{387, 0, 0}, {388, 0, 0}, {389, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$0" -> {
          "attrs" -> Association[
            "axis" -> "1", "begin" -> "784", "end" -> "1568"], 
           "inputs" -> {{370, 0, 0}}, "op" -> "slice_axis"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.perpixel$0" -> {
          "attrs" -> Association["scalar" -> "0.0012755102040816326"], 
           "inputs" -> {{569, 0, 0}}, "op" -> "_MulScalar"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{309, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{41, 0, 0}, {42, 0, 0}, {43, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_0$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{416, 0, 0}, {1, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{196, 0, 0}},
            "op" -> "tanh"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{412, 0, 0}, {407, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{533, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{361, 0, 0}, {362, 0, 0}, {363, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{29, 0, 0}, {2, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_in$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{63, 0, 0}, {36, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{338, 0, 0}, {339, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{244, 0, 0}, {245, 0, 0}, {246, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{66, 0, 0}, {61, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{492, 0, 0}, {493, 0, 0}, {494, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> {"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{40, 0, 0}}, 
           "op" -> "relu"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{337, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{516, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$1" -> {
          "attrs" -> Association["shape" -> "(-1, 784)"], 
           "inputs" -> {{482, 0, 0}}, "op" -> "reshape"}, 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_2$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{551, 0, 0}, {546, 0, 0}}, "op" -> "_Mul"}, 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.exp_1$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {{306, 0, 0}},
            "op" -> "exp"}, 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_f$0" -> {
          "attrs" -> Missing["KeyAbsent", "param"], 
           "inputs" -> {{313, 0, 0}, {281, 0, 0}}, "op" -> "_Plus"}, 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> {
          "attrs" -> Association[
            "num_hidden" -> "1568", "no_bias" -> "False"], 
           "inputs" -> {{75, 0, 0}, {76, 0, 0}, {77, 0, 0}}, "op" -> 
           "FullyConnected"}, 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> \
{"attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> "null"}, 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> {
          "attrs" -> Missing["KeyAbsent", "param"], "inputs" -> {}, "op" -> 
           "null"}}, 
       VertexShapeFunction -> {
        ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_4.Nodes.net_BB.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_3$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_1$0" -> "Square",
          ".Nodes.coupling_3.Nodes.net_BB.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_in$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_0$0" -> 
         "Square", ".Nodes.minus_prob$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", ".Nodes.coupling_4.Nodes.Total_loss_j$2" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_f$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$1" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_0$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_in$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_1.Nodes.net_B.Nodes.exp_1$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_4.Nodes.Total_loss_j$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_1$0" -> "Square",
          ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$0" -> 
         "Square", ".Outputs.Total_Loss" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> "Square",
          ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_f$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_3$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.Total_loss_j$1" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4.Nodes.net_BB.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.perpixel$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_1.Nodes.Total_loss_j$2" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_3$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.Total_loss_j$2" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_in$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2" -> "Square", 
         ".Nodes.coupling_3.Nodes.Total_loss_j$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_1$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.Total_loss_jac$1" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_1$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Inputs.checker_w" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_2.Nodes.Total_loss_j$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_W.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_B.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_f$0" -> "Square",
          
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.summation_jacobian$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_3.Nodes.Total_loss_j$1" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_1$0" -> "Square",
          ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_1$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_3$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.exp_1$0" -> "Square", 
         ".Nodes.Total_loss_jac$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$1" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_0$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2" -> "Square",
          ".Nodes.plus$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_WW.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_W.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.Total_loss_j$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.exp_1$0" -> "Square", 
         ".Nodes.summation_z$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_3.Nodes.Total_loss_j$2" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_1.Nodes.net_WW.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", ".Nodes.coupling_1.Nodes.net_B.Nodes.wb_convert_1$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_B.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", ".Outputs.Z_out" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_1$0" -> 
         "Square", ".Nodes.gaussian_coef$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> "Square",
          ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_f$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_1$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$1" -> 
         "Square", ".Inputs.Input" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_3$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$1" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> "Square",
          ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$1" -> 
         "Square", ".Nodes.minus_half$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_in$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_f$0" -> "Square",
          ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_1$0" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$0" -> 
         "Square", ".Nodes.density_coef$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_1$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_WW.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_WW.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$1" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", ".Nodes.Total_loss_jac$2" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_BB.Nodes.wb_convert_1$0" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_2$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_0$0" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_in$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_0$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_1$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         "Square", ".Nodes.coupling_2.Nodes.net_BB.Nodes.exp_1$0" -> "Square",
          ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.Total_loss_j$1" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_1$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_1$0" -> "Square",
          ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_1.Nodes.Total_loss_j$1" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_1$0" -> "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_f$0" -> "Square",
          ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$1" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_0$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_f$0" -> "Square",
          ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$0" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         "Square", ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_3$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", ".Nodes.square$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.exp_1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> "Square",
          ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> "Square", ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> "Circle", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> "Square",
          ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$1" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_2$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_f$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.wb_convert_1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_WW.Nodes.exp_1$0" -> 
         "Square", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$0" -> 
         "Square", 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_in$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> "Circle", 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> "Circle", 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> "Square", 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> "Square", ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$1" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> "Circle", ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> "Circle", ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_2$0" -> 
         "Square", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> "Circle", ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_in$0" -> 
         "Square", 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         "Square", ".Inputs.checker_b" -> "Circle", 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         "Circle", ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         "Square"}, VertexStyle -> {
         Directive[
          EdgeForm[
           Thickness[Tiny]]], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.gaussian_coef$0" -> 
         Hue[0.5, 0.33, 0.69], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_2.Nodes.net_W.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.minus_prob$0" -> Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], ".Nodes.coupling_1.Nodes.net_W.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.summation_z$0" -> Hue[0.12, 0.7, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.exp_1$0" -> Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.summation_jacobian$0" -> Hue[0.12, 0.7, 0.8], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_1.Nodes.net_BB.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.minus_half$0" -> Hue[0.58, 0.5, 0.8], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], ".Nodes.square$0" -> Hue[0.25, 0.7, 0.6], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], ".Nodes.coupling_3.Nodes.Total_loss_j$2" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.exp_1$0" -> Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.net_BB.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Outputs.Z_out" -> Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_2.Nodes.net_BB.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.exp_1$0" -> Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.Total_loss_jac$1" -> Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_4.Nodes.net_WW.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], ".Inputs.Input" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.exp_1$0" -> Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], ".Inputs.checker_w" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.coupling_4.Nodes.net_B.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.plus$0" -> Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], ".Nodes.Total_loss_jac$2" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.coupling_2.Nodes.net_B.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_2.Nodes.Total_loss_j$2" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], ".Nodes.coupling_3.Nodes.net_B.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_2.Nodes.net_W.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.coupling_1.Nodes.net_B.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_3.Nodes.net_B.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], ".Nodes.coupling_3.Nodes.Total_loss_j$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_WW.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_2.Nodes.Total_loss_j$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.coupling_4.Nodes.net_B.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Outputs.Total_Loss" -> Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], ".Nodes.coupling_1.Nodes.Total_loss_j$1" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], ".Nodes.coupling_3.Nodes.net_W.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.net_W.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_4.Nodes.net_W.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.Total_loss_j$2" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], ".Nodes.coupling_3.Nodes.net_W.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_W.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.density_coef$0" -> Hue[0.5, 0.33, 0.69],
          ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.exp_1$0" -> Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], ".Nodes.coupling_3.Nodes.net_B.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_4.Nodes.net_WW.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_3.Nodes.net_BB.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
Scaling" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], ".Nodes.coupling_1.Nodes.net_W.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], ".Nodes.coupling_2.Nodes.net_BB.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_2.Nodes.Total_loss_j$1" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.exp_1$0" -> Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.Total_loss_j$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.3$0" -> 
         Hue[0.08, 0.9, 0.8], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], ".Nodes.coupling_4.Nodes.Total_loss_j$1" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], ".Nodes.coupling_3.Nodes.net_W.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], ".Nodes.coupling_1.Nodes.net_W.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.thread_3$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.4.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5" -> 
         GrayLevel[0], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.1.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.\
MovingVariance" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_4.Nodes.Total_loss_j$2" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.coupling_3.Nodes.Total_loss_j$1" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.5.Arrays.\
Biases" -> GrayLevel[0.5], ".Nodes.coupling_1.Nodes.Total_loss_j$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_3.Nodes.net_WW.Nodes.core_net.Nodes.2.Arrays.\
MovingMean" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1" -> 
         GrayLevel[0], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.5.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.exp_1$0" -> Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_2$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.thread_in$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_4.Nodes.net_BB.Nodes.plus_f$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.2" -> 
         Hue[0.11, 1, 0.75], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.coupling_2.Nodes.net_WW.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], ".Nodes.coupling_2.Nodes.net_B.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer1$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.6.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_1.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], ".Nodes.coupling_2.Nodes.net_B.Nodes.exp_1$0" -> 
         Hue[0, 0.33, 0.6], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.partLayer2$0" -> 
         Hue[0.1, 0.75, 0.8], ".Nodes.perpixel$0" -> Hue[0.58, 0.5, 0.8], 
         ".Nodes.coupling_1.Nodes.net_BB.Nodes.thread_0$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_1.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.3.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_WW.Nodes.partLayer2$1" -> 
         Hue[0.04, 0.8, 1], 
         ".Nodes.coupling_4.Nodes.net_WW.Nodes.core_net.Nodes.1.Nodes.1.\
Arrays.Biases" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_W.Nodes.core_net.Nodes.2.Arrays.Biases" -> 
         GrayLevel[0.5], ".Inputs.checker_b" -> GrayLevel[0.5], 
         ".Nodes.Total_loss_jac$0" -> Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], ".Nodes.coupling_2.Nodes.net_WW.Nodes.plus_1$0" -> 
         Hue[0.01, 0.8, 0.8], 
         ".Nodes.coupling_3.Nodes.net_W.Nodes.partLayer1$0" -> 
         Hue[0.1, 0.75, 0.8], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7" -> 
         GrayLevel[0], 
         ".Nodes.coupling_2.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.2.Nodes.\
1$0" -> Hue[0.08, 1, 0.92], 
         ".Nodes.coupling_4.Nodes.net_B.Nodes.core_net.Nodes.1.Nodes.3.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.core_net.Nodes.1.Nodes.7.Arrays.\
Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_4.Nodes.net_BB.Nodes.core_net.Nodes.1.Nodes.7.\
Arrays.Weights" -> GrayLevel[0.5], 
         ".Nodes.coupling_2.Nodes.net_W.Nodes.wb_convert_1$0" -> 
         Hue[0.08, 1, 0.7], ".Nodes.coupling_2.Nodes.net_W.Nodes.thread_1$0" -> 
         Hue[0.06, 0.75, 0.92]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0.6], Opacity[0.7], Arrowheads[0.015807869077320166`], 
        ArrowBox[CompressedData["
1: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
xXhVtg==
         "], 0.07098292005859753]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
        Tiny]}], 
        {GrayLevel[0.5], 
         DiskBox[{5.5332173286084565, 5.614396636018807}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.505828366954222, 8.020509641737572}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.451064637436041, 8.019262721031156}, 
          0.07098292005859753]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.286029056335169, 7.347004760450592}, \
{5.411293041260096, 7.47226874537552}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.362125020264227, 8.61736274825834}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.293812241106759, 8.612690026151247}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{5.170086850197749, 7.939196446027841}, \
{5.295350835122677, 8.064460430952769}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.027127580242243, 8.526730738819008}, \
{5.152391565167171, 8.651994723743936}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.102586009049869, 9.803290242105389}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.007344978199032, 9.79240229034393}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.938436029061493, 9.121723957871541}, \
{5.063700013986421, 9.24698794279647}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.755097708579891, 9.701505651293772}, \
{4.880361693504819, 9.8267696362187}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.734993367981708, 10.969335607491605}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.6133046645948985, 10.949777931681215}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.652885190356162, 10.294325795256261}, \
{4.77814917528109, 10.41958978018119}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.429460695377387, 10.864823307066587}, \
{4.554724680302315, 10.990087291991514}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.8238826567224784, 9.357454095517246}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.739898959185787, 9.249284695683029}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{1.1941144339747904, 8.872055218551223}, \
{1.3193784188997177, 8.99731920347615}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.1458811069545982, 8.78674809159255}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.0748050684233954, 8.686056284767076}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.0060395142924525, 8.583772650787191}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.9396200809567006, 8.479950196132982}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{1.5388868675218792, 8.327060476050018}, \
{1.6641508524468065, 8.452324460974946}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{2.030349176099893, 7.98014849698831}, \
{2.155613161024821, 8.105412481913238}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{2.521811484677907, 7.6332365179265995}, \
{2.647075469602835, 7.758500502851527}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.0132737932559213, 7.28632453886489}, \
{3.138537778180849, 7.411588523789818}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{4.954231080514561, 7.9019791516812505}, \
{5.079495065439489, 8.027243136606177}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.4890687760637435, 6.916946709666684}, \
{3.6143327609886713, 7.042210694591612}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{2.8830097030191593, 7.085234692850378}, \
{3.008273687944087, 7.2104986777753055}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.367894472180473, 8.557847249821778}, \
{5.493158457105401, 8.683111234746706}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{4.566965388790988, 9.664640032774932}, \
{4.692229373715915, 9.78990401769986}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{4.696053952698845, 9.077086405743705}, \
{4.821317937623773, 9.202350390668633}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.825142516606704, 8.489532778712478}, \
{4.950406501531631, 8.614796763637406}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.900866477876692, 7.889616301391333}, \
{5.0261304628016195, 8.014880286316261}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.063281532931183, 7.3099033495778105}, \
{5.18854551785611, 7.435167334502738}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.306758550633547, 6.743693027405822}, \
{5.432022535558475, 6.86895701233075}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.256281999526855, 6.113865347953026}, \
{5.381545984451782, 6.239129332877954}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.026566210127546, 7.3465204023432955}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.987268815108385, 7.334538583164783}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{5.054802466916562, 6.680771770873401}, \
{5.18006645184149, 6.806035755798328}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.8085229168379255, 7.230639698664387}, \
{4.933786901762853, 7.355903683589315}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.55827902619537, 8.459844466452791}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.493760155534879, 8.43691445431145}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.587835443735237, 7.790264717033735}, \
{4.713099428660165, 7.915528701958663}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.303739612888733, 8.324046935702983}, \
{4.429003597813661, 8.44931092062791}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.988405016889634, 9.531771764604244}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.8996333160482934, 9.495591845024101}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.070370468237281, 8.87850339413231}, \
{4.195634453162209, 9.003767379057237}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.7490761955056557, 9.394768579956823}, \
{3.8743401804305835, 9.52003256488175}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.2886510150255006, 9.168733317145213}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.208583662220905, 9.093955629678842}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{2.5963741509561795, 8.629293366318747}, \
{2.7216381358811073, 8.754557351243674}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.555611497030189, 8.592002467597075}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.4886032091559294, 8.523451094107918}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.4231727326228514, 8.453392160403894}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.359353975487577, 8.381861973148453}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{2.889466721405612, 8.074782496750618}, \
{3.0147307063305395, 8.200046481675546}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{3.3196531571956758, 7.65427952121824}, \
{3.4449171421206035, 7.779543506143168}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.749839592985739, 7.233776545685861}, \
{3.8751035779106666, 7.3590405306107884}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{4.180026028775802, 6.813273570153481}, \
{4.30529001370073, 6.938537555078408}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{4.987147198920072, 5.90977398623454}, \
{5.1124111838449995, 6.0350379711594675}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.528718401768797, 6.30037613545603}, \
{4.653982386693725, 6.425640120380958}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{4.083712199841594, 6.706550771599666}, \
{4.208976184766522, 6.831814756524594}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.0034941746541355, 7.294972590010316}, \
{5.128758159579063, 7.4202365749352435}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.346833868239463, 6.683051368517948}, \
{3.472097853164391, 6.808315353442875}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.877771735216095, 6.400229687277546}, \
{4.003035720141023, 6.525493672202474}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.402340048476014, 6.105284736460167}, \
{4.527604033400942, 6.2305487213850945}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.858870679700787, 6.36375230597727}, \
{3.9841346646257145, 6.489016290902198}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.384065021104188, 6.068490966554148}, \
{4.509329006029116, 6.193754951479076}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.810723999530797, 6.557804157848788}, \
{4.935987984455725, 6.683068142773716}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.568234503913306, 7.1146821312354165}, \
{4.693498488838234, 7.239946116160344}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.241401521113944, 8.330697423623317}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.179904557906914, 8.30058773009415}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.2674508931690776, 7.6356546271284405}, \
{4.392714878094005, 7.760918612053368}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.9077619703819257, 8.121718179450612}, \
{4.0330259553068535, 8.24698216437554}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.55346555992565, 9.330961704855234}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.4693776376122685, 9.284933205291285}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{3.5951972972291126, 8.635708886629466}, \
{3.7204612821540404, 8.760972871554394}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.2012990506444265, 9.098962513838226}, \
{3.3265630355693543, 9.224226498763153}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.7729712398791952, 10.272032775647109}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.6676637684942865, 10.207993883670564}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{2.877115295572774, 9.605705066735638}, \
{3.002379280497702, 9.730969051660566}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.449871819883862, 10.044850746914264}, \
{2.57513580480879, 10.170114731839192}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.903979977224882, 11.147613964627261}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.778966646805023, 11.063567176244996}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{2.1142369847436253, 10.544082536176255}, \
{2.239500969668553, 10.669346521101183}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.008382377970965, 10.489214660078652}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.8983292689442353, 10.407715005441476}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.7901598691100178, 10.323731307904785}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.6839302351307182, 10.237307090366805}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{2.150294761151114, 9.828235545727544}, \
{2.2755587460760416, 9.953499530652472}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{2.519215936150545, 9.353072112152967}, \
{2.644479921075473, 9.478336097077895}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{2.8881371111499763, 8.87790867857839}, \
{3.013401096074904, 9.003172663503317}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.257058286149407, 8.40274524500381}, \
{3.382322271074335, 8.528009229928738}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{3.27458308677429, 6.53548415249368}, \
{3.399847071699218, 6.660748137418608}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.6259794611488383, 7.927581811429233}, \
{3.751243446073766, 8.05284579635416}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{3.9949006361482686, 7.452418377854655}, 
          {4.120164621073196, 7.577682362779583}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.347668098296461, 6.964565045122137}, \
{4.472932083221389, 7.089829030047064}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{2.70311999901635, 8.725627996677225}, \
{2.828383983941278, 8.850891981602153}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.09847219003487, 8.272218946231385}, \
{3.223736174959798, 8.397482931156313}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.4938243810533907, 7.818809895785545}, \
{3.6190883659783184, 7.944073880710473}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.889176572071911, 7.365400845339704}, \
{4.014440556996838, 7.490664830264632}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.823583649117216, 6.289554275259346}, \
{3.948847634042144, 6.414818260184274}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.367056827817098, 6.031094716869897}, \
{4.492320812742026, 6.156358701794825}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.884539100805504, 5.68753257796128}, \
{5.009803085730431, 5.8127965628862075}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.854342273500413, 6.2764590553268755}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.8397066376328706, 6.238070939862954}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.323824038048675, 5.915730319223059}, \
{4.449088022973603, 6.040994304147986}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.7384615698215047, 6.058415762037255}, \
{3.8637255547464324, 6.1836797469621825}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.687769498174473, 6.589334938431897}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.6663140833651635, 6.524310825185595}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{3.161086981046675, 6.227299468197558}, \
{3.286350965971603, 6.352563453122486}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.5652387587227055, 6.330249912709441}, \
{2.690502743647633, 6.4555138976343684}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.491595207184651, 6.796582579140936}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.4657321202158542, 6.7042760128331444}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{1.9841694432380483, 6.485946966540061}, \
{2.109433428162976, 6.611210951464988}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{1.3793449349347597, 6.548772645527626}, \
{1.504608919859687, 6.674036630452553}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.7209913171709248, 5.669174559327278}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.7209913171709239, 5.559618712710341}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{1.2596147857267879, 5.5517646435563455}, \
{1.3848787706517152, 5.677028628481273}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.3247016798368465, 5.470629426467081}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.3290647714731083, 5.374867404336889}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.335606582423039, 5.279229513516432}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.3443237225218745, 5.183765316460222}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{1.8649225270046064, 5.3874840979308765}, \
{1.9901865119295337, 5.512748082855804}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{2.4658663285281706, 5.414864188868454}, \
{2.5911303134530983, 5.540128173793382}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.066810130051735, 5.442244279806032}, \
{3.1920741149766627, 5.56750826473096}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.6677539315752994, 5.46962437074361}, \
{3.793017916500227, 5.594888355668537}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{4.87217196384791, 5.4902458836194015}, \
{4.9974359487728375, 5.615509868544329}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.270255677250468, 5.46965984556544}, \
{4.395519662175396, 5.594923830490368}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{3.6800114842923692, 5.326390779095162}, \
{3.805275469217297, 5.451654764020089}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.8072159608580094, 6.2518720775107}, \
{3.932479945782937, 6.3771360624356275}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.099304760296033, 5.1429145706614285}, \
{3.2245687452209606, 5.268178555586356}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.692124904258523, 5.245127088885157}, \
{3.8173888891834507, 5.370391073810085}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.2873486895617505, 5.333857493472986}, \
{4.412612674486678, 5.459121478397914}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.6995657816425784, 5.204723096633474}, \
{3.824829766567506, 5.329987081558402}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.295478082083538, 5.2935875157406285}, \
{4.420742067008466, 5.418851500665556}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.276869434910243, 5.702013886530465}, \
{4.402133419835171, 5.827277871455393}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.97288996836002, 6.558669148977055}, \
{4.098153953284948, 6.6839331339019825}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.3731358679902916, 6.731101609839881}, \
{3.4983998529152194, 6.856365594764808}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.6856056789883933, 5.2856899900140935}, \
{3.810869663913321, 5.410953974939021}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.6856056789883933, 5.817839297098595}, \
{3.810869663913321, 5.943103282023523}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.5954491934523225, 6.259839455558099}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.581518071102767, 6.192799214223592}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{3.0906124599358606, 5.9065308482793455}, \
{3.2158764448607884, 6.031794833204273}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.486295583056621, 5.92738775099165}, \
{2.6115595679815486, 6.0526517359165775}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.3834763208710292, 6.329884263584915}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.3682647952407256, 6.235237494284061}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{1.8894376324387465, 6.002512372478711}, \
{2.014701617363674, 6.127776357403639}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{1.2816917300594117, 5.982395963114936}, \
{1.406955714984339, 6.1076599480398635}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.16149577304758722, 6.2905182294023625}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.1474969779257087, 6.168065475451283}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{0.6832783577613287, 6.043914723051878}, \
{0.8085423426862562, 6.169178707976806}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{0.07365723390759997, 5.982693801059407}, \
{0.1989212188325274, 6.107957785984334}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.7901598691100165, 0.9050619641328286}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.8983292689442344, 0.821078266596138}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{2.150294761151113, 1.2752937413851415}, \
{2.2755587460760407, 1.4005577263100688}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.360865873034713, 1.2270604143649484}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.461557679860184, 1.1559843758337491}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.5638413138400717, 1.0872188217028027}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.6676637684942817, 1.0207993883670516}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{2.695289503652313, 1.620066174932232}, \
{2.8205534885772408, 1.7453301598571593}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{3.042201482714023, 2.1115284835102455}, \
{3.1674654676389506, 2.236792468435173}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.389113461775733, 2.6029907920882596}, \
{3.5143774467006605, 2.7282547770131873}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{3.7360254408374427, 3.0944531006662737}, \
{3.8612894257623704, 3.2197170855912014}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{3.132733678311001, 4.982045785287044}, \
{3.257997663235929, 5.107309770211971}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.082937419899153, 3.5859154092442873}, \
{4.208201404824081, 3.711179394169215}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{3.068212446354365, 5.688638490231726}, \
{3.1934764312792927, 5.813902475156654}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.6677539315752994, 5.633904916369077}, \
{3.793017916500227, 5.759168901294005}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{1.2620696873743829, 5.695531853108074}, \
{1.3873336722993101, 5.820795838033002}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{1.8632862086274697, 5.674993680314969}, \
{1.988550193552397, 5.800257665239897}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{2.464502729880557, 5.654455507521865}, \
{2.5897667148054846, 5.779719492446793}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.0657192511336437, 5.6339173347287606}, \
{3.1909832360585715, 5.759181319653688}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.7171965927697492, 5.124475499854368}, \
{3.842460577694677, 5.249739484779296}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.304977597098256, 5.253618560990433}, \
{4.430241582023184, 5.378882545915361}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.936462692311003, 5.275004597104432}, \
{5.061726677235931, 5.400268582029359}]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.8010935622839677, 5.107745517537897}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{3.81307538146248, 5.068448122518736}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.341578208828935, 5.135981774326912}, \
{4.4668421937538625, 5.26124575925184}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{3.7917102810379477, 4.889702224248277}, \
{3.9169742659628755, 5.014966209173204}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.687769498174471, 4.639458333605723}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.710699510315812, 4.574939462945231}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{3.2320852626686, 4.669014751145588}, \
{3.3573492475935276, 4.794278736070516}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.6983030439993527, 4.384918920299085}, \
{2.8235670289242805, 4.5101829052240126}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.6158422000230184, 4.069584324299988}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.6520221196031608, 3.9808126234586454}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{2.143846585570025, 4.151549775647633}, \
{2.2691105704949526, 4.276813760572561}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{1.6275813997455104, 3.8302555029160104}, \
{1.7528453846704377, 3.955519487840938}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.9788806474820473, 2.369830322435854}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.0536583349484214, 2.289762969631256}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{2.3930566133835884, 2.677553458366531}, \
{2.518320598308516, 2.8028174432914588}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.5556114970301853, 2.6367908044405417}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.6241628705193456, 2.5697825165662795}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.6942218042233668, 2.504352040033204}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.76575199147881, 2.4405332828979276}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{2.947567482951714, 2.9706460288159646}, \
{3.0728314678766417, 3.0959100137408924}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{3.3680704584840933, 3.4008324646060277}, \
{3.493334443409021, 3.5260964495309555}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{3.7885734340164734, 3.8310189003960904}, \
{3.913837418941401, 3.956282885321018}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{4.209076409548853, 4.261205336186154}, \
{4.334340394473781, 4.386469321111082}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.10709653017957, 5.072432806614076}, \
{5.232360515104498, 5.197696791539004}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.71130169377982, 4.618479671903777}, \
{4.836565678704748, 4.743743656828705}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{4.3157992081026695, 4.164891507251944}, \
{4.441063193027597, 4.290155492176872}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.7273773896920197, 5.084673482064486}, \
{3.8526413746169474, 5.209937466989413}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{4.291248369862455, 3.4543151754006423}, \
{4.416512354787383, 3.57957916032557}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{4.586082611433339, 3.9786775424395673}, \
{4.711346596358267, 4.103941527364495}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.892891989846773, 4.4963960418256566}, \
{5.018155974771701, 4.621660026750584}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.622120292424788, 3.9589510426264463}, \
{4.747384277349716, 4.084215027551374}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.929260227865375, 4.477288205926206}, \
{5.0545242127903025, 4.602552190851133}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.464545821853546, 4.891903306941147}, \
{4.589809806778474, 5.017167291866075}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.9076678484669185, 4.649413811323657}, \
{4.032931833391846, 4.774677796248585}]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.816916541003945, 4.322580828524297}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{2.8470262345331117, 4.261083865317264}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{3.3866953525738936, 4.348630200579429}, \
{3.5119593374988214, 4.473894185504356}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{2.9006318002517224, 3.9889412777922786}, \
{3.02589578517665, 4.114205262717206}]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.8166522597720278, 3.6346448673360037}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{1.8626807593359773, 3.550556945022619}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{2.386641093072868, 3.676376604639466}, \
{2.511905077997796, 3.8016405895643937}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{1.9233874658641106, 3.2824783580547767}, \
{2.048651450789038, 3.4077423429797045}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.8755811889801528, 2.85415054728955}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.9396200809566979, 2.748843075904637}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{1.4166449129666987, 2.9582946029831247}, \
{1.541908897891626, 3.0835585879080525}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{0.9774992327880688, 2.5310511272942136}, \
{1.1027632177129962, 2.6563151122191413}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0., 1.985159284635237}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.08404678838226687, 1.860145954215373}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{0.47826744352607714, 2.1954162921539777}, \
{0.6035314284510046, 2.3206802770789055}]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.6583993045486096, 2.0895616853813195}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.7398989591857834, 1.9795085763545903}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.8238826567224748, 1.871339176520372}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{0.9103068742604528, 1.7651095425410723}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{1.194114433974787, 2.231474068561468}, \
{1.3193784188997142, 2.3567380534863958}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{1.6692778675493656, 2.6003952435608984}, \
{1.7945418524742929, 2.725659228485826}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{2.1444413011239436, 2.969316418560329}, \
{2.2697052860488713, 3.094580403485257}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{2.619604734698522, 3.33823759355976}, \
{2.7448687196234496, 3.4635015784846876}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{4.437132690150381, 3.3787240134727354}, \
{4.562396675075309, 3.503987998397663}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.0947681682731005, 3.7071587685591902}, \
{3.2200321531980283, 3.832422753484118}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{3.5699316018476788, 4.076079943558621}, \
{3.6951955867726065, 4.201343928483548}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.057784934580198, 4.428847405706812}, \
{4.183048919505126, 4.55411139063174}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{2.2967219830251073, 2.7842993064267034}, \
{2.421985967950035, 2.909563291351631}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{2.750131033470948, 3.1796514974452235}, \
{2.8753950183958756, 3.304915482370151}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{3.203540083916789, 3.575003688463743}, \
{3.3288040688417166, 3.700267673388671}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.6569491343626295, 3.9703558794822627}, \
{3.782213119287557, 4.09561986440719}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.695495851649285, 3.921984170993637}, \
{4.820759836574212, 4.047248155918565}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.9662596267454875, 4.459433161489177}, \
{5.091523611670415, 4.584697146414105}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.321512294863037, 4.968960774032475}, \
{5.446776279787965, 5.094224758957402}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.8331098946541, 3.9510272607308234}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.871154909300389, 3.9355215809107627}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{5.080610015180756, 4.413585511382749}, \
{5.205874000105684, 4.538849496307677}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.924636822645921, 3.831622696410366}, \
{5.0499008075708485, 3.956886681335294}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.493760155534879, 2.7918788177261624}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.558279026195372, 2.7689488055848215}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.742653984812564, 3.2582420473617075}, \
{4.8679179697374915, 3.3835060322866353}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.626166805344479, 2.664891699682194}, \
{4.751430790269406, 2.7901556846071216}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.259337463774959, 1.6007320926781938}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.351031385486337, 1.5727745145949985}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.457283099184176, 2.0875171109073642}, \
{4.582547084109104, 2.212781095832292}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.3807059593316655, 1.484279435163738}, \
{4.505969944256593, 1.6095434200886654}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.3689119462636254, 0.8046644659941089}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.478439405299985, 0.802170624581275}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{5.374730180340563, 1.3418852194393847}, \
{5.499994165265491, 1.467149204364312}]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.581148011503368, 1.4036988760109663}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.676984538160186, 1.4058809872471967}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.772746560290381, 1.4102440788834585}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{5.868384451110838, 1.41678588983339}, 0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{5.55274689826493, 1.943296565741807}, \
{5.678010883189858, 2.0685605506667346}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{5.539053304578441, 2.5447079120442293}, \
{5.664317289503368, 2.669971896969157}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.525359710891951, 3.146119258346652}, \
{5.650623695816879, 3.27138324327158}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.511666117205461, 3.747530604649075}, \
{5.636930102130389, 3.872794589574003}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.518466353646333, 4.952105965529855}, \
{5.6437303385712605, 5.0773699504547825}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.525345518021148, 4.349877040509214}, \
{5.650609502946076, 4.475141025434142}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{5.655141615956816, 3.7565245266620932}, \
{5.7804056008817435, 3.881788511587021}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{4.732795704442991, 3.9047629565275654}, \
{4.858059689367919, 4.030026941452493}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.825351540868993, 3.1717917673462104}, \
{5.95061552579392, 3.297055752271138}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.736659989688242, 3.7667849863987435}, \
{5.86192397461317, 3.8920489713236712}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.661501773286791, 4.363874327951894}, \
{5.786765758211719, 4.489138312876822}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.777222890817178, 3.773304211668873}, \
{5.902486875742106, 3.898568196593801}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.701946367427905, 4.371084940554066}, \
{5.827210352352833, 4.496348925478994}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.293202233784491, 4.361778205451277}, \
{5.418466218709419, 4.487042190376204}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.446698786563236, 4.065627223494656}, \
{4.571962771488164, 4.1908912084195835}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{4.243809296710763, 3.4817041370548774}, \
{4.369073281635691, 3.606968121979805}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.6959592006071755, 3.7611907917027194}, \
{5.821223185532103, 3.886454776627647}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.163947781474805, 3.7733042116688735}, \
{5.289211766399733, 3.8985681965938013}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.821068755771829, 2.692082063725068}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.887774509069167, 2.6766285008626722}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{5.061735263251076, 3.180484067706384}, \
{5.186999248176003, 3.3057480526313117}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{5.027127580242242, 2.5767985482936773}, \
{5.15239156516717, 2.702062533218605}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.723453719121761, 1.48201767551084}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.817729701042356, 1.4646556282813776}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.938436029061492, 1.9818053292411448}, \
{5.06370001398642, 2.1070693141660723}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.944712985736568, 1.3737589892312212}, \
{5.069976970661496, 1.4990229741561485}]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.73499336798171, 0.2594576645460087}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{4.857095735224915, 0.24267508045793473}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{4.869588364249507, 0.7769010386133469}, \
{4.994852349174435, 0.9021650235382744}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{4.9169164967135295, 0.1660442928735943}, \
{5.042180481638457, 0.2913082777985217}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.156127782956451, 1.765109542541063}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.242552000494435, 1.8713391765203662}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{9.670367708582539, 2.1349882529085664}, \
{9.795631693507467, 2.260252237833494}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.847203861088854, 2.3429973823210024}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.920553550262312, 2.4420451804450596}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.991629588793515, 2.5427369872705334}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.06039514292446, 2.645020621250422}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{9.338090433953358, 2.6876899021307628}, \
{9.463354418878286, 2.8129538870556905}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{8.854652296727437, 3.04569924480896}, \
{8.979916281652365, 3.170963229733888}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{8.371214159501516, 3.4037085874871575}, \
{8.496478144426444, 3.5289725724120853}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.887776022275597, 3.7617179301653554}, \
{8.013040007200525, 3.886981915090283}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.986939591777424, 3.201550135431435}, \
{6.112203576702352, 3.326814120356363}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.404337885049676, 4.119727272843553}, \
{7.529601869974604, 4.244991257768481}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{5.279061266144633, 3.15312993145039}, \
{5.404325251069561, 3.2783939163753177}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.347428139159635, 3.7512701552130565}, \
{5.4726921240845625, 3.8765341401379843}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.231056104464066, 1.3476120864209948}, \
{5.356320089388994, 1.4728760713459221}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.265274566132914, 1.948205308868902}, \
{5.390538551057841, 2.0734692937938295}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.29949302780176, 2.5487985313168084}, \
{5.424757012726688, 2.674062516241736}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.333711489470606, 3.149391753764715}, \
{5.458975474395534, 3.274655738689643}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.857851027869566, 3.789103762462662}, \
{5.983115012794494, 3.9143677473875895}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.742121204955866, 4.379672172875365}, \
{5.867385189880793, 4.504936157800293}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.735115330453517, 5.0114804552989}, \
{5.860379315378445, 5.136744440223827}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.000308490100314, 3.8711886895648338}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.0398684470893675, 3.882272869694318}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{5.860560657111226, 4.413585511382749}, \
{5.985824642036154, 4.538849496307677}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.09425963999014, 3.8582539525807564}, \
{6.219523624915068, 3.983517937505684}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.443131517775244, 2.7474933907755132}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.508155631021546, 2.768948805584823}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.302151074604855, 3.2937503889222275}, \
{6.427415059529783, 3.4190143738471552}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.574022701659442, 2.753639551709604}, \
{6.69928668658437, 2.8789035366345317}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.98845737091147, 1.6628716904091063}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.078029640327285, 1.6970215074333725}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.794710174762132, 2.194014533340256}, \
{6.91997415968706, 2.319278518265184}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.104169348706164, 1.6705694345510513}, \
{7.229433333631092, 1.7958334194759786}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.696034856756619, 1.9871242324520835}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.777783642191409, 2.0600599548923975}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{8.273997374424468, 2.409607117248481}, \
{8.399261359349396, 2.5348711021734087}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.442271786697564, 2.5697825165662755}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.510823160186725, 2.636790804440538}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.577831448060987, 2.7053421779296984}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.643261924594063, 2.775401111633722}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{7.993603189340268, 2.970646028815962}, \
{8.118867174265196, 3.0959100137408897}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{7.573100213807889, 3.400832464606025}, \
{7.698364198732817, 3.526096449530953}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.15259723827551, 3.8310189003960886}, \
{7.277861223200437, 3.9562828853210164}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{6.73209426274313, 4.261205336186152}, \
{6.857358247668058, 4.38646932111108}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.94151880333459, 5.177458897606498}, \
{6.066782788259518, 5.302722882531426}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.386344755734976, 4.771433192625765}, \
{6.511608740659904, 4.896697177550693}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{6.830812487483512, 4.36570807050078}, \
{6.95607647240844, 4.490972055425708}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.897874479847968, 3.7983759001800994}, \
{6.023138464772896, 3.923639885105027}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.540645842647458, 4.324988604121113}, \
{7.665909827572386, 4.450252589046041}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.0231307160220915, 4.631682613979921}, \
{7.148394700947019, 4.7569465989048485}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.512530327932041, 4.950197422067884}, \
{6.637794312856968, 5.075461406992812}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.043672437262767, 4.667261918843687}, \
{7.168936422187695, 4.792525903768615}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.532461070099257, 4.9861212810755395}, \
{6.657725055024184, 5.111385266000467}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.107375016171364, 4.530965255189285}, \
{6.232639001096292, 4.656229240114213}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.337125355594819, 3.9687117409603125}, \
{6.462389340519747, 4.09397572588524}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.762866714780125, 2.8693938243041774}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.825033136102969, 2.8980958484142967}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.625972028744427, 3.4410274400949685}, \
{6.751236013669355, 3.5662914250198963}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.974503389867137, 2.9469021640912207}, \
{7.099767374792065, 3.0721661490161485}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.427855207590619, 1.853729104313326}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.512969097291267, 1.897831567182381}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{7.275287000611367, 2.425929668198196}, \
{7.400550985536294, 2.5511936531231236}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.658538048215691, 1.95382969330437}, \
{7.783802033140619, 2.0790936782292975}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.18672550274642, 0.895135332668481}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.293463417337726, 0.956760496390511}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{7.971102721368506, 1.4398389861255165}, \
{8.096366706293434, 1.5651029710504438}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.388239131790876, 0.9910816674796444}, \
{8.513503116715803, 1.1163456524045718}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.03556056874801, 0.}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.162454679992045, 0.08117930741036261}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{8.712422886862528, 0.48433911458223394}, \
{8.837686871787456, 0.6096030995071614}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.946172493884308, 0.6606052358131818}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.058052279245942, 0.7395786119589598}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.168105388272677, 0.8210782665961371}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.276274788106894, 0.9050619641328277}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{8.69266942024976, 1.2008214085230497}, \
{8.817933405174688, 1.326085393447977}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{8.334660077571565, 1.6842595457489706}, \
{8.459924062496492, 1.809523530673898}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.976650734893369, 2.1676976829748917}, \
{8.101914719818296, 2.2929616678998195}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.618641392215171, 2.6511358202008135}, \
{7.7439053771400985, 2.7763998051257412}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.619538211406267, 4.469114426995106}, \
{7.744802196331195, 4.594378411920034}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.260632049536975, 3.1345739574267353}, \
{7.3858960344619025, 3.259837942351663}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{6.902622706858779, 3.6180120946526566}, \
{7.027886691783706, 3.7432760795775843}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.561051754045259, 4.113769132729542}, \
{6.686315738970187, 4.239033117654469}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{8.16508630158041, 2.315727325512743}, \
{8.290350286505337, 2.4409913104376706}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.780157592232635, 2.778018370947543}, \
{7.905421577157563, 2.9032823558724705}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.395228882884862, 3.2403094163823427}, \
{7.520492867809789, 3.3655734013072705}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.010300173537088, 3.702600461817143}, \
{7.1355641584620155, 3.827864446742071}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.0822999925911985, 4.739776981135416}, \
{7.207563977516126, 4.865040966060343}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.551153712660878, 5.022704654941292}, \
{6.676417697585806, 5.14796863986622}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.049844813219011, 5.389463749564854}, \
{6.175108798143938, 5.514727734489782}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.180219015637233, 4.876607004315804}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.19658670389644, 4.91428920206445}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.59959246346305, 5.13598177432691}, \
{6.724856448387977, 5.261245759251838}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.1778540344063835, 4.96680166210849}, \
{7.303118019331311, 5.092065647033418}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.331342420455197, 4.510959270505361}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.3557351469011, 4.574939462945229}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{7.74694360049318, 4.771814001625873}, \
{7.872207585418108, 4.8970779865508005}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.337488581389287, 4.641850454389559}, \
{8.462752566314215, 4.767114439314486}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.516844291216035, 4.2494830126404874}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.546881871949068, 4.3405167711853085}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{8.910869230437946, 4.459867616556202}, \
{9.036133215362874, 4.585131601481129}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.5122074575698, 4.369578700434223}, \
{9.637471442494729, 4.494842685359151}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.337963108191712, 5.340648942668039}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.342949498633153, 5.450091253673971}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{9.677191946810943, 5.360104006993294}, \
{9.80245593173587, 5.485367991918221}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.743915088616298, 5.566465953123894}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.743915088616298, 5.662327318913717}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.741732977380067, 5.758163845570536}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.737369885743805, 5.853925867700731}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{9.079988665076739, 5.551764643556342}, \
{9.205252650001666, 5.67702862848127}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{8.478421443588282, 5.551764643556342}, \
{8.60368542851321, 5.67702862848127}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.876854222099824, 5.551764643556342}, \
{8.00211820702475, 5.67702862848127}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.275287000611366, 5.551764643556343}, \
{7.400550985536293, 5.6770286284812705}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{6.0711785585939, 5.585983105225188}, \
{6.1964425435188275, 5.711247090150116}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.673408028750838, 5.579151830929321}, \
{6.798672013675766, 5.704415815854249}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{7.269561370225457, 5.6954076960573605}, \
{7.394825355150385, 5.820671680982288}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.100365808708698, 4.776675159059635}, \
{7.225629793633626, 4.9019391439845625}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.858017138617491, 5.852263129504585}, \
{7.983281123542419, 5.977527114429512}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.261159187999616, 5.777138508017524}, \
{7.386423172924544, 5.902402492942452}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.662513719995472, 5.715591429068787}, \
{6.7877777049204, 5.840855413993714}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.255564993303592, 5.81783929709859}, \
{7.38082897822852, 5.943103282023518}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.656225624070973, 5.7561896800038}, 
          {6.7814896089959005, 5.881453664928728}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.656225624070972, 5.347339607108883}, \
{6.7814896089959, 5.472603592033811}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.933030743363945, 4.4943141583650945}, \
{7.058294728288873, 4.619578143290022}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.512184112880105, 4.2781852835055965}, \
{7.6374480978050325, 4.403449268430524}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.265825453040242, 5.736320923367166}, \
{7.39108943796517, 5.861584908292094}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.241604890649406, 5.204723096633471}, \
{7.366868875574334, 5.329987081558399}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.438563906031744, 4.835911366865708}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.455531900902194, 4.902248063182179}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{7.831944742150544, 5.089042580992515}, \
{7.957208727075471, 5.214306565917442}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.43468605595844, 5.040702052437696}, \
{8.559950040883368, 5.165966037362624}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.646092717827045, 4.710776688663801}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.665596289116422, 4.8046330265321116}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{9.027506199920932, 4.938489534213968}, \
{9.15277018484586, 5.063753519138896}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.635537869513724, 4.930923785291092}, \
{9.760801854438652, 5.056187770216019}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.868598624270867, 4.694483972005249}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.888156300081254, 4.81617267539206}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{10.230531088566257, 4.842232234110342}, \
{10.355795073491185, 4.96749621903527}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{10.842306891706865, 4.875643050172801}, \
{10.967570876631793, 5.000907035097729}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.486739238793666, 10.148487140477204}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.3825044220862, 10.237307090366802}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{8.982076865333593, 9.67268203170677}, \
{9.10734085025852, 9.797946016631698}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.901969042157056, 9.852797840716182}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.804616582306265, 9.928383168499202}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.705568784182205, 10.00173285767266}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.60487697735673, 10.072808896203863}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{8.421954736141448, 9.353072112152962}, \
{8.547218721066375, 9.47833609707789}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{8.053033561142016, 8.877908678578384}, \
{8.178297546066943, 9.003172663503312}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.684112386142585, 8.402745245003807}, \
{7.809376371067513, 8.528009229928735}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{7.315191211143152, 7.92758181142923}, \
{7.44045519606808, 8.052845796354157}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{7.8319447421505455, 6.0144867061201674}, \
{7.957208727075473, 6.139750691045095}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.946270036143721, 7.452418377854652}, \
{7.071534021068649, 7.57768236277958}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{7.864238825338324, 5.305689603808575}, \
{7.989502810263252, 5.4309535887335025}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.267809837431878, 5.387654346189634}, \
{7.393073822356806, 5.5129183311145615}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{9.66819608233141, 5.216597521053959}, \
{9.793460067256337, 5.341861505978887}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{9.068537404304921, 5.2644785385543}, \
{9.193801389229849, 5.389742523479228}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{8.468878726278433, 5.31235955605464}, \
{8.59414271120336, 5.437623540979568}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.869220048251945, 5.3602405735549805}, \
{7.994484033176873, 5.485504558479908}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.241604890649407, 5.8988061904792115}, \
{7.366868875574335, 6.024070175404139}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.648555124607226, 5.796549580490726}, \
{6.773819109532154, 5.921813565415654}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.016751077179576, 5.803927498256595}, \
{6.1420150621045035, 5.929191483181523}]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.2866060719847, 6.0416857797207815}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{7.276425275062429, 6.081487797510664}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.617346634243311, 5.915730319223056}, \
{6.7426106191682385, 6.040994304147984}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{7.1778540344063835, 6.136727625004195}, \
{7.303118019331311, 6.261991609929122}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.420090272482604, 6.458815166820324}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.40012057385175, 6.524310825185594}, 0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{7.74694360049318, 6.331715285486812}, \
{7.872207585418108, 6.45697927041174}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.293103154438636, 6.591221816629924}, \
{8.418367139363564, 6.716485801554851}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.516844291216033, 6.979310259397131}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.484742274218156, 7.069636678321819}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{8.857606718097164, 6.7991132512446395}, \
{8.982870703022092, 6.924377236169567}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.387960464731426, 7.096576955275172}, \
{9.513224449656354, 7.221840940200099}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.231545692086856, 8.693826310800997}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.160489732175183, 8.777214164166967}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{8.675743304707442, 8.282924721813357}, \
{8.80100728963237, 8.408188706738285}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.643261924594064, 8.45339216040389}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.577831448060987, 8.523451094107914}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.510823160186725, 8.592002467597075}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.442271786697564, 8.659010755471336}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{8.108467098513767, 8.015374230861894}, \
{8.233731083438695, 8.140638215786822}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{7.668820138119139, 7.604772632977637}, \
{7.794084123044067, 7.730036617902565}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{7.22917317772451, 7.194171035093378}, \
{7.354437162649438, 7.319435020018306}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{6.789526217329881, 6.783569437209119}, \
{6.9147902022548084, 6.908833422134046}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.855514045493767, 6.014055688991142}, \
{5.980778030418695, 6.13931967391607}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.271560204225559, 6.449523936787159}, \
{6.396824189150487, 6.574787921712087}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{6.687297703739603, 6.884640898978743}, 
          {6.81256168866453, 7.009904883903671}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.233246217239674, 5.9390303352799165}, \
{7.358510202164601, 6.064294320204844}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{6.744164696196739, 7.593363420290455}, \
{6.869428681121667, 7.718627405215383}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{6.425769856184052, 7.082963726106927}, \
{6.55103384110898, 7.208227711031855}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.0957146824516215, 6.579746057914049}, \
{6.220978667376549, 6.7050100428389765}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.3906673657224164, 7.104310023432441}, \
{6.515931350647344, 7.2295740083573685}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.060253819287762, 6.600489377634193}, \
{6.18551780421269, 6.725753362559121}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.505615589396727, 6.165152663273956}, \
{6.630879574321654, 6.2904166481988835}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.072953267650962, 6.382044782912075}, \
{7.19821725257589, 6.507308767837003}]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.305499620755096, 6.781242359276065}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{8.278220140323086, 6.844046022190475}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{7.607075911485952, 6.658804829363986}, \
{7.732339896410879, 6.784068814288914}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{8.10900684047271, 6.995998009304388}, \
{8.234270825397637, 7.121261994229315}]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.33603843125477, 7.422938766511124}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{9.293884860313938, 7.509034515000969}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{8.636691141338051, 7.284844682453997}, \
{8.76195512626298, 7.410108667378925}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{9.117392807397161, 7.657249918765949}, \
{9.242656792322089, 7.782513903690877}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.311658131398147, 8.15979176718242}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.252478631958782, 8.26790481015677}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{9.638365303290186, 7.958033529510178}, \
{9.763629288215114, 8.083297514435106}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{10.096501700755672, 8.36484670193167}, \
{10.2217656856806, 8.490110686856598}]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.225883721487484, 8.98803074446569}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{11.147613964627263, 9.116739876158363}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{10.610492407934526, 8.677411375084484}, \
{10.735756392859454, 8.802675360009411}]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.563414900070686, 8.913703319094783}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.487008728814084, 9.027351801294655}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.408035352668303, 9.139231586656294}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{10.326535698031126, 9.249284695683027}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{9.893746113348126, 8.673972455111723}, \
{10.019010098273053, 8.799236440036651}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{9.40228380477011, 8.327060476050015}, \
{9.527547789695038, 8.452324460974943}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{8.910821496192096, 7.980148496988306}, \
{9.036085481117023, 8.105412481913234}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{8.41935918761408, 7.633236517926596}, \
{8.544623172539008, 7.758500502851524}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{6.601872061107599, 7.675516111462871}, \
{6.727136046032527, 7.800780096387799}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.927896879036066, 7.286324538864887}, \
{8.053160863960994, 7.411588523789815}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{7.436434570458052, 6.939412559803179}, \
{7.561698555382979, 7.064676544728107}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.933030743363947, 6.609215128747588}, \
{7.058294728288875, 6.734479113672516}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{8.767119606466181, 8.171904865205246}, \
{8.89238359139111, 8.297168850130173}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{8.296186139277582, 7.797599119255404}, \
{8.42145012420251, 7.9228631041803315}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{7.825252672088984, 7.42329337330556}, \
{7.950516657013912, 7.548557358230488}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.354319204900386, 7.048987627355716}, \
{7.479583189825314, 7.174251612280644}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.319050379867198, 7.144578244486239}, \
{6.444314364792126, 7.269842229411167}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.024105429049817, 6.620009931226321}, \
{6.149369413974744, 6.745273916151249}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.691272809248682, 6.11138966192569}, \
{5.81653679417361, 6.236653646850618}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.308306813105166, 7.244177108581511}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.2710069603114595, 7.261398323047583}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{5.911960282351373, 6.671014680295038}, \
{6.037224267276301, 6.796278665219965}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.09425963999014, 7.245275334531929}, \
{6.219523624915068, 7.3705393194568565}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.700063051865718, 8.386678928165445}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.636654694121902, 8.412521727865547}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.302151074604856, 7.809778898190457}, \
{6.427415059529784, 7.9350428831153845}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.445523638559078, 8.397212473990328}, \
{6.570787623484006, 8.522476458915255}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.988457370911465, 9.565921581628508}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.898130951986776, 9.598023598626385}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.640511299041695, 8.966302040077125}, \
{6.765775283966622, 9.091566025002052}]}, 
        {Hue[0.08, 1, 0.92], 
         RectangleBox[{6.744465200979491, 9.565429186896957}, \
{6.8697291859044185, 9.690693171821884}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.672655045147062, 10.290099951688788}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.565925839871321, 10.314825652268622}, 
          0.07098292005859753]}, 
        {GrayLevel[0], 
         RectangleBox[{6.420960876980551, 9.654088290939766}, \
{6.546224861905479, 9.779352275864694}]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.342980938095156, 9.74677559652677}, 0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.248704956174562, 9.764137643756236}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.154058186873708, 9.779349169386538}, 
          0.07098292005859753]}, 
        {GrayLevel[0.5], 
         DiskBox[{6.059089679017882, 9.792402290343928}, 
          0.07098292005859753]}, 
        {Hue[0.11, 1, 0.75], 
         RectangleBox[{6.124306786396067, 9.101474583309068}, \
{6.249570771320995, 9.226738568233996}]}, 
        {Hue[0.08, 0.9, 0.8], 
         RectangleBox[{6.0153532113543875, 8.509856260016948}, \
{6.140617196279315, 8.635120244941875}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.906399636312709, 7.918237936724826}, \
{6.031663621237636, 8.043501921649753}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.79744606127103, 7.3266196134327055}, 
          {5.922710046195958, 7.451883598357633}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.545709957633054, 6.148622594174217}, \
{5.670973942557982, 6.273886579099145}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.661501773286794, 6.7396549591607915}, \
{5.786765758211722, 6.864918944085719}]}, 
        {Hue[0, 0.33, 0.6], 
         RectangleBox[{5.655141615956817, 7.347004760450592}, \
{5.780405600881744, 7.47226874537552}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{6.28257299856692, 7.163479300001549}, \
{6.407836983491848, 7.288743284926476}]}, 
        {Hue[0.1, 0.75, 0.8], 
         RectangleBox[{5.607459182821377, 7.954137533347971}, \
{5.732723167746305, 8.079401518272899}]}, 
        {Hue[0.04, 0.8, 1], 
         RectangleBox[{5.573240721152531, 7.353544310900063}, \
{5.6985047060774585, 7.478808295824991}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.525345518021149, 6.753652246603472}, \
{5.650609502946077, 6.878916231528399}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.532199854525306, 7.355414207315604}, \
{5.657463839450234, 7.480678192240532}]}, 
        {Hue[0.06, 0.75, 0.92], 
         RectangleBox[{5.48427981697311, 6.7548211464157255}, \
{5.609543801898038, 6.880085131340653}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.7951871241289705, 6.71028359770238}, \
{5.920451109053898, 6.835547582627307}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.561051754045261, 6.989760154383142}, \
{6.686315738970189, 7.11502413930807}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{6.790308009376387, 7.563843672141232}, \
{6.915571994301315, 7.68910765706616}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.614228388647011, 7.350740677635807}, \
{5.739492373571939, 7.476004662560735}]}, 
        {Hue[0.25, 0.7, 0.6], 
         RectangleBox[{5.9772364546269054, 7.283888409880831}, \
{6.102500439551833, 7.4091523948057585}]}, 
        {Hue[0.12, 0.7, 0.8], 
         RectangleBox[{6.14612016078721, 7.8612629986556595}, \
{6.271384145712138, 7.986526983580587}]}, 
        {Hue[0.58, 0.5, 0.8], 
         RectangleBox[{6.315003866947515, 8.438637587430488}, \
{6.440267851872442, 8.563901572355416}]}, 
        {Hue[0.5, 0.33, 0.69], 
         RectangleBox[{6.483887573107818, 9.016012176205319}, \
{6.609151558032746, 9.141276161130246}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{3.09061245993586, 5.196998438833343}, \
{3.215876444860788, 5.3222624237582705}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{7.864238825338325, 5.797839683304107}, \
{7.989502810263253, 5.923103668229035}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.6621094061473505, 7.950399355662295}, \
{5.787373391072278, 8.075663340587223}]}, 
        {Hue[0.12, 0.7, 0.8], 
         RectangleBox[{5.70999042364769, 8.550058033688783}, \
{5.8352544085726175, 8.675322018613711}]}, 
        {Hue[0.01, 0.8, 0.8], 
         RectangleBox[{5.75787144114803, 9.149716711715271}, \
{5.883135426072958, 9.274980696640199}]}, 
        {Hue[0.5, 0.33, 0.69], 
         RectangleBox[{5.805752458648369, 9.749375389741761}, \
{5.931016443573297, 9.874639374666689}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.853633476148708, 10.349034067768248}, \
{5.978897461073636, 10.474298052693175}]}, 
        {Hue[0.58, 0.5, 0.8], 
         RectangleBox[{5.901514493649048, 10.948692745794737}, \
{6.026778478573975, 11.073956730719665}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.949395511149387, 11.548351423821224}, \
{6.0746594960743145, 11.673615408746151}]}, 
        {Hue[0.08, 1, 0.7], 
         RectangleBox[{5.9376764976378515, 7.294972590010315}, \
{6.062940482562779, 7.420236574935243}]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",
 CellChangeTimes->{{3.7717139999609704`*^9, 
  3.7717140001284833`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
02yrRpjNLoj2y602cQqU7Wpb0mqvPLSWrjHH1+Xpd+nRQHfG05D3o1/Oesiq
TwNKTtMKzMjjTtU+xpkYb2lpCdMcS433o48+2uSulgK3P/zww6DULv1wj3vJ
czsJ2HEFXa9bLWP0EuiI3QGt2pMprHlGyJo0UAxPJSPLq91V7bDDzNx3zwsl
htKQCIIGluEbx+UGEO+mLPvYYoFzfY05ufEta/Lm0MV5zpyGdu5BK7YT3gRS
BSigTtqaS9ROF6PFozb0pfZpp51mW8xshwoBakFDaq2isSxaf0b7vHy07qPr
4yf+92xXVVvRs7FRm8wKiwcHq/jZc2tJhnIXTBUt5stbMa6Z87e//W0eghsO
iedBxoyee7N33rx5c79aDJEMU2m2QUoa0FanM4qNcNppogsaBm4Em0YUxgiF
O3L7skrugKwB2bbY7htV1jHzrGVZg0aKR2D2iKugCa0cJmDeDFTBuNic4npb
19dvnU9kYGiBa0AtVMJlLA0qcG9NQmEOQxh/zpq73ikQPZtosdkKpbclBIse
Yg42ZIvza+c8pVCjgC/Sg2BUK6qrTO+8lf0a5mqny117VNB1ApEKWAOTvOqq
q7B7L7jggm53Wd8uqFSQu82WrIuCubC6UA7W2bEiM6DyiSb/rsuz7k/cABWA
eauYzG/iMYF53jHLPvrRjwJLUGG/3LUr+xZ+EufvehS4ANQ2McqyPWVYGzIN
xzd7qwxPMJzd1s4HZI0lchScsNF20qwRrEHdGJBub3ZXiwxmXsb4fMx4CYXv
jjC7WRqBnoZvnDkA7oJobDGde5x6Ubzsw6+XFLMWHuqpUnNSwCt9WLXD6gTI
Gh7mUOf7d9dTvE8fXWQsvp07++yzr776arO8uFatF/R2mZtnom12UEjpIFXO
+AP7OPZgVf8ve46PdYZSo84hhfuyAiKK8y8WLVTmElgH+sBHd1tz1NyspR1r
x3JPIi34DrrYuD1dJBdYpqqcsOF1y9PN2ig6Saw7ZWgnNAwzgt+kWBAAWOQ9
RhIN6mCppNVsjSaGpgDcM/U0rIkHh5rYzgqzVT3An4nua61KMmRHWVrmxYcW
Qnf26EzVEu7uZFzPB4CepYDuzAwpwPPwOn0cmfr5yy+/HIcY9F977bUnn3zy
vffem/0Ye3KiTwWRIyvG1fwu62YVX+7pgHtWdfDqzTPW0Wq7iwdYXMM5z6sH
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
nSSUCrnDTvaeq4NebrRuRExC/n6cCdc8s5a/7yrtrdhNi7HIpawiL5LUymPb
OtleQbFv3AJnLiHCBbV7j9DjsXBG9IyIiiig2RczcHjWNNpIplremr/q86g8
3qvfw/2Zdg6XpV7unALrntHB02666SaMH/QA4vZf/at/pTh9MM6hdF/XTNOd
Wa3K4GVvUbETN0K5jIDoxHBxL6+60aI+cGrdO0QCKNqu0nKUKKzBjTfffDNm
q30PmSFuktvashJKI2XVGc6Vs5XEXPjUU0+B/rZLcZJeaoH64Aw8rW8LtDw1
R0fe3gZMFZ1a9HPmUOt9c00/L7jb0OLQG2+8ERVtAUfgbJFFKZ6QAkg67Jfz
zz//LW95C+q55tu73Rd9Wu2sX+kHPoaYUFxQLNhB9hQtWEIyaiTEgBopO0f0
NUza7p6SN+/eIbd2GzIJnR++gXvKWx647dby1dU7W4ob5yu0jncSmUEOcG+l
R6amRjOgNWoe+Col1jyfbo+mJ9Ch5kWcJRr0v3r/YmQjJ/arRmOC0bSZagWU
fsK21d0HC1Dtv6KsxVYD3CJSQ8wSsGeiVyDUh8pDRHJL9t1h1Z6iV/cRhY+O
L5r1z+sNybtJ3GJy6FbGQTPb+t9szqT0LFvPIz8bLy7QnIJsPFYOKmKW2bUn
oshDeh1b0dj1Selqu8PLnncfFe+g3M4+RYoEfe3EJ3CPxcZy7RPFpegfPUp7
CaAR0Y489eCDD0a116xoZ09H3LT6aYP+8qWC/CMf+QjgQbx++9vfrueMQ6jp
3BYJZ38Z279prYQeDNoyhRLMHZ6I9a1FB4dnOyfp8rdW9bZ2plDmOaunkTG0
aeQI61l6Sq/+CUrQbolqlGevuHkUiZU+GQTNzQYP+KZJrEK5Hu+KTQcCIfqI
oIaO1ijTIrDgLbMxxXJzLzE0YfZ7IWBRDk/sxf/jCPuQ3LkGz7FTupt7VfJ7
fp9pbHHknnyu1wZSnnFlYGhJvQ36oU08KISu1GB/zIDlRmZg/smCgiyFAD6e
g2ZCgpVwVzk9Ls7l6Hs9zE1p2llg1Vf2FDmtfKnH2oOoTVwxe2jvAwNBCin7
KzNfLAqt924fsHH2roq9T593ZW+7qBqZ9CkxYFy6i0s3KFixnU19y4kjesPb
5z01SdfQ+lG2GWvkk13hPWIPYp1vMqsfL15mYdZnYs3gn8CKbpN5Jk7Fzu4y
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
6Q2LmeoNvS6CXQAKh4RWUO8egx0NKeEqnXrqqYeiPhIVb3/TWavQMmSQHjFv
/nysa6kqeg4OXVxcNK96OeE4a01lF2K8kWSYtM6vtrBcb5pi0YljA1bHfa+S
BSZH4tDefggO/Q9jdpr4PDzfj7frxBP4nKq2+Qhk6eyPrIPgxzkgcibiD3J7
xzveAb425rE5Cy/wa1/7WhpXqLBpw16NUrqfoeJTbGZfuBq/Clw4EWgDCKFg
8k4VJyQThMFdsbY803BzE7xd8ik+97nPlYz0xU047KYurvaa1KA2Fg9/1Sae
jxR5izPURO5skq3GZLW7+I5poi3muKRdAFGecsopeDFbS9nwM847JnIb+S9v
+2pcfWWT1By0hljk1WOPPYa2A7yJ9z77ZQXqxvzJ+vuPf/zjRV8HZS5nWTq/
3XvvvXxOmQIz97llXYfrzDRBMsLsNUNFnwgA2QQEeLZ5kGHJ6h2tZZwaxMJq
mEBI1b5qpeu0d3Kj8D53q35qqNfpZ0EhFzS2Bg+uw+L2RoPOS6rZiDb7zJW6
qLUSG0ebzQFd/l9vvFvxLrStvh1+H2U2dDkbia8M2S6PpEN2XfnFX/xFJ7eg
qWvs28poiButAz8KR9gt59KPbwnKBNKMNJbQgpFwO1zbaCxvmfp6ko5C9wy4
K1EdLUusXMj6qquuwgjMXJvhlIG30qMx8Vay57wZ5mRY5yJcHA25womjks//
n+OHHSavmQdSbSI7OJSXZjMOmmulYbVq0cy2rff6CyMcvWb0/aURr8vb/SwW
I4v33XcfYAIJyEhc8muvvbZMth7X9aS32OPBBhc1dw/NYbHTZJ3/xnV1wj8m
eyzCszDvrbfeqtZfRiA7e30WUTas2pMbFbA8Dvtk8y0ZiKgc4v1f3sBlIyQp
wv6tkUHZeHvRGoUSjz6qnRIvppxkOoKxndWHjk/iwHKjYh2Z89B7m1o9/MqL
gpFy0zwd0XR4SSv9TdfFF18MGgbZMUjGsPU3RnAHQn//93/vZF2LZgI/zvOD
Dg3OsEhUvtjJfx2s2rsEJWSXPrdryCwmmS05UA1hZolHlbojX9U+eZVCtOmz
t8S010ZyijLhe9/73pNPPikPsP2aQSf8zcaL+sYm2WrFzK4RPlYaTUNs5X5p
tUI47n9nob/hSrxSNnTaiILHlmBgYfmjH/2oGiWzXsYZd+k1r6G62ReKHujY
9d5kj3LblrXBK2Va8ne+49Qnu+MU/XXMgInSvRKaxItC+PzBH/xB3dng/ZwU
O/txdLB3mJGl4NkPZi5yELkctX531vo2DXHT6mn0M0/4O8sWzZH4qDIobbpK
qeJjsLacLmF/i9jkbJb3dpnvu2bmAD6Rq3h3Xnv3B1aWM1I+a3kNcY++hO2N
sgAsKG3gXJ8/yDBvH6EoFoT2v/71r9tB395dHM1AhQWYlSJZE7MBU67ldJa7
FHjHrNAh1yakoV3wi4Ri+VJfutCyGy69NFIm5JN/iXm3LlIiwt5d8ykTf/nf
Di7wNUSDsgEFK5v4w/tEqwjYL5QLqnldKC6zKiqk2yTicXaFGBm0yErDaL31
TYlVezj0dcaFTkIjFqvDJqPYfaUbbtivi5zfm/fK6wNfBqyONdXCgrCvfvWr
jk2V2zIkbN4rTIJ+h9EQQuhTPrnYKMU5O6DRkW98vvZuCdqMPPDCVwH30tVW
0P3DP/zD97///aw3AvNzszL7yv8i+/XbciTQyy+/rNDigX/5l3/55S9/mV1s
m22uBt85khmZf1plitAfMnGE9mAF+bs1Fd9uE2QWbb9QXp6WHN3d0Rix6e6F
zRTkqcZ17bLXjwAY+ut98YtfxFut3vTNN9+MeEv8lWwt9mGLAWU/ROSddes2
VbwOZEOJkK7OwT9k0hIbsupwTsp4M5Z1XMs99OEAHmJV1ksvvQTSAPgzzzzD
G88++yyv8bfK2PkjQ3/IzNGCgTwg9x/84AcQybEj/AjvoRtExmznogFekB8Z
/lofg88ZWmjD/HOvpVhOG9FODfrmNT8AhWzYIK9nlL2SyKhf7ap91Vjvwx/+
MPtAKUCvOHBxEntJF7zOWbVpbJh9tGQb4VlOtclMbIcpt3lRqz1e4PV5Pb1m
VZAhef6EiEBn15yZrbCzo+2tj78umlVecrMDN1O73NqVLHv61FzZ1Qbnzsso
mvY1PwUrgy4KrJS4GifQi2JlDpE1ZuvGv4DtO9/5TsTPgQMHcDiw9lExLQdg
0bvHgXbZSt53IaxQG2IiLNcl7yhBIIo/8o8LTIpWtbyVxYquD6trFSGH6plF
cFZTQr2qzuRNuLnc/EYPhqLIl4TtSGev6TFYsj6L+nhUkyWg3nNuiZfRrNBF
L9EKbMQLe86UKCEx9ov73MPyDP2L+btEcTJ4mnHy5UytO9xmRghbbB1An947
zJ8ZKLULjBzEEdGdfu5973vfbbfdJg5CVxW7COh7S9PfDSmF+DHVTqm5DqJ5
JthHrYHPLIvVa11p8tupmVU+AKu5/mCps7OWyCuRnCBTbiltSTmXWcNjaja7
duygldOuqp/f3TBQeWm1PaXqmbhPPjXGZM9FAl7b4Of9eY0cDTwZdXPTzKPi
tzI7TyijGmxtyY9JCHYpNR4G0nQVAR3mDDCELSBpMXFa4z3gwqkffvhhTIB6
luWmKRxcVLsomBuEwYZ/mRN5kXNJK7WuKvc+i/iQvRBbLvFK3+fOU5dvSl1y
l7l43oToAVq6VGYgZgevUkFmMegk65WrPbW7cWeVSalB6t+zehhs/E7pUVD+
G2FFG9JiskLVEdvtIj0RR9re55F59wJGLrjgAnzwm266CVsJSVXyA8zjMGYB
GlDv8M4f/dEflQwydXRw5krmZvMlBUa5qzDrLy/cKp+FHb3aUwBWGQ/GIa39
DbJrMHA00N+qMoQgZi2qvUTuvQnTWjF20neC0Or94Q9/CIE88sgj4CYoYa5n
UEbMq/wRBzy4j0bVpsiOD7TpuHpPEuFgYGQRbGg5szmTheSREiFWOrDmq5re
qTkm3m31kUnAAqhxlFHg0Ar+Q4F22CNzU6VBBsAJ68aYWJmUY36ynd9sjghM
c9Jm3rsGXlc5g5IJhJ977rkg4Oqrr4btpPc+sgAFI3Oar7np5r52vUl5ZNxU
12mIMNcM05yEAFbgSYz3Yp1uxkzG5ucil3savqrGyWeqdGCOzAdbMmGEzYGA
ltsakmyIZ4MFxCR/f22Ttv8lfniAmBqyvF7R9m3QYnx3VOuVzHgAiKlt7OIv
nkJGbhhdx8M5HK1qsq9T4qz6wt6jltiEfIgIRB/BKnfffTcL33HHHSWumR1Y
jVM0/uksNWuxRzjrmzcauLOCba4XqYjNaRzf/e53rf78n8FY0flRb1oqLWwQ
I1PjerED0DXO3gsNNsUCxD5HywIQscOLDLWZ+z7ES+P3Uo3H2mwQxnnve9+r
HQXMvMlEH8O86BvI3EwGsRIycgOJxBZAG+LlT/7kT7KZzICV0OrT7H8PrRn9
9w5UpMhBK00P9U3UjKeN8TCLFCHw/NBDDyFZ9YeKDWuHjx5N+sBOzoKGahR1
+lMhP1npuxigeCwnsU/YooGQrTIoN5rsBgcGgYrsVrsM9t0JjRvrfWPwzKrZ
pShbPIozzjgDNrn++ut5rlFmoIV+KNNj4hn6+8t9rheEfeONN2a1aYV+SOZp
auHW2XwJRQ7QYT8QOPSn0t4ZsrrN2oVLLrroohItD01SGIPtgHOYlEVQRN+K
JtL9zEFb7zz33HNmKHDyXQ0KFVY/BfpLPfSH+inVCIYmcCq78d6HU5rCVrOn
YvJW54sfX3lbiOHcoSGEGLCG6k4e4LneZ0LffvvtYAItksA8vslkgyb1Vsew
7KxZGlWS63IW+Tme2qhnByYBXfqcIJwT/eM//qN3bsDQgjxzKP1yvW+A0Gts
Wy38xje+kT2XrNvdTWaMqzbL3Qcuu+1ahRr7MwxUK5TOanRTbTvPOngYQaPL
yIi0BrVATx5kQbFOsD0B2llnneVEgPe85z3A7RVN1pq1DXnp0cjgRlGF0iiO
uYZYQmH7PF1C5AU2ReY4r1gogqoA+6bLZey2wLxyWOZEcCAsXBjBLnejiqxl
vQL7B+i/CS2WBQ1PP/10zVYVWsP8G/XrEMX4+SY54ZC3xY+ZJScP+qz0pLvr
rruCq0Ibal2nVJ6mdXi4Vp4We9Qq8CFfo+7H2j4ewGN4GDjav3+/dxUHDx58
9NFHD9fuVCsWy1tPwfGAWmasL2auVrU2YCDUCTRSZ1x5ym/NT60tdc5Q0lfi
x4mvRZEqZXKGW80TP3uEZe3Gwcs6sWlR7+B4YS6UscTN/k/AeZqGMkeJzJXI
mR3yIPTthmi9OsKnYBgiv7BEUHkwZCoO429G9Gft+t6Bpanhd7Z1zTiuUOPM
GCmwL8AonCXUhoiXMQJtJqTWn/7pn/7Zn/2ZhcQYjCWu4dRgS0X50IsvvqjZ
W6BX8rSPaVK53ji9tYNRb51CfJDgSQ2makGIRpoe905R1g8RYyOAfO/Tn/40
3Ayt6lC5UmROlWyDInhK7a52VKJysFx3NFqFmYs2zOo/r1o4OcYs394zogW9
FLjA6b5WZTo7iJW93QQnsLPd2aG62gc2qGyatS4JsUEDC7FXx+dY70Mf+pAO
g9ERBzKWG7NtW0JqvUkT1SoAMXLRZ9Ls2bMHoH34wx+2LUCbrDBnIQrx4f7X
uw5tZ04D4/31X/91ja2nl9vT8CofhDIfe+wxO79l9z+hY86Uk8dm2e39rCNA
Z+BrofOf4nPmWui2r/8UaDgzDFOXzW6Gxt69e/VYcZgQ34jr7GlXqWSj/d5X
mi+nFud8JsMVKsla4DXHahpf1lsfuGK9UYj3WB6vzrUKGKz2MPDJUFvLyO04
IXoNTX4ptmVdQ+cpF6kPMxyqnf+1wh1FoxFl5XgPjdNOO00b+01vehP6zKvd
LTyItabF+vvQkj0ETeksChkr+eSfIdqqTpDvrLYHQZZOzVqyYMBoXYsFEhUI
rH7nnXdeeumlKBM0UomjOnsI/LFjWI0dmkGgiZPSYtGeF8X3Cuqp/eBsLDpU
OHqb36o+gsbsic6LXe1pZWbV7t27Tz755N/93d9lM975YlyUSqblEfXknLW+
Q3Lx7DVDs4+IseM9jctrxMi+jb01wkdfeuklLxNGFDXVgkUioVkXcJYnU7QH
aNSVDZ9rFeh63W+DcXw2M91cwdtMbStpK3oXrll/mCNfNSFrHGdH23O9iwj7
ZRVGwpllE+eff7434uwCYtKaT1rC80nJ2/kdiw1KxlnEpH0z2O7uhhunhreb
zA2lqJypVkvdVvs8mPmttY5biChcYGcxFf6WW25J5944z4pTifh55JFHABdq
8Mknn5wslGTXxbwjrxiXrwolSV/RmXNFHWEKhU0Ky2kLJ2anqbpKeF6lL8Wn
PvUpjeZyZy1WrGOxOMSY8RDFWGyS2lYy9Z5auS4elc+29cibgGW1mRzs64gy
FERkMCuzhPrezSvKCAPhGHJVRgTEtgFvYIWLqd2VRroWo9nDy20/VeMJr+hA
Wyt0IFCQkFUGk+oDdf7MWtPUjnDUNmxZDV10NKHTZ5RX6Bhr2N3xffFk1O1+
QupxNZ34cY/blIwshoZplYLLaJWPfOQj+D9QP7YbWwxPu+TIWtKCdWsfYRvx
5Lo8OPsTLOacywqjaxrvQPTWbLf65gKj0BwrDk/jm9YbQORR9diopu+TVOGg
XNndOLDevjp5Je/XDB6mErzvvvtwuMrNbt4YmVZe87ewOXuamcJoKFdLIsIG
WuOz8BP2ARJAKhx64y00/s6uxeMMho5mVrLD9yxKbqp9tF6hElPUli/dNP3W
yHP2VqvPBC2mf/DkPQ0H9ZnOXsXt0Iy+5557EJW33XbbRRdd5Gw5NEDJ7xMi
gB+oRuCuZG1F92xTOcoysas1m1hLuRLoAIOc3VOkzcS+jr80nHqse+esodT+
3T1CPHHaw6FAIKh13agV2ETxI3v0OiwgZrXwiI/J6KPCFAV8+eWXc3QkJ+e2
Bo1vsSZiwYLUjY2NxdF94oXlv/VeQicv5dGnFXO/NMjRcSeaOVsnawgwl+1e
cO7PPOv9999vPBfpf8oppyD7OQS2tvYmHz71/PNLYHmh/FecKf6mg3fHHXfs
27fPb3JqjswL3wF627dvn2x55h2eMzV7mrT5DiSlfBvO/stNevUdOTqbJetj
+DuHd3xeTCSZ1nm/ceapZwZl2ALh0ZepiOo7pHe5jci+cb/zjW/4j4PznuVi
8Z2NAwcO8H1Oe8455/CmWAeK6DDsjbAyYdBLmhQyrKuhUiOg7hd54z0gpFZ6
BGX3xgov7Y7/I3nU9qs/adOMBlvkueee8wLE9u1Ft13Q8NdVo8fX8NF4IjL5
fe9739lnny3azNGLs+/afHb8LkQ3nwTxr3nNazgpG8bcAyYQAc/83Oc+V2CX
WVA14nHxvORMtzG1kpc+xlZWR/mqiHVDeAMU5j0ia/KeeeYZR1JgF6BN/uZv
/qbIvNfHTgz7p2RY5Yg88YorrrjxxhtBFODkNRopaH3n5nPD8hydU0LzLMQp
oS3fH+pPeGIRTIHtOosuY0y8fv/738/BzjzzTKgkzrluSrbnZIfOD9ITgViu
OMJpi25biGRA09qAoU1Fa96oJx7uqJV8uAZVzkZkt9h7oA5VeKj2yy0THL2L
AOSBrx0pT7VZWB9AQS9YOKeffvpNN90Eyq699tqW01ni0cAAJchJyjR7TxB8
WzR0fwjpdl3b1T6ys7imdQ3w/cILL3iSwa7znnfU6WWJY2JZ8dQ68fWiWXe7
ytu33347cIdUa+0YUL/mmmvsv6HfavsdYI8pa4gwemvKdcuaO5gXYBIqgZ8L
D8b+N7RwOa6d0VNt/eAHP6g694JGHfV+2zMMMTVhDyY5A+vAMvKKn8DkQ4cY
H4LfgH06DZOse2NxG99mpuPkLbH/K5psMLTAAWGN7CuQ0mOHXnd21s8hLwYi
ei0avdu7G6kTR9LYyKTtCsvly8WNsrAJrrvuOryfrN9DUGrQa7dmDoVpB/DL
m7sz/GtMnAGZcPg3vvENKASE6SpWCcie8nY5MVHjmIub9GN0XOni5Z5jyEP3
3s9z+qnQWCWzGBIAGW9729sQmZOsgHniiScCbXGW1Mzay5zoYJwlsFLriXgQ
shriN/TI0RaKc7PooJNZtaOtpdXg9SdtAzc3TOCrXYliVmKXA3ZS/D5keHuy
7KAHvcXJVrNfGD9veMMbzFP92Mc+Fp7sUEGZJwJWXs9N3hhnC2xty9yqWWhx
DEP4xiREXEaJrFYNnzxcD/ZzIH4ccwm6LiBT3RKYocZU43QWAxkT7PKl5SZh
JFXG6Vb6WDTYghMy32A964ik9c9//vOIC7ScGiGkuT0ad4xqqnvD5emnn4Yo
OaNJOXbB7c84C2PSidoi0P2tNXlQK/ON9/EAZxhzlF8Y0apSLyVIlXpviHfN
7LK47q677qqZrX0mzLve9S4LUREkxQvyfMGnpXoZsWht95AlZ91hHlbg5uAI
AxCHWw+puTNbnYS6Yzd33nnnbC6ONbXO3ZCQd99938+TGs8CBHNRj2p6RB6t
/eEubJxrcag3kmvf/OY3wcXHP/5xa74tyqhzGeKsoSUmKxwUUw01ps3GozOb
Yz1P/OOYBP6TNoKdd9hlTkO0GX69a+25CETgEsJCbeLTVNGm6D2jUW6N/53U
+NiZ6bXuMe2Wersefs6qqaxIIZzpCy+8EPPtqquuuvfeey8ZTjaXnfGOd7wD
ETPC46wND89cFg9W7Zkh59B+n/3JXve613E4NL9lnvV+S2uv6LzTG8XWCLVn
048uXBtUuWI7TjScrQ0/9alPlXvCiEGuebsu5iBXzBQUCDKyfKI75Vy+GzDA
EgXJQOK73/1utfQyLpymmLIw5Wb1obRgsJLQrtADrHHWWWdV+c4jeFD5wPZG
p4DO+T1mbQ5dK+RWNWx5GTJmjX1rhrC91772tfgMnI0Ns6wnXraFiifmo8D6
su6cwINNXBM/e/fuBSSYAnBV+b7nTOcpidTI4bTRad/pbSqn67F4Rm/ocse1
C57astyzpN9RYwPlnAug3IrD/uYXJEgpNXcnPr6UnQ3Aa5nsftkgd6ZAhwU+
+9nPApHYzTa+ynmteVBa9lSqDBhXYToNYvMtrhqvT0MSR/M5hWoSb4kGvGHo
JxexISiVF3wRUqyeKIsi1Is9FjpCbbhN+rUm2XsUTo5OVSlr0Vr7lbaTZ6wx
2fWmBfJm1Tv4XheeuMUpysmmMcVj8LVD9qx503hL/FxyySVsCp6DUwpHfSZ2
HuU3G1mJvH///g984AOpKGbNa5uM9g28nD6ddcadNvv5I+xxssQmc8Ze+bu5
f96y8+PdOuf+7Cz1b5n7ljzCri644AIEAyeJToixq/QVAKLj6Evcbu8mffPK
//C+Honnh/12FCIKSGBIwMh4/rBgXiTMOnPA4Cu8cfomqf+KJh1qn71X/6xn
Lskb2C8o7lI3qodsSH7W+uCZEgZlnzmSxMc3OsKaePTRRzEuX528fNFFF1Ve
9nnh86wgUVich2QYO3RABO3AaJXoZ22Sg87XsnOn88KtshmqS7qnLGdM30Aw
+ygRj/2bJE/4qjXPA4sfJ9erKG9+h3wQ146b0GlGxOuq527i/9A/xevD4mbV
hx9+mP8B1zjb3lV/cQtaObCJG82JtG4FYH//+993WLprDh7Tkdc8f8Q7O5pe
4He9eal7XL3kihH9XTRvL2YisfgFm+jem2bvpTDEXLDaFqc0TVY9VdcNH3iq
G2RG0sUdVXt7Yb4sf8IE9k1vd4ZVBz3rquHVLWtSgVFYFVSwoZCeizYYLbLG
LF3v1di1AYm68sntdFbScLqOCpaeeuoprHwzXMqd46WNYi2Obf3DVniQXCsx
Ce66tl1ZOBTb7/ft2S0SxmeHtN7UoGT9W4vArigW0xtTJVeYeKris/WcYdcK
nqyBz/9vbvTLwnbiVuOzqn5Imjguf0qTAfXW1tXf0iCe7osWQ5yoxtRzpuUK
zIltiSBADuPa3HPPPeVe4+RGY/VG0pXf3HjUytdZq8MJipzzB1jPy1escgt0
+R+6ysqjqrH+vFs3Q4W541h3qV8Xa0G5uITtgcmh9EK0aKV0lkt5+eeDtlvK
an0ek75OF50pz8p+Vi6L+WXnrQyW1to9fsleVSftu7Q+Jyh66NOAlcSx603G
kMMRUb4S5UDQKxV/8zd/U13jHVHVTj/lGWt9747UDzWDIm4MlpWMqVHw31/9
M1fFTMxs/PK53/gN9AZ2f+l0/jsJXfBo4cDcdzk1u+e8nPrgwYO80LgtfueH
ZkbpHumwYVUwm0Oto1wn4/4ivxNQG+J/Pks9yT5dH2Jo6/exw/6zYB0TA/vH
lIn62SGK9ecDx3R32h9qv9cYkZ+KtoZdfMV342UXl/hq96531sVa+mq3gtIE
Z3duXasqis/Uv2sGRols9U+zLnv8NCBQaax72lzvtf79tER48b/+/jR/K4d/
3//2q8nP/f+StvOq\
\>"],ExpressionUUID->"fb83a133-8cd8-48b1-9749-96f0c9bacf17"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Inherited\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Inherited\\\", \\\"[\\\", \\\"\\\\\\\"State\\\\\\\"\\\", \
\\\"]\\\"}]\\) is Protected.\"",2,23,24,23486100759169487882,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717139991994877`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"db155ed5-7f23-44b7-ae8e-bc83299f8da2"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Inherited\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Inherited\\\", \\\"[\\\", \\\"\\\\\\\"State\\\\\\\"\\\", \
\\\"]\\\"}]\\) is Protected.\"",2,26,26,23486100759169487882,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77171418456098*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"98fc2ab0-671a-4264-80bf-749187d1e560"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"ldtrial4", ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716871511302104`*^9, 3.771687161543811*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6014e775-a6f1-4efc-84e8-debbf7be24e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUs0rRFEUf1lZ+gNsrKT8ATYUOwubka8iZjIkGQxG8gdYWEyykIWNWKhh
oSgWMzspHxGmJKUm8TI0U/Nh3r3nHufe+96dN269e+/5eL/zO79zm0KzgYk6
y7IW6mkLBJc7o9HgSm8DGX2RhanJSHi8O7IYngxH20IyrdH9UAj0L7JAbqLW
5y3w7coPvrh7cs8CFf11A5wOeRFg0PJ+v0yuFi4dVmiryHyvDBqut3v2JyIj
N/nB/cmRHsAzPDj/sUsoHNDAmg5nAhNgM3QGn2Q+c0lKYKqSiD8RmY2hFCfa
BQnHFDBlSlxg9ugx4zWKOIReKeB3AUt3lzmPt0DTnr2fLlL3j2/A/qmImdeT
+av00fCMUwYtits9rZt4aOu5v2W7hygIrQ93m2C5Cctq7rIGYsRKeJhKH8DM
bsfSWiR2kazUTkERekviTnsRc0oiAjJkeDbNMT93X/5yBHAto0AFwQXPkvWy
qWGYHpVkI+0SYjK1floQ1cH4JvswbY0AE2ag+n8C4Px9rHX1Wl2NVFylFen2
XPyoigxGFj0th+nBeJ3Ler6a5pm4F/DmxbFmCW6K6qj//f4BLwr0RQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU////7z8K+Pvv738MwX//gYJ/kfhg+T9g9SC1/2Cif6HKwXL/ENr/I7T/
gzD+PHhycG9ThBVYGmzS7/8wQ3dWJ1z8eSznx/W7YNnfyO55vbihrv/gtr0t
F/9Ajf4NcTaI7PLb/u3n47LeZXBHw2z+x7Dn8up/b/7e8b6A4howe6rrhv//
Pm6pVDF5AnUdyFww68f/Q////PyZIsLA+h3JM1D6+/c/1zalMzCcQg+u//9+
AB125TYjw7xV75ACAuxMUOg9XsWgwiAs/P/3L4gYcog/v2Qqz+Ci8P/Xn99Q
w/79B8Ff/398/P9uozw/QxckxGCafv379/sHiDOtTyJ74nuQ0//+h0fO/48n
ND/9/HtWhmHGlT8gd/39j8Az2o88+P+/n4Fh+jeQyK9fSBH2h4HhwNYbbWuz
sr98hYj+g7ny71cV6/J8X+Ow+Ol3/sGCGBZ2/99cu+jFIGXAsGsePLrhbv15
lcHK20j9aM5fqMBXpFD7/fnta2hUAkMQHlFQlchpCiMSoSEFdiVUNUztH6BX
oFqQg/rPf3QLgAAAvm3OAQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUjssREEUnaiUNAqfgopISERBhWh8GvFrNsKK9Y0li6BQSYRWgQiFTyhE
I5IVlRCFP4VEYlewBeuz2LV2d/bNvebNvB+T9+7Lm3vm3HPPnczWvtr2BELI
QCIPtfbhMpfLPlqXxH8anANdHU5HW6Vz0NHhcBW1qrB07UV1gXi0xWQ0NzCO
/1Cg4QABmLkFBgPTeJg1o0gcA4mLIIbNGrKsyETxZcczae+e3/mJ6NzMUHKP
IUx1Lo+dy/KmGgheBnDb1jlGCkpXJCGTjcQ5hIafvLcn60OkgPgszarH+Z/v
jeELHa67oua27IKin0uNf08Un1EmwRYPAu48Px5m7dmDwiQr7yf2TNOFZxtp
2VUziqqWf6hQdueJLrWT+uaRmFbGZGbHGyS5sKp8jhsmzJUJEC548wmpuXaj
RaaIigrk08zMucEv3X4wIPFNrJ6d6ezfR/2ksFQRuo4ZUl/oYQbDuhSNluEH
j6Ht06PGPqrbL5cShPfJ2CMeTC1uNQX06YkJA8Yw+OR3ZweWK3pOX9EQD5Jh
C8fbEL25xEPloW+jl72StYvZjBRbWq91PKiPHiLR8OqVLMWAgQUAqll/jihm
L4r01bxG/A4ayX9V8BfFNtYa
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUk0oRFEUvlmxw1IokgWlrMxWspCF8pNSFsMMKUYGTSPCzkbJ70KW/oql
2EhhJxH5SbKgxm8mhvHeuz/Hufc9z31yeu/dzjvfOec757t5Ld21bSmEkN5U
/NT6I+XhsD9al45OQ6i3oz0UDFSF+oLtwbCvRcKynRdAABoH14R8BOPCdX9P
oaH4nzwAah9cg6ExiRYCfipyT9332G7S/KcWJlxexBa3ZDWqxzDvaGK3pmdy
of4EO1JgQgs9f2wMjE2XNS1jiqUmYULGEfR1NXZzHhkkJPdO8bGpSXYWxLef
DAPAl98l8IfFfplzMGRls5lUh9ViXCKWPYMBV50XgXsPd/v4hNgenFb0rwln
d24ut55HHlsLsyr9lOJ4ugLJU2OqoSg/hxRnGCbSRvoU2SpGb7Pz+40ks4RE
MwzLcjVQFvUJVJMswdfxY8K7zWS8YLWIjA+tYKtXBvq64GGYpBVE6GYCXt7A
YwwS11Nk1L+DXT5BjeAwlVxMmDtarzmRjtyllFxwpTTIRcL93AH8GVpyEh9w
dnt4bffWIs4krzOlJugR5sapEtH2OXUgDDRT1456Cqp40iOLfoN/gEIr9Q3T
mtjv
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUjlIA0EUHWwi2AgWaSy0ULCztFSwSZsgFoLmcBMCGiERVGxUFJGAaGHE
xkpLO8FCSxsrESQIxiLg0SQaEpPs7syf7xy7m42zO+f75/t/OL4STvYQQnK9
YgnH1qay2dhGpF9cZjK5dCpjLIYyq0bKyE7EpdigMxG5+NRwNn1g3s2VoPoC
PsDVEW8gdcSpW5l7IhxtBYtJ/foatdAnqAZFAGRMWWf6kYMDgwm2MFURJ+DK
NZfOAWvWGxZvds5I4rTKXDcqJMvGtKBleiQQjOYrLabT0BPYc4GQLB6SvW/8
BfQHj+yKkP05jidL2GZdWctoZrcDIriBy2KzmyuJmjLG8tGC6ecL1GqrVC6C
k5IA5sclTxTpZ6iv2FIpgVbSBAg+KN0cDWNTa7mR2rYkAD6q84SYTVA5cwXr
HzjFh0iC3EmkU1nX88/T8lfy9sVxorjXJ4D2eX5o9/hRF0iodopvA5bGyNZ1
3VdoQFcT78eNkgwd8P/gmIq+Fh0mdILaKhVbYT1plB2eVNqcu3yKIh7Ua8pC
p628brTeGyoqF+G8A/KGStXfuF6veaV0nv4Aexrklw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUr1KA0EQPqysxAewiPgStpZWQsTCShMSg4UREkFsBBsLxcZKBC1SaLSI
LxAEK0UUoo3EBA1Rgxg0F0+SvdudHW/39m5Xh7u5nZ/9Zr6ZG00uxxcGLMvK
D/oqnlidyOUSa9PDvjGTzS9msunUZHYlnUnnxpMibUS9iFw+CFIL4aBcoUDg
lorLLwdlGMKRBclMnPkfhPC+9DETVZgql5tucHsdJExXNk9O14AC2QnV4eK7
Q6TlCe1FqKzcbOCLbJpypgH9GG8XditYOSXMo7oYyGC72e58lgqtoFDUIsi2
WZngeeyqCzoaAtu16s19LFUK/GBcRfrdrT1MjV0+m5NVQQL9o6XZzcOPH8WO
QnSPAN5trSf3GhxduSXFwg8wQbk4P3eNr64kznQnyGl/e2NofwcJElVPTc7p
vWEdnVsH0TWX4kuPth4PzqwLrPrOYCo0apbg05eHx4h2mO4nAYQQPYSTuloQ
hYidKuzYghYGvICpkBqe7YRt/Pu7BJDh0gsEYUDfwAh2g5yZP6ueMTPHo4ck
D7/IQf+v
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUjtLA0EQPqxS+gNs7EVTamFhCsE2wcLORGOwSIQYCVZaayFYiIViqxYK
gp1iClPFwhc+EMQHgZgYMQ+Su9vZGXfv9jYxOsvezn3zzew8tjcyF5zpMgxj
3ic+wXB6JJkML4a6xc94Yn42lohOjyVS0Vg0ORiRtB61iTj9J/hXb0Fc6tz1
RA8iYh08VAvQhcBhYSsImup6zjXsnDZalgiHNiEDDoIpcI6CazHHTFQ7z0qI
oZd/ifhZPJ0hrGSuoI4qJzdeleh16IJssm/uCzIRhavETqhMVq3qWzn+Yh01
2YJtApwOLH1UdfmoSE0uSY8LBwVouXmF1KWa67/93UU3W+m4tRr6NtFSIDp2
uW1G23H/pF0VaaLyAqYaSPc0NbHbkL0WFvDsBMCKd8GYP51nhY7BgfB6OSRj
9NpriFica8JTnzGdqpiYL1u6IU4eFl4aASP3gOYn7TiXQ9tjWV7bJBOpuRF4
c/opnMCdBcs/54j2pDq8XnMHraMeZRtukP1KsaNnJfPdCw6/DlFCTTBkdGx/
l7plWpil/ZRDm+gZiSDQBnvTdOQHUEz1RA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUt9LU3EUP4SIlA+9JBi9iNI/EESCGhIIPjaZjSRho20KsWgaKpkgpS8y
pm8pJAMJJGI16CGngb5oIPqoRIkSybKYpm7Xu3vv9xy/3++999s2OnDv93t+
fM75nHO+dYHHntAFAOir4j+Pf6A1GvUPdVzmijfS1xuOBB+2R/qD4WD0VkCE
XXM+IkalwoQBEalcigMtIpOKQlAo5Zlci2NHS96YA2D0d+yJh1KHtsux2plI
yze86boyu8CUnQM5XlyeTT4Yj4UrYZ45TITPYILQxzq4cTJSfdWXlSh0KTIO
Tl2E/vT2BHxCQsJi8gbFoSnxIdi7S6ZkgqomT9yzeGocDTYuiVJM2eWZvA57
RJkvlPlDhdL2C90vvn7Ok55e0L8fo+Jpy9NX26S1N+/RzzxvncmZOP7sdGgu
HX902/tyQjNLx3u2+XrqqPZmBcAyVwTAJWsY+7QfPpzvboAKTygvIaZiuVUD
P0749T7EkoZeYAfMnqNNGLxE+rvo1LesaoyJ3HyebbEBgzSA+OgvE4VY9p44
7m3hkm4OJ+Du0HpOc3OZMiEerPymjTv8bXXSqcmsnFMIBSeDxp531EPLvR25
HtmWIpqZ8fnX3reu2lWQlT3Bf7r71pi73f+GkGUpf9nGUa0YiUrKnAM1McPA

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU////9z8Q/PuPCv79+4PCRWP8/Y8NgCX//vv7FyL95x9YDMgBGfYPouLf
/99Q1UCx359vGBtGKu988gcqgGTSzp0JScFLLjLMBZoDtx5k1v/pDLnPizVl
Fi5Ntn/55/+vf1AdYEt9xFSKnfb8e7Iv4OI3mIVg2/99W2TOsNXq8fILt/6f
2vT77z8kL//5fyNpXw/Duk8/P367NBnVP3/+3/91TPvh/xUH3y3PvoESTCDO
0cI3H58kek7efeUSWsj8PfH0w61l29pqZ0N99g8h/bu78//ujgSnkw6nfsME
f0NC6+VGYKSUMwTxiKz4+Rus5x/Ua/+fH2XoF2WQ8GthkVT6+xsWhmDw7R4D
Q/DEHKfkSQy+DH+gDgF78e+33eYMDBsYvAICKxdW7vv6++cvuBt//7cxWT6j
vaj7/zIOj//f/v99/O85PNDer2e4MWvCDIbS9Myyl79//f37EykSCtWjGOIz
DJoZghc++fP1/68/CI//2vCcgWGhrxKDM0gMOZyBjBcX/jMwOJp1wR2PHKD/
/l/cdeEbzE///iJJg4Pg9+/fiKT0Dy3N/gWlPJhlfyHa/4HCDmwORgzAVP1H
BwBoBa/z
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUk1IW0EQ3nipeJLSg6CX0lsRemiFHAJGCoIFC1VKaSEBpUnUQ8TEHzwo
FMQ/lBJ6aw+1UEoTD3qotCIIklOwLQVFchMqxkYQNS++9L3dnenu+8uaLry3
szPzfTPz7d7uH+6J1hFCkvXi19M30ZFI9E32NorD03hyMBaPvOyKj0ZikYS/
X6a1OB/KRa0/IFZ3U/VcM8DZKVi7F0LkdoRzLxE8cmGz/8jAwTiE1sliFNXh
YE+jFoRzcLMZcg3bo4tDweRqbkZHBsLrFhCZq3jvJhkJdYXH3wmYJJR0VHTE
ih/CJJn5trLuI1/tIm5pruv45O7U7lnxISE6t/oGdLs1fx29vUR8Q0jbkINx
gQhXiMcnem6CtGqoLNkvNxBLhXSArNtTeRNLJUps73x5Ph5cEWVsX1UV86z8
4sZ94t/nppwXoRrkhWeZ6ecPmskXob4iPHKT/Unf8TVMD9z68dG7DAcprCLH
ytY8Cb2vULc9VCTgF5+yr35rQN3LZTKkAxoc2M/O1ymZyNTRy6DJ3Oxc4DMa
CLabWzcElxemhqdrhxtjiIais1wMT2AnX8wfPHpMbT813PGouf09hZu+poXZ
q5qXYr2eUz231NBdqY3YNjX/VtVwlFYeNKgYe3aq9uUR/QNL79Kw
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUksohFEU/iNlo2Zho2zsbCmxtVFkgxQWymMMm1EzNCgWCgsLyWsieWSh
FFZKTbIwqSlCs9CIhVceMZPHvO6597j3/vf+/+Dc/vvfc7/zndc9Re299V1Z
hmF4c/lW3+ar9HjaBhscXGl0e3tcbmdntbvP6XJ6KtqFWaH6kAtDYCiWEMKY
OBCKWpg4UjRx61pamSymrwTMF7OMQHjSZ+VCBwLzn1BUqiOZIEQw7L/aCjPb
kQSpsHz3BU/nprzPPEuFUxmHK0fdXtfEUFVBCtOmQ0AQGXANtnd2JrOMhXXp
JcMxr/8lcICPvsHbCOh0VbYpPLwoe8TX5uVQMKlyYLra2KJ/7Rvhad+4ttoi
nSNe9zncw5+IeyWtI8TimPxof/bGOaQwFTJ2qeqJqg7vWgZOLz9wfnW0lMdW
PNljgjezAUzHZk7yxoa4RlX2kndPnlk6vLmf4zi209MgCLv4Um3kLvhilgX6
HZl8nkRHnb+4KalZYBMR35L50ysqdbB8fhPR3knDqIma0yFQNTMk8XASXS2f
zpggvZEvjIWG/eNncdH03zjG+XcVWHvHf0KYfHmqKAztYbSC0N8UBgD6imXY
MLQH6S8s5AefqeJe
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUj1oU1EUDi46Oji6FBydnIrgIJ1UXKqCHQQbGmsdUkmk1SJERBDTsUuL
0OJQjKNDxQpabVEDCmKwlUDxtZDEJE1Mk6Yvybs/X8+9992+54F3zn3n9zs/
fdHxwVtHIpFI8hixweHJ84nE8IMrx+nnWjw5NhqPjVyI34uNxhL9UeV20v8g
AQgIqbglCSmMBLgSggn1sFZNXEj8TzJkVfEs/BOQn4hTWmxPb6F3GATZNbIl
uLt8KTX/KK3cCJ20mQVWR2ZSQ09PP+RJVYBMQquVda8xh7XJG1c/PCGNZzHp
YBTK6Zul8rflP/CMu+lYEBqW/erUs59nt996dRlqQwN1fkiKeDdVrG0W/sFm
U4/W0RmUCh4aGdd977iEhge9vjizQLwJdKuvf7UMDpOW9ec2CZyLClaWVisu
t9MhUF+2njUpy6dceuzNQDVPOqFxKN6dB+tgY+36/RMTP/+iTcUEo6LKnM+r
KbRPTdy9ve4091QZz467TKW8xtLLs69q6O0ydJi1MLnfUzKbm0qXUCu6oQVJ
tYudeuf73OJj9GYX9TqDwVTgUHfVoYvYWV+R/mqEWUOJoVzM9EVbv/czbdOc
Hpq6F46FjdT4cwr+6OdTMzLH1RBgA+cu3zkch26bazTqlDjoCk1fwsZYX+nv
JaSzqzDHHegol0Bwcsoe8j4AKyLk/Q==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk1oE0EUHjx5EBQEQfHiRT32KP6ANl4ED5rgxdpCQuOixaiJ0Fah0oNF
S0UvBS+ClIKCFksVRKS2YkAttIiIlSiCShJjYtKSdLM7OzOfb2Z30/bBvt2d
9973vvne25W4GD27gTGW2UguGu89kk7H+2Nb6OdUKnPOSiW7j6WuJK1kel9C
p+0MHgltDjh5D6HRl4TyIzAx1/jAlP9qnSi1GlEwkG6YJsC9dVVSuTqF4/eL
fqtnIIjJMIxqic9fst9t7buajp8JyAjlEZCsuG97Ubw92nnw3tFNt2YcmG7C
B7//Bk1kD1i57jsn9gxBUheh68iWJ58TofziZL1hM/bL52JIK09M1YAK8DkH
fBzrLGniHlfUVQjYKD4bWKAOBczOjT6ad7kIWDoa4tvwILv2dWl6JfsA/ySV
eKF6DcQ6FnNi7nFmIis86euomwpfHo/4PL1b+ANeb0p9pIQyinKnCXwf2ZxA
NVRE19OnZ4NX3PHjF3ZEgTJ14C3VNbq7fJrG2VaQDrGur0jNVIWy97DDXXs7
Sp8+NFH7a+shcDMqHW7fxm7eeFKMDE6Vq4amccIhjvVDfa8ZO9l1/uX1L1Uf
ytETFY2fqI3PsgjbP7Z9ZojnhVLCqKmHQXri/WW2u539eBjsiCvXUB22IrFX
mF4o6yXz6CJQfhbV5rE04Wgoc2WJlqZGVRVcSQZ3E/7mwExZQazumT6FATL1
IoitQ2uZu2Y//wP+AMmQ
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUrtKA0EUXaxS2tjZmMJvEKwELWwsIn5AgjHYRMgKYm9jEZCAr0aQtCI+
MLYWVqJEwYiihVaCIRJ3N+vuzp25znujDvuYmXvuOfeemZHCUm5hwHEcN8M/
ufzKRKWSX50d5Iu5srtYKhfnp8vLxVKxMlYQsGH9ohoUzWBM/iDdQdb3FVAx
A0z+5NkFSXkY/h9aQMD4LDKcRBFqjQgQQ0NEmSRiwCciLbJIEAEZZcAXiAHi
bRtDpR1TKSEESSjgUfdbVg+JqozyFM5OAh89vN6uvSJNCBKwngCGssKz7NAx
Mh/TCBLJkNCLSyfTEoWQX34REge9Z3f/6IPDOWcs4aB7f3lq4PnkOwpGqhOM
c75Hm9nqeD2RMbBGChyLMNlzRpd3VNOYaiIRnR1ONfARrPMKRKmsu37iztwJ
k8GcgnzkoXnNzau3HvYlIpWS3ICH6me6C1avG4fo1ba+wtg3Wer8uRFBmDTX
N9QK9IXRgKjj7TYOTnvcWH3FwIQYn3ZaazfSV0x3rTrct4NYB5hSSmX1fbJn
wDtjihpUwxIHaFyTd4b1FafSfwDLG/18
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUs9LVFEUvriphVIbd24UyU24aCGtzFbSQgirTa2URsdFU4xBWNAio42U
kP9AC3GTYIhQaIS0mHRlBBIMRiSSpc4PJ2fmvbn3nK/7673e0IF33733fPc7
5zvndI7eHR5rEUJMntbL8MiDy9nsyNS1s/pwIzM5MZ5J3b6SuZ8aT2UvjhpY
h/8AgjV2P2I2W1L+HBnFCIdlKIuLLlV0DbYOC/CbiNnFssyOTiO2UtPe54HO
2+C9wol42/6cPLe30CzrS5+LOx+OywTSD8k+YFSBWgGPhp4OPl4/TEpy+QXb
z3quLz4sX+jRJ5nkZOR6B+beL8z3il1pI5B96iDF5ZKBiKE1X4ZoNVJfF78S
8ngxFtMZFx9QGVTbPgI+3uwuSp+idrDB/VESDezPpG+9QqicJJMSUEE1AIVv
7pw707WyqSQ5fcoUiKoIAy4tXhXivA7p+uMUNmrg4PhHuUW0iZccKDL1TAjE
b9xrfXIpje+hjcbNFa1g55Toz3+rxL1l6aRQAcjn+mZyHluPWw0EWsiv6myg
CSW5SxURBKjtp/FuA6sc5fhvyur10ND/9PPCIScaRYRPS7N7+N9MsyG/lFTT
0Km4CGwnQdqzi0rUVIQoiouqdcddTM7JXwXj46k=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/4eCf3///UeAf/9ReXDwFyHw7x9cDMgCaf8LU/4b2ZR/QPHfX/6//PsH
bA0IgcEfIP/bglKG5ubPL8Fm/fmPDP5uK2Zo5/oCMuIfujN2lnpGNwD53/4g
3PQfakK0gGrAM4hZf8Bug2j79f//UxmRAH+pwJZXf5H89wdi8FLxwJ0afavv
fvn1H+rAXxD533/+3Th7+trFuKNPvsMtAvsV7MkfB/78/+Q/e8YHmAMRjvz9
/87/9wsnNCP54D88kI9vWP2yqaLtD8iBf+AOgag7xlDmlFdx6TvQCX/BoQfx
I5D19phEuR6DgsMXkPJ/KIHybU+QES+DGoPYJajtSI7dcHSNPYM4F4O/6nKg
vt//YQYC9X5pzJ+5b8kthv+/FCo+g8XBgfYHbPCb1vDt/Sf+F3q2/v+GcCME
nGdQbW6MkWcVPYkcKhCrzy822ZRuKZltA4kbaGr4C/H/u5/ry5bfffXrNzTe
kGP9N0I1WAo5ESLiCoR/I+mFhC8knmE6/oEDDi1FwVLKH4RemMPgAAAG0s4b

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUjtIA0EQPa2sRAsrLRTBzlKxFQS1TbBRFAzGIJGIF8EP+EELCz+QUom1
FmJhwEoULPyAqRTiByGIEENi0Bg87253xtu93fuAx+1ndt68eTuzLaGpwHi1
oijxGmsKjM52q+rofLDOMgZi8YlILDzWH5sJR8JqV4jBmsTAfz4CfhvchfAd
FSb7+aDiGNhkUl+0IVnFSm03cFbQQXDzYDEjVn4KpaLYA/Xq0TE3MtS7mKN2
RhEgWe4x1KFc6Y5IdgaEDczsb6/tPuYLWPpxRQjO5FLV1hN+aaSimSiJuWAw
cAGLiMVfarm8QigLX+3jJO8Om4vYUJRNwMskfngOeVpSVtYGzyYb5/IV1BD9
1T56VoLLT517+GmyfNblwalnJnVY29bTGjV0eTsnmJpvX8frKw29+EBs2y0B
h+Xzr6H6RMHghecdBpDBBKPN59MZ2V1id1VUIptQ07cC55GqMXTpJoyGrD0S
4nhJ+fPguj3hvZgjhhp4sjOclqbuQkyWIXV3+gJ+7fZTM83v7+wFsZ8dEZR2
SjDB11AeBFKa32OBqUxn254XhH+mGuur
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUj1oU1EUvjjZSTeXdhCazUEEISRLlSz+oJjiIIWWBNPEJcXEIJ0cHIQo
GCEVaS2UakE7lCBplUJpIaFUECVIBiURtLWiEDHapnm5957jfffvNeKFd+D8
n+/73tHoWHj0ACEkfVCYcOTmqVQqMj54WDiXk+lr8WTs6pnkjVg8lvJH3bJe
/aF6ANK6hukI/u9xMOXQtlWu4Z7DdT+oCBUBlVWTuZ4kPAqMYUdV0649DMvF
zMNyswP/HtPabOYvPn6SfXZdTAJg3DsXlusl50FhKT5REw5npkV271QrpPDi
y+5rbCMDlPtAIQGKH99Wf2Agcekrdbs452qgggC0cch3Pkq928He5OwMkH5C
nS7aDBm/Fk/3JF668L1jzHt/7sLzlYZoY5IY0BA5ft8mZOj4bEOsdRGKYywH
jbljQrKTGeczMgmcW11at24P3rl/4siE4JNbmpUiW/WRkO/D3eL0/Cc326Xs
Vqiv/NvZxYr/qengGgDFYdzAbVwK5nRGgQBZOEVmRrEWOCt3yARjenL757vE
q/VStoycyku4klSy9mZhNZ0LTgrGNMF7aP4UdNbyj+5d+WOYtFwqyjv0Wwvt
32VFNwx4mFQYqOfvZx/sSCm+bjWS/QX4Fts0
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUjtIA0EQDVYiiFZWImptYadgJVZCqoh2Foox2JwQQ0TttbGwSSeIgjY2
giCIH1BBOws/hTZBY6LkEDSXmNzdzow7u+55t5DM7sybNzNvrmd6PjHbFIvF
FprlX2JqcTidnloaa5ePcWthLmUlZ0atTDKVTA9OM6zz70fyIKkDwU1agaGn
wSAyiKHyyQDypYsA0BAoIzCU88+gCIFJ1BEqjiYP/+AmKXsTVIYwnaC91qEP
W7t8dgt9r3GFg4ne/gHroapYQZMLjjWI7rrizyszLbE8kWeaAj0VPdJrkcrx
tk3OAVTd6AHpla5LhPXL4/WwFqijq30Foq3tXNBNSLDzHYfo6GQ5ooLQ+eX7
N/ukIzNY8XUzGGiFLtwCne6+nH666GvhAmE9OdhDdc3jUiKssAAh56WLDYfy
WkyIVq04VzmQRL5ZDwb7It+9lZGKKwfnpegts26e1/gmt0QFuvd1lf9MV41x
WHg/uzEu0ILWGWSPlPL7CBBpg8P213Eme0WiGBJEG6Cn/e5J+hEmwkswD3Jr
DrNBaGoWje8uEyutQIsCGgKRCur7Vi0irwojMijDjl90evXO
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUj1PG0EQtVKlRKnTpOInQBUpTRQoKIzogWBbKTCSjWQhkGiAzpEiFAoq
pKRIiFKgKJH4sKAACheABKbhQ8h8JbJJjHP+uL2dedm9vTufyUp3u7P73pvZ
N/tseCwafxSJRNKP1S86lHmRSg1N9HeoYCCZfpNIxkZ6kuOxRCzVPaxhT70P
5IARGsxuSBTsBCvWSxNJwPHmFogf4NFSVntMJpZm10yl2gM6k0f8vjC+bft0
6SV3MWJzfurl84ImuWhmv5LGRQGverpWTgW7V3CMoApkaQelAtKTd4AtSErp
FaVZub3r6mF+H0Jp/0bbsJaPD8XGH1Cjgp+3kPVwQbhXCgIOwdoVAm0+SqEx
VVwdnC/fcbstEpY6e/tpcWF0S7gnrR5Q476UmJvpjX9btRskfRe1W8QWPudm
+14vQrsfchxNUE3gsjM+vVTON6UhsWGTSkG1I7wHVutKyAl4+q9AVuVjZnTw
SU4tiQ2JTJl2pfhjPZ9+95X8wmVArYN/lU/ns8VWo80hq9LsMrLAitAbFAi6
L6biWH9vvpytnXiddoQvoPtYxcWHs8AqB/8NLcnmeiFLCSTbcQzZlAQ/N4fM
Yi8jh1+qf4l/Yh31Cw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUjtIA0EQPaysRAQ7G0sbu4D4AwULSSFGgoVYRIxBDAkmglhYKHaKhWCr
jWCvKKJCQMFCIvhDSGGqWIif44y5S+52Z9xvckaHu9m923kz7z22fSoZmmkw
DCPdyFIosjiQSkWWxprZRziRno0lotPDiYVoLJrqmuJlbepFpMiDZUBUW77T
X4gu1sITGTgGZBXPBP1BQGLFQtmhBLkeYF1cnSznhvZEraKhg9LLW7zJUfEb
UC/iSe9d8E55NcwPvDsLuoxvWc6XfQFYCdDH484tXvpZRKWZVDXPnW7zkVQl
jeaH7xstJufveZS1ldbIxArvK8qdj3pl+PAk67479oM2aGMVXGBoYbTvGgW/
ak+eViyG3gkn54kDRFirfXNHAoHWSG88mkWsUAqeDwYT/UZPcLBg42t1mAon
8zK5a67nsyZ10AVFXuoj5e7sWtORYEg1P6Ib5MYPjRcsuTZCVYLu+32w+oyl
igUWURxAW+5+IRbj56/ENi3qE8D5Ol8V9LKZzTNLm+kTKNY3xZ2qy+XzjuBv
q2hNJPHfWH7MGMPvOwX/7P7EDwCK8VY=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUj0sREEQXipRqVQaPb2SRmiuOPSII5ojd0JIiEgczVUaBRIiEuRENHKF
RIJWg8s5kRAu18jdvcT9vf0Zs3/vvUtsdmdnvtmd2W9muyfnwtOthJB4G4rw
xNJALDaxPNKBxlg0PjsTjUwNRxciM5FY36Q81mUWCAC1ALiSQitCaNB3gA9Y
1EOEmlTbTCMCT0iActxRYaIpGrgAVUgNbj9kGfwzXounO4dkVcUKZJbq7tnH
OxzFZUTr0jsGcpz8y3X6C3UTlXNL6vcqU/3K7T/p1xk3Uxb7LOQbcHARpGfJ
ULcG8Ly+hUQaJhmVAuPyerlUZqFxQEclQM3Q/BG1TOYOnbVmagIcAdXz8CVq
lIkmDwaqvEGof7FYB1d4qJ6/ML9BSEu6RIGqZIYbFpOyY+xmL6oF5l2SPVFG
jpCOzoIkTU1XmJJcHkmSyto35mVc9cz0BvDVPHVCelYuKqp5HLirfgVXRXWy
dDQ1m7jl+orCVbul4WZukntDUfs6bjeclBWz92vtm6YzOpUZVJ5LPOK/CFZE
fTQmhb4hLHO/NrZ23PXgQFkZeBfsW0FVx//73vgDDbnsrQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUjtIA0EQPawsBSvBRrAStBJREFSw0TL+6gRj1CJCFFS0iZWChWChiIKk
MQhGQbQS/yGNRcQfRNOIgopGyXmXu+R2xtu93XP9DLuzMzu/Nztb4Rvy9BUp
ijJcbDOPd7QlFPKOd5TYSldweCAQ9Pe2BUf8AX+o3kfdyvkGAohI7I1UYARE
UriBOD4SFX74EOFB2AL8QxaLEcW4zLkow3I4iAjmhBEsGQzJ517Q2NMQgMUA
cAC50xt8DKzuDcxswocL14lNti4udCh1TSueUFUY3y0QJQ2b52urGxMnOzhb
1hy9/xB1eF4Y2n5IWXjcE1kN7/Ks4HZAqOydSsbUe5RNaOiU6/GDzuQVFgrc
5uS0Xim7rVUmNmiOvHNLnHayFzjRp5RWNpa/mVk3J11pNRtun68pq1Ce58Ck
uEU9O+H+4BHeJab7JzW7ipinE4j5NVVHY/kSiWY/B7g4+ROBgUk8RxXRlMZW
0Jiik7MtlZb6PdEMZa8NJwZtjnVAQBpvpvtwac5GxmcH4h4ySFKx7bg7NzTZ
sDl9XkeUdS7LH86BOxbNuBfk24Me6ZsnTQpjzGJvYKIO3+jlr/Sf/gXIYOUX

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUjtPAkEQJlba+QNs/Bc2FJYWNhgrKoiINpiA0RgTC2NLYUllYUGhIVgY
C2MkVhoro4ZEE0mgkOcBAe/B7s44u7d7B5PsY17fzHy7y8m92PZcJBLJzdMW
SxyuZrOJo41FUjYzud10JrW1ltlPpVPZlaQMW9ILUSAJAAIq0QdjwdWYxbRC
EYHuTpsRJ3ITSpcWR7tc5HQI2meFSiObKQT4W/c48q79hyBwwg2cOpyX8reF
Q5Bwni5pWik87Ly2z24lpJ5LN4Gstr4QLb59nFa+lH1i8pT3/rLUGXSq75Zw
BnIAT5h5hFXlMuyu8KNgwnoqEeqAnWxt5KsQHH66QJE/8W+EGPJHADV7UokW
e+TyPC57DPh2qTwexFtt5gpn9lUUwnP8QjbCZQoYD+M0UG9cfuqPXR6+ghKO
tgdd64ZsNkBAjC+DdxkxNO+ky6gx61bDBc83CIEjybghjDerFFPLPzZHNJnD
QNXRyJ1hq3EdOZZ9CK4cmjrJwdgrnX9e+YNx/Ud4OKODgQFmfyBx6BsZTmfQ
RH11l+AsSBAaXf47/SHN00AYgj6HUxz/A8M0AMc=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUk1IW0EQHooHaS85Fz3kZCl4agte/OkltNBTSq+Csc8oQiwxICI9FXpo
6Q+EXrx4Elpoi4GS4kHxIgTEPzBSD4oKSRU1EPL/dnemu/veZtOQhXm7b/bb
me+bmWBkJjxxCwBmu+UnPDb3OB4fm38ekD8vYrNT0Zjz8mks4USd+EBEwXp8
I7lQGdebWsIczPL+RbtD7WjdwnMjcUSOFsgtwKaQxvRVvUMmfdpefPj15ytH
PXJ9igaQGYbxO5NfdlUM1C5BXKdB9/0zgNTb5XNCVOE1P4E69XoIIEqrCs78
JEY0X4PgyOKZSzVDt5lQEMB5rZS5McTQL4UEHkBP8rRW2ctXG4TsPw0/oOvN
MVHl9y9TAh2NKavuvCtfckoufP4rXNFSV6LqBR0VCun7g/dWylqdMq4jlEmy
2+yDuxBiths6qgzJxElC6pvep6tr0VJqbCjknyeBEMS/7RRlmbjppelzgbIw
evtDpmQCCl8gaxRpawj6N/ze+cq91PlsBXqnlr5byci8ndVzG4evH6U6TBLx
TPrTg4+5fWzeCNeKKVXqu8zOVPtzoYqP2Gi6UffHEmjhJ7ze2aFpGS7PZ2qE
6Ds0p3/29dlT
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUj1IAzEUDroUHHSWLi4Ojk6CiIiTgw4VV7HqWXW4Qiv+TM6Kgw51KfiD
rqLiaAcHBTcRCsW1RcTFtnp3vbtc3jOX5HLXQJKX5P187/sytJzPrPUQQoop
vmSyO1OFQnZvfoAfFsziRs40VmfMLSNnFMaWQ7e0mhgOQD2UCfqKRfcQu3AT
WADaXXkzeYboQcawKEwZDGSI9PDjsoHY+Iqu1cTax9X63afKq6vDd2p25KX6
9tp3UZUhqj6lfCeTudNfPJ/uv41bCbG6iO0/vntubTB/IDIypvBRgZB20CmT
3VIgj2J6VOENoEPInB13Eq88RWWzRNoJ/piCFRaoj5LhBInacPjs9JIlBMrz
Cy4gIQKujB992ZwbKnrXpFGGbuXQMDmVHnYPxt/wbPHm3mna0KVbaHn4Xj95
kCk0Fox0KlsYOLzNEIruQWy0hVj1RUcxPCpMF7CNP64f6QYYaExcjMen57DP
Fkt+JKFyY2L7usHjkcoifpSRu+ynL8lxAlkSKYJjWTYLhGSCYoiUQv3/Ak0W
i1OA5kEjYeEP6KoCUoF/K3rvqg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU////9//////ACAb+APHfv/+Q+P/gKv7ARX/9+4vMRcj9/Qtl/wPjX78h
dkAIOAXR8Cln+Umg0r//4PZDnPP9esevhRMuTYYK/UO25+f/XOu0udoMa6FO
ArkDpO3v/99frjIwiIoI+PYzvPv75y9Q11+Yuf/+/btzTNN+1sJrYut+fP3z
DyLzD2bly+fnsyL9tvVNf/8H7o5/UPcDZf9P0GCwm3/i7z9YGEA98f0PkM3g
ysKw5heStyDgB1AjMIS1bx1F8vQvaKh8//aMgcE07jEobGEuhCr6cmeKkCqX
1dMff37CQxHixz+vr+1ZzcApHvr+J8ig//BI+/v7/+/f/7+ZCHGLbf//DRFx
EB+CtP5ascVw8su/3/7/BoYlUlSDLJ0q7Ff0/8TtE7cQsQmx89//EzMYmOIz
Ju7YcAEs8Bts1m+wkqtu7EYMiUZRfV0ToJ779wfmy3+P/1cqxYQwnO5ACo+/
YM1/X/3tWLYmc/LBVZ9+QyxCivtfXz7+/wBS9Oc/IjUhvPL79x8Y5x841H5D
9YGD6Q9SgMDF/yKFA1QAErH/ICHzF10TAJEDzMc=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUjtLA0EQXhQkjS8EK5uA+BsECxERtLCJip2QYAw2CSRiSKFVKrGSYJMy
FoJFev+EXUinQdErlJAH5u52d8bZvd29BFz2MTs7j2++nWSmkDqbYoyVErSl
0uWtYjFdOVigy1G+dJ7LZ0/38hfZXLa4nlFmK2YhCnRDxqJQsnoClKAPNQWA
syQ5UurNuUJkBC5gSCsggVuDEIwhclKPhvjPkBJFP9fct3EsSLCJapc/WmfB
uXSA7UK5ZsBHZSCADNX1F990yeOFam9/5I2+G4UdF8rlEdhTwB9m5zEAS5a0
FCB+chxOV1uT6H3j2n2vsmSoYgGM0QRUeBeu2dJxW3KTSLoigDcrjM3cElGk
NfrIiKjsbc7tHg46wGMg+pScexm2zE4ogIFHVWtnde083mwssquxwoykCxqu
sTscEJUw0QI0adXrjQ/7zeBAEhbhPyfuv7yYffeKQfi6vdp74rptpPVWkASC
91Jphb4wyFz7SSGImFGfNPYTXDxtyYNwrFfNz7mD6zcuI+RSQtwWcT1oaQTV
UjIOYXJJ/ANWLuwj
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk0oRFEUftmwFFubKUlZsrDFhoUNsfczZDNqKMTKSilFVvZWUixEKT+R
QrNA/mrkfxj5HW/mzbvvnXPc3zfPud1z7z333HO+850b6R5s6yuyLGuohKu2
rpGGeLxrrL2UHzpiQwP9sWhvS2w42h+N13cLtwo9SQgQ+UQotig0EiBQIKBN
Yu/9s3KF6qA3yIevbVpc7Qvqnk8vdKtj6xNKIMr+8ny0faWsoAPmfx20c1/f
r85pVfPMiR+Kgw45qePF8QOizGB0OBEE5E9dkeByfmvdoYvp4upfiQkNco7d
uUtn/A+w6pZU/VSogF+LNNdlk4+mel9hDLLv1N5s5AIchqTnB6Ev17ZZmCcl
ic981rtZqJnYJcaH5JrpmL7t0X1TZWuCgElmIGCH+7g/s1Z5hBiKgHndDRma
cb3caPVQyhXvZB1gKAY6p9H9NLPfeYZ32WXVcCTXYWTvUXpz9Ywo3PUs0MNZ
au6WufBEnZIzr0CMn6SnpAj+Fl8x6M0l5LJ00pTh/YocKgOIlJ50exUA+DqV
RAXOk3BQvwaF+o3MvwjxBoohQMRwg8iWq3mukKBwlH9PlArBXyAyLS4I6uRi
/gE36fNe
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUjtLXEEUvlil9AcYiG2K1LapQtoNYQNWajaSZoVVEAuDVgELSbNgwEIh
VUQIESQmnSQEG2EjFkaNmnV9sNeN7uO+Zs75Mo875i45cOfOnHPmfN93zvQP
j+Ve9HieN35HLbmhyYel0tDUk151eFocfzlaLDx/XJwojBZKA8M6rS/9GALK
GARjzPoAIr1mjDM/sinWldgAOb/2snQuneAqE2WqMWLgYnFk+Z0iEFEWTFOQ
Emt3732q1JMQ/5nwP698o9oGn5ICcWU7Ke7bhe0ABz9rsZRaCzE7LZ36h1Nd
W+GRTLFEKv6POEMsOWw6qWSJKDRGyGgxdXyb/q8j3NabE/UdGrXsehGDttE+
PsJeVMX+JXEaYsVQoF35VZ97Pf1qD6Gi37HFbMtINK6qm1+WVj/GDURhoNy2
5ao8JQLcnJl5VJqtQZqWibTu8TVHMRrz9/P5ln87EBvb+n5orpcHy4iJsoOm
oHGttj5y+eYPxSO2kg2ZkC8gW+F7z1uuIxTmllMfqe1vnHuF/q+CKGEhpbpq
wvIquUkqG+vPHuxkGmWWCGf+DXbL3hu/2TVsk6EBguCgKtD92MxquqBHCXO4
fXzOZBdWBjNlxV1xYeBMxYwoa38BtD71EA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf2D09z8y+AfFIOrfHyjzH0IOovzfX4i6J3/+wiT///n/G8IACf35
//fXBzDvN8zkvxC9QJk/72dpsv0C8v7ADUQYH1w26cBUMPs33GKQ5PeXZ0xz
pqrkgzl/fkP0QRzz5/9u4zVbDRhCZ0OM+YfQ9+f/n+WaC9uicvjegXn//sHc
AtL2v+fL1fy+1KmdX3/9gWr4CaF+39/7/turx2Hxov+BXvz/5zfcpUCF17e8
///scKnZKYjqv0gh+Ov/rea6HXGL5mz5+gfM/Q0NURBpt3kNA0Mww9xLP0Hu
+gEOOmjw3H/hksdQo2Pr+eL/t1/g8PsHC7D//2+2GVyZEOyz/8eX/4suwL0N
At8biw/8P7WhdN3v/9/eBZtAghTqfUsGo5j/rxwWrvr/59G2Y1kv3vyH+R5o
6yUGgf8i/18CbV/GIHYZZiI0NRTPMQ/o+b/n6pM9PSdhroDpbAiZ7uozZc99
RMT+g/v/8f2TcyFRDok6SPRCnHPj76n/PyCegkTEL4Shr77/BrsNZg7MQGhc
AcPqO8zd4MD8BzUXGwBZhxQfGIr+/fuNzIVxAJjl0ws=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJx1UjtLA0EQPqxSWNgrgmBpZZU2aCNCDBGxUJBEz8Qm4kUUf4GmMAbB2spC
ECtJGiuJjUHUyiJFQIto4NQLl+QeuzvO7u09LBzYu2+GmfnmNZHdTm8OKYpS
jOEnndlPaFrmYHEElaVCcStXUDfmCrtqTtXiWe42Jh8ABWCM4Y8AeBAx/6IC
/wjGgOODwGJLTBiRiFt87MqELgsjPIkamFQwRf/HJH88mVQYMG4yBQImbRQo
RdCAgSgNVTuSFpzDmemdk3a1mjx6QxJLtIqCvYJNRmMlc2GyUqkZslLwe3hc
Mbrf0CxnW5zQy8ijeF/G8+0VdE7zDelLeBTWw1yspe0CMY6T4zrh8yRhC97r
auXKu95jXvFAeSDWhY60X8vsXTY7YDHRF7L5E0IttTys1E1KxHSDGSIjg4v1
1Pyd/mEFbTM5sy/yctaaSsxCj4/F3wiyIRrATR0erp9erci60a7zbuBcyZXy
0S2JaTc6JndZVdfAlofCqcRW9No9t1Tjwt0Kc4q2xQgHjsPklKPyiUsyqbCT
iFleBOERHgX4i/9zQkJxIicrj0OIGxTprSnMK9l8xl8mSPEn
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUjtLA0EQDlaW/gAt/AtWtmIhqQRFsRGJGIMQIiaKj8LCxk4tLBRBUERB
JD8gCDaiiWLQoIXvR4wGFMzjLrnH7oy7c5vkkj0yk535ZubbmWkfnewbb/J4
PJFmIfp8s13hsG++v0VcBkKRiUDIP+YNTfsD/nDnqIS1qh9yrDuAjoVh4wES
JGsI7g63FAxIcQfDrJxwAK9kUJIOszCxLE02AKu5oIwMUIuD8UAo5g4yOeDr
YTL2RuUqdOU/XS8LudCzs68MttIcwZDA7ZWN9YKDtqu1HOaFzMmpVighCEpM
vZDLBDL690dIIsFVlHBzQRHsZDQn8aaLCiAV1s4+qBcp9QLFk8u0afx7kdeS
xThYRJMahHYuh/iMu8dFeTPEZzt9ltW1RNvU3EHQ4x3+fJEGG93DO7/F+ZHu
3sXNoyI5QTl1bXDpHi9mtoZWg/l320D9nSmOHO++UTMe1z5iv6UYofNQnWT3
k8iT8qWzSfPrkUIEHeZwyd+UijJ9Jp25YpqYl8nlFJ0ZXgr1ld1DjONkzN0X
DmCh+WfpomHRjmvdmbnh2iCsrUmDUk0gCO0XYP1CuXDqxmtvqeauOhlNVA3Z
Zf8HV5v3/g==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUs1PE1EQ33jypjcvJsQbiTcveu3RcALCHwBaqsS0pCUg4VYO6MVEbZSQ
eDHxSCgcpFcaE2OgIeHDNFA+S0hZ1F226XZ335s3vnn72Zfs7My8md/M/OY9
GMsNjd/SNK1wW4qh0ZlUPj86O3xXGiPZwstMNv38aXYqnUnnn4xR2P3gQxQo
D2B8GAkvtAQK4Ws8dKAAEsovggQWXPUgRRDhgR6LHF1oSzBIOAmWo+D456el
N7meyPALMjQaZunLcq11Zvaicbcz+W3znnkwUMJrw3O4X5OroKsX4xcr3w/f
LEjdleNB3Knz+dfJ5R7qV3JumWOjiKaF3a0jWdSuLFui00IWJ8mAzhn1s6R5
i+eoHweNCuqdGOyCtbqYena9pgNCzAspNwK7hdzMkc4cOY5IkMRMG9G483Dy
r2wLqArRo5I9VnFb7/pfPZ5zHGABGUJdccPurG9XXqc+1tHykTzkaid4w2rV
t/9O67myocZiMZUkNppNPPmEbWzbyCGcgDphWJkual9/7/hUMDVytOJHmZFy
UW0KQ7L8l+T+2Kqtvy8Nll3p8DOA/kDaRbHvw/xEdZ9H/KpEFWCZ27jU2Kgm
3g0Ld04fAOcEwoUiOLn5yGZxuMTmYQURAlJH0btNdBCt5z+GfuwM
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUk1IVFEUvrZq6a4EW0S0aOmulTDgpl05zEZoMdJTEhxhDMKQWrhQ3AQi
DEQIQZSgYLQIhEQJCTdG1EJcBIOTOCa9ZublTL57z/26/z6oy/0/3/n9ztXh
icGRC4yxyYtqGyw+zJXLxal8t3oUSpP3R0vRvVulB9FoVL45rGG9bkEP6acb
PDzCwSGQhcC8M0OJSKqdsqrCLTJLWpGwUhFQ9I8lUPxD34S3Ij1QSkznc6fg
Ep+kIAq62hxvfr7RXWs1jt7uOIfqT/igZ3NrTaBRKAAp9K/RNdvyx+q7GJXV
xZmYw3rTNTjuIF2qfHv5/qh3pPh1uwnZthFK6+/p491LUc/zfojOeRJK+buk
vaHDL4i3F2qxjU1YX2lqrr+p/qpye32vQ1KqLELWEkkHCapDV/o2pshW6DxK
Tcw0Y9cHDrbaiU3OfreVnVOszOQZu7N/kPBjT5VTq87+WphnHxqQJ60zypJI
UD3Ani2p62az1vYK5hAc16I5tv8Ch6/Hf3IKpGkDqaoEWxtbz1+O7noSyDSR
Io3A68CbJ/WuR/DcuWhNmilafCNxzrj39ycbGDLN5g0YQul/iHD3QHLdmIWF
MjuolkuCCD2oz79BJN8z
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUs9rE0EUHnqxeND+AV7EqydPYg+lBwOClNqiB20PTRtDS4mQCEVUWnrw
ZEUQD/ZUWsnBQg+lpYhSPClqsVZFpWYDlbK2MYTE7Cab7Mx8zo/9Mfp2Z3hv
5r1vvvnmnUzeGLjeQQjJdYppYGSqN5sduTXYJYLLmdx4OpMau5C5mUqnsmeT
Mu1EMKCMg0H+gTHOjUjsqkXl8mCJg4a+YapOratsysERZjH6b64vE8KAGtii
whH1tX2NwluIMFDCPiz6GWhvvxU0KUKmzEPfcL8tvG9zs9bwEPw2R1sT4XZ6
dX7y0IOztz7RcfQNasbVWluu1fA8D82ZnseJhx9LCo+JzxenOiHHnaXzs9Nr
JttIE68E5F6bWoV068z+8a5n/KdxAb3Nyy+mnn+ZWCbnqpSyGIrK2c3von5p
8b715JehkIQQrKrFOXK6KDwH8auIy0tzD+6RM/gDHPrxYb8leqv53b5zd0OS
rdTLMaLfxF7hw4PtKyuV8tPj5L3mqasbQOLI0lfrYvZld19ChkYjOJ9Gjz26
NkNI59VTtxE8Hgt6ZnPo1Wa+f3r3WW2hEggWdlO1MAnfbuy4kSK8GQJTbKGu
fN0JRn+1NYBupihBi0MjeQRvF3EejbTj/z2Nr5oxgmfGYX8BWILeQw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUjtLA0EQPqwsxdrG0n8giIWNaBvxByQYg00OEkFEBAsLC0sRQoRY+EJj
IxYKEgIStIiilaTwDSJJOE0uZ+42uzvu8+6SPW53dvabb7+Z2eGYGZnvMwwj
3c+mSHRpIpWKLs8MsM1sMr2QSMbnppOL8UQ8NRrjsCH1A2CgQEAPZhPK1k4H
egb3+jhCQAGwfyhNyj/OiGlXqGAMXIFfhkjq4JyBv27qdjeeSAhpWAfGZZ3y
G4nQD/4KNpiZkxA1+7lSjzDbfjkaMTO+6BDE/q1eFXaf6l6QDqGSw8XcsMDz
tECRoJKJWCFOLz56UwKKwWNaYG1SO7kAfTEvMYLs8wNGhJKgtNxw+T3wuHeO
21T0g7dEXVatURcK5tk16igluibotmi/wd341vE+8lQzqGL82d6B8mduYyWf
Z7UIchcUY2VwoALrh02iWs8QAoNg1ZgqNuC+VsJSHqGClQt2soNsX8p9Cx7p
ppr6vfLqbFotFoNEV6RWQfHXcsFCKl/9nGRcm2Ec3KRaNtUPSsyMX6qgIbZg
+ApDqUk9RFY+nHMwQfiAe/4BvGz9cg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUjtIm1EUvnUoHZ26NAh2kNLVpYtQEQSXUCKCFAejjakIERIhFB0UIYPS
x+AiGJ+IpA9CughF0cFJBWmFFpSmqYpRCSoGkvj/95zj/e/9H7l44F7u4zvn
+86jvmcw0FfDGIs9ElsgGG+ORoPv2mvFpSMS6w9HQm/aIkOhcCj6oseC+exF
hCQMgXRD7Yze3T2AhgG1QIGB7qNQvFazcC8kShhUs8JO4mdz+k/FfjM9N+qb
9QVDrzpGxZ8JXJNaPmN1zzrZkwVbkcTbsreHhlsyqZFwyk5CSbVQZinzIBFL
drPxbSkCUflxqS2zw87yjE1QBZxgMoBN++Hl4kei/7pIC5E7p644HQ6nCu/L
ToXUhsbF5WTv5+TyGCWQblUo17m4tftjKtAw8DB7WVJlsSon2b6Wwk3s+Vzn
AEFBenGnM3iz4p9uZI9b03RVlLm5pa7Q7cHrpux3/zrRPzJRazWn6xydfxo5
JtrbIN0MOqElMSF5XiznJZlSbzGa9Gtwk80TVPhftxRgq4Gjb/G3U/vitOr8
WbsBHMjc32JP/b9P1mZs4Wg4GBH99AuuzmYLOXWvUmqVwYCiM0HodcIhF01D
XjVs1oAhaSOlp8fdAQH04twBcd7VVg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUjlLZEEQbo9AMNHEyEQxMBOEBYNFFAwUPHA8QEFBcRRBnuuMB/6ADcRM
dNDEwEDURDYQ3dHAwEi88EDxQEZ2EC8QRxz3dXeV9V7Pe90273XX8VXX11VV
0D0Y6E1njIWzaAt0jVWGQl3jTTmktFjh/j4r2FNjDQf7gqGybgeWn/pRSkRA
fzkqLZDaRpL0hBTI38wF3IUIocHcwEmlg+sBAB0PGmSY77eXDif2jbzgM521
6jo62bJAW5JFuC51/XtV8Wq4rH067kA1awJJLGw5XJ0PBUai3OWlaQk8Xru6
O1+M3GF0w7MLFfl+MmW//sd/B3/qm7e+PZrE+U0640+TWF37bNrpe+i5TCZe
kQ8UXb99crN6wBPbf0mJtlcMq/pw8IhS0t9zt0NtJdm5R4g26eA7UMQ6IzM/
GKsrTTpRwriTEj5ujmWwn7kNH9oEbmGlkySvmJUf/fpMUB1s9Tj0ki4sZcYx
draSFF6BAVzCnKCM7eBF7JJ6KoXfLjfyrTotQsce4YS6CHwEYqlVgC+q8LrJ
itbuaENj69S6x/PbOz4OTrc2AL1hMYbQEfmN7c6llKkAaTREzZvRcmOoHQOY
GoCeOhOH+AUkRdl5
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUs8rRUEUvsnCUlYWSnYs7cjKDqVe5A8gj6QevaekZGeBwgIhGxZeKSsr
sUbYCPFKvZXfeQ8P987cmXOcuTNv7n2cmrkzc75zvvOdc+v6RroGyhzHSVXQ
1tU73ppM9k50V9KlJ5EaGkzE+9sTY/HBeLKpT8FqzEJjABg1EPjXNEJaHNhN
fX3l02ch7bOIQLjxq9RAHn2TLsMQbFkVmc/w3ZVhXuImFjd7LVHwx1PBFF4K
31bIHvJIN+8kc0xgoamFqgfxZX37G12efzo/p1cmo/rg0KlF+flwCQimXKIw
p6qZZ/yR+GKkSJXRNGsytrCaDuhfadk6lNMf2HoTWEC82fEoiCPTHp+cd1i+
m7/Nbq5ML5IkcHWUCudMXvCrr+HxxvrY/jqpDRSTL+gAQ/9tb2Opoa2bo+1f
sVlebh6f0ilnNnsfaX1Qp5edqu7oaelsHg2mUDo8b2dr25mrWbsWHMxsoThH
kAWRXj46oNpkJCQkxpOzaBuF7hxRfPHMPLofQQAzGaWOpAw5heNgEoXzE4Cf
WqyPJQaW2CueQxX/DEpE2noDdVCC+/fbI/4CbDryIw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771687163488909*^9, 3.771687188595132*^9}, {
   3.771688569523568*^9, 3.7716885811301084`*^9}, 3.7717118459456477`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"55bf8707-fd69-40f6-8bfc-37442d27db8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary of Training Results", "Subsubsection",
 CellChangeTimes->{{3.771686036861272*^9, 
  3.7716860411173463`*^9}},ExpressionUUID->"5aceb55d-8527-4d27-87a4-\
c9ad80fab547"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"trial1", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"trial2", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"trial3", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"trial4", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}]}], "\[RightDoubleBracket]"}]}], "}"}],
    ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Model 1\>\"", ",", "\"\<Model 2\>\"", ",", "\"\<Model 3\>\"", ",", 
      "\"\<Model 4\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Loss\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771687232527249*^9, 3.771687242578045*^9}, {
  3.7716872754154367`*^9, 3.771687452754588*^9}, {3.7716876340310707`*^9, 
  3.7716876620308943`*^9}, {3.7716877582210507`*^9, 3.7716877751426477`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"522a8782-52b7-46b1-9d0b-c5bc6d8dda4c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQLfdXcMeBkO/2e/Jr3s58Ku7AAAEOi7hfRT8rEYXy
ORy4q289XH9SGMoXcGjZvbns9lMhKF/EYUvZ7dZnUTC+hIPoMbEmGREYX8bB
+ZGct/wtQShfwUHNTP562yoYX8kh5PHS2UcaYHwVh5NP7Zfcr4Px1Rx2rGd+
3pMB42s4XODiibzrBeNrOZz+/ODdGlsYX8dBIkF+7i4jGF/P4dNZM/Nl6jC+
gcPNjYId10VhfEMH0R6vVywiML6RQ9X9H7eMuWF8Y4fgSutDmYwwvonD1edZ
2t++C0D5pg4vDt6N3P0WxjdzSPrRMUPoJYxv7vDTc6v/8ccwvoXD+pppzw/e
hfEtHZKnr7gndQPGt3I4JXrvqdI9GN/aYZvXBos5N2F8G4dzHZfuPTgN49s6
sBR/+bH3LIxv59DC679+ylEY397h7ivLl7WHYXwHB5ZHpX+b9kL5DQ4OcsYB
kv/3weQdHWJCv8UK7oHJOzq0he6ZWHkEJu/kcNk3SSBiJ0zeycE0+WJJ2SaY
vLPDWbkM1rY1MHlnB+OH039VbobJuzhknN4pEr5VwAEAn8yq2A==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQvb6yPykp7rv9nvyatzOfijswQICDtP5dFbZGUSif
w2HZjlVvdj8ShvIFHI6UJ13rdoTxRRwOiasFsy4WgvIlHGKktY79jIbxZRxM
rmcuWRoE4ys4fNxVdzAvAsZXchA5rbu2jQXGV3HwmpH5O/yaIJSv5rDJzdZl
8W4YX8MhN6x23bZDML6Wg7bE1CucK2B8HYf18Rukt/XC+HoO29KnsazohPEN
HPan+k0/2gLjGzoAdWco5cD4Rg4WCwUY2wtgfGOHS4+/m/2NhPFNHP4/N4iP
S4DxTR1WpWbXTgyA8c0c+D4/Zb3hDuObOzx6Ute+yAHGt3BIePXc19ULxrd0
eOOz8LNUNIxv5SDWbrx/ljOMb+2wN2iaYp8pjG/j0PPD70yVIYxv6+D2ekVW
kwaMb+ewZsKnyVnyML69w+ZLS0RKpGF8B4ebGwU7rotC+Q0ODmdfbppxQwYm
7+iQw/lzQbowTN7RQcGNo9+MDybv5HBmy19tbV6YvJOD/cpvLyt4YPLODq2q
cgFmrDB5ZweTXc03ZjLB5F0cZEN9BUr/CzgAAEP2mtA=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQfbkx+WTap//2e/Jr3s58Ku7AAAEOS3WcZV4/gvE5
HJ6+5VjOmg/jCzjMaHuonNQlCuWLONwsd/2wPxTGl3B4Mf9BkmuvCJQv4xDE
tWvvkkAYX8Fh2ewjChuEYHwlh2/1fJ+fPhWG8lUcJnIlczvyweTVHFZP5dx/
RR/G13AoEvu25fB8mHothyzfz33BU2B8HQem+fJuHOth6vUcyq/l7b6wByZv
4JC61FPzRRiMb+hwXZwz19Icxjdy8FfWnbpdGcY3dqg71sqs+FMIyjdxABkX
8xzGN3V44euq1XMWxjdzULS5ZZEE97+5w99vpQ/mbITxLRzuvrJ8WcsM41s6
AENflfEUzD4rB8WzESZza2F8a4crCVJt/Rowvo3DIRMeecHPMPtsHea6RWnl
q8Pk7Rx2fS84WQh3n71Dv+SKnvr9ML6DQ+3pOXrdK6H8BgeHqbXhLP9nw+Qd
HaSFvkf8mgCTd3RQ8p+0bmYNTN7JwZK7+tbDfJi8k4Oy0ZpHvTkweWcHtynf
2OIrYPLODnWm7BzPMmDyLg43X9+Vfy8q7AAAlNee9A==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQvdeipfFOF4vDnvyatzOfijswgAGHw45Sc/9SDhhf
wOGOt9TiUhFRKF/EIcXhW9X3dGEoX8Jhrb7QrSI/GF/GQWfPadea5UJQvoJD
g/bNjYInBKF8JYewj27PJsbD+CoOX70i2yymwfhqDo12E9U9vwtA+RoOFvu+
nZn0AMbXcrj6PEv7mzjMfB2HmjoJRZtfMHk9hxhb9b35c2B8A4fQ3yU2aQ0w
vqHDc9nlLzz6YHwjB2tJGdX1eTC+scP/84n79iTA+CYO5yQDb0nbwPimDhwn
mdQKvGF8MwfjAMn/dsowvrnDWeV6gw8yML6Fg4VX3NxkBRjf0kGWedP13f/5
oXwrhyMz488yMsHkrR32tXv3WT+Fyds49L5TKFt2Aca3dfjYsEkz/AeMb+ew
s5ftg9gJGN/ewd40bpcnDyw8HRwuvFXtvfgLKt/g4PCfUy/sygKYekdI+M2C
yTtCwnc6TN7J4U7yS2fxKzB5Jweg5N3J7TB5Z4cj5UnXuhNh8s4OQXVBby8X
wuRdIPF3gN8BABBvmec=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Round\"", TraditionalForm], 
       FormBox["\"RoundLoss\"", TraditionalForm]}, 
     AxesOrigin -> {0, 3.8086527777777786`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Loss\"", TraditionalForm], 
     PlotRange -> {{0, 40.}, {3.8086527777777786`, 5.974219999999999}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Model 1\"", "\"Model 2\"", "\"Model 3\"", "\"Model 4\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.771687390038272*^9, 3.7716874538389435`*^9, {3.7716876571866255`*^9, 
   3.7716876627790685`*^9}, {3.77168776482942*^9, 3.7716877757062035`*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"c4dde5fd-c4b1-42f9-b9e1-bd984a48abe2"]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"trial1", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"trial2", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"trial3", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"trial4", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}]}], "}"}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Model 1\>\"", ",", "\"\<Model 2\>\"", ",", "\"\<Model 3\>\"", ",", 
      "\"\<Model 4\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Examples processed per second\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771687232527249*^9, 3.771687242578045*^9}, {
  3.7716872754154367`*^9, 3.771687452754588*^9}, {3.771687707482644*^9, 
  3.771687754120906*^9}, {3.7716877873887825`*^9, 3.771687832615964*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"fc07d66e-aea3-4eb5-9164-5379ce319c61"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQFaDh4Pq0T0utc7QPjWDkDuuuO3YXwXB67riwtq
zTdA+A1eDmkg8BkmH+gwa+bMmZJc66DyIQ475FpfX7RdC5WPcCi05bqu3AXl
H4h2WFJgyxWeAeU7xDu8Cdwhx5oM5SckOvQf+qoRsx4mn+wQAxLogZmX6qAJ
FCjdBuU/SIO4JwXKX5ABUb8Bym/IcrAFeaAXZl6Og3zr60CLyzDz8iB0CMy8
fIfDQOv5XaD8CwUO69wfVk3Jgbm/0AFomm3XCph9RRDzdsPsK4bIz4XyC0oc
jEFgMZQfUAo2T4QXGl4OZeDwClwLlVcoh5gXBeULVIDDf+93KP9DBTg8F9fB
3FcJNn9zB8x9VQ5nzwDBaZj7qh2+aQBDhHENhD+hBhxezxhh7q0FyztVroa6
tw4SX6th7q0Hp491x2HuawDHV+teKH9CAyS+58PCsxGSfhZA+RWNkPCYCeW/
aITof7rWAQAB2sWi
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQHWDoW2XNcX+813gPC9HapF1rk/9IXyHUIgtBiM
Hw2hmeZBaIVEhx1yra8D38+F8A+kOHg8rBJZtxrKT8iAmLcAymfIceg/9FUj
phLKX5Dv8E0jpv8QTP2EQoh5MPUJxRDzKqB8g1IHoGsLbFmhfIFyhzQQYIHy
H1RA/LMOZn6Vw6yZQBAO5RfUOIC0c/2C8h3qHEDKC6yg/mFocDh7BgimQ+Vf
NEDcvwjKv9AIMc8Uyt/RBPGPLlT/g2YHoOoqkWdQ+RMtDkuA1l2XhMpvaIXY
924OhD+jDWJ+CVR9QzvE/zxQfkaHgyYweL7mQ/kenQ5A2R1yElDzDLog7v0K
NU+i2+Ew0Dn9kbDw7oG4ZzfMPz2Q8HOB+acXYt4/KH9DnwPIOVUKUP6Mfgd5
kIKtsPCaAOE7w9RPgOjXhrpHZSLEvR+h8lMmOrwBSrfOh/I5JkHiO3OuAwDe
K8do
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQFWDpox/Ye+Wi5wAHMbvBxE1rk//GUM5TOEOABl
NWI05kP4B6IcgnbItb5WgPIfJDi8CQQKiEH5CSkO1xcX2HLVzIWqT3c4ewYI
Fs2D8B2yHR5WAW2Qg5mX51Boy3V98S6oeoVCiHq4+UUOIOmCGVD9BqUOW06U
7Zu/sgfCv1DhsGz2EYUN/6D8B7UOF5Vu/6w72AzhL2h0aBe7ee77JCi/o8Xh
8VKghsMdEH5GmwNLGJ/uphVQ/R7tDkuAzr+uAHWPQYcDyLuBn+ZA+AKdDqDg
0uiCumdGF0S9D9R8gx5IeL6HynP0OsgDte/4BOW/6HUABi8wBKD8E30OaSBQ
BuWv6Hc4DAzu/mVQvssEh2pQhJRA+VsmQOIjG8pXmegACh5bZih/CpSvBeWz
TIKEnwGUXzEJov8P1H8Mkx2MQYATKl8w2WHWTCDgg/IfTIaYB1MfMgXiHzao
/JEpEP97QfkmUyHp4z1U/ZKpEPd/hfJFpkHi/8FcBwCKUc5Y
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQFhDuI3z30PXt7kAOYmpDnMmgkEK6D8BwUOPEza
7WIdUP6CMoeHVSLr3Lth6mscJFnC+HTPQvkMjQ5A2YdVe6D8GS0OQs0HTi00
h/IL2h32lEyWYGmA8h26HI4qbCjKyIPyJXod1shEpVhvgvJf9Du4dOc8/30b
Zt9EiP5vUL7MZAe/JIEIS9dmCL9jioO9adwuTxko/81UhzlHgBa8h6oPme4A
9M3NcxJQ+R0zHI57m3c6skP5CrMcpjkDLYTp75jtsGw20AAxKF9lrkM+yEMw
fs88h8NfNWL6f0LN/zLfAeiaLSd+NEL46xY4bJr7fvmx71D5pIUOmjH9h75e
hfLFFjmkgUAclP9kkUPC0wtKt8NaoOG32IFPF2gCA9Q+ryUQ82Sh/D9LHM6e
AYIrUP2blkLCmwnKT1vmIN/6OnDHcyhfarlD41SgB4Wh+l8sd/ACRTAXlD9v
Bap9QSsh9AWofo5VDhkT39bYH4Ly961yAHm3bBuUX7TaYYcc0MK7UL7XGofL
vsAI8oWax7LWAeR9jTNNDgBEw8aj
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"TimeElapsed\"", TraditionalForm], 
       FormBox["\"ExamplesPerSecond\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Examples processed per second\"", TraditionalForm], 
     PlotRange -> {{0, 3714.}, {0, 4151.49}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Model 1\"", "\"Model 2\"", "\"Model 3\"", "\"Model 4\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7716877780945215`*^9, 3.7716878023166113`*^9}, 
   3.7716878339443927`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"153702d4-6ce5-495d-8ada-04ff9287a805"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<summary.gif\>\"", ","}], "]"}]], "Input",
 CellChangeTimes->{{3.7717141875208015`*^9, 3.771714215802238*^9}, {
  3.7717142488150005`*^9, 3.7717143016510296`*^9}, {3.77171434522956*^9, 
  3.771714357629041*^9}},ExpressionUUID->"4720652c-2018-4557-86b2-\
d6e9022fc2e2"],

Cell[BoxData["\<\"summary.gif\"\>"], "Output",
 CellChangeTimes->{3.771714308719376*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"2bf4b26a-0ec8-4c40-aac1-2cb6bcb4da10"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<summary.gif\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[28]:=",ExpressionUUID->"00e08138-f27b-4d61-bddb-f0cb6d465e74"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7717143637254486`*^9},ExpressionUUID->"8f622f62-bd4a-4236-8043-\
52a79d94d574"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[{
    {GrayLevel[0.6], Opacity[0.7], Arrowheads[0.015807869077320166`], 
     ArrowBox[CompressedData["
1:eJyFnHk8lNHbuO37NmPGLAwzY6kkJInQ3CIRLaSQtEiilLTTQiilUkkppJVK
lAohbSIVSStFtiSiQnapn/f3Tt8/zv1+P/WpP66u+xzPOeac58zZeD5BrivF
RURECsREREb//v9/KXzjfHG+GhxsdvTV2awG9a63Vxy1p8P2K+J5d7KZQPoY
2V/zBk1oIP3wmO+9Twzk70+mm395qgpDnnyd8SLYK7HiBNZ3VWF95cQUXTM1
5MPeuWZS/6jC3Z0Dq+560pE//8R93vNMGsSEWa6dE0NDfpNMoab3fjoYH7j6
wZOLPcu4MVh+vhp89UjZylDG3vj4qYxmYwZM2zCB3+yEfcxzY3WQYMKlS598
PvRiv6/qkuaEjUwwz0g36q7Az+9xgnpecj8TDsstjzU8icvfUn+mzNGFCRI5
Yku9tuL68/6cEGKYwYCslUZToufg38/0ExUpf8QZsCRu/x2Tm9iXl06c2LVO
DQw6XbXmVzNh4xt6fb+kGvRJL7cOl+PCrJYvftIr6WAtqvNy6wUO8qynVw/Z
UWgw+yVd6lGNFvK1s1s/iu6lwrfEgLdHczSQv+Py5OXpm3LgYSR9eJsvG3kF
vp2M7y9FsPkmZZe4h4H8lo+bG9SPyAJ7fJvYgwk05EOquUcMHilDmbLYfv57
KvKBVM15RX8oMInmdflztDzyMcOW0RKtNLg1i+r657oS8to7spuLTJhw4sdw
lDxHDvk9/eEjnqdYINHlHsfkqiA/dD3odUyBJgS46/IjuPj5XF4k1++fwoGZ
HvP2lVDoyMfeWtMhH68FFrNsTAfm4N/fsNST2ncxGjDAnObpWcpC3iFu7ION
l9nw4cNt5sefmjCY6f/p03M65OddeV4ri3//pH9R2fetJo8OC77GbLpuzUPx
bYfGvZ/9nQbRslMu/xDB+VmY5EXahNIhXotll2mhDod8C1sqN9DhhKrXgJoV
D6W3rC/gfDSgg9eLl7tvWmBPshat93ubFw0Sr2b9fDCBh9iCkjvIEKVBnfik
LyuW8KH2ePQchQAa3FetqHFI0kZ+RYpO8B5pGgwkFj/IOY49yRtKnX4smqEK
GXpJCtbR2ogDC+buz6qlQn1S5fhHuToQLTPIOt9JhXSFgofOnbrIr8qcry21
iQpUipSTYwv2JL/faav7pZ8Cbr2la2o+6CLWSVLSOa/eI9A+scX1cB0PuFed
xgm8vwru8HUsJG7zkYco0eOQ+UVglL1k2vkw7EmO791m/erMoGB1VFDJnlIu
XDyxdW30gm6BwTj31Mq4/8PbXCr3M+kS+Mf3FE9fin3h15JPhcxOwYzaXEGz
PvYi/WW8JZTvAoNJ5jKFvVzkSWb2GLcF3hMBPROp+V/omP3Wpt7qzJCAovsW
D48+0US+d4/MhJwoKgQtv/1n8SZtFJ/dwtq1KUkGLNRX1bqt5CDW/3Wd0RSg
AE1iLZlq7eqoP/2Xz7v5rIh2SBUEfnbuOWwe8guK0kJ+hNNA/2ril5Cd+Oe9
T6lLyDgiDZc97L1XJ2gg36K2vm6pjgqIPX/ubbaDjeLJ9k+yfsAL9zMfVGEd
UzCB/UIL1dfC5Lb+ZhlVqPq0c/z+mXzEZPlIJvMnmSw/yWT/QzI5/iF91a2e
Y7m2NDDbPuuz0ToOip/7etxd2EaDJhHFd9MG2cgX7t4p47JLFSYttTw9fzsb
crMNDUzVaeBYfWjaOx8OSm8mmnqyr1sVDpXMdDi6EHuSb5W6yajsUAWJ7zKr
5xpwEKu45fJpiVSoSnJ46B2gBWqTp4VlWlIhwbXxzvp2LvIei7m2yYMUuPHW
A27VY0/yqnQrTf2tFLgr/7x0qISL+NGAfPnEfSrwRmVBWG3j6PujO+cTtCrD
5VeRK+xUtJG3js39ucFEGTroH83ujfCRJzn0/tPaZbuU4EXgKn/jr3zEP4rn
iKfOkAT5UD85Ox8eqPxYYzt2rhg8LD5t5rsQ+8/3rdsmXBWFip1Pf7KNsSd5
osTk759PS8OSBfyJXvZceDr5yfrmYAnQ7ovpZhth37r4bPnlVnHYGKbzRFQB
+1jffJ/LPuLAXblaQruVi/wwaA/11ItBYFRyQOQj7EnOtrCKaleSh5z9MxQ1
6zQRTw6yZXeFKUGmv33eHiMO8qc9omRP2MuDqdv0NfHDbBTv5arrsX1ABS7O
nLniW7g64sflhr0x3lRwW6K2Km8jC32f+JdfHrP5HK+WAgY3OxZ3X2Ui79vL
61r9lAKpHa+YM/YyUX4mZ8Kg5rgKPDHYnXpRFT8P2f+R8WT7J9mkS6TMaqky
+M35TE/JZqH6Kp5/Z0X3HmWYZR4VMPCehZgsH8lk/iST5SeZ7H9IJsfvpO9e
M5Kte5ECLp+dYt6ra6D4LqntAlFXCvhEPE2VL9NEvmNqoodIHgU2LhtpHlw6
Wr7Y970T+1WgIt3MwOUKF6U32xDRYp6nAmfTD55vOYU9yXPMe1u9R8f/Hx/O
0V2xhItYKzlDxMpWEZ64xPw4uJIHm+4NeYatVYDycZKVG6/wkX+gy1RxfCgP
ETG1j5qOYk/yKY+ehmgNObhysD6y0JWPOO1bs0VilDTUtq+yN16oDTVWZw/I
G0nBoqwZjTMP6CB/w0aVvcxdEvTszhrsWo09yVGvHE4lsSSgVnzGkPQUHcQH
p9g7TF0tCpWSKx0vmOmCym2/nFtbfgvixe8qxTvpIf/BSv5O6pZfgj06uxoO
cLEnuSyH1UXNFgVjY8tnWk+04etwfqk+RQQ69sh7hA7pIG+6vTsidulvgUt7
oOSDSuzfSJVm7Lr4S/DJYazGg1TsH2vEvFnWNST4tfXsvPAQ7EmmqEt+OnNJ
Ah7O0Bhf9YaP2D28841BkjS4eo0ciB19n5A+89fu+OlcKfCYZFp54hgPxSd/
rnmcHysHTevrOmZ85yJumlWaZx+hCC0KYUlDvVro+/C//NBkI78zGxWA5vf8
1sm92CfP+W4xoKYMqbXuURf8WSg/VQ/Pt21TVUDa3MY7QFkT+d8L9Ws37pCH
d2FLwp8YqKN4sv2TfO6V5IvZp5Wh5HOY9ZxcDqqv+ac8RjodZWHiRsXjwVe5
iMnykUzmTzJZfpLJ/odkcv6K9FwZkeoNvUqwfbBmkeJ0Fp7vOjiRd+cABcbO
c3lR1cZA3lte0zbNiwJfDGe7/VFiwGyTJr8bb5UgRKBLZ6qzUHqrTjVO3m0l
iPKaX/fkJxN5kou9q+9e8FeCLa5OXT+3MxHb31lgMOGZLLC29j37NJYFw4/W
OR0KlwTmK8uUUC828lbuq0KT3SThaHDtj2Ym9iR7X7zFapSUBOPT7ufnxmFO
+Oq97v1SEdAsenDt3sTRz+ulpB9xH/sFkp/73W8ZqSN/drnK3gsb+wUKX8bd
mfCSjTzJzloKfgup/QLNcbeUaBswD0i9t+oY0ys4LJwPa13ye/li6hdBc/gu
plWmGvINQj/VgZ6lYI09yfGfVvrbVv0WmMbtsmwvp4Np1s4VQxN7BYHVBtc6
GunIj20aXvPetlew7cMl649h2BfajYimLukVmO3d4P6dg33Wrq0JnhG9gufu
5wYNCmnIk+yt/3m+91QJ+KblVNTTirnTJ+EnU1YWLmUyHH9LqCEv2y0Tluok
C5uyPMtDX9FQfGSS47E3VYqwzLL5hTQPc/j5Rbsb3ChQJH1Ug8LD88H/8ivZ
vxcs96PA60kjC0VP0JG3Npjln72OAmW3oyuKA+kov9A/41R+dCqCVK/dL69Y
7P/OP36oORh1zZeO4sn2T/Lb9r26w0wlmCWcvyPr693juuG7skoQeneBia4l
HTFZPpLJ/Ekmy08y2f+QTM6/kv7v7zP/0PUBeKqGxsvk+4Nksn5J/vVg6tRq
C1n4WT37cK0sHT3PiNCP7ZxhEdiAn7cl6Gfqum0UsMhablRlSwevzU0fQx9J
wBa364tU5Vgofesip+7uNAm4oi0Yu7aEiTzJQ5WSOqa+EhCs6VpY2ot5w8Yv
XpmWfwRnHs03zZnOhHlflCh5/D7BfYGh4XMXFvLJltZnA5p7BR8HxFhNnUzk
Sc4Wtne34O4KdUPMrVm/l4fVfREE75E7zl7LhHBB1Z3mq8UCg1seyTvHsbA/
auFm2FgkOHSK78XKwOlRvLX0547gh4Im78imAEPMT4XjrYbzmyt1/HsFFcLx
25ECVoRdX4eA9MbC8V/esRffZth/RZ7kC78m61qojI4nRurb3DqGBBcCElIV
P4nB4pQ6ltz5n8hfK+SNmXFDHAIdlULadnUjLzjNtLofIQGbug2OCFZ2IZ8m
HH9bic++O3FBJ/75BOfOqPl+850MDG71FVzzFQWSn8aG5xmcloeZXdWyJvMl
kf/7vrjZ6cdeLMNA8bVVuhFpK5Tg+OrZb3JsZBFvO/JZV2X0+2rTp4cpFsaK
aL3kX/6P7xP/uCkSsMQs0si5Tg15/62dxWrWo+MJTxv1U/dxfusuOY8fkJeF
xB1pCrNFGch/lB8WjZWlgu7TmT4LI1VQPNm/kBw8frbERylZMPWkTLUbZbK+
mNbRiYcrfwv2qfbquP1UQ0yWj2Qyf5LJ8pNM9j8kk+ubpG9lLF3f6aIEJZuV
BFUnaCjeQWrtzLbTFLA+buu/vAz7vkvTwt+oUyHdNuFW8EtVKBKO/1K3OFS5
raOh9FMjfdMn7FYC3Uf3bBn22JM8SzhePb9/3S3jF6qIU9/55MV7ycEfeuVz
029U6BOOL6X73fUrYqnIx94+YhF5XRIcNKd+L3TGnuRl9ffVV6pJgXvgwqez
nlEQi5adsa5LE4VbBbpbXWtUwDf6qefOD4MCxp0eDZuZKsjbrf1z79q6IQGH
+tUxu1oZeZL1cjNMOPLDgmW2IybndZQRj9FbRIFUcahwiPBsaZeEuL7BB7uu
/BH83HDmVECvGPIajIo1zWtFoMg2WBDkgj3Jb/NWb/lEkwHVff52Y+xk4KFw
fvFq/vBjXSb2+1R82KMDMyhueM3/GiuBfEXIrHHFhyRhfWtHXpsM9heF39+q
ixfOM9srjjzJn4f8ubQN8hB/N+iDQY484n6rVc/sXigB7eeW9SZ6ysi7Rauf
XrqaAjUfvE1y+AooPuq+ScFUNQo40QTiyU4UxIV3dlEjmKpgFKG4cHM+Fe0X
+Jd3Fww1bHqlCibT51cHW2GvWMs5ebNfFeo4+lUNY6koP58PA1sjIynAXX6q
fbhVBXmy/yPjyfZPcn1F7y2ju1R4uaa/lqWmgupL7xr3osNJKky+2is/W18F
MVk+ksn8SSbLTzLZ/5BMrs+TvppneGzOdhVonMBYZt9PQfGHZJf/MD8pDw1P
4r/yUrHP3H3v0XEODUYCVgtOqlGBtYIVI79fClzn/TzrOouC0r9a8TAr57EU
6JgmH/WUx57kOqn81EfZ0sBcEn/mhakK4omlz3ZonBQHMW7Dwp1tijC94l6v
KGVE4DHdMOuBqiLy8U/E3WOejwhOX3Hyi1mlgDzJPrfbFxY+/iPYXDtmytMi
OcTldy9P17zaL4gMZh6p0ZeBs5M2VxVJdAgePnjd6PxWCvnWvv9dP40tsV9/
bkQSeZILR+5fWHaxU7Bi4Y4ftfclEBvXhi1QmNsoWHsnJGW7ihiICP/U3Xu+
3OzRHwHy+4K0GFE5gji7DavGPhpBnmSacL05y2L2TLdFYhD+gbEmifJZUBn2
jRN4WwR5rnD9WizS04iS8UdAehHh+neKkqGnaNcI8svynzRa8r4Jjuh0hX+y
/oU8yXHfJTlfcoYFPSnmFo2zJRFLn/stp3ZZFCwkdMavs5FB/rtwPedIeM7X
yNHPJRlfMis02nyzJOwKUOYMm8ojjurpFfeaLgtFFUNK+8Yqof0u//Ljpnu+
1uTJQU2+T2EDSxH5kBM+6a4yqhBoE7B+V4Myym96SnD4TmVFEGdvDJeLVUF+
b1z5vTILCphsjWspX6SA4sn2T/Lj6T33bz1UBLiaHFfKU0H1dcDmXsv+cCkw
4xycb9Ipi5gsH8lk/iST5SeZ7H9IJvenkT5an38qylAVtrziHbG4q4ziy/v8
Za7F0YA58dbh1C8U5Cs1blYsHf2evyMSTpy8SYHriilF7AWq8OvAJMPsJGWU
/u/68Nhc+t3u7diT/Hc9Wk36pEjQGGXEAU68T8nmoxx8yl/vqNx/1o/XWBYf
Ll4ghTxTuP78eub5cxV62JO8aU31NreHVDibLNXV/1IS8Sv7CWd8aVTgD0Uu
3T1JFCT1TxQdlqWAzhJLm1PJgwLSG/MjSjatooDDdbFkuj72JOtz5/kMlVDA
OWCrid6DAQHJ5k/j6mru06H4lJXcl219gvkW5xSLQ+ggszD3xov7bcjb7x2W
6Gijg8e68oLlV7EnOX2WY5PuFjVwL0+eoaMgAqvH121hzleDgz51Pw9uxr7I
cHaQZY4adNxuVt65C/sCg1f1sxgMaGjzYS4+gv2vcOnHFiGj3+Ocfa+NuYo9
yfNZJcZcfzUod1KXelsjgfjXFwhjL1KD6WWnHu+5Kov8FEODWKdDDKi2W3eE
1SCL4i/mFj6nOatB3ixmtNl2JcSUaU8fq43GD15NKPZPo6D9nv/ynFmrXCM/
q4FBXRr1Xjb2m9+OP/dNiQE0jYxZ3EIKyq9ryTZ5kXo1yD1c//3cIfw8etTJ
vPLR76kLI739jBOUUDzZ/knOctRpF1vMgJvC/Ylkfc0b/+1kiAkDWlO3Lkk9
r4SYLB/JZP4kk+Unmex/SCb3V5J+TVXi85YLdHjgoMqrj1BC42Xy/UEyWb8k
k/OL5PNEfhfwFoXR4Mtmq7ctXbLIhyg2mlPMGVAhR/NpL6ZA2dStgscOquBT
aujqs18Spb8t3L9kNkg3LQzAnmRN4X7FJ598iw5xJBGbC/cb5kd49Yh6iUCm
sUDxZTMVLibt1ffI7ReQfqNw/6HIj813pwZhT/Lf/Y4XnfU1Ng/3CUg2G+QP
JhSogoOVwrJNH78KYoT7F+HXkEtPYiXySm683elrVaFhh7LWkPIL5EnOWOte
pNSuCtwXwbdtZzxHfPb7mUKnrdowZrx7R368KIgnqA7/mKsDfsLxGek7ViU9
NtqhA1HC8R3pSU7Z7L9z/HM+LBHte3RZRAreVXlkF9/QhuWbvQM23xND/onR
7jLXKm3Y+u3Z8Jz94sj7T02qzx3Whn2wYOdedwnk7Vfe1ujQ1AF1nnOcyDhJ
5EmmBcxxTHvLgwUF+4trP8ogjllsSufVccF5I6dE5Y488uHM2LhCA/p/+nsy
XuysadGU51pgZ3CjxO6kEuLve0UWTajjQMoG/orCAhW0H/pffr9wv2+V7Z3r
k5slkC9a+Zp17BoD+j43vl1UiX/erY4175q96SAdOGVFY74s8omNXPHDw+rQ
fX8nY95UKoon+xeSD8W8Vqk5TodZ48N3W9yURfW1Z1pq4eO5dPBd3PdxopoI
kEyWj2Qyf5LJ8pNM9j8kk+cXSJ+TaS52uIoBdsPa6h6flFD82jn9AZ43GP8Z
75He6oa5i9o1JuRe6OupWkqFlUfX1M0TYUJxUtzjiQNKKH30kYn2r8cyIaVR
nvZZSRl5kk+csph0+SwTGJtmbRz0VkZs/dDqxv7NLHjoHi1a/14Ozl8vsisu
YQGjJrHy45Ak8uNU+D89ZdjwTji+JD3Jb30dJv84wIaG32rL8qOlEIdWt7Db
16qD5YWEG8mKYmBhbj/esEcd9kru8NBKGhKQXtN5j8iXuRpgeNhYSmTMMPIk
j/kdNfA8XQOUNvutmXhnWECyxpxJ1xdlcGFcxTJn3VJxSJ4149oSXx747dta
Or3sD/LVegsuW8TyQDcsK1dkuwiQnuRVm47XPNPggqJwPi80JWFDcBMX7gjn
D0lvQP+dHCPJgwvC+UfS+8nL7H0/hger44+vj7mI/fanu896OvIgZ2RnmKSp
FPIkPy4d7zMSowmxwvlCku+lGSiurNUAFeF8IemPlhmnPwzQhE1uLQEdByko
PnfPhLzyCergKJxPJDkua9/hB2UsOHWPakRfqIrOA/3L7+v64dnvzIbshUFj
tBVpyJdwVqkuW86G2xnPl3VMxPlFX2BqfIpThyOD0qUpufh5yP6PjCfbP8k9
XlGUmkANoK6fOjegnYrqy+1c54RX7hoQah7mP/SYipgsH8lk/iST5SeZ7H9I
Js/fkP6Icf7PtF1s2JOjGXY+WwXFj2lLCuA9ZEOGIP/kLmkF5C2kA6yjNrFh
1Z8tO33cacB6kPzdQFEdsqvf3o/qkULpa3L37njrrA4DLc4NzkbSyJM8ZY/r
Syk9Ddh9783FvaoyiLXL7wdJL+LA8R80iWOt4nCK1ZmhlcuB9OzV7+svjwhI
L9XiUzJTURNk3umej/L+jTzJs2YY+oU2acJaeZX0XJ4I4puO4zJnULgQlWAr
piU3IJAAox2JS7kAxQEfui92CEgfqOrwDk5wwcPW1vjJ6e/IkzzwMDS+uoUL
KuXlH8RqOxHnJE/7/fogD0RSVQ89DW8U7Dt1/bcplf+feUbSFztFTp8wf9SH
rX+s/yQbpSd5S3Dzx9wIHjjIv2ljT+kRTJ2SlLe+mQcnHQMTMrU/I3/2go10
PocPnW2fH51N/4L8lNcvWykL+ZAlXN8m/SObhE8bD/Fhn3B9nPQkW0Te/xhQ
xoWTQRdj7H4OI/4Vn/hRg8aF3oAC+u0qUSB961TxXQmbuMDMl4JGKXEg43fM
bi84k68JWsn8lrIcScRiwecKJJ044FgRk9twTBadZ/uXd+s02/7+zejn9W7y
gcBAOeQvlNcrBMRrwM3QazfTJ6ui/PbFuxesqVWHDSI/9/YGKyJvf/FdQrKz
JjiXmpv+WUxB8WT7J/nEhBcF12ZpQM/9VRNNtJSArC/qrRRLiaVasPzOy89p
o/9HMlk+ksn8SSbLTzLZ/5BMnj8l/Sa/GZ9b0zRglceOBRu9VFH8z2k/9TXT
2GApXO8l/ep+STONBjbsfOZy8sXouPk7J2DBgTwN2NhhaZe6WxWlN7BZJjXn
qQacfnF7reVl7EkuN6IO2PRpwGu+Vo22Jua9+719RK21oP3gHbGQ0fddne3t
3NQrXPA8P7HVXJ6KfEFP2Vd+LhfshevLpCe50vlEYm05Fw66365e8ZKKeF73
8Qfrunlw/9wkbTkGFRaVnak8I6MNZmVHQrb9UUG+MuF4iwhTG7rbr6/NGv08
kp7kjEwrLxc9bdBsTlp/vICCeF6PsumzUG3YLHEzuzGLDmYNvHDZTB0Iyj6i
+noxHXnTlHOqCdd1wGq4IK+5HHuSXxeMOSbpyIcDwv2MdlNs1jft0IZ7NUlp
ynZq/9W7f+vnWaRhfzLwQWDxdm3IEu7PIL1nWtaBfSHacPl7e8ya1diT3Lqx
oEeCzvuvPOiZmCFTpPVfPdfFLfXeNS0QhMyz+3CZgeL5wvfhwf/CtPPXQrK7
2DB1pmup0VF8nvtfPs37z8mDLWz48ebhqRYNBvJrhO3r5G8b4xB7BsovqsQk
TN+NA0MK3rGWMtjPFcjpuc/jQD03LpdrwkDxZPsn2cx02rq3MzhgJdxPR9ZX
2Aynr4dH+1vqmznlHV6YyfKRTOZPMll+ksn+h2Ty/DTpz+9+5b7UlQOXfK7U
Mp7T0XiZfH+QTNYvyfUOl89wcrRg2DR9h1YwAz3PQeH57ZpdrvHzkmjIb0mM
CrKpZsPZC25Oz4MYEG3xaMOBBi58GW+lN+iuitIXukwMtWzjQv6vI19bkrAn
eY7XhW1nf3Nh9QVvv8oAzBGV1Ql6hnzwPbFcRE+UBtvC9dPLZ2lD00x+9dsq
KvJc40DZp27akNTtkdc1RRV5ksdvH7tny0ptEFQeue43qIo46HX6NtYJHfB8
7lIQn6IKGsYhvXmFurAgaG2FXikV+VvjJwQWPtaFbc+oJUW2OD3J50tAz+2F
LvyiWxqUPcB8U8+N1qzGh4yJgbTt27Th58mspsmDfHi28fJuKWcd5GXqU1Kq
HvFhSHj+hPQk19Wse6A+wIV7wvMkbtrNTRXPR78f/xzTfi4be0Hayuy+JB6U
532WXVCDvbnDs7kQwIN7Kkq8TyI6yG+8tSro5mQeLFEfO3mmLvYkHxTriTS3
5MJc4XkWkre4dsem/9KEBuF5FtJLhXYyjbZog4FwvzoZ//LML3pzBAeahOdN
SDb8JnWaI6sBEsLzJuR9B//yvt/tDPgqPNA+9+bJSBgdeVdhe6tYbwuR1QyU
X52w/bLi25zGhdCRjxOOF4+qbnZMm6yB4sn+hWQ9l7o1Uwq0IOXant2SN+io
viZnJ54fa8uHy8e0VfrmYCbLRzKZP8lk+Ukm+x+SyftJSG9E239zyJADWWO+
Fd8SZaL4M3mGLs55bNAVnlchPWtr1o2mGWw4kbF9ObQxYZ9sq/IOXQ6cD3LN
vK7PROkd8o2nKqtzYP78PfuD52NP8t/xpF3apm865UzEf8eDBlbVJS+OsSBw
8XaqWhUXCpLOXXz9loX8C+H48IjwfAzpSf47Hn2X7vnhwGk24hd3rKLHVfFg
16vFHms3qIOncHzZOiI2t/KrOvLNEZnaxgN80Bta+m7OTA3kSb7e1aeY3cIH
BaUzV6UvaCC+J3trvkIoD65umvGiI4sLjXTDsYe28GHayKNJ1it4yMdQK3LG
u/Ihbvwr8R+HsEfxVpXOie5cUOBGrescw4Udwvk/TeH5ZtL/nT8MFp6PJv3f
+ce/56tJ/3f+cnFHfE2AC/Ykiz049FT0myZE1FhrBl7VRPxdavtghT4Hvm7Z
uLRfioN8ncCmbexUdTD165x+9wyO/zDbf1yyvzq4Uq+cjfBRR9wVkBlqtpAF
+1wSEzcosNF9P//ylfe2ndM9zwQzHfNDZUext1s/tfTtTiaoL6tylL3ERvk9
6R45+u0PG/wiLn4RfYafh+z/yHiy/ZN8s2Ioe0IlC2xWyL3vTtdA9RU7YHVa
q4cFz0rs5RnHNRCT5SOZzJ9ksvwkk/0PyeT9OqRPFo4ntWXVbgxcZ6N49vzU
1tJMTSgNO7zgQRP20zpf3XjpwYSnOyR2SN1hw2N92LA6mQsPF1v/GdFSR+n9
D5XWbYjlgnRE7qnZy7AnGRYflG8c/bznJ1eGy1ppIH4nEXNN0Y8Hi2PbOypX
cGBTQ9ZUxQw+NIaPq1W7wUFeJPOw6rYTfIiukfUAWU3kSQ6482WywWI+iLy1
zx/bqIlY5zpDs81PG/oUP1yNl+OC/+Njl46e0YHmoF8WlS5c5F1WqTXa7daB
YW7hS/392JN8mJs1EOKiAzkuT3bUfcAcmtVedMFDFx5u+9DXMtpvJQ8OSF/a
qAf+1Wv16wd5yB8XnpsOD7VyK7HkI0/ydL6mb3qbNmS8q56iE8KD7kc/v27l
6kJo1Kf2ytfYj0yzn+w5qANGzLFKokp85Psu7hL7WqkDJ6MqFjvOxH6RXMN1
o0s6YCi8v4f0JH8X3x0s+50P/sL7ckhO/Pxpl383D3SE9+GQ/uCqxElvL/PA
p1RuCn0bjrcvtT9Y2jf6XhDel0Nys8v8SbP7tMBMeF8OeV/Vv/y0kEkXJh7S
gt80xzUnurBfsmX1vaq9LJjpndxu+EYD5WdNZ82R/8OBa1vi+xli2Pv5HmcH
BKhD9XuDdxG7NVE82f5JdqkwselN5wC7uinAeYMGqi86NVHs9m0uNLlcD2xY
r4WYLB/JZP4kk+Unmex/SCbvlyP9toNlq3cuZ8HR2MHb+79ooPhW2bVRw58Z
YAxPqTY/cH72x9bx/dcxYPkcC6OtDHUouTZSmm3JguVjlx6RHdJA6W+zp72P
oLOgtj5CJEOegzzJf9eTFQ5/V3K25CCeJlwPNuNUzvTcqQVVidpuH8vZUCi8
v4b0L4Xrw2917BTMXmNPsq5wPfrvfTskK6TtKZOoZMOmP1LBlaPtfZJwfbl2
xdSQBzxt5Hss2y5cT1AHlwwDPWMT7Ek2V392fevo+/bJNr7VURttxGc91AdM
frBgvpF4X+86bYg53rW9PIsNY/XYw9HxOsinvzVXibBlg3R952vjc9iTXGGq
1hh4nwlJv388lnTjQzyNt9JsKQvUKINLPHdhX7GTFpnxm/mf+9NI327Wtvbh
aSbwF+d8kDqM/Yc0S9EIKyb0C+9vQ/kTvL42aFHNXCYc2qFtyNHlIVaNevra
8X/OhfZk6gd0aCGfWXBwucE1NSh43yZ+QoaL4nPHa8/OW8+Axk7aYEIsBzFX
uB+v42tHTsxkdXRf4788VbjfUIvzS7zBFvtsR+s0WWM1sBraE0SdoY7y6xbu
R/x7Xx/pFZ1sP7Fz1GBDtLO+0yUOiifbP8kaBXtOqS9XA3Olo7NpGRxUX1fi
N0/hH1CDfEGXpv5ov0UyWT6SyfxJJstPMtn/kLxfuJ/FQXhfF+lXCffDTBbe
B0SOl8n3B8lk/ZIc7dGTxG/5n3tYd8hnSHHR80zIqdV69Hb0e+y4udGUm1qI
X76PHrwZwQIfaxn/NBEe4k2/TV6fN2KDWIu/gt1YPuIdGxcqmjgwwOD4mIG8
QD7aT0nOf5JMPj/Jon6pbvoMxn/ueySZ/Pkk9wn3K/9etHPd/TPaiNfH5u2y
SWdABfd1c8krHcRfkwKmONYw4GzLWK9yST3EvlfYnfMUmLA+Y9fLV+Zj4P8B
xXhVtg==
      "], 0.07098292005859753]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
     Tiny]}], 
     {GrayLevel[0.5], 
      DiskBox[{5.5332173286084565, 5.614396636018807}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.505828366954222, 8.020509641737572}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.451064637436041, 8.019262721031156}, 0.07098292005859753]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.286029056335169, 7.347004760450592}, \
{5.411293041260096, 7.47226874537552}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.362125020264227, 8.61736274825834}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.293812241106759, 8.612690026151247}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.170086850197749, 7.939196446027841}, \
{5.295350835122677, 8.064460430952769}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.027127580242243, 8.526730738819008}, \
{5.152391565167171, 8.651994723743936}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.102586009049869, 9.803290242105389}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.007344978199032, 9.79240229034393}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.938436029061493, 9.121723957871541}, \
{5.063700013986421, 9.24698794279647}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.755097708579891, 9.701505651293772}, \
{4.880361693504819, 9.8267696362187}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.734993367981708, 10.969335607491605}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.6133046645948985, 10.949777931681215}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.652885190356162, 10.294325795256261}, \
{4.77814917528109, 10.41958978018119}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.429460695377387, 10.864823307066587}, \
{4.554724680302315, 10.990087291991514}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.8238826567224784, 9.357454095517246}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.739898959185787, 9.249284695683029}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.1941144339747904, 8.872055218551223}, \
{1.3193784188997177, 8.99731920347615}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.1458811069545982, 8.78674809159255}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.0748050684233954, 8.686056284767076}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.0060395142924525, 8.583772650787191}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.9396200809567006, 8.479950196132982}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.5388868675218792, 8.327060476050018}, \
{1.6641508524468065, 8.452324460974946}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.030349176099893, 7.98014849698831}, \
{2.155613161024821, 8.105412481913238}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.521811484677907, 7.6332365179265995}, \
{2.647075469602835, 7.758500502851527}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.0132737932559213, 7.28632453886489}, \
{3.138537778180849, 7.411588523789818}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.954231080514561, 7.9019791516812505}, \
{5.079495065439489, 8.027243136606177}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.4890687760637435, 6.916946709666684}, \
{3.6143327609886713, 7.042210694591612}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{2.8830097030191593, 7.085234692850378}, \
{3.008273687944087, 7.2104986777753055}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.367894472180473, 8.557847249821778}, \
{5.493158457105401, 8.683111234746706}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.566965388790988, 9.664640032774932}, \
{4.692229373715915, 9.78990401769986}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.696053952698845, 9.077086405743705}, \
{4.821317937623773, 9.202350390668633}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.825142516606704, 8.489532778712478}, \
{4.950406501531631, 8.614796763637406}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.900866477876692, 7.889616301391333}, \
{5.0261304628016195, 8.014880286316261}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.063281532931183, 7.3099033495778105}, \
{5.18854551785611, 7.435167334502738}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.306758550633547, 6.743693027405822}, \
{5.432022535558475, 6.86895701233075}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.256281999526855, 6.113865347953026}, \
{5.381545984451782, 6.239129332877954}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.026566210127546, 7.3465204023432955}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.987268815108385, 7.334538583164783}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.054802466916562, 6.680771770873401}, \
{5.18006645184149, 6.806035755798328}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.8085229168379255, 7.230639698664387}, \
{4.933786901762853, 7.355903683589315}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.55827902619537, 8.459844466452791}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.493760155534879, 8.43691445431145}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.587835443735237, 7.790264717033735}, \
{4.713099428660165, 7.915528701958663}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.303739612888733, 8.324046935702983}, \
{4.429003597813661, 8.44931092062791}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.988405016889634, 9.531771764604244}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.8996333160482934, 9.495591845024101}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.070370468237281, 8.87850339413231}, \
{4.195634453162209, 9.003767379057237}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7490761955056557, 9.394768579956823}, \
{3.8743401804305835, 9.52003256488175}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.2886510150255006, 9.168733317145213}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.208583662220905, 9.093955629678842}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.5963741509561795, 8.629293366318747}, \
{2.7216381358811073, 8.754557351243674}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.555611497030189, 8.592002467597075}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.4886032091559294, 8.523451094107918}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.4231727326228514, 8.453392160403894}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.359353975487577, 8.381861973148453}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.889466721405612, 8.074782496750618}, \
{3.0147307063305395, 8.200046481675546}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.3196531571956758, 7.65427952121824}, \
{3.4449171421206035, 7.779543506143168}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.749839592985739, 7.233776545685861}, \
{3.8751035779106666, 7.3590405306107884}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.180026028775802, 6.813273570153481}, \
{4.30529001370073, 6.938537555078408}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.987147198920072, 5.90977398623454}, \
{5.1124111838449995, 6.0350379711594675}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.528718401768797, 6.30037613545603}, \
{4.653982386693725, 6.425640120380958}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.083712199841594, 6.706550771599666}, \
{4.208976184766522, 6.831814756524594}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.0034941746541355, 7.294972590010316}, \
{5.128758159579063, 7.4202365749352435}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.346833868239463, 6.683051368517948}, \
{3.472097853164391, 6.808315353442875}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.877771735216095, 6.400229687277546}, \
{4.003035720141023, 6.525493672202474}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.402340048476014, 6.105284736460167}, \
{4.527604033400942, 6.2305487213850945}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.858870679700787, 6.36375230597727}, \
{3.9841346646257145, 6.489016290902198}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.384065021104188, 6.068490966554148}, \
{4.509329006029116, 6.193754951479076}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.810723999530797, 6.557804157848788}, \
{4.935987984455725, 6.683068142773716}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.568234503913306, 7.1146821312354165}, \
{4.693498488838234, 7.239946116160344}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.241401521113944, 8.330697423623317}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.179904557906914, 8.30058773009415}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.2674508931690776, 7.6356546271284405}, \
{4.392714878094005, 7.760918612053368}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.9077619703819257, 8.121718179450612}, \
{4.0330259553068535, 8.24698216437554}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.55346555992565, 9.330961704855234}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.4693776376122685, 9.284933205291285}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.5951972972291126, 8.635708886629466}, \
{3.7204612821540404, 8.760972871554394}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.2012990506444265, 9.098962513838226}, \
{3.3265630355693543, 9.224226498763153}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.7729712398791952, 10.272032775647109}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6676637684942865, 10.207993883670564}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.877115295572774, 9.605705066735638}, \
{3.002379280497702, 9.730969051660566}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.449871819883862, 10.044850746914264}, \
{2.57513580480879, 10.170114731839192}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.903979977224882, 11.147613964627261}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.778966646805023, 11.063567176244996}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.1142369847436253, 10.544082536176255}, \
{2.239500969668553, 10.669346521101183}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.008382377970965, 10.489214660078652}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8983292689442353, 10.407715005441476}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7901598691100178, 10.323731307904785}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.6839302351307182, 10.237307090366805}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.150294761151114, 9.828235545727544}, \
{2.2755587460760416, 9.953499530652472}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.519215936150545, 9.353072112152967}, \
{2.644479921075473, 9.478336097077895}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.8881371111499763, 8.87790867857839}, \
{3.013401096074904, 9.003172663503317}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.257058286149407, 8.40274524500381}, \
{3.382322271074335, 8.528009229928738}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{3.27458308677429, 6.53548415249368}, \
{3.399847071699218, 6.660748137418608}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.6259794611488383, 7.927581811429233}, \
{3.751243446073766, 8.05284579635416}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.9949006361482686, 7.452418377854655}, \
{4.120164621073196, 7.577682362779583}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.347668098296461, 6.964565045122137}, \
{4.472932083221389, 7.089829030047064}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.70311999901635, 8.725627996677225}, \
{2.828383983941278, 8.850891981602153}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.09847219003487, 8.272218946231385}, \
{3.223736174959798, 8.397482931156313}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.4938243810533907, 7.818809895785545}, \
{3.6190883659783184, 7.944073880710473}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.889176572071911, 7.365400845339704}, \
{4.014440556996838, 7.490664830264632}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.823583649117216, 6.289554275259346}, \
{3.948847634042144, 6.414818260184274}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.367056827817098, 6.031094716869897}, \
{4.492320812742026, 6.156358701794825}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.884539100805504, 5.68753257796128}, \
{5.009803085730431, 5.8127965628862075}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.854342273500413, 6.2764590553268755}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.8397066376328706, 6.238070939862954}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.323824038048675, 5.915730319223059}, \
{4.449088022973603, 6.040994304147986}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7384615698215047, 6.058415762037255}, \
{3.8637255547464324, 6.1836797469621825}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.687769498174473, 6.589334938431897}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6663140833651635, 6.524310825185595}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.161086981046675, 6.227299468197558}, \
{3.286350965971603, 6.352563453122486}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.5652387587227055, 6.330249912709441}, \
{2.690502743647633, 6.4555138976343684}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.491595207184651, 6.796582579140936}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.4657321202158542, 6.7042760128331444}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.9841694432380483, 6.485946966540061}, \
{2.109433428162976, 6.611210951464988}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.3793449349347597, 6.548772645527626}, \
{1.504608919859687, 6.674036630452553}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.7209913171709248, 5.669174559327278}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.7209913171709239, 5.559618712710341}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.2596147857267879, 5.5517646435563455}, \
{1.3848787706517152, 5.677028628481273}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3247016798368465, 5.470629426467081}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3290647714731083, 5.374867404336889}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.335606582423039, 5.279229513516432}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3443237225218745, 5.183765316460222}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.8649225270046064, 5.3874840979308765}, \
{1.9901865119295337, 5.512748082855804}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.4658663285281706, 5.414864188868454}, \
{2.5911303134530983, 5.540128173793382}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.066810130051735, 5.442244279806032}, \
{3.1920741149766627, 5.56750826473096}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.6677539315752994, 5.46962437074361}, \
{3.793017916500227, 5.594888355668537}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.87217196384791, 5.4902458836194015}, \
{4.9974359487728375, 5.615509868544329}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.270255677250468, 5.46965984556544}, \
{4.395519662175396, 5.594923830490368}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.6800114842923692, 5.326390779095162}, \
{3.805275469217297, 5.451654764020089}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.8072159608580094, 6.2518720775107}, \
{3.932479945782937, 6.3771360624356275}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.099304760296033, 5.1429145706614285}, \
{3.2245687452209606, 5.268178555586356}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.692124904258523, 5.245127088885157}, \
{3.8173888891834507, 5.370391073810085}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.2873486895617505, 5.333857493472986}, \
{4.412612674486678, 5.459121478397914}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.6995657816425784, 5.204723096633474}, \
{3.824829766567506, 5.329987081558402}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.295478082083538, 5.2935875157406285}, \
{4.420742067008466, 5.418851500665556}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.276869434910243, 5.702013886530465}, \
{4.402133419835171, 5.827277871455393}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.97288996836002, 6.558669148977055}, \
{4.098153953284948, 6.6839331339019825}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.3731358679902916, 6.731101609839881}, \
{3.4983998529152194, 6.856365594764808}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.6856056789883933, 5.2856899900140935}, \
{3.810869663913321, 5.410953974939021}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.6856056789883933, 5.817839297098595}, \
{3.810869663913321, 5.943103282023523}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5954491934523225, 6.259839455558099}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.581518071102767, 6.192799214223592}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.0906124599358606, 5.9065308482793455}, \
{3.2158764448607884, 6.031794833204273}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.486295583056621, 5.92738775099165}, 
       {2.6115595679815486, 6.0526517359165775}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3834763208710292, 6.329884263584915}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3682647952407256, 6.235237494284061}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.8894376324387465, 6.002512372478711}, \
{2.014701617363674, 6.127776357403639}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.2816917300594117, 5.982395963114936}, \
{1.406955714984339, 6.1076599480398635}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.16149577304758722, 6.2905182294023625}, 
       0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.1474969779257087, 6.168065475451283}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{0.6832783577613287, 6.043914723051878}, \
{0.8085423426862562, 6.169178707976806}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{0.07365723390759997, 5.982693801059407}, \
{0.1989212188325274, 6.107957785984334}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7901598691100165, 0.9050619641328286}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8983292689442344, 0.821078266596138}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.150294761151113, 1.2752937413851415}, \
{2.2755587460760407, 1.4005577263100688}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.360865873034713, 1.2270604143649484}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.461557679860184, 1.1559843758337491}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5638413138400717, 1.0872188217028027}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6676637684942817, 1.0207993883670516}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.695289503652313, 1.620066174932232}, \
{2.8205534885772408, 1.7453301598571593}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.042201482714023, 2.1115284835102455}, \
{3.1674654676389506, 2.236792468435173}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.389113461775733, 2.6029907920882596}, \
{3.5143774467006605, 2.7282547770131873}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.7360254408374427, 3.0944531006662737}, \
{3.8612894257623704, 3.2197170855912014}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{3.132733678311001, 4.982045785287044}, \
{3.257997663235929, 5.107309770211971}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.082937419899153, 3.5859154092442873}, \
{4.208201404824081, 3.711179394169215}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.068212446354365, 5.688638490231726}, \
{3.1934764312792927, 5.813902475156654}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.6677539315752994, 5.633904916369077}, \
{3.793017916500227, 5.759168901294005}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{1.2620696873743829, 5.695531853108074}, \
{1.3873336722993101, 5.820795838033002}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{1.8632862086274697, 5.674993680314969}, \
{1.988550193552397, 5.800257665239897}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{2.464502729880557, 5.654455507521865}, \
{2.5897667148054846, 5.779719492446793}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.0657192511336437, 5.6339173347287606}, \
{3.1909832360585715, 5.759181319653688}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.7171965927697492, 5.124475499854368}, \
{3.842460577694677, 5.249739484779296}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.304977597098256, 5.253618560990433}, \
{4.430241582023184, 5.378882545915361}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.936462692311003, 5.275004597104432}, \
{5.061726677235931, 5.400268582029359}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.8010935622839677, 5.107745517537897}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.81307538146248, 5.068448122518736}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.341578208828935, 5.135981774326912}, 
       {4.4668421937538625, 5.26124575925184}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7917102810379477, 4.889702224248277}, \
{3.9169742659628755, 5.014966209173204}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.687769498174471, 4.639458333605723}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.710699510315812, 4.574939462945231}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.2320852626686, 4.669014751145588}, \
{3.3573492475935276, 4.794278736070516}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.6983030439993527, 4.384918920299085}, \
{2.8235670289242805, 4.5101829052240126}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.6158422000230184, 4.069584324299988}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.6520221196031608, 3.9808126234586454}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.143846585570025, 4.151549775647633}, \
{2.2691105704949526, 4.276813760572561}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.6275813997455104, 3.8302555029160104}, \
{1.7528453846704377, 3.955519487840938}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.9788806474820473, 2.369830322435854}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.0536583349484214, 2.289762969631256}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.3930566133835884, 2.677553458366531}, \
{2.518320598308516, 2.8028174432914588}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5556114970301853, 2.6367908044405417}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6241628705193456, 2.5697825165662795}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6942218042233668, 2.504352040033204}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.76575199147881, 2.4405332828979276}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.947567482951714, 2.9706460288159646}, \
{3.0728314678766417, 3.0959100137408924}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.3680704584840933, 3.4008324646060277}, \
{3.493334443409021, 3.5260964495309555}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.7885734340164734, 3.8310189003960904}, \
{3.913837418941401, 3.956282885321018}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.209076409548853, 4.261205336186154}, \
{4.334340394473781, 4.386469321111082}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.10709653017957, 5.072432806614076}, \
{5.232360515104498, 5.197696791539004}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.71130169377982, 4.618479671903777}, \
{4.836565678704748, 4.743743656828705}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.3157992081026695, 4.164891507251944}, \
{4.441063193027597, 4.290155492176872}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.7273773896920197, 5.084673482064486}, \
{3.8526413746169474, 5.209937466989413}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.291248369862455, 3.4543151754006423}, \
{4.416512354787383, 3.57957916032557}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.586082611433339, 3.9786775424395673}, \
{4.711346596358267, 4.103941527364495}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.892891989846773, 4.4963960418256566}, \
{5.018155974771701, 4.621660026750584}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.622120292424788, 3.9589510426264463}, \
{4.747384277349716, 4.084215027551374}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.929260227865375, 4.477288205926206}, \
{5.0545242127903025, 4.602552190851133}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.464545821853546, 4.891903306941147}, \
{4.589809806778474, 5.017167291866075}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.9076678484669185, 4.649413811323657}, \
{4.032931833391846, 4.774677796248585}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.816916541003945, 4.322580828524297}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.8470262345331117, 4.261083865317264}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.3866953525738936, 4.348630200579429}, \
{3.5119593374988214, 4.473894185504356}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.9006318002517224, 3.9889412777922786}, \
{3.02589578517665, 4.114205262717206}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8166522597720278, 3.6346448673360037}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8626807593359773, 3.550556945022619}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.386641093072868, 3.676376604639466}, \
{2.511905077997796, 3.8016405895643937}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.9233874658641106, 3.2824783580547767}, \
{2.048651450789038, 3.4077423429797045}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.8755811889801528, 2.85415054728955}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.9396200809566979, 2.748843075904637}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.4166449129666987, 2.9582946029831247}, \
{1.541908897891626, 3.0835585879080525}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{0.9774992327880688, 2.5310511272942136}, \
{1.1027632177129962, 2.6563151122191413}]}, 
     {GrayLevel[0.5], DiskBox[{0., 1.985159284635237}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.08404678838226687, 1.860145954215373}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{0.47826744352607714, 2.1954162921539777}, \
{0.6035314284510046, 2.3206802770789055}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.6583993045486096, 2.0895616853813195}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.7398989591857834, 1.9795085763545903}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.8238826567224748, 1.871339176520372}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.9103068742604528, 1.7651095425410723}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.194114433974787, 2.231474068561468}, \
{1.3193784188997142, 2.3567380534863958}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{1.6692778675493656, 2.6003952435608984}, \
{1.7945418524742929, 2.725659228485826}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.1444413011239436, 2.969316418560329}, \
{2.2697052860488713, 3.094580403485257}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{2.619604734698522, 3.33823759355976}, \
{2.7448687196234496, 3.4635015784846876}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.437132690150381, 3.3787240134727354}, \
{4.562396675075309, 3.503987998397663}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.0947681682731005, 3.7071587685591902}, \
{3.2200321531980283, 3.832422753484118}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.5699316018476788, 4.076079943558621}, \
{3.6951955867726065, 4.201343928483548}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.057784934580198, 4.428847405706812}, \
{4.183048919505126, 4.55411139063174}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.2967219830251073, 2.7842993064267034}, \
{2.421985967950035, 2.909563291351631}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{2.750131033470948, 3.1796514974452235}, \
{2.8753950183958756, 3.304915482370151}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.203540083916789, 3.575003688463743}, \
{3.3288040688417166, 3.700267673388671}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.6569491343626295, 3.9703558794822627}, \
{3.782213119287557, 4.09561986440719}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.695495851649285, 3.921984170993637}, \
{4.820759836574212, 4.047248155918565}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.9662596267454875, 4.459433161489177}, \
{5.091523611670415, 4.584697146414105}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.321512294863037, 4.968960774032475}, \
{5.446776279787965, 5.094224758957402}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.8331098946541, 3.9510272607308234}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.871154909300389, 3.9355215809107627}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.080610015180756, 4.413585511382749}, \
{5.205874000105684, 4.538849496307677}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.924636822645921, 3.831622696410366}, \
{5.0499008075708485, 3.956886681335294}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.493760155534879, 2.7918788177261624}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.558279026195372, 2.7689488055848215}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.742653984812564, 3.2582420473617075}, \
{4.8679179697374915, 3.3835060322866353}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.626166805344479, 2.664891699682194}, \
{4.751430790269406, 2.7901556846071216}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.259337463774959, 1.6007320926781938}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.351031385486337, 1.5727745145949985}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.457283099184176, 2.0875171109073642}, \
{4.582547084109104, 2.212781095832292}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.3807059593316655, 1.484279435163738}, \
{4.505969944256593, 1.6095434200886654}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.3689119462636254, 0.8046644659941089}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.478439405299985, 0.802170624581275}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.374730180340563, 1.3418852194393847}, \
{5.499994165265491, 1.467149204364312}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.581148011503368, 1.4036988760109663}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.676984538160186, 1.4058809872471967}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.772746560290381, 1.4102440788834585}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.868384451110838, 1.41678588983339}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{5.55274689826493, 1.943296565741807}, \
{5.678010883189858, 2.0685605506667346}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{5.539053304578441, 2.5447079120442293}, \
{5.664317289503368, 2.669971896969157}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.525359710891951, 3.146119258346652}, \
{5.650623695816879, 3.27138324327158}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.511666117205461, 3.747530604649075}, \
{5.636930102130389, 3.872794589574003}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.518466353646333, 4.952105965529855}, \
{5.6437303385712605, 5.0773699504547825}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.525345518021148, 4.349877040509214}, \
{5.650609502946076, 4.475141025434142}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.655141615956816, 3.7565245266620932}, \
{5.7804056008817435, 3.881788511587021}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.732795704442991, 3.9047629565275654}, \
{4.858059689367919, 4.030026941452493}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.825351540868993, 3.1717917673462104}, \
{5.95061552579392, 3.297055752271138}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.736659989688242, 3.7667849863987435}, \
{5.86192397461317, 3.8920489713236712}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.661501773286791, 4.363874327951894}, \
{5.786765758211719, 4.489138312876822}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.777222890817178, 3.773304211668873}, \
{5.902486875742106, 3.898568196593801}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.701946367427905, 4.371084940554066}, \
{5.827210352352833, 4.496348925478994}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.293202233784491, 4.361778205451277}, \
{5.418466218709419, 4.487042190376204}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.446698786563236, 4.065627223494656}, \
{4.571962771488164, 4.1908912084195835}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.243809296710763, 3.4817041370548774}, \
{4.369073281635691, 3.606968121979805}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.6959592006071755, 3.7611907917027194}, \
{5.821223185532103, 3.886454776627647}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.163947781474805, 3.7733042116688735}, \
{5.289211766399733, 3.8985681965938013}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.821068755771829, 2.692082063725068}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.887774509069167, 2.6766285008626722}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.061735263251076, 3.180484067706384}, \
{5.186999248176003, 3.3057480526313117}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.027127580242242, 2.5767985482936773}, \
{5.15239156516717, 2.702062533218605}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.723453719121761, 1.48201767551084}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.817729701042356, 1.4646556282813776}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.938436029061492, 1.9818053292411448}, \
{5.06370001398642, 2.1070693141660723}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.944712985736568, 1.3737589892312212}, \
{5.069976970661496, 1.4990229741561485}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.73499336798171, 0.2594576645460087}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.857095735224915, 0.24267508045793473}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.869588364249507, 0.7769010386133469}, \
{4.994852349174435, 0.9021650235382744}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.9169164967135295, 0.1660442928735943}, \
{5.042180481638457, 0.2913082777985217}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.156127782956451, 1.765109542541063}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.242552000494435, 1.8713391765203662}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.670367708582539, 2.1349882529085664}, \
{9.795631693507467, 2.260252237833494}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.847203861088854, 2.3429973823210024}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.920553550262312, 2.4420451804450596}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.991629588793515, 2.5427369872705334}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.06039514292446, 2.645020621250422}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.338090433953358, 2.6876899021307628}, \
{9.463354418878286, 2.8129538870556905}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.854652296727437, 3.04569924480896}, \
{8.979916281652365, 3.170963229733888}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.371214159501516, 3.4037085874871575}, \
{8.496478144426444, 3.5289725724120853}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.887776022275597, 3.7617179301653554}, \
{8.013040007200525, 3.886981915090283}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.986939591777424, 3.201550135431435}, \
{6.112203576702352, 3.326814120356363}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.404337885049676, 4.119727272843553}, \
{7.529601869974604, 4.244991257768481}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.279061266144633, 3.15312993145039}, \
{5.404325251069561, 3.2783939163753177}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.347428139159635, 3.7512701552130565}, \
{5.4726921240845625, 3.8765341401379843}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.231056104464066, 1.3476120864209948}, \
{5.356320089388994, 1.4728760713459221}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.265274566132914, 1.948205308868902}, \
{5.390538551057841, 2.0734692937938295}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.29949302780176, 2.5487985313168084}, \
{5.424757012726688, 2.674062516241736}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.333711489470606, 3.149391753764715}, \
{5.458975474395534, 3.274655738689643}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.857851027869566, 3.789103762462662}, \
{5.983115012794494, 3.9143677473875895}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.742121204955866, 4.379672172875365}, \
{5.867385189880793, 4.504936157800293}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.735115330453517, 5.0114804552989}, \
{5.860379315378445, 5.136744440223827}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.000308490100314, 3.8711886895648338}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.0398684470893675, 3.882272869694318}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.860560657111226, 4.413585511382749}, \
{5.985824642036154, 4.538849496307677}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.09425963999014, 3.8582539525807564}, \
{6.219523624915068, 3.983517937505684}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.443131517775244, 2.7474933907755132}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.508155631021546, 2.768948805584823}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.302151074604855, 3.2937503889222275}, \
{6.427415059529783, 3.4190143738471552}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.574022701659442, 2.753639551709604}, \
{6.69928668658437, 2.8789035366345317}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.98845737091147, 1.6628716904091063}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.078029640327285, 1.6970215074333725}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.794710174762132, 2.194014533340256}, \
{6.91997415968706, 2.319278518265184}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.104169348706164, 1.6705694345510513}, \
{7.229433333631092, 1.7958334194759786}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.696034856756619, 1.9871242324520835}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.777783642191409, 2.0600599548923975}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.273997374424468, 2.409607117248481}, \
{8.399261359349396, 2.5348711021734087}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.442271786697564, 2.5697825165662755}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.510823160186725, 2.636790804440538}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.577831448060987, 2.7053421779296984}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.643261924594063, 2.775401111633722}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{7.993603189340268, 2.970646028815962}, \
{8.118867174265196, 3.0959100137408897}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.573100213807889, 3.400832464606025}, \
{7.698364198732817, 3.526096449530953}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.15259723827551, 3.8310189003960886}, \
{7.277861223200437, 3.9562828853210164}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.73209426274313, 4.261205336186152}, \
{6.857358247668058, 4.38646932111108}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.94151880333459, 5.177458897606498}, \
{6.066782788259518, 5.302722882531426}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.386344755734976, 4.771433192625765}, \
{6.511608740659904, 4.896697177550693}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.830812487483512, 4.36570807050078}, \
{6.95607647240844, 4.490972055425708}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.897874479847968, 3.7983759001800994}, \
{6.023138464772896, 3.923639885105027}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.540645842647458, 4.324988604121113}, \
{7.665909827572386, 4.450252589046041}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.0231307160220915, 4.631682613979921}, \
{7.148394700947019, 4.7569465989048485}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.512530327932041, 4.950197422067884}, \
{6.637794312856968, 5.075461406992812}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.043672437262767, 4.667261918843687}, \
{7.168936422187695, 4.792525903768615}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.532461070099257, 4.9861212810755395}, \
{6.657725055024184, 5.111385266000467}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.107375016171364, 4.530965255189285}, \
{6.232639001096292, 4.656229240114213}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.337125355594819, 3.9687117409603125}, \
{6.462389340519747, 4.09397572588524}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.762866714780125, 2.8693938243041774}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.825033136102969, 2.8980958484142967}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.625972028744427, 3.4410274400949685}, \
{6.751236013669355, 3.5662914250198963}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.974503389867137, 2.9469021640912207}, \
{7.099767374792065, 3.0721661490161485}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.427855207590619, 1.853729104313326}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.512969097291267, 1.897831567182381}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.275287000611367, 2.425929668198196}, \
{7.400550985536294, 2.5511936531231236}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.658538048215691, 1.95382969330437}, \
{7.783802033140619, 2.0790936782292975}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.18672550274642, 0.895135332668481}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.293463417337726, 0.956760496390511}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.971102721368506, 1.4398389861255165}, \
{8.096366706293434, 1.5651029710504438}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.388239131790876, 0.9910816674796444}, \
{8.513503116715803, 1.1163456524045718}]}, 
     {GrayLevel[0.5], DiskBox[{9.03556056874801, 0.}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.162454679992045, 0.08117930741036261}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.712422886862528, 0.48433911458223394}, \
{8.837686871787456, 0.6096030995071614}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.946172493884308, 0.6606052358131818}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.058052279245942, 0.7395786119589598}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.168105388272677, 0.8210782665961371}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.276274788106894, 0.9050619641328277}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{8.69266942024976, 1.2008214085230497}, \
{8.817933405174688, 1.326085393447977}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.334660077571565, 1.6842595457489706}, \
{8.459924062496492, 1.809523530673898}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.976650734893369, 2.1676976829748917}, \
{8.101914719818296, 2.2929616678998195}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.618641392215171, 2.6511358202008135}, \
{7.7439053771400985, 2.7763998051257412}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.619538211406267, 4.469114426995106}, \
{7.744802196331195, 4.594378411920034}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.260632049536975, 3.1345739574267353}, \
{7.3858960344619025, 3.259837942351663}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.902622706858779, 3.6180120946526566}, \
{7.027886691783706, 3.7432760795775843}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.561051754045259, 4.113769132729542}, \
{6.686315738970187, 4.239033117654469}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.16508630158041, 2.315727325512743}, \
{8.290350286505337, 2.4409913104376706}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.780157592232635, 2.778018370947543}, \
{7.905421577157563, 2.9032823558724705}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.395228882884862, 3.2403094163823427}, \
{7.520492867809789, 3.3655734013072705}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.010300173537088, 3.702600461817143}, \
{7.1355641584620155, 3.827864446742071}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.0822999925911985, 4.739776981135416}, \
{7.207563977516126, 4.865040966060343}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.551153712660878, 5.022704654941292}, \
{6.676417697585806, 5.14796863986622}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.049844813219011, 5.389463749564854}, \
{6.175108798143938, 5.514727734489782}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.180219015637233, 4.876607004315804}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.19658670389644, 4.91428920206445}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.59959246346305, 5.13598177432691}, \
{6.724856448387977, 5.261245759251838}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.1778540344063835, 4.96680166210849}, \
{7.303118019331311, 5.092065647033418}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.331342420455197, 4.510959270505361}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.3557351469011, 4.574939462945229}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.74694360049318, 4.771814001625873}, \
{7.872207585418108, 4.8970779865508005}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.337488581389287, 4.641850454389559}, \
{8.462752566314215, 4.767114439314486}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.516844291216035, 4.2494830126404874}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.546881871949068, 4.3405167711853085}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.910869230437946, 4.459867616556202}, \
{9.036133215362874, 4.585131601481129}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.5122074575698, 4.369578700434223}, \
{9.637471442494729, 4.494842685359151}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.337963108191712, 5.340648942668039}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.342949498633153, 5.450091253673971}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.677191946810943, 5.360104006993294}, \
{9.80245593173587, 5.485367991918221}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.743915088616298, 5.566465953123894}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.743915088616298, 5.662327318913717}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.741732977380067, 5.758163845570536}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.737369885743805, 5.853925867700731}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.079988665076739, 5.551764643556342}, \
{9.205252650001666, 5.67702862848127}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.478421443588282, 5.551764643556342}, \
{8.60368542851321, 5.67702862848127}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.876854222099824, 5.551764643556342}, \
{8.00211820702475, 5.67702862848127}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.275287000611366, 5.551764643556343}, \
{7.400550985536293, 5.6770286284812705}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.0711785585939, 5.585983105225188}, \
{6.1964425435188275, 5.711247090150116}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.673408028750838, 5.579151830929321}, \
{6.798672013675766, 5.704415815854249}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{7.269561370225457, 5.6954076960573605}, \
{7.394825355150385, 5.820671680982288}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.100365808708698, 4.776675159059635}, \
{7.225629793633626, 4.9019391439845625}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.858017138617491, 5.852263129504585}, \
{7.983281123542419, 5.977527114429512}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.261159187999616, 5.777138508017524}, \
{7.386423172924544, 5.902402492942452}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.662513719995472, 5.715591429068787}, \
{6.7877777049204, 5.840855413993714}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.255564993303592, 5.81783929709859}, \
{7.38082897822852, 5.943103282023518}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.656225624070973, 5.7561896800038}, \
{6.7814896089959005, 5.881453664928728}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.656225624070972, 5.347339607108883}, \
{6.7814896089959, 5.472603592033811}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.933030743363945, 4.4943141583650945}, \
{7.058294728288873, 4.619578143290022}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.512184112880105, 4.2781852835055965}, \
{7.6374480978050325, 4.403449268430524}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.265825453040242, 5.736320923367166}, \
{7.39108943796517, 5.861584908292094}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.241604890649406, 5.204723096633471}, \
{7.366868875574334, 5.329987081558399}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.438563906031744, 4.835911366865708}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.455531900902194, 4.902248063182179}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.831944742150544, 5.089042580992515}, \
{7.957208727075471, 5.214306565917442}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.43468605595844, 5.040702052437696}, \
{8.559950040883368, 5.165966037362624}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.646092717827045, 4.710776688663801}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.665596289116422, 4.8046330265321116}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.027506199920932, 4.938489534213968}, \
{9.15277018484586, 5.063753519138896}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.635537869513724, 4.930923785291092}, \
{9.760801854438652, 5.056187770216019}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.868598624270867, 4.694483972005249}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.888156300081254, 4.81617267539206}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{10.230531088566257, 4.842232234110342}, \
{10.355795073491185, 4.96749621903527}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.842306891706865, 4.875643050172801}, \
{10.967570876631793, 5.000907035097729}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.486739238793666, 10.148487140477204}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.3825044220862, 10.237307090366802}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.982076865333593, 9.67268203170677}, \
{9.10734085025852, 9.797946016631698}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.901969042157056, 9.852797840716182}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.804616582306265, 9.928383168499202}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.705568784182205, 10.00173285767266}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.60487697735673, 10.072808896203863}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{8.421954736141448, 9.353072112152962}, \
{8.547218721066375, 9.47833609707789}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.053033561142016, 8.877908678578384}, \
{8.178297546066943, 9.003172663503312}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.684112386142585, 8.402745245003807}, \
{7.809376371067513, 8.528009229928735}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.315191211143152, 7.92758181142923}, \
{7.44045519606808, 8.052845796354157}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.8319447421505455, 6.0144867061201674}, \
{7.957208727075473, 6.139750691045095}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.946270036143721, 7.452418377854652}, \
{7.071534021068649, 7.57768236277958}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{7.864238825338324, 5.305689603808575}, \
{7.989502810263252, 5.4309535887335025}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.267809837431878, 5.387654346189634}, \
{7.393073822356806, 5.5129183311145615}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.66819608233141, 5.216597521053959}, \
{9.793460067256337, 5.341861505978887}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.068537404304921, 5.2644785385543}, \
{9.193801389229849, 5.389742523479228}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.468878726278433, 5.31235955605464}, \
{8.59414271120336, 5.437623540979568}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.869220048251945, 5.3602405735549805}, \
{7.994484033176873, 5.485504558479908}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.241604890649407, 5.8988061904792115}, \
{7.366868875574335, 6.024070175404139}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.648555124607226, 5.796549580490726}, \
{6.773819109532154, 5.921813565415654}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.016751077179576, 5.803927498256595}, \
{6.1420150621045035, 5.929191483181523}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.2866060719847, 6.0416857797207815}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.276425275062429, 6.081487797510664}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.617346634243311, 5.915730319223056}, \
{6.7426106191682385, 6.040994304147984}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.1778540344063835, 6.136727625004195}, \
{7.303118019331311, 6.261991609929122}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.420090272482604, 6.458815166820324}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.40012057385175, 6.524310825185594}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.74694360049318, 6.331715285486812}, \
{7.872207585418108, 6.45697927041174}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.293103154438636, 6.591221816629924}, \
{8.418367139363564, 6.716485801554851}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.516844291216033, 6.979310259397131}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.484742274218156, 7.069636678321819}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.857606718097164, 6.7991132512446395}, \
{8.982870703022092, 6.924377236169567}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.387960464731426, 7.096576955275172}, \
{9.513224449656354, 7.221840940200099}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.231545692086856, 8.693826310800997}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.160489732175183, 8.777214164166967}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.675743304707442, 8.282924721813357}, \
{8.80100728963237, 8.408188706738285}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.643261924594064, 8.45339216040389}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.577831448060987, 8.523451094107914}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.510823160186725, 8.592002467597075}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.442271786697564, 8.659010755471336}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{8.108467098513767, 8.015374230861894}, \
{8.233731083438695, 8.140638215786822}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.668820138119139, 7.604772632977637}, \
{7.794084123044067, 7.730036617902565}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.22917317772451, 7.194171035093378}, \
{7.354437162649438, 7.319435020018306}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.789526217329881, 6.783569437209119}, 
       {6.9147902022548084, 6.908833422134046}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.855514045493767, 6.014055688991142}, \
{5.980778030418695, 6.13931967391607}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.271560204225559, 6.449523936787159}, \
{6.396824189150487, 6.574787921712087}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.687297703739603, 6.884640898978743}, \
{6.81256168866453, 7.009904883903671}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.233246217239674, 5.9390303352799165}, \
{7.358510202164601, 6.064294320204844}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.744164696196739, 7.593363420290455}, \
{6.869428681121667, 7.718627405215383}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.425769856184052, 7.082963726106927}, \
{6.55103384110898, 7.208227711031855}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.0957146824516215, 6.579746057914049}, \
{6.220978667376549, 6.7050100428389765}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.3906673657224164, 7.104310023432441}, \
{6.515931350647344, 7.2295740083573685}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.060253819287762, 6.600489377634193}, \
{6.18551780421269, 6.725753362559121}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.505615589396727, 6.165152663273956}, \
{6.630879574321654, 6.2904166481988835}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.072953267650962, 6.382044782912075}, \
{7.19821725257589, 6.507308767837003}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.305499620755096, 6.781242359276065}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.278220140323086, 6.844046022190475}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.607075911485952, 6.658804829363986}, \
{7.732339896410879, 6.784068814288914}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.10900684047271, 6.995998009304388}, \
{8.234270825397637, 7.121261994229315}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.33603843125477, 7.422938766511124}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.293884860313938, 7.509034515000969}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.636691141338051, 7.284844682453997}, \
{8.76195512626298, 7.410108667378925}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.117392807397161, 7.657249918765949}, \
{9.242656792322089, 7.782513903690877}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.311658131398147, 8.15979176718242}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.252478631958782, 8.26790481015677}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.638365303290186, 7.958033529510178}, \
{9.763629288215114, 8.083297514435106}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.096501700755672, 8.36484670193167}, \
{10.2217656856806, 8.490110686856598}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.225883721487484, 8.98803074446569}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.147613964627263, 9.116739876158363}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{10.610492407934526, 8.677411375084484}, \
{10.735756392859454, 8.802675360009411}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.563414900070686, 8.913703319094783}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.487008728814084, 9.027351801294655}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.408035352668303, 9.139231586656294}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.326535698031126, 9.249284695683027}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.893746113348126, 8.673972455111723}, \
{10.019010098273053, 8.799236440036651}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{9.40228380477011, 8.327060476050015}, \
{9.527547789695038, 8.452324460974943}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.910821496192096, 7.980148496988306}, \
{9.036085481117023, 8.105412481913234}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.41935918761408, 7.633236517926596}, \
{8.544623172539008, 7.758500502851524}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.601872061107599, 7.675516111462871}, \
{6.727136046032527, 7.800780096387799}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.927896879036066, 7.286324538864887}, \
{8.053160863960994, 7.411588523789815}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{7.436434570458052, 6.939412559803179}, \
{7.561698555382979, 7.064676544728107}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.933030743363947, 6.609215128747588}, \
{7.058294728288875, 6.734479113672516}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.767119606466181, 8.171904865205246}, \
{8.89238359139111, 8.297168850130173}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.296186139277582, 7.797599119255404}, \
{8.42145012420251, 7.9228631041803315}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.825252672088984, 7.42329337330556}, \
{7.950516657013912, 7.548557358230488}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.354319204900386, 7.048987627355716}, \
{7.479583189825314, 7.174251612280644}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.319050379867198, 7.144578244486239}, \
{6.444314364792126, 7.269842229411167}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.024105429049817, 6.620009931226321}, \
{6.149369413974744, 6.745273916151249}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.691272809248682, 6.11138966192569}, \
{5.81653679417361, 6.236653646850618}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.308306813105166, 7.244177108581511}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.2710069603114595, 7.261398323047583}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.911960282351373, 6.671014680295038}, \
{6.037224267276301, 6.796278665219965}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.09425963999014, 7.245275334531929}, \
{6.219523624915068, 7.3705393194568565}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.700063051865718, 8.386678928165445}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.636654694121902, 8.412521727865547}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.302151074604856, 7.809778898190457}, \
{6.427415059529784, 7.9350428831153845}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.445523638559078, 8.397212473990328}, \
{6.570787623484006, 8.522476458915255}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.988457370911465, 9.565921581628508}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.898130951986776, 9.598023598626385}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.640511299041695, 8.966302040077125}, \
{6.765775283966622, 9.091566025002052}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.744465200979491, 9.565429186896957}, \
{6.8697291859044185, 9.690693171821884}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.672655045147062, 10.290099951688788}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.565925839871321, 10.314825652268622}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.420960876980551, 9.654088290939766}, \
{6.546224861905479, 9.779352275864694}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.342980938095156, 9.74677559652677}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.248704956174562, 9.764137643756236}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.154058186873708, 9.779349169386538}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.059089679017882, 9.792402290343928}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{6.124306786396067, 9.101474583309068}, \
{6.249570771320995, 9.226738568233996}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{6.0153532113543875, 8.509856260016948}, \
{6.140617196279315, 8.635120244941875}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.906399636312709, 7.918237936724826}, \
{6.031663621237636, 8.043501921649753}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.79744606127103, 7.3266196134327055}, \
{5.922710046195958, 7.451883598357633}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.545709957633054, 6.148622594174217}, \
{5.670973942557982, 6.273886579099145}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.661501773286794, 6.7396549591607915}, \
{5.786765758211722, 6.864918944085719}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.655141615956817, 7.347004760450592}, \
{5.780405600881744, 7.47226874537552}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.28257299856692, 7.163479300001549}, \
{6.407836983491848, 7.288743284926476}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.607459182821377, 7.954137533347971}, \
{5.732723167746305, 8.079401518272899}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.573240721152531, 7.353544310900063}, \
{5.6985047060774585, 7.478808295824991}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.525345518021149, 6.753652246603472}, \
{5.650609502946077, 6.878916231528399}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.532199854525306, 7.355414207315604}, \
{5.657463839450234, 7.480678192240532}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.48427981697311, 6.7548211464157255}, \
{5.609543801898038, 6.880085131340653}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.7951871241289705, 6.71028359770238}, \
{5.920451109053898, 6.835547582627307}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.561051754045261, 6.989760154383142}, \
{6.686315738970189, 7.11502413930807}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.790308009376387, 7.563843672141232}, \
{6.915571994301315, 7.68910765706616}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.614228388647011, 7.350740677635807}, \
{5.739492373571939, 7.476004662560735}]}, 
     {Hue[0.25, 0.7, 0.6], 
      RectangleBox[{5.9772364546269054, 7.283888409880831}, \
{6.102500439551833, 7.4091523948057585}]}, 
     {Hue[0.12, 0.7, 0.8], 
      RectangleBox[{6.14612016078721, 7.8612629986556595}, \
{6.271384145712138, 7.986526983580587}]}, 
     {Hue[0.58, 0.5, 0.8], 
      RectangleBox[{6.315003866947515, 8.438637587430488}, \
{6.440267851872442, 8.563901572355416}]}, 
     {Hue[0.5, 0.33, 0.69], 
      RectangleBox[{6.483887573107818, 9.016012176205319}, \
{6.609151558032746, 9.141276161130246}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.09061245993586, 5.196998438833343}, \
{3.215876444860788, 5.3222624237582705}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.864238825338325, 5.797839683304107}, \
{7.989502810263253, 5.923103668229035}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.6621094061473505, 7.950399355662295}, \
{5.787373391072278, 8.075663340587223}]}, 
     {Hue[0.12, 0.7, 0.8], 
      RectangleBox[{5.70999042364769, 8.550058033688783}, \
{5.8352544085726175, 8.675322018613711}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.75787144114803, 9.149716711715271}, \
{5.883135426072958, 9.274980696640199}]}, 
     {Hue[0.5, 0.33, 0.69], 
      RectangleBox[{5.805752458648369, 9.749375389741761}, \
{5.931016443573297, 9.874639374666689}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.853633476148708, 10.349034067768248}, \
{5.978897461073636, 10.474298052693175}]}, 
     {Hue[0.58, 0.5, 0.8], 
      RectangleBox[{5.901514493649048, 10.948692745794737}, \
{6.026778478573975, 11.073956730719665}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.949395511149387, 11.548351423821224}, \
{6.0746594960743145, 11.673615408746151}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.9376764976378515, 7.294972590010315}, \
{6.062940482562779, 7.420236574935243}]}}},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{389., Automatic}], 
  GraphicsBox[{{}, {
     {Opacity[0], PointBox[CompressedData["
1:eJwllH9MVWUYxw8/NeEiXKiEuO7oH1YOLVu7czjiJM4MDRJWYpo7XLn0B6L4
c1pip6axzOksjMnIXROnlqulaU003tRhNaw7S+mGk1OOK5hxr5J0LwjE+3nZ
2HPf9zw/vt/n+T7vFM+aEm+spmkVY//Sjv0ZI95kQ/7YtTtdWuP3Y8FWee50
TBbyXHx8nLwX4W9G5L15sHkYW+2J5I9ZX9pUDb/7Jy/Ie+u3+g5pxY6QLu+t
RHeGjLevLZpI/uzgHRmnt38cK7+Lnt5Eac2uLY9i350XkfFG/u4/pZ8QIga/
s2/8J8+2acRzvp44TJ5teQnk/2rOTXm2nnAng6fwsgNeA1Yqdfv+mCCtuVXv
ln6Gs4J6WjTLSb7tm+5Rr3YJdbTkmoDEYdeE7oGn9P0k/IefU3jaiiZJq+f0
p5A34Rp4rOXz4W9/0urAv9MNDr18bSw4nzo3Sn+6iqhvtZz9lbihMyF5r3s9
ieB9qIK++fa+DX6roVDx7owyH/FsNnPTs0tjqH+4gDlpohyc1swHA+RtGe6B
z7q5GeAtm9ABz/nVmeAZ8PaR71zJY+R3NKdxP30vetAqVhFnF9Tcxe/58Hhw
mYO98NzjSmBuv9xGLyLzJrzFpg3MUfusnnmI5o2PgLOgIUbN+xb5fS95yKdP
PqXO1a4RdNWzknn5oge4N9sC8PIdrgKf/uZs5uLrXjkOXv5ccFhGNBW8ifsH
wPt3o9K1cQUcZvnJFvryjou+i4anr5Pn1RkKd/23Ko+/EV0ZJUdV33+qhZ/+
8MRR9LNTMEffYqeq9/KVfvLaqXH4lSx0Mrcp+9kbcSyO7+JDZz/7U9sDPyum
cRBdPzltiPvXS9kLLWNBFjztQ4pn2+eZ5LVz0rGROvpgOZWe9e2neqn/YiW6
1W4spb4eKUPf2gsp6MicVcn+aj+vCuI/rZT5+1bX0SfrmY1YcbApHnsiXenr
vWX039w8PY05FK6Fj9nyj5qPfx7vgPVl5QPmlzKD/RAfdbTCa/UlcPgOjCqe
+/6NlXH2xcAZ+rnGn6VwNsFDz4tXe7Ct+2vqVIUmoYcbV8/Tr9d61XvRtVC9
I/kpSt93HOjdun9J6Ti3nXlqxUPsk94k4CFO7CLOLEyCh++Levqm56xXevZu
wdqzj9B/+7ujt+lTZ9ItbHjHIP5H1mvUKd48qt7Dx+mX8UFQ7eH5bvgKz7Lv
+X46C71qczJUn2btscnvjLCv9g8XxlN/UV2Y8+WZLnAvCfThv6DoLvzcuehG
v+jmu9Ye5Lu1LsQ+WS4/74E+960u8uRuoJ/64uXEi62v8H7rKz5l37Sy48Sb
P8bRXy2vivnogRV/UbfjqurT0p1R6oROh/P/B3yg3ZE=
       "]]}, {
      {Opacity[0]}, {}}, {
      {Opacity[0]}, {}}}, {{}, {{}, {InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8+4PB8ILBlYAICdKkcaSYWIAAT97+jyhWwIOSYDqLKKSHLxaHKtYCE
+xYu6MWi7//s2WBqMdAtDGj6YMARmz4kOaMHuOUSsUvhk5uPLVygYDU3UN9r
0s0Ey3m+xy63BChn9wK7HChcVG6QZ98GPHI4pP7vCMIthwoA9BSiEQ==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.5498013496398926, 4.8892059326171875}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFWK0WMrpvD3w4c/3mZkYmLin4cudTSAiclNDSTHxLPyH4qmdkGQ
KBNYjonpI7LcB4gYTO4oslwrWIhdYevWYBBD5ipC6r42WK4eZLoniFWKkOsF
8Y0m/Aax20FsfYScHpAr+RjCfiyBKacA45SjyF2WYmRkjIXxNjMyMjBOg/Gm
AVWKHIPxtoAsnA7jmQI5vnBTHugiyzGiyIH0iZ/ALteO4hYhIM/l4QcQ8/vD
mVxA3ky43DRwqDhWVlZWxICZRo/hcj+1oUHNxAChXiK8/v9cIlI8aDke+Y0k
9//HdGGIPrXp0z//HyAAAP7GR8w=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.7082329988479614, -7.513530731201172}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcL9WDuiEmH+YMn/mqjCBwW1MqXaQODsfE1MqhtxZkJTorHVY5O6o
MjFx1jz/P4+JaQO6XApQl8///1+0mWy/oMtVMjFZPPv/fz4TUzyGdV/XrwdK
bRdmEt6F3YMfDbHYBgFXTZiYbD9jlboQysRkdRWr1CcroNRerFI7tZiYxLDr
OmkHDJV9WKW+OjAxicCkbiw8iyT1ThYYLBwK1bOBIE9BWG8NQuqoHxMKWIqQ
+uOMKjXrL0LuB0jA9+RnIDhfUVHxFEnq/29rJu+TyAIDAwDJaZTV
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.9591355323791504, -1.9199073314666748}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0Kx/A6dcvhxufeqBuOVUl+CUusa8EadcP+MBnHI9jH9wyrmZ/cMl
9dewGKe234wTcMpdxCO3kWEdTrlOkXc45fLwhFiaGm45WXxynjilPojo4pQ7
xhiMU+4A90Pc9tEBAAA2pftv
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.85269296169281, 1.524030089378357}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IMIXJbj0OqYm8zEz2OOQEmZmZZE7hllO+iluOeTnJctu5cMtVMhOQ
M3yFW84eu1MqmZiYGJiWkWzfBR5C/kvEIydEAzl37HKT+JiZ+LZhl/s/lZlp
Gg4pegAAktmz/g==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-2.0166351795196533, -0.15392938256263733}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+MYL9DPYTejykHdHN9PQME1KPKO0AEYbLIkiAxqKFAY1H9DdTmgMKt
R9FWjyS3H0kjmhRIcT2SHJqP8Mj9xyvngJCrR5erxym3H4+cA265elT/oepi
QOEgNO53QA1rBmjI1ENiAlkKHPQw4IAiA7beAZcMRPo/dnFqAgBpvZkS
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.3684588670730591, -8.467817306518555}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYFVD/WrsMsfCFViZFbBK3pZnZWVlZm0Cc4ruoshdYQYCRuZGIPND
NjOzypVXCLk+oDbWiMg1IHvBJkQ+hssxAwXyIcyrziA51ohXyHLXoOwGsByc
C5ZTQ5WDcf+rgNyicuXKRxAnlJkBxIW7kxXsAtbSVTserbIG62OFyb2KhMix
skqEQ1n5cIc+joDKwQm4W4A6r11DyKldu3btB2rA6eru9FMR1N2JLVTBhk/A
JTOIAQBLDISG
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {5.052759170532227, 3.9125192165374756}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8HFPcggjA6NC0UdMuSNMQMDGy8TkhlWOv+zw7RomJky5ftbu90Dq
pwjTEnSpm7Y2YPoBH9NcDH0MgWBqBydjBYacoMzt//9/5fAxNX3AkHsrG3b7
QTITU9RbTLf8n8jEw8cos+IvFqn/r4H+03+ATeb/LXlG7iQ9M2wmfhdg0tv4
/9si63cYUp88GDlOAumfYdYYOq8zcV8AM36KLMeUs4GyWpk2o8mVMep9gzKt
xZ+jyp1kYgzohDjDhnE1qtznHkYmJp2AtA0bFopgBujVOD4mJkZQBBs8w/Ti
taOh6gYpKetfYErRBQAAmMyuBw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.9030896425247192, -2.323631525039673}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cx+BvBwHgNu9S/fiYmJhxyD5hwyj1UZ2JSFn+IVS6bianl2T2sUjeF
mDy/4HCjCRPXL+xS/9cwMXXgkLoryeT6G8x6M+/qB1S5tUxMOWDGAh0mJuOz
KHIhTEzHQfR8bpAn49DkfEEuOcvNlHBtL5Mzmlw0iIpgivj0/08Q+3lkuX4m
5rv//89kZgWG2d9QVhQLTzIxJfz9H8/kD2RfZrL+gSz3xomJaQJE7qEaE1Md
ioWvlZmYPWSYrPd2qgAdWozqwyv2THAQgx6wHzKhMrabv/5HB//eLVZlYjLb
8gNDZhAAAHXAoss=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.864213466644287, -5.869016170501709}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AwMB0HKccE3MtHrlwsuTsmXDLdTO7/MAl94iZ+TFZckxMxXj0lVBb
7pMBbvv+hzFH4ZFjJkfuvToTHy45fO58I49b7n8H81KccnQAAIR86IY=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.5167258977890015, 0.5486141443252563}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QYMPUiFNuPgtuufPKuOVWc+OWs8VjJgPfBpxyTMo4pagtN18J5BYl
rHLPT/7/347HzETccu+9mNYhePe/I8vtZ2E6iOA11KHIMSUgc2cjczxZSnE6
RYkFpxTZcvQAAOKi7nk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.2191176414489746, 1.4628264904022217}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QsJShDqdcG2M8Trkw3HI/1HHLrWLELVfJyNiIR24HLjlHRp1/OKQ+
SjLm4tI2lRG3XA4j4zTccvx3cclpMyrhkvovxFiFS+oSB2657YyMa3DJZTMy
XsYlF8fIuAqPXD0uuW3sgo9wydEFAADC7+UX
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.5314347743988037, 1.8141753673553467}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9qYF2iLAOjU+EtTJkXtsyMYMCf9BlN6pUxIyNHTWtsrC8jYz2a3CV+
6+mvQYx/ZxkF76BJPoIxvjIyHsPlpA245dayM8b/xSrzrYeVkfE6Vql9OoyM
rJN+YJF5GMAO9B8nuivBwA7q+UNY5HQgcozuWORe9Bx+8+bNfkbh+9i9API7
8wlccrcYJV/ikHoZzaiBw8BaaUbGGVilOoSAzhR9h00qkZmRx6TtNVZtE9gN
r+ByIkkAALWpvGU=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.6550257205963135, 0.6010369658470154}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cW2MGQ/guX3FYmptc4pG7LM4l9wCHXwsQUics2Pibh59ilPujj1ubH
xGTyHbtUEguT1GXsBlYzMTEdwK6rAyjV+Q+r1EQWJqYG7LqmSjMxVbzBKnWd
n4nF7M+3ntTlfzHkApmYXP9/dANa2Ywu9VWLSfvNfxegFJM0utwrJu5N//+z
MYnoMnGeQpP76y39/P9yoLnOTIxbMe0Td9ICGckkguHYTiYYSMVw5/upsmAZ
/YYfWP04mAEAX62xLQ==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.526444435119629, 3.7252392768859863}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84UG39CcpqKEGT2svFmAph3VdiWYYi9cWDkTEawmxiZNRGkbvDyCh5
Esx6Ic3IWI8sddOdkbERwpzOyMi2BlnuOCMjx08I05WR0QhZ6noiI2MzhLmP
nZFxC7JcOSMj3x8w67cXI6PMFSSpFayMjF1g1tcFjIyMBUhS90qAAjMgvgSy
xK8jyXUCBRg1XRrmurhIAFl5/9HlQIABCBkZ72KVgwA8cuXvkOV2cgCF2DIy
XICUzep//1HAg7t3797//38J0Eb3/9hBMyMj+xrsUmlAo2VwaLsqg1sOaJ/0
dFxydAAAXr6Cpw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.125938415527344, 3.3568997383117676}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4O4sGLh15S2q1FNdJhhQUfB7gyJXwoQMnFHkTnAjSfntQZZ6mAwS
k9UMPpTNxCR8E1nqjCxIquEOkNnNxJSHYmI+SErvw38scpNZgFKd90DMz+pM
zPVIUs9MgVJ1YKn/75mYuJC1XQBK6XwFM196MjFNQ5L6mgCSew5mr2Zi4liD
JDcL7Ce9u0DmIUEmJgdkI4XAci5n//8/AJRSuoQsxwg0p231r//fkqWZmJjr
/qPJxf//f6PbBahbCVUKJOdxMFcaZLDCJVSp/wywIGaRuIAmBdIHAvx5s9Bl
/v+fogeSMl2HKQMEb+YAwU+sUtQFAGoeZLs=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.6602155566215515, -5.847725868225098}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9w0McY9wyH1Cs1JqbzOOT6mXDK/QpgYvJ6j13uJFDbYexSX2WYmESu
YJebwMQkvAO71AUhJqZEHI5sZWQSwuHIU7yMTLOwS/0SZ2SQvIhV6lsYE5Mk
DstmAL02HbvUTU0mpmAc2uyA2rBb9n+tABNT5R+sUteBUkzPsWs7B5RS/4Bb
LhmHS4By2jiMpBsAAIEr0dU=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.526340484619141, 1.153935194015503}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcMdH+gN2mb9HrBnz/2CVWhHIyMjo8Q1T4tNeN0YwED6GIXeSkZE1
fdfNjUaMwhg6b5uH7wfR5zkYl2Bo/A2hrnCx/sbhiW8tjLw4pC46MvLuxirz
p4ePkW8vpvjzfl8DXUZGo7tY9JyE+M4Xm3nPbXTabp2XZlyPwyX//xczriRB
7qN9EITxWZJpG5rcYkb+ByD6TxqjIbpJ92QZHR7//3/DjZEHXdv//+/0GQVl
ZXkZTfdgccMNB8bAxMSu1zgdSQ8AAEetwhg=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.458860158920288, -0.3974637985229492}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcOTIsuRkBs7zaMJ3tr9u1GRkAgI256tocskgYUam8I0bD2MYx8nE
pF664M1PLDZtZmTq/IXDFXMYRHE58IsbI6umpt/RL1jkypnATmRUm4xpoQyT
YldXV5ogE5PRN3Q5UaYkEHXEnIkpFF3u1Fwoo4uREZeb/m9gYiJJbndZefnq
6+9/F2LKTRUA+0HVgolJA01qBydjxdy5mfwMjIyM89HkAsAuf2MB0rwXQ85t
ZkAABzhwUtDkJrCChRVTd7zZvh3dLVMkGZkUZ3zE6TV6AADa8Z4Q
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-1.1834572553634644, -3.4420533180236816}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMhQeB+7zCdRJiYmW+xyJ4BSTEZYpb4HgeR452KTqwfKAE3lXvgW
Q+qaMhOTy4USNiYmkw9oUtflgdq2/f/fA6RM0HRuZmLi2Pbv//+/k4GSEahy
TUxMAmDGn2kGTFzzUOS0YHL//7/gYeI9hEPuvyYT0xZcctOZmLJwyU1G05eL
JMeHJrcZvxxL1l+wJzKZ0eTeBQP9XHTg8/9rhUBGyHsUD17gB0WDvY8MkLRB
lfr/fzUoasHAb99/dPCjmxUkE9j9E0OKTgAAOmuL+w==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.1557559967041016, -6.076930046081543}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gsJIhFI8cbucV4ZELZZDFFOw9BqYssclBzWLA4pZHDAyPIHJFWNwA
NusYA8MxLEb24nJmEVQ9FuuARjH0rgQ6FqxkZS+yZlkGNIDwyEp0qdCVSB4I
ffT/UW8oUNQyNLR35X8sAE86OIbN41AQCg0b7EZa4pLqhYYNqUbSBQAA4XKu
5A==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.868736505508423, 1.8647512197494507}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8OVMUDBjsGY/Fqm1WsxMIJiBKVXNxAiG3NfRZQ56AHVo15w9exZD
6pUmUEfha6zOAOqy34ndhUFM3LE4HB/DxIxL6jQToz0Oqf+LmZl2vpq5du01
LHLpTNytomC/BX1Fl7NjbgVicJgEY+ozAYbYwUITHkammehyzCYQRisTM4Yc
E1TuPyNTDIY+nnVgxjUmoM2ooIWHgan6zKtX28UYmTA8EQtyo4ICE7MYljAN
gsQc1oD7ejbDPmMCRszREQAAyP2kAw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.3636695146560669, -3.7185628414154053}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4NWL//9PiSzHJvVdQerFf39mSWxyn5mZm4FyLtjkdjEzrwLK+WKT
s2MWeQqUS8QmJ8Ec8B8o14ZFaiULcwtILhxT6q4Es+FTkNxMDKkfMcxsu/7/
fybG/BVDroOZOQ9IrWVm/rotOxZFagcbE1O6gxwTAxMYxCHL6TFDABOE8sEi
pweRM3+HLOfAb9j2+uvXn0zM5h+AFKpbbkAoJuY0LF6HAA1miQu45AqYmYPw
yGGNPxCYyMxsjUvul2vca5yOoQoAABhwp48=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.651784896850586, 2.305361032485962}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84cLs7wiriHlapXjZGRkYGtsLvmFJXWRgZWezFGBmDv2HILWJkr3/2
/503I+NMDLkcRk8QtYORUfwFupwK22GoHONKdOs4VP9D5EQYjX+iys1nTIeo
Eb4lzXgaVU6asR7CePZfhXENmpzgI7jN6PqkdOFMZcY+NH0IORXGMjxyy3DJ
7WVFt08LHhrqjOxXUOXmMHZBGFPZGKNRpf6fZzX+AKS+TWVlZLuBJvc/l1G2
YepULWBwTkGX+v9YghEM2HO+Ysj9/5IElImMxDCQfgAA/EatRg==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.983688235282898, -5.827025413513184}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4N+PZWoRCoo1i39hys1hhALNxd/R5VYLA0F+f7+2MLPOC5ym5zEm
/MUh9SSQUfY9VpnPGwUYHb5hk7l3OYKRMeQUhvj9/i2BYoyMFus/Y0i9N4B4
QeIoFvNa7EFAl1FiHYb/oODNTB7GjB84JP9flGVciUtut6TCOxxSIRyMqTik
bkkyKs/BLvXEko3xDFaZzeVCDAzNv9FE9zfF91UJsTEyRs74g66jABIoZZ8x
ZP7/31oo4FBbexVXvFERAAAtB7p4
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {0.30839431285858154, -0.9915750026702881}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8hoJ6BwcGBwQFIYfqZAQnUY2gjS+7//noHoNB+sCqcjnLALbcf6F5c
cviiDY82PC7Zj+kBZG045fDYhsdvZGrD5xA82vA6BMMdABXAu3o=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.798044443130493, 5.097691535949707}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4Omxmo6wY1OOHTv2BlVi5UQrRSZmZmYw1ki4gCwHFvMrKVlSUuII
ZPNnIMk1yrn0QZmfjJmYmGKwWnvMEKhP5iYWma/xGkA7XR9gkTrjA7I34w2m
zI/pTIxMTNJnsGj6kQnUw5/4DYvUTWOgeYbrsLnvphzQfRmfsEldkmJi4JgN
5/5+9OgRXEqOmZljBsyIY8eA7jWFyUkB7YLoerTKUhToJrH1P2FyoPD8/39Z
n7+cKDi8i48grPMBhiEDEAP9xyebuRnFKV8TQGHFLGMVsholfiDgzXEgwBaO
gwQAAIqYlYo=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.124578952789307, -2.536421775817871}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcPvKRjM9JqHsxZhS53mZmJmZ1ZiYJTDl4pnFGx+9+vzq1RsMqZ+O
zIrvcdiWxqzPdAC71Achi7e4HBnNvBqX1A0O+R+45EqYj+OSWsak9hmH1JcA
hgUvH13B6pg5zEzMSuLMailXMOX2SIhLAIEws9hVXLZ+XC0Q+gWX5G0+2ec4
pKbJMAVjlzlWz8Tc+gpddH/DjRux4pzM4l1/MXSkMYP8EIs1QMWZ9XN2Y5hG
ZwAAcIzLFw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.7180002927780151, 3.513772487640381}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4GfAVFxSH8wZp+OSm8qY+AeXnAPjNgyxyYvB1DMW9V/oUse5lT9D
jMzE0BbJmAqifphgGjmN2fA52GRG5+/oclaM88F0LOMsdKmtzHqfQPQlDr6H
aFKfzRknfwQxKhmT0bXlMzLKyOs7RGVxsu5Hl4tnZGQUkpeXYmRkv4Qu18Ok
v+jZ//83+VnaP2H47thvIPErlDENQwYKVjOKncUlV8lYh0uKbLllMitxytEB
AABmfNA+
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.165580987930298, 2.9080302715301514}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/EoIshG5dUBzOT+FXsUgdYmZiYlmCX+2XLxKT2A4eZTkxM83BIPddm
YlqNQ24iE5PmJ+xSh3mYmGbh0LadiUnnPQ65ICYmMxxSbzSZ+JfjkJvKxBSB
Q+q/HhPTPjLkvmgy6bzAITeHiWkyLiM1mHSe45A6LcQUgEvbYiamM7jltJ7h
kqMeAAChO9vt
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.4227294921875, 1.436567783355713}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+8YJYiExMDUwcWmUZZNmZmZiZmG0ypH1FMzDjkbvoy45SrYMYpl8ME
cgaYsEaXkwNpUSg/jUXfMQmQ3NH/j9DlXrSEgawSXv3tRw1QzhtZzgrijH6g
dhDrBKqRRUBn8B/4/78d6JapaNYVA/X5////SAOo7wmmnMC+//9tgSZH/USV
eqMBdt1iHqCDLqBpg7h8A9RBaHKg0NjsAHRQLLrU/zeaTMycPEDNZt8w5MDu
BDrRbCum1P9GcLjEYtEFBIHMyv1nscpQFQAA4pBwFA==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.7809731960296631, -5.064888000488281}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9I8KqCQS5xzUuscnWMIBD+AovUSlFGnj1rzBlVN2FIfVJhlH/y4P9P
b0ZWDMl8Rg2vbUD6iw+j3R9UqYfsjDMgrC9ajIdQpH7aMrbAVE9j9EaRy2F0
fQ5jz2RURpZ6I8249T8OuQjGtH845C6ySH9E8KYwliM4r8UZdyF4nzX1vyF4
jxgV38E5n9wZQ5GMnMiYDGf/cmfUfYOQusrDeAuuK4Mx6DSStgOMjL8hrD/T
ZFSOowQYRO7vr9vt5ozW9///R5PbsbvcExh3rK0/UKX+P5AHR6pg+s4n/zHA
1SRmRsaiu5gSdAUAsZCx4Q==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.3600063621997833, 6.356715202331543}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMfIaN/Gx5g9H0PmRT0bExMjExCwVKPLTQcJM2rZAkktNKljPExM
bDOuv/iw1hZDLoiJiXMqmLWbicvlEbLUYX4mpnoI860xE9MUJKkPPkBrFkE5
LqhyC4FS0nexy81kYmKt+Y9dTpqJyQLGvq2IIneaj5HRDMbZzcjAgCQ3mQlJ
H8j3aHLroext7ExMUl8QcspAOR8oex2Q7Y7klAqEmYesmJiUXiPJrQKaIzAf
KPJ0AgcwqOf+RwaGoEgwCQzUAtF7UaT+r2JjAgMGJiYuh2eocv+XqkPlHLb9
xwD324uBcg7tnzCl6AUACzlzbg==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.9499468207359314, -6.830801963806152}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8u4E0qk33R9EefsMmFMTMzMTMzG4TVHLv/BrscCEtpWFlVPMYuB8Z6
zxByoUxMDJX//3/q69OSlWBiYmQ6jqpvNcxdGsxMmm9wy1n/xy43Bciej+zQ
mzFn4OqA9q3+jxW8kWNmFn2MXa4L6Icy7FL/+YByB7BLHWBkYmLCoa0UFC44
5OTIlDuDx77/ePThlUtjZp6JSw4ZAACm0Zkf
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.410208702087402, 4.891765117645264}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1ePMDu/jN/LBQl+XHzmCRyRFlZpZ4U8PDYXUZXa6PiTl66bP//589
rk9Glzsj2wRh/K43/ITDNU/rmRdhlzm2Spd7Eaa2T319MbI8zMxbMHX0MjAx
MTGKysnxMkUtQdMJdKe+tfvj//8vTOJntkX1xrPjx2GqL09V51+Hw6n//z/W
4MFiLcy9TEwwZntYH6rcWmZmGJOJORxF6qsVsyaMbcLM04QkdcaHWXMjjPPJ
gImp7tGjR4uXFBUVqTMxsZhvRqg87sjMxMwMw6aojnxzPBwECo+DwE+c7h+k
AAD/0bOK
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-5.1058502197265625, -1.089908480644226}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcGcKA1fzL2wyfxcJMXFwMx3AJreZiTHt4VOmfGxyh1kZG/8/ZVTB
at3Ukrn/TzA54XSOP9NuXFJnOJle45B6psva/xe71AtDJgccul5oMUX9wSFl
xGj5DrvUBS1G+w9YZX6u5GZKwCZ1aGK8JRMTU/7OG+gyvzJZGaGAP3ErqtxV
JkYm7uKtW7d2B/ExcWb/RJabx8iS+QTCfNcrzKh4B0nuz/4jSIbIMO7D7g8g
uMnjjyPUgEBU9SdOOZoCACgRyAo=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.1173129081726074, -0.8118136525154114}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984MGZxczMzIwwnIkkdc2BlZmVFYGzkHQ5sKLK6R6Gy51hRZNjnY0w
UhFoh7ipqYmpqakmun0zgWodr8PNyFyKJsfqmJGecfj/69mzZ///jy4Hwkqm
GN5bK47wG3PtV1TJJRJI7jyHpnM90JrZULnQFiwhd+5cKFgvqqUPzpx5AGGh
++/VTAcU/yGHJyTMHB/ilmPVAbG10OSumYozMyDFH3cbTv+hufO/KZJc/XpU
uevnaqFyYefQwoyqAACU8TAS
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.639434576034546, -7.729306697845459}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8owMAIBAyM+gsxpV63vgWBswceYsot8cJtJF45sU845RYzvMUpd4Px
7YUTJ078xirJp8zOxMQY/gCb3KFFJ0925AvIrsVp9FUbxdU4JS+qKD3BKdnN
VIhT7qUanlAINPiBUy4Ft9xPU080kVNwVgvTRDS5I4EQl39fwBWLYdR0we75
b1ZPDOZueo9pz/bF/MDw7LqN0420BwBjkeK7
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.735888957977295, -1.5284335613250732}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+m4PenT9cW7kIW+bHMo3PWrFldHh5mjCCAJPVagxEJcIhlIqR+2jEy
ckHEJaTSWy4j6fq3m5FR7GhzUVHR3KM/0Kx/DZQ6g91l/0IZGaNm1RqDQNE7
VLlfyO5w/I3qI3mwqLjN6mOZjIwTUTW+8zEJ67v1Gsjaw8jogCNMnskyMuai
iBTI2W4E0d+2qTEyKr1CkWNgZGSWCpQyFQNayr8P1aQpCFd6n0D334UaHZAE
T9ixP1gc8evN8k2rvuJw4cADAAeQmHI=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.572589874267578, 5.614886283874512}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/a4HLzAWzCL3fvrAzmYvJFF/99oNmDnQkIOANXoMp8qjdiYmRikjFp
P3QHXVcYE5NGac+FT1gsesPDFPgTh9sWc6k/wSG1nJMpAIfULx0mJlYJidDr
2CTTJSQkhBkZmnHo/f9ZhHEJLrlFrPzHscv8uyPMFIgh+uQ1iOxlYjJ8gyFn
o/Dm/6PpnEz8czBNYxGOE+ZiYkp+isUmL2DQS3rvwOqKX2tadnzB5Xi6AQCB
Bcv7
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.1988589763641357, 4.976438045501709}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8R4PJ6IFjJCAQMjHPR5IqZEEAVTW4KF265/3P7oEAAUw4OpMmTa2fH
KffQHotboGAHExP7MpxyoutxWefKZI5L6gI7brkIJurLFTAzncQl95+T6RnV
5ZpQ5ABopMXd
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.047999620437622, 4.926872730255127}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cTYHDAKeVAntx+Bob9uOTq8WrDIre/HqKNoR6rDrBLsEmB3VeP1SVg
UZACTDkHcMDXYwn9/SApoD4sMbOfAQ4wPAAWrK/HJvUf6ifsjoSZjCu49mM1
EgJA1tXj1obLNmzeHjwAAGMpvrU=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.882184624671936, 3.298783540725708}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8Hx+ChMQMLSiS9zPcDRiYWIBAibuCb9R5SDCUOIBFjkpZ2dnaSBr
J6Zc+hEgIxHIckazcDaUTmBgYkIzEwbOA80UeYJdrgDolkasMt8L2FmYFD5g
lbsP8kMbVqnbmsBwScBuWQ9Qm8QN7HIgTy7EKnNcCUnu+/7Y5wip9V7g8LRL
ABmaEApkIZwIih4mFALV+SwoBFzufaMwmlwwklv2ONc9eBDm7CQMjq1JDz5j
ce+OhQsXHsHuSZoDAHLPcgg=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.905249118804932, -3.481335401535034}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcDGKraij4yE2qQuijCCg0X8XU06GUc0NLLsRU24jV+y3ZweSJRm1
VmNKrp8GIjcDjcXlom+2uOXO8eKWO4zHzIWMjF44pN4bMTKuwiEXz8iouge7
1EcDLH5/c/16YvP16+GMjCpP0aTemTDCgN7XF/fAACZXysgoyQyVdFFkZGDk
l46HyfkyMiZyMzKyi4CAZlva9EsIM09wgXTwzMbqwBNd7iJVb3F4bLADAFJs
q48=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.355123996734619, -1.1387883424758911}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8GlbAisjI0PoYQyZ97OcmECAkYmvGV1uOhMTu9+R48czRZmE36LL
ScZfgBjtwtSPJvf9E8IEL1xO+pPFNA2XXAWTxU9s4ifKM3WZmVqxSW1jAfmB
KfgTFrlVYP8xYXXLfbfJz54tsGVkNMflmA82TCz1f3FIXuJlYvqGS+cGDLnL
tTDWKxl0uSK2if8grIvcGr/Q5JiYGsE+W6XMNBPNlpVAn3EFZmTKszJp/UGT
+9HGDfE7d+orTPdtTBBgYjROQI8+OgIALGqw4Q==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.9237778186798096, -2.653717279434204}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8F2MHPnz9B1K+fcPAXLifEyJwOBBKMcOB5DSZ3s4CbEQkwALEMwtQX
lyoqKk4/gYE0RkacDigiU+4qHrkZjG54zMzFJfWNm3EJLrnpjPqfcMvNx2ld
HONmnHJleOQOZizGKUcFAADht9mQ
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.243410110473633, -1.4123600721359253}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8KCakYlRay02qWtizExAyLMOi1wMI5O8iSYTI9MrTDkTJubX/78G
MzEXYsqtLTwEouyYGM/ictEOZiaccmeYGPtxyjEzZZCpbwJWiRa7HWdwuLOF
h4lZC7s7XwHDEwi5r2ORm8kEDlGF15hSX7QYma4VQuLiy5kgppmoLgz5XwiO
CxOgrdqHkOROMzFk9DEx1miCbTVBsRWoT1yMWevr17P9GRk70b3AwMQodg2r
x///zxC3xxkH9AEAViOjPA==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.901289939880371, -3.602661609649658}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4EsSI0tkxNoNGzZ8xJD7a8LExMQIxEz2HzAk62FyTKcx5D739gaZ
mRdzYJODgPt8TAY/cMj5MzEdxSF1lptJ/jl2qZ9cTGyncGgLYGKKxiG1hJFJ
/B12qVuMDIyTsUtdZWdirMXu/h8hTEyuv7FrW8TEJPINu9QDTiaWTdilfiQz
MSVglwKZKIkZN2BwjYuJ9xgObaeYmBxxSAHlLN/jkiMZAAB+18e/
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.1082058772444725, 0.29867589473724365}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8OF8gQgTk0bpJwyZz7P1mJjBIABd6qsaMzNULgpdrhMoyCpZcuDr
16+/0aReWzIzS2/C7o4GoLbj2KWOszMz677DLhfFzMx1ErsUSE4fhxRIjkNZ
WclhNxa5SCYQYGBicn2KIbdVD+RpkN+tMDW+P5+WNvWoDzMzzyVUiW//oIw9
QGvPokhdtkh4DWZ8T8EwE6habS2IMQFoXwKq3H5WoM9rW1vVgG5xuojmkCYW
SOQwMYucxnBluCxEzvIIpg/+XyzkYVYpXPcVixS9AAC34pZj
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.44046586751937866, -3.6471378803253174}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFUqBpfUEyFGVlxyhYw45a5y8eSyfMYud4Kd+VjneexynoxuuGw7
y8Z4GZecG2PYO1xyLIy7zh25hVXqPTOjNBsj7yVscvMYgSCMsQuL1G99Rsa+
ow+wyn1jZNT+9v814yrscuH//0cwHcUuN+X/RqYQbE4ByV0SYTmOTe47L6Oo
IOs0bFL//y9kZOSfil3q/39dxsDp93DIvfRh1F6CSyMdAAAJLs4V
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.715127468109131, 2.7005929946899414}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8HqPEiMQMMjueYku9SucCQZCvqHJvWNCgMifqHKWSHJMJVjlzPsF
MeQm8YClWHM/L8eQq4ZoE13lgGlmNRNu+1Dl0r/hlmPaikfO5RemnLKGhjKY
8R1JbqMkSMQBGJQvwC5die5367sg1h0rEBNJqpmNiUngCoT9WQhVDmyfYe8s
YKD39vKgyt3QBDuB28fHEcxAlvufjOIH7c/Icr8ikaQsb6IE2v/XYXAptdv/
BwYAAEoZJh4=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.582188129425049, -7.6228437423706055}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YE1UlCQjwzksMm8jmRlBwBpT6p0ZI6PKxvOMjDPeokv9DWHkan71
f51qsK/0NTS59YyM1SD6uy8jI7qN8xkZbYDUVX1GxuZPaHJ/LBg1vvy/IsHI
2PgFwy0HmBhdGpkZJbb9w+KHOaxAD0hcxSLz//9JTkZGwddYpa4JA7UJfsMm
ddWFkdWAkXESFqnrLoyMcx4JM8ZhSn1OZGT0+/n/ECMbptxhRkbfX///r8Ai
98WD0f8HkA5htMCQO8vIew9InRZnXIMh91WbbdrbtxuEGJU/Ytp3nIVRXBwY
KneweOH/FFCMJ6BHANUBAOCOpkk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.941182255744934, -1.9845068454742432}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o0M1wFpfU3yDGrbjkljAyvsIlp86o/QOH1CstxsifOORaGdlxOWU/
F2MrLtsyGTme4ZB6Lc6Yg0PqRw0j12Mccm8kGP1x2dbGwbgMlzZjRp13OORm
MzKewWVkECPPEawSL/6/NWb0/4hV7uf3QEblmzhMfMrIWIHLtg2MjDgj/KJI
5D9ccnQCAKED51g=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.017889499664307, 1.2388466596603394}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8c4NsyXDL3W9knY5f51SXDuharzOflRmwJF7DquerMqILNvN87e20Z
lVqeYdP0xk/JcCFWmf8Pv2N3G8gqH5VduOSuMfJM6HqBVeqHGSMQKN3GKjnP
PO7cTsY2XMZ+C2LciktqCr/iY3TBWfvAVDUjYy2GhmxGUc/s9dEsjPZ/MOTu
1oPcyKi8/ScWm/5937V48eKXuNw4yAEAA27hVQ==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.3832406997680664, 4.5735554695129395}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwOCAU2o/HjkGhno6y+3HJVWPJwzJl8PtFAfyvLAfj1w9mXJA+xz2
45JzINtQ3NFOBwAA71Tnyg==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.9123854637145996, 1.18839430809021}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c96HOVeYVLbjmjyGUcUh9Utd7j0hbFeACX1H4O1Q+45FKZzuOSui1g
jUvqfx7jbFxS3xWMfuKSm8A4BaeRooyT/uKQOsrMyKh5HLucFeOUpcqs87HK
Gfl++X9Ln20jFqnXrIFA8qWQ4idMuQ2MZSCqj7EOU24h4x0Q1ckYjSnXy/Do
//9/dWy8BzHl9jFqTatUZZS6gsUtvyslGBnFSnFG7QADABuS3Og=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.1920344829559326, 3.363520383834839}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4GuWPoNg4Ny/WKRWSDKHTVgVxnwAU+qRnMkmEG2W82dSDJrcTMZl
YPqxgYPQRjS5Y2wQuRVMChcwDNWJBxLvozgzPmNamM7y9P9VK8bGf1jc+ZJt
+UpBrvZfWKT+/3dlZMl+gFXm/39fRnMcMv9zmZX4H2OXmsWc9F6tA7ucg/jt
/0UsB7FJ1TNt/f//X7DIG0ypPw7GP4HUM8FOTLlbjH0QtwpihsoP43QwfYTt
OBZnCm4A07LFWBwzgdd/14VdK3lTsLl0kiwjKyOj5wdsclQDAJR9y/s=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.6625990867614746, -1.6968172788619995}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4E6aw1NccjZMTL5/wKwCHvkzf5BkftWLMDHVfgYxbwFZTPeQ5D5p
aDAx9YKZnxeGMTG1I8n9fXmCmyn9A4TzQ5fJAcW+ZUxM9VDmV2GmWBS5ECam
hVDmN2mmEBQ5CyamvRDWjSgmpgVw8W931941YGQsvQsEJeqMjAw9cKlTVkxQ
wAgmldpfw+VcmJDlnFPvI1llyKT7/msaE5PJti9fv379jeIMQyam/uM6TKK3
/mOClzJgA1U+YpH7/yGZHSg3HZsUEBzU08vAITXoAQC/Aqfa
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.290705442428589, 6.5703887939453125}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4MUReSYmJgYmJsUjL9Dl5rKAABOIiHiLKvXYGCHHcgtV7gZYkEVL
WwBTrgci9///ZG50uUncMLn/YuhyAUBx0Vu3QIK7WVhMMeQk4DZLYMg14JG7
hUPOHxgmNyHMVUxMzuj6fF9DmNjcOf8/Ibk3gWxY5FKWAukX4UBHOb5Al2Ph
mfy/zQcUOPNRpP7HAU1iEdDkBcYDe/IHVLn/QSywONL+jw7eRkDlkudiyP1/
eUwRKHfs2FtMKWoCAF7cbSQ=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.1650086641311646, -6.417749881744385}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cWOODByFCJXaqFlYlJ8Ag2mY9trExCGU+xSf2tZGRSfYDdwG4mRrFz
2KUWMDKKXsIudV+CiWkidqn/eUxMsTik6tmY4t9jl5orzWSLQ2oTI4P2UexS
342ZGI/////6xIkT99HlFjAxJS8JVpNkZGISUtv1B1nquRgTkygTEDCCCQ9k
i1eAhQ1i527fvqrOlpHJ9zWS1xgZGRnWQNifbRgYGU8i5BpB+paBWPfzhIAm
5PxGyLWD5GTrI9VUBYEstXW/kOy7Lw9zBhO3dT+aH75siI3xYuKMjZlwG3sA
DGYAACYsl1g=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.793823719024658, 4.382782459259033}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYGEBEDgwMDFxt39HlytnBgEXV1cl5hp0ua9r09LSpgIZ15ijcRq+
Ho9cNR65EOaNuKROcZj+wiWnx+yLS+osn+kLHFIfbJi34dI2gckDl20bmUTu
45B6oMm/F4fUbyfmNBxS372Zk3EZWMDs8gq71J8CZtm7OLS1MHPewCH1f48w
18bXuCT3OzZ/wyWHBQAAww3d7A==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.6601650714874268, 0.8034077286720276}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Pvb+2VlZXe2Ysp8WWfBCAQ8KjHoMt/WWjEymtasWXMcXebvGjNG
Rtstf7HZ9JORUXTrd6yOmB/JyKi8BUP434ZGTW4mNmYWtiAMubcgt5X8OnAV
i3EfBIFyGvHxRVe/Ykpe2BRlY8PMyMhgfQyrW/4fP3KkyEysAKsfQOCTMuM0
XHL/NRmbcUl9VWc8gF3m11FJRmfs9j0pY2QMPYsp/mbv3iZ5RoG0z+gSJqam
akDfc6Rfw9SUqiGWljZ9yX2sNn35iMvhVAYAlgXB0g==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.39686810970306396, 4.587760925292969}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cD2KbNfBKH1EMtRqYs7FKTeRkZdbFLTWJnZAz/g1XqqyYjow92qf+J
jIysOBxyX4iRsR6HG4sZGTW/45DjZGQswSF1loWRsezcuXNfMaX+VjFCgNbq
v+hy7YxwcApN6iQzWI+OjiojYzCa3FGgjMUpoMe/lTOqofn/KjfUlZ+yGRmP
oWnMgMh97mNkFH2CJvfBlVGqdmaBBtDsGZi+4IS4kjnhG6bceTGQlDD2sDmS
aJt+8DFWqQEHAEMtqWk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.586884021759033, 4.013942718505859}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcCGzCqfcJGaORbjktJmZJ+OSY8Ij58DMHIbbPmZmastNZGJywKMP
pzvJ9R8Dk9BB3Po0cEmRLcfApIZHn+wDXHJZePwwiVniIk5DaQ8AiSreEA==

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.8374494314193726, 0.7007818222045898}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/s4MamTWexCJ870JJuws7IKI1FLpsRAjSxyJVzgWRYVFKwyL2ZXth+
6tR5VMHfG5ydnVdid1shyKwDWKVuqzMy1m+7h1VuLy8jo+DMx9jNvNfmxcio
sOgLdtn/l31YGAtxyP3/P8eSdRGa0N+n06CsZYz2aHJn9b5CWa9EldHkmoXf
QFl3NWXR5FzZpp98AGa1Mtahye1jYmQUUFGpqa1VYuxBd9+uUk02cNSwpH/E
4vyzB5szPDSrsMjQDQAAmHLBzw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.9476501941680908, 4.88225793838501}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4I6oFy6pH9FMnGWoQrN7N0IYL5mYmNTfoMgpMindATNWAOWcUaQW
WzAxaYBZOkC5VBT7OYEigmCmPZC1DlnuJlCAqRLMFESX2wySU0q1AQJWIKvz
ts9TuFwaEwpg52PSg0syMmGAPJhcHR65P8ECzYmr1xgwc3ODJfQ2Nj9DuOYW
mNxwdgJIStD2938swBskl4NN5v//eUzo/kOAXay45W4CHSPxEbvcIqC2w9il
QHJuf3DIneKQXopDikoAAFjteAE=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.864450454711914, 2.5764803886413574}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YGdaXJxNXFw9hsS3ZYaMTExMIGx4EVXqxxwmJg6tsrL1F5eHMHIj
S15ZNJ2Jye0slJfOZISQsmRkZGDMhfGepjFKIuRyQfZsgMpECzBypyLkFrEx
Mc79BmK9WyPPxGS0AdklU5gYl4LoVaJAd2ag+WCmlNCJ/29CGRkZg85geO+6
vGipEBOTyvG/GFL/f2QB3cPf9wlT5v//UFCYrMMmc82GkVFzkZQrFm1X5Jn4
Sj79v87njSmXw8S0B0Rv5t6HLnWGA+qnd/Lx6HI7GSFhW6/NGIchx2ReWlKa
I8nIpLANXe6mLCROBfKuYrrl06Z4RtP0Xc8wZagMAMX4llg=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.1346182823181152, -3.419689893722534}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8LdL7tofHHJTmJiYzmOXeq/GxOX5FqvUnwYmpn4cJn5iYlJ9hUOu
hIkpFIfUNUYm+fc45FoZmPpwSJ0XZvD5hkMugontGA6p/xIM3LikdvMwxeGQ
+qTAJIxL20ompok4pN56MMngcmQUE9NpXEbaMjE9xyF1iosp9Dd2qVdmTEzT
cGg7B4zu27isoxMAAJPr3zI=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.29147481918335, 1.2151590585708618}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cpYGACAgYmmW3bMOWYWIAATEzDI8ezCF0uAC7HFPYBTe7Vjh3ZUDmW
O9gctA3soMlYHfvACaRvCla5L/E45TZkguxTOoRNSgLsFm9MZ/iDwwUIalHE
V+fn58P9noMitUwY7m0WFhFU2xDBxcSStPY/Lrmcr2jOOKUIcwaIaN62DUnB
VUMk+0BEQv41mNzXUk5UORYWWYTOUmNlZDmRwkKE3JdrZ7bvAAIogS3QBhYA
ADW6S2o=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.9821600914001465, -2.0336005687713623}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Mun5++wif96eqHYRJtZ5iym1P1SJWZmZiZmZhl0nU9dpIHCYDnm
l6hSL40gwkDCnLkeRWoeExAwQIjWPDNkqQVw45iZFI4vYkaSms2JkDN69r8Z
Se6pPESYy49ZdfIrEBchtxOixXzbr5cfIVy41G1FkAs4Kr5A+euYHGFSH1TA
LtgD4z+0Yu6CsSeDrNKYC+P+cEXyuxizLjNzN5Rzd5E2M7PqR5gck8QUZuZw
IGNqd3e4KtBVTnCp/wyL/+szMYgrQsOFOek+wgdMi/93ssP8LmK4Gjm8mPTW
/o+AyOnPvowSyv+Px89/9f9iR3z85ItYY5xeAADT3V+h
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.7750697135925293, -6.04400110244751}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y8EaPgdELu9TfZCYmJpdfWOWmMjFJ8TDtwyYVy8jm8ngWUzimzPMQ
Vuau//8PMZVgylUzMWUBqflM5zGkIjiYmNYBaU9MuQNAqUv/sco90WdimvEP
u9whJiaDT2AXqaPL/XFlZMwAs84xMqLJdTAxGX+AsVDlfnoyMS2EMMPQ5W4x
wUVCmQRu4JILY/JGte6pFEzugKjwDjQvhDIxLQNSl+aJMKWjSYFcwBecpSrI
xOR8CV3uvTMTCDA67PqOLgV0TbUEk1n1TuxRTicAAJ9DqZc=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.12438319623470306, -4.694756984710693}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+SIIKRQbTzPXY5CyZGJiaxQ1jlUplutysy8V/EkLh/6v8u9p8ztJg4
T2PIbRN6+r/LlIlJczumgdsYazMZGRhzX2OxbBETUE/x8z9YpI7wMTH5fMHu
fi9GYVbsrgfJvVXTwyG3mOGtvQgOuR+MrZNZ9uCQ1De8xbUKl6FMty3McMi9
4q+2YMIh91+Xz5RxMQ65Q8CAWYJD7rsebrn/p9hwy/2vZDqCU454AABhectT

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.74990713596344, 2.3694255352020264}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QMLU4kpGxHIvEyxV6jExAwF77G13quzNQ2HRZJFD2I7pcJROT54b/
3z0w5V4s4mda9/n//w8gU3NR5RYxMfGeBtI/AoFyMleRpfbzMzGtBjHA+piO
IEl94GRiavwHZBzjx5C7ysQk+RjEWMGELndbjYmpEsQ4IIIh18LIqHAZHC6M
YMCAJKfHxOQLZrzxYlMCavP9gkXu/6vV7UC5vf+xyWGGC0LupCwTE/ecv6hy
Lt/+///50MsKqKsLJcCAckxhlZXJTKA40rqDIpfMBAUMTOyLvqJI/f+YCJUT
Dj7+Hx2AQ998+vSDGDL0BADPpWxu
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.10488539189100266, -6.703549385070801}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964MuZ7f1nqtPTGZnWokvFaDEzgaHYTgxtHqL9LSYmJjNnYpr4yoTp
LC7b+pg8cLoknfkQbjlM18GBHTNOqf+MYjil1jJl4JZjZFp85syZa1glg8Fh
whOLTe7VzJkeJgpYwhIGXtcwK7zGJXmNhxFnyP3HE6r/CxlwyV3774FTnwcD
E059r7WYa77itI9YAACo5dah
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.8003268241882324, 2.7520697116851807}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0MXAKNh0BpvMAw1mJiBgDceU2sXNJFlYmMzExI8pt51JCmjcn4lM
zJOxyOWDqD/xTKJY5PrBdCYTB4bcl3hbnHL/P9+BypWgij/dfvYmlJnJ1IUi
dcScSUTOejWI+cOP5wmyJm8OkKeZBOe//f89l0kXSeqZAZNh6o4dkzWZmLzf
3mMSeIAkp88k+gpEv3ZjYuopYSpAknrNxlQPZXUADWZbjiTXxOT5A8rcCZSq
/Y8iVwhh/GiWZWLi2/QMSa6HKeMvkHp3zI+JTbeZk0kBWSM7U8bTQwWiTEw8
zf//75h4CVkuEOw5Jhath/8xQSc3k2FLyzIsMvQEAJkZmUk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.0816267877817154, 6.2338080406188965}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4Ms2023bpAO2bXuAKXeLhYWJBQiYnF5jyNmD5UT4mFhsXqFJHZBg
YSkwElnrDVRQiCp1Sglo3P9rjv/PYMptY2Ji2g5jFaDK+bOwOD+EyKHpex/J
xKIMdR663CSgEzWg7EwscishzFomFrlrSFJfMpkYdJ5B2J4MTOrI2oBBonMR
ygb6rx/F3yws3hDW/R4+poZfyHJqcDkgS+kQstQ0PpgciHUGxd95wDDxBJq3
jQEeOHBwEBjMivn5jqB4gAYOAjjCoo7FFiPuXjlB5AoKMaP1/4MdZjtkg3Zg
SlAbAAA2voMT
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.14715178310871124, -5.977885723114014}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4LYno21E3z1sUr1sjCAgfQ1D5pMHCyMERGHI1TAyss99+vRUmTj7
WXS5FEb2ejBjK2MLupw0YxWEcZLVBlPuFITxmF8XXU6RMez997WRtnb6jEHo
csWMjJxaEIe6ossd5GWEAf6H6JLVYHEJExtGRt47aHKujIyeM+bv+fN3Czdj
GarUTBZG6wcQ5krGEnS3BP2EMg8whqLL1UBZXz0Y96PK1TPqvwYzvvUzyn9D
lfsiy6i08cmTJ2t9GdmmofshHewHBkZGzPD8f8sVLKmk2oQhBTQ1iVE5csMf
LDLUBACzW5Ji
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.2870471477508545, -5.013915061950684}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964PjMmTOvz5x5QsFt5lxUmRmmEoyMjIqMjPpCjIxMno+RpFYyM8KB
y+TJB5GkLkKkDDmc4uKO/kY1cQdQQmznoYfH32C6wxQo5/AduxuzQCbyKa48
jEXuU6KIMEhaNPj+C0zZS+dtIK5Uqt6OKfv5ZYWfOUiW6w5We58v4QFKpn/D
7qomkM7FWKV+xAOlkr5gSvx9f8AXKBX+CYumGWCHhmNKfD2gxw2SMt+PLvNr
nx9QnIGRMQTTrhyIx1OqMQ28AQoxYa+LvzGl/r9xYmQM24NFghwAAM4YjoI=

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.7516995072364807, 4.445272445678711}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x924LLuflxSc8SYnF+8uFBdXa1piyZ1UpKZiRkGUKW+STDD5eS6UKSu
KDAzJycF12x9BQQfUKS+RoHUM8k8weKOMrBZTMyLscgBtbkVOmKX2zbh6P//
ExiYLuPw3ysbJpH7aGKxeh3nQXQbM1MBunqgr9qA1D0lZu0/6HJeYLnjqszM
KzDsmcbMLG9pyc7MXI/phrfxrCDPKZ7FMBEE1s6ZM2chDtcPCgAAGSa1TA==

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.724721670150757, 5.245418548583984}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x98YHJycgwjo+8LLFJZrEyMTAIsTG5/MOVaAwPTNz6fw8R4A5fBfyxw
y71XwyX3axknI0PjkSdYpB6bMDEBHcRkgUXuCBOT9+xZOkx8pZhyT7rO/f3/
/501E9NuXO5528jE/xCnY20Y5uCS+/+BURVd6AGcpSCGblQmnKnHfhhVrsIG
xrrJaPMfTc4ayrggwYAecHMVJ74G+u9ZjgiTzis0uYeuTExeAf58TPxlmE5f
IA4KT1aPQ5hS///fUYhdf/QkNhlqAgDCd8Nk
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.469047784805298, -2.3187003135681152}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4NqZM+k7+tKDmNJ3YEjxMDGDoFhGMHMLupyCiYlJ7MxDQKaxMbrG
1zDGKwUTnPYyiF3DIbWWR+wsdpkzdoxa2HXN9BBj1vqKReIgIxMIivZj0wT0
XUhGhhYzNjlusNO3i73ClHt9HUwtZjZ5jSkJs9UDhxTI1kM4pM6IyeMyca2Y
9jocUtVM8til1saYMGljNfBVEBO3yVqsmq4pMIXgsol0AADKMMri
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.1902564764022827, -0.3996998369693756}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8YsEaLCQTW/cQil8QMAY5Y5EqYmeW5gHJsyz9iyH2ODni9u86YlYl5
Pi5rU5mY03DJteHRF4dbroQFl9wmKVZmXHLmQD/gkLujAAwYBiYmycvYzJSW
luYF6pW9g901ZyYAJX0uYJf8vrobGHzPsUv+38jMLP4EVejt5PRL///fWGUn
xswcgSpVps7MLDq/UAIcU/WocmGQ+GMCYo/9P1DlOuFyyWgy//8/rZEHStk2
fPnyG4cbaQ8ADpSbTA==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.681236505508423, -2.6842753887176514}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcJSdcTpWiV2TfdmZmIKwSSVzMzEx4pCrYTKccZ2HqRab3LdTL///
52OaiMstS1mZbuCSa2NiqsEjtxyPHD4zccq1MjJexyXnh0cfI33lXjIwMbnu
/oIu/P3Jubg4XaAcE+cRdLlSJhBgYGLnn4ph3P12nfD29rb2zbicQgcAAOrV
ydA=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.1658257246017456, -0.833098828792572}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848PfHHHuplGX/sEh9a2UEg9R36DJvC9QYoWDyXzS5+2BhdiEQ+Ryb
nNm2DGxyn/0YOeqfXRYBSvG/Qrfw04qd//+DtW3D6ot6kDbhZ1jlXIBS9hew
SoHlIrBL/U8DyokdxC73MUuQkdH5Gw6dWwQYGR/ikJvKiVNuGgcjply13uy7
/1/MBoc3ulwWI6OAhDA4vMP+YMpBgfojdIve6MHkJmK64k1tBgMjo1LtI2xJ
gk4AADeKlI4=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.7201974987983704, -1.6577001810073853}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8Jy7EqfcHKbZOOUKmdaTJafG9AuL6IvtQOI8IyM2HfU+QGIykx0W
qfcaE0AKmCZikdvEtARIhjAtwCIXJ/jy///XImLvsRjJaAgk+xmLsWibwJQH
JFuZhNZiSH0QYAr4+f+PKROTJYbcbEYmJq/CWUxMTHUYcols+xJ4mIAKnL9g
yD3bAnTkKgbmhVicAgbrGXVwSf1fwFiIUy6RsQWnXBXbZZxydAAALxLV7Q==

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.056471109390259, 1.966873049736023}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YL4qg39n5wZsUhWsTCDAIVp+C11qERsTDOigy01gYuKZtK+mS52J
SRxdrp6JyRVE35THlGNnYtoNpH5GMjFl4pALZGKKu4BN7nMPkKz6i+EFCyYm
UUkmpvD2n5jeywG5XvfCHwyJH8ddmZmYuLsfYch8O+oH9rPuV0xNKUBxTldR
JqbFGHJAQeGW//+XMjHJYpHL//Ifl5z2YxBViV2f5+v//9uA3u7EkNNhYjLx
8QH6QeUphtwtNUi0CfdiSP3/fycPJFX7EosUdQEAVAmM0g==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.1440765857696533, -3.487570285797119}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wsLLkGE65VSxy4Tj1MTEwheLUx8SCU2MvA1AnLkkmoE5ccoT09eKQ
s2RiZArDIYfPpatopE/uOG59srjkaOROHFL/H1szleKSowcAADe+zow=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.743593692779541, 0.13560137152671814}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwMB0DKccE4vccRxSYYxMjKtxyIUzsTCtwS61iomRKQyHtlUsTCy4
rCsC6sPtSiYWXHKM5OuzxiHVi9t3oFCRxeUFYKiE45BahceVq2jjO5z6SliY
SnHJ0QUAAHWn0ak=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.8880436420440674, 1.754939079284668}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4PXyEKfwX1ilzmrJ1l+6i1XqpmLpd1wmTg36jdO2qTG4XTJP8CpO
uZ/xFrtxSv5eqmh9FKfsl+mKKcdxyr6K5Z6H20l9hp9wyj1iPI1TboXAG5xy
Jek4pTazn8EldVBkPU5dItNwyPycxI9D18+VLtbbcOiqLjmByyoqAgCQ7vhS

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.5174797177314758, 1.4355648756027222}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4F8eazkuuZWs2x7jknMsxGnka4YDOOWmsV7GKRftg1PqO/96nHL1
jNdxymmV4JS6xLwAj5HXcMrFWv/GJfVecgJObTN57+KUK/fCKfXfoR6n1F+L
Bpxy7xn78cidf41L7qcm32rcjqESAADwfvvZ
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.095597982406616, 1.0330318212509155}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJw1Ul1Ik2EUPghBQRdCEAYSVBddehtRRIFYN17MkqCgNlzLGpvNUSy7aBdF
YNAvEXVRGUgWMdMkwW6SGC7W0tzXwpzk1n5037b82dwvT+e8W+++73zvec7P
c362y2Q3nGsgot7NLAzGK4cdDqOro5GVE7bebovN3HXM5jRbzI59JnFrrr9R
8PlYZhEmrer9IGoMLvlQiYAc+oAN+DVPJ0OecAXTrMZQDiAOetTG4GusfmLP
tMToRSCxDn1ynZVsEni5V2BcVXKnZM3MfCuDHvB1PwZpBCuMlSk8C3xxxwHf
MLKI0hhnJFORKzx1aYLvw9jDEeMMNhEhTyB57O1cYWOWVPbETfpTx+W0cwn5
MxoQxJDwSsL/RtZ7kiooTtcYD1AtBZtSnDuriZIBOUO7VeBbscntdsehVDMr
L+4z4LDOsTxNUqVxa2btITCfHihrTxXJCC5KDGgiItkWQZE6RauqYpsU43py
0K+Ys4k05QWOpVhYsEXxcvgtZcaUGp6d0VVJnlS2Bn77uE4c6E9vAnnYqnNU
hW2VnuOAW3nh+xjOgwZrHQCybCzDW4FimP68wq1QU40nQoVX3O3jGYl0o79y
RE0UYaStYn82B+8s/aRlvn/FgKQsvFGRvEAUnYuc88f2cbcPd+qDhr50VAsF
W/AO75/TBeXbRi3oVMNRg566h+u0QZdrO5B97DgpXfAJ8A+Uo9KklDGEbmtX
bZeInWXxdy34C/ZWkB9VFTqKgjRIVR5Lgh3mfYzrQInv0SVA+70AffQGQcju
CkMOhpDQ8v8QGv4B36wuQQ==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {7.2957072257995605, 0.9640308022499084}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/mFhEasDl65/cFG8Zv77//vf/58YJv37//f/0/9XdmPV836iaqsn
Q6xP2v9/qGb/+f/59XGDeA4GUdN16O778/+8Z8uZ3z82Xbx6F8283zsYeI8/
/f/v7/87/X/+/0KW+vv/P4sPUOTf71yz+P//r/5G8tf//wwMi/7//36v/ALD
oS9vtvxAsg6Irh/4/3TtymUM6jv+P/oDlfgHkX7Zeen/xj31ZimP/z/C8PmT
r0ve2QLj9/fyL39R3fnn/5v/N//pxzEwvP3/FaID4ZavH0/+e/nfBCT3G83M
v3/fbL3zf7EBQ8x3hOg/ZHOtGHz+v8OWCn79/L/dqff/IyxxCBZi+PHowW8M
XUCw7FDvjp0Xf2NoAFJf88NVun9+/P0bU+7X99hAhhX/v33DtA6k5gswHv5i
iKKzCKdhAMZx3FM=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.081612229347229, 1.6392121315002441}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJwtUktIlFEU/rAWrcpAgiJ6LFqU1KpMCAppU1CLlCioja9RW0wwCuXKHkj0
lIIekAamBlmktSjKxtFqU0mOYxbZZEpS6jA6ko45mV/fub/3597/nu+8vnPP
WV9wPNeXBqB8iY7c/BM5gUB+ZV66hIP+8rISf3HRXn9FcUlxILvAzFYv7GFq
IamjH313cYcgJ3hG8hzs3sfnZCZ/nUrbyL/NHRzgI4ybTyMjxGxklhzhTOMt
sism9Mc8+JMcxaSixuW/A3Rr5ID7Jbk0zoarRMSJQKvCcCVRZ+L2KcbqXynz
PeeFtqoCIHjh7aoUa7juBdkjdKd0fjEXPSTNbsuUl4LnOEi+tKhOrfWA72h8
XCryBtDshHaFmHO3P6jZYHUW4r1J2ll8qI8cswRh54goP1k83XLQvkZloITM
AM87bFA67Bv/mCWT8HVW3WST8j9jFG1Cal87frVEwvFYK48GjyM3M44KxyPM
ppjxAPYIT+cx42sdGNb7WjfYr/ODoftPI2ItwDXtnmrO6FfLQrqax4mTvXSR
mCLfmG/1fZR1CVih+z/SZ1gqHkLHQk3ARbbk0bVgEl+bGsmtPrZCtouYAhKy
+8bQE9NnT7A76CYDiW0L71rqKliu/dvXrbMUvHKEQWkuO80AOpnYTc1IyDJm
HkY9FnvV7aLmK8oiceh1UV2f9P5HG7yefudTz/KS9YGdj5Eh9LYa5k3Q0Mgs
z3IedctUmiw+e24KMs0xjW9kSBPKLw6MqQGbRm3WK2nDaqE5nXJpGdBsHWrh
fyc+Oeo=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {7.303482532501221, 0.9656734466552734}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4B+I+PP//19Mid+X/z/auTbp+keoKiRwKTyewdssS4whE9NE70wG
Bve17AxWarfQZH47yDLI1mmYhEXpmrP8RjHz18/5DKktP/4vjshjqHdEcc7P
R/IpE8+DWDsZChkYviJr+8nPsO/et3//Pz1dG8jAUPUFSeoHA8Ox+nAQa20a
A8N7VL/VMcgz3Pzx7/9DjUyGiLeoriwHxhZD9ZP9tm2KDIxoPn/NsGNS1LH/
XQ/1VQTFUM38v5VPeOu2P/+uTWFi8CxGC87fp+ffAJr0p35eKmaAQd17laFx
Gsg6mI3INh9j+D8Tm6Z//3/838HA8PzPPywx+P/1T0+2qj1/sFr367+Zscc6
HG75y5DHoP0Nq8a//zcwLFgch9VEUgAAUda0+w==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.116917610168457, 2.976618766784668}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CNV4W9kDlbdx3EZ8ff/T4imM6jiv8Dk0c3eMv//97/DtLL1d7BN
Xsz/d1c+o5vY8+y/NIM3yMcv/39Fkfl5bEGT15wLuf8f/vj+/d9fZEP//Vzv
YN4IFHt/Es39/379+bqd4RGI+ef/7zf/n6CYuPJEoeHav3//v/zz/9fdh3+R
9f3/s24676Sk/yvX//f/+3njW1Rjjxkk+aYA42Xt+rwlqPb9//+xNvj/0/+B
vtGRSh//o0tqyln9K3++ioXNzQozrJ8B8WuvMIb/N9FDBRxF/1/zxGUwvP2D
LgkKgP/X9Ri0+v/DzUT2y0tzhogidD1QBQvXigSj+e0fOPaA8m93hH25CbMb
Ve/fX+/+3/vy4xuGFMyIjX/uYZe6xHDiTvYvDPV4ALpiEAAAYvrZBQ==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.4918980896472931, 2.806752920150757}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0cH/zBEyAeUmIVP79eb691aN33+jSnzZfsjAQUG50Xr/v/FlFwO9K+A
4RkM8b//f76Mq9m/jUFj4/lH6HL/Xl+9c/n/x7DN527/f47mst+vP9z4//uL
qzjD/T9o+n5+/fb/77c/Ze7OHj+eo8n9efD77edPG56mWAQ8//8LVe72xp//
/3/6X2Lj7PMLzX9/jqx+BqRaIw0MbH7/RvPf31P//3/7X86gZBn26T+Kxn9/
QPx/r9QYQq7//4um7d8vkH8+ajH4YYQKVMFNiayPmKIQPy4pPIslDv6D7Huf
qvb2x1+MWPwGjheGtnkIIUQA/Pj/2+5/qh12hzzcWcgw6fifHxiuAIH7exje
/b/3Hz0wSQNg4wB8cOCP
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.0850383043289185, 1.5208709239959717}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cH/uFgY4phkyUG/MVjY92Ne5+rfvxB1/Lny//pDIqX5RiCTn1Cl/tU
ygAGLgz7/vxAlXrMEGHjqxXw4nFY9o//f1F89t09sq71MpC13e3HN2QngJim
YXPB7K/Vm1Ed+/f/vf8fXoGZ0gzbPm76guz+X7cevQA64Pu7M6oMeb9RXfLr
59PPX36cA3rQ3HjXWzTPnX/y8f+X9U+WuTE4ogfqv1WFt7f1MkwvcWIQWPcf
KeyA6r4uYDf0Eslq2ODIIILsDhB4EzbZmz+qrHVHmwVP71+Ez8Dg56rb/2/8
/3Pb4zjD3P9o4PM/sC3piTzJ//+jxtXHv39AvtpfvSQcI+r/fPn8/+uj8+19
NR++oznlPzg2L8eHc0/6DnPGH4R7/n2PNO1kOPQMzd8Q/O/0qa3X3v3HSA8Q
SSBcg5Ga0PyKHqDYlAMAXTzKHw==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.9146405458450317, 0.9585380554199219}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJx9UU1IG0EY/fDUS8FDwRxy8dBT8dyWHop6KD2IxdaropiIBZMQLSr00EOh
tN56qxTqwbaHolBEqidJaSmJIR4a/AGLgiBuUrdmkzWa7MzrzOwk7m6h3zLf
zM577/ub9uF4X7SFiCauCNc3NNWZTA7NPGwVP/2xibHRWGTkfmwyMhpJ3hqW
tLBeDjikcZzj/1bUTDR3V1EXqwrW5HEEjaOAP5x5birKOzAVeqpZLqMkHUOe
jhxxoN1FXywGbkzSdbqxwqzUsw11V+MNDFHqCnW8mEW2451bX6MaZ/8OIUEZ
mNyY/nlZqMyBe0+7pVxkLoV3pn2NrFJoMaeD8N4PGrKUf0Ikcsr+2du9j+Ou
QLl0hhD/Kmkc9TIVSt6pfN4WupPqubGfYsa6b2oF4z196wWWxdGq6uo0xqz8
ABXx6Yca+anK2zQHCxnT3FzLfznbK+SY7X+A2vEFXs7TVvnqL19zamYOF+o0
joAL8XlDMsk6zLX1zCVgc1dzyfiN6oO2u4NLz70Pq+OeAK9uX6M3dj2IMRmB
bj56XEbAagKsrH8fqJuvdd9+aRF2FgeNtrkf5bBlGZWgyG3ER/TW8m+gv8gS
2EQ=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.1407405585050583, 2.3023624420166016}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxVUjtLA0EQXqzEykYrG8sUgp22ARFs46NP8Aw2CSaCROwiYmFvYSmBaBM7
0X+QRg0IUbQQizMmdzmTS3LP3XF2b+9yGdjXzOw3M9/MYiaf2psihBSncUul
j5KFQrq0OYuP7VxxP5tTdjdyh0pWKaxmuNuCXBAXHxeNXh7eTWBSgzbPifkO
pX/8rzWBZgmfUDQJHBw2TAqTGIHVlBoVoB2PyRj47/xCuISpMnAjDx2gvoy2
44ncgFq8EKv8oOyQJWBNAU+DbKjJD6+r0VOt9MpjRPWDemf7DlDGKDRWkqQl
oknkKsAtfzBbWZ+TNcJjUEmDA1u4sRvlXA/RIm6fTRva/bNLkmi/McHGT0iO
78MIvyW2Lir3gsMwHQNtrMuAlDvzmtD8SpYo2OaXi1nla4Sc+AefYA3Dvmpg
DDBHA6zrNVJ3dZ78mBnD60MLnN7MS9i6sW3UC1w+OmOeuXQ5ywgq2lAB2a9R
jGwD/jzQqlbNUfGPiWREyD5iMJ59U+JdRbge9XkpWlOEcqAnGOPLwfgZGAyQ
NvTV8eUKNCZ+co8n+A7GxAm1cZmYhGjSgl0VsxZoRSf+AQiw6KE=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.5740781426429749, 1.239707589149475}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/8HI/gIxJ9vfMWUeNH94f+nbIb1mO7+u9/VjYHBTpThxL3/P1Fk
fv3/tL6ZsenKnjyDwB///6DI/ft/MJhh2dmP/9Wl6zAs+3k3qPL7/9+CDAwZ
d9Dc8vffuqK9//7/qGDg+P//DZrc11v/d75sSP5vlIth5Idv8wPPPp0JDP3g
f7/Q5J5Oe/Z//sW0LCaG3tfo+u4znDjb53P45L4FGn///UeJtl+OUxe4lAMZ
7/a4fkDX93rtmbuX///f+t6cATOm76x69f/b+//X039jyv0DWxF1LW01htT/
f6///P/zN///iz/oMn//fv7/7lG461RfjJT1DxQR/y8cPrjoNoY2kPS/L0Fl
bc+xyPz///X72p1FNx9g00ZNAADihdl2
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {1.596276879310608, 1.0446619987487793}, {0, 0}]}}}},
   AspectRatio->1,
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{288., Automatic},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->All,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], 
  GraphicsBox[{
    {GrayLevel[0.6], Opacity[0.7], Arrowheads[0.013387081391419], 
     ArrowBox[CompressedData["
1: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
T3XwEB7/xp38e0YsNZAnOfh06atlwuPJ/nBGhkGLBuKQyp+9HZ/1wN8pwkYl
lQqpFpVL3mvpg92PpkW3h9WR3zs2VSp4pj5smvH5w0/h+QPpSe45mXf/8XJ9
qHQL5YfUUxC/jE3xZXrpwfEP9jcO6yhDq2KibfkGPmTkBM1wei+H/P4Kq39j
ovmwW3R/hfQkJ5pFZaxN48GUvie9xfmqYPdFJyvrqh60aLLcx69gv/GNp5br
cz3giu4vkX5sj/jJX0PCetH9KdLrqU84HaTJhxKjuNTIIuxJ7uotfDIxmguB
v7Pd7p9RRzzzenfXrZ0cuCuX0Hh3DxV5V6nwy6YlHIgte7WeaqaBxh92pUlt
dGbDT829NrfX0xCT+SOZzBfJg55u8TbqHHDb8brhVLYW6qfzmmyc2Bk2bOjo
uRHSTUNM5pvk1LBRDjWdDXv+edPRp6qJ+KY+dcvKFxxwFd2PIZnsj2Qy/yQL
Ugx4wXM4QF97d+v649rIk8/fkc/rkfWkXyzv5S41yAM369jVH+M1kf9imPju
kpYejIjW+5Dbs+5/vLn9PhfSRPe7yX4o8mESLfVc2HokKn37PdzvzCdS+5y/
Cvf3ozustXQG3O77GOhmrAfSp/7ciXbXRvXKBf1aJTP0QM87d6pmIfYkV+zc
vb16vh5MNmi1Cr+P2c9yluWCfD7c4Dxz3RtCB59D/mnTKAagJlpfQfo6P3ZR
Dt0APorWZ5Ce5MqYyltb+AZww8TeOe025i0n+pZGJRmCs2g9iW9iWMbdCcag
oXa+3OOeNvITY2lfsycZg3LiFTvTVbie5JEPuSH1csZQc2FWvqAX8/5Gv6Ej
CcbQtet1p+CDcD4wNdXxc+tkYJVEZX6KUEV+XZSc144/k2GDa/2EQjM15El2
Upo4FulnBFk7b9zZL0uFxJfu5pqlxlCtXZGW2aSOfGMBU/PBG+HPf7bn1re9
FOTjWGkbvYeMoWj1jPZNLCryOU/NjzBlJ0OKwcnUH1XYo35i3yZsVTKE9dfd
nZt7MDcq3DVZlKsPUm+1JabWaSDfua18F+OLPuzoC80e89JE4xVOxFbpreRD
vmLTzajbNMRk/kgm80Vyoue9o45rOLBgYsin7EwG6mfrEmODD+F8mME0OFqt
rIWYzDfJjlcpF+z19WC5aD0gyf9KesatKeZC4aULayLomMn+SCbzT/I2784E
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
HIp+M9VRF1Q/N1+xEZ7P/w/ryuqH
      "], 0.08030620415473716]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
     Tiny]}], 
     {GrayLevel[0.5], 
      DiskBox[{7.54373465938645, 7.499647530509891}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.224246151967048, 8.904860989865613}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.860642065772758, 9.839303576221086}, 0.08030620415473716]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.396716443512002, 8.145290421378425}, \
{7.538433283821091, 8.287007261687515}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.455920558169556, 8.869764570801243}, \
{7.597637398478646, 9.011481411110333}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.123676266589706, 8.05905399299484}, \
{7.265393106898797, 8.200770833303931}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.015036824648322, 9.59560759410371}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.965864519779344, 9.582586821604918}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.022724437359162, 8.797752633608715}, \
{7.164441277668253, 8.939469473917805}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.749517190266513, 9.46577749395425}, \
{6.8912340305756015, 9.60749433426334}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.4991972487914556, 10.947589333588171}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.418355154704595, 10.922056338643312}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.5083975072780476, 10.14477362182055}, \
{6.650114347587138, 10.28649046212964}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.187726519428178, 10.794461595496406}, \
{6.329443359737269, 10.936178435805497}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.855896878467199, 12.252620425574}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.744525051661233, 12.211589009707374}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.930696575467433, 11.467596092524618}, \
{6.0724134157765235, 11.609312932833708}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.563291124895963, 12.09708991546839}, \
{5.705007965205054, 12.23880675577748}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.34030404376866, 13.26035758642055}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.204808802994065, 13.253975782140095}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.235578856600899, 12.466967121115683}, \
{7.377295696909989, 12.608683961424774}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.12878042083221, 12.526312498042378}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.010616089347123, 12.515156707671443}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.892746974603601, 12.501223557141255}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.77523834713984, 12.484520761994908}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{7.066531193371244, 11.732875965688596}, \
{7.2082480336803325, 11.874592805997686}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.134255367681353, 11.015528156466386}, \
{7.275972207990444, 11.157244996775477}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.201979541991465, 10.298180347244179}, \
{7.343696382300553, 10.43989718755327}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.269703716301574, 9.580832538021971}, \
{7.411420556610665, 9.722549378331061}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.337427890611684, 8.863484728799762}, \
{7.479144730920774, 9.005201569108852}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{7.447442717638381, 9.59025230102419}, \
{7.58915955794747, 9.73196914133328}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.966830878366858, 10.26616627662302}, \
{7.108547718675947, 10.40788311693211}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.093342218583119, 9.5568219850561}, \
{7.23505905889221, 9.69853882536519}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.203178793341509, 8.844402426345185}, \
{7.3448956336506, 8.986119266654276}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.043373928950857, 9.547302210173289}, \
{7.185090769259945, 9.68901905048238}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.900206492190506, 10.253473243445937}, \
{7.0419233324995965, 10.395190083755027}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.607632019304106, 9.409678412794664}, \
{6.749348859613196, 9.551395253103754}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.659089418786332, 8.618095119587888}, \
{6.800806259095422, 8.759811959896979}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.076076348663113, 9.949848640913325}, \
{6.217793188972204, 10.091565481222416}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.403101761116293, 9.30712682083487}, \
{6.5448186014253835, 9.448843661143961}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.070472076304151, 9.07373061461618}, \
{6.21218891661324, 9.21544745492527}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.371635251329212, 10.373903128236822}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.30460439484337, 10.321997037207181}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.57732763047437, 9.599891724868897}, \
{5.7190444707834605, 9.741608565177987}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.040237995605958, 10.086162297394695}, \
{5.1819548359150485, 10.227879137703786}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.31684498940418, 11.37608026869512}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.226524594060761, 11.299077105908605}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.553710346880768, 10.617636934802565}, \
{4.695427187189859, 10.759353775111656}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.980585140109699, 11.067944313820062}, \
{4.122301980418788, 11.209661154129153}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.164985820859741, 12.282919267180715}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.053646103372185, 12.178561363535955}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.48168641166367, 11.587823628600736}, \
{3.6234032519727597, 11.729540468909827}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.873934371920655, 12.000754070722456}, \
{3.0156512122297445, 12.142470911031547}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.20114380832899, 14.686245754108828}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.0329660713207645, 14.605603591875575}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.357497206001481, 13.925854432290864}, \
{4.499214046310572, 14.067571272599954}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.201005367021017, 13.882719298565682}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.051734932964473, 13.80229635690484}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.90439820904058, 13.7183832958703}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.759076783605089, 13.63102658268689}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{4.397035265858195, 13.137758562388557}, \
{4.5387521061672835, 13.279475402697647}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{4.738795374010829, 12.503428623273757}, \
{4.8805122143199196, 12.645145463582848}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.080555482163463, 11.869098684158955}, \
{5.222272322472554, 12.010815524468045}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.4223155903160976, 11.234768745044153}, \
{5.564032430625188, 11.376485585353244}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.764075698468732, 10.600438805929352}, \
{5.905792538777822, 10.742155646238443}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.8453025983407585, 9.80740112882043}, \
{5.987019438649849, 9.94911796912952}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.72335776798476, 11.657228053060239}, \
{4.865074608293851, 11.79894489336933}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.116146121020067, 11.05316534695954}, \
{5.257862961329158, 11.19488218726863}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.508934474055373, 10.449102640858841}, \
{5.650651314364463, 10.590819481167932}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.396107009361417, 9.303049547346257}, \
{4.537823849670508, 9.444766387655347}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.011460855335514, 8.928197459948075}, \
{5.1531776956446045, 9.069914300257166}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.626814701309613, 8.553345372549893}, \
{5.768531541618701, 8.695062212858984}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.242168547283709, 8.17849328515171}, \
{6.3838853875928, 8.3202101254608}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.905781501644235, 7.873286581419311}, \
{7.047498341953325, 8.0150034217284}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.427265462694109, 8.42045229748875}, \
{6.5689823030031995, 8.56216913779784}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.779708379978919, 7.625493869017967}, \
{6.921425220288009, 7.767210709327056}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.67172304310899, 8.580453941093786}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.646809599379951, 8.536105588202693}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.177151278196787, 8.059498709202622}, \
{6.3188681185058755, 8.201215549511712}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.507565699360104, 8.328858257980015}, \
{5.649282539669192, 8.470575098289105}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.342421204084946, 9.15220713320286}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.304422256798652, 9.076421527628078}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.852462186069502, 8.628881307188237}, \
{4.994179026378593, 8.770598147497328}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.162967341102741, 8.85141490993603}, \
{4.304684181411831, 8.993131750245121}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.9580100663522435, 9.599808874967447}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.9098622020056206, 9.49132364992285}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.500985561476908, 9.135940069852166}, \
{3.6427024017859977, 9.277656910161257}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.7934219446597344, 9.310877105355205}, \
{2.935138784968824, 9.452593945664296}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.2691128197591475, 11.366787622596307}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.1793011768363257, 11.265133520397017}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.6930278882773924, 10.768294187413765}, \
{3.834744728586482, 10.910011027722856}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.6483848957233294, 10.70367592218219}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.5740714962727633, 10.611129827957644}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.5019563151736017, 10.516860736792232}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.4320792865230203, 10.42092085060779}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{4.101923070385267, 10.135623920237688}, \
{4.243639910694355, 10.277340760546778}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{4.663748598526373, 9.684484785257297}, \
{4.805465438835462, 9.826201625566387}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.22557412666748, 9.233345650276908}, \
{5.367290966976569, 9.375062490585998}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.787399654808585, 8.782206515296517}, \
{5.929116495117675, 8.923923355605607}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.3492251829496915, 8.331067380316126}, \
{6.490942023258782, 8.472784220625217}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.904460074425211, 8.916283891055452}, \
{6.046176914734302, 9.058000731364542}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.084730208171919, 9.0423409766561}, \
{5.22644704848101, 9.18405781696519}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.6817667159369165, 8.638953010080911}, \
{5.823483556246005, 8.780669850390002}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.269393359374391, 8.221459742217922}, \
{6.411110199683481, 8.363176582527013}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.653787044321435, 8.596472496208278}, \
{5.795503884630525, 8.738189336517369}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.047423979351278, 8.98570029149259}, \
{5.189140819660368, 9.12741713180168}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.4489712977463185, 8.187985248693268}, \
{5.590688138055407, 8.329702089002359}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.055700764636473, 7.690153696580726}, \
{6.197417604945564, 7.831870536889815}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.69113902387819, 8.182930446993486}, \
{4.8328558641872785, 8.324647287302577}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.380062828799307, 7.969808534914643}, \
{5.521779669108398, 8.111525375223733}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.317582298594417, 7.593949693087186}, \
{5.459299138903507, 7.735666533396275}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.9799431559565774, 8.02761646863812}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.9685065907566823, 7.943612998569131}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.599150985048588, 7.649003220664465}, \
{4.740867825357677, 7.790720060973555}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.8752371118337456, 7.619455805299726}, \
{4.016953952142835, 7.761172645608815}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.525175889492923, 8.003250140746655}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5147154645656444, 7.885022223550848}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.155709286354114, 7.657589144288602}, \
{3.2974261266632037, 7.799305984597691}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.431294969116505, 7.5771333476350495}, \
{2.5730118094255947, 7.71885018794414}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.0679842300697633, 7.842847581409768}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.061701597809507, 7.6903758355837954}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{1.7110690733857337, 7.598325381532151}, \
{1.8527859136948233, 7.7400422218412395}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{0.9881499995737824, 7.466940052969539}, \
{1.129866839882872, 7.608656893278628}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.05930266848285193, 10.107977532359206}, 
       0.08030620415473716]}, 
     {GrayLevel[0.5], DiskBox[{0., 9.93114398614787}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{0.6414185131219639, 9.719777904426934}, \
{0.7831353534310534, 9.861494744736024}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.6356801577651128, 9.548117037438903}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.5893916210021599, 9.385000872105246}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.5469540821351986, 9.220840684106674}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.5083910411371173, 9.055727377865802}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.2343655059550271, 9.199131938318937}, \
{1.3760823462641167, 9.340848778628027}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{1.927533365208014, 9.002427179656316}, \
{2.0692502055171036, 9.144144019965406}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.620701224461001, 8.805722420993694}, \
{2.7624180647700904, 8.947439261302785}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.313869083713987, 8.609017662331073}, \
{3.4555859240230764, 8.750734502640164}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.007036942966973, 8.412312903668452}, \
{4.148753783276064, 8.554029743977543}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{4.63257106076264, 7.9181331448248375}, \
{4.7742879010717285, 8.059849985133926}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.52386867438385, 8.401862508917466}, \
{2.6655855146929395, 8.543579349226556}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.2308697550764287, 8.262852023408593}, \
{3.3725865953855183, 8.404568863717683}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.9378708357690084, 8.123841537899718}, \
{4.0795876760780985, 8.265558378208809}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{3.9646023416982943, 6.609414141594687}, \
{4.106319182007384, 6.751130981903778}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.666257121205016, 6.77328913534682}, \
{4.807973961514106, 6.915005975655909}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.3679119007117375, 6.937164129098951}, \
{5.509628741020828, 7.07888096940804}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.069566680218461, 7.101039122851082}, \
{6.21128352052755, 7.242755963160173}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.7568353832448445, 7.348415384927167}, \
{6.898552223553933, 7.490132225236257}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.032025467631666, 7.403356322333799}, \
{6.173742307940756, 7.54507316264289}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.840567885896405, 7.083303091124412}, \
{6.982284726205496, 7.225019931433501}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.450921248953854, 6.95862810595059}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.464231081627491, 6.909533254522025}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.106584694009918, 6.970591351541026}, \
{6.2483015343190065, 7.112308191850117}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.440178699328232, 6.6934587764872635}, \
{5.581895539637321, 6.835175616796352}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.101997641257531, 6.4348436154211734}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.128005796331481, 6.3541531334740915}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.762612852693675, 6.448348665197901}, \
{4.904329693002763, 6.590065505506992}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.114822661207366, 6.123861048482281}, \
{4.256539501516457, 6.26557788879137}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.8007737329445463, 5.783876751484359}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.8424596501520965, 5.672748243887599}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.443211945602459, 5.862875436107668}, \
{3.5849287859115484, 6.004592276416757}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.8158904988184896, 5.491772969612418}, \
{2.9576073391275792, 5.6334898099215085}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7843210981878226, 7.262329611417853}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7914999238580576, 7.126874260248411}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{2.4361814608744834, 7.161855737433207}, \
{2.577898301183573, 7.303572577742296}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.519597897777113, 7.055128108484087}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5314486674770187, 6.9370314525126435}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.546075012483234, 6.8192463476569065}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.563468833393194, 6.701838017934224}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{3.171254436466025, 6.997129730152398}, \
{3.3129712767751145, 7.138846570461489}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.888191403593672, 7.069072960186222}, \
{4.029908243902762, 7.210789800495313}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.605128370721319, 7.141016190220048}, \
{4.746845211030408, 7.282733030529137}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.322065337848965, 7.212959420253872}, \
{5.463782178158056, 7.354676260562961}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.039002304976611, 7.284902650287696}, \
{6.1807191452857015, 7.426619490596787}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.311600081831546, 7.390639928323026}, \
{5.453316922140637, 7.532356768632116}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.638525290041041, 6.906059937904587}, \
{4.78024213035013, 7.0477767782136755}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.347113027338757, 7.036742231017277}, \
{5.488829867647846, 7.178459071326365}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.058874077846747, 7.150768139337597}, \
{6.200590918155836, 7.2924849796466855}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.356926605839849, 6.986830811887021}, \
{5.4986434461489395, 7.1285476521961115}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.65161006137583, 6.8395113790642466}, \
{4.793326901684921, 6.981228219373335}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.497111534079526, 6.551906097342137}, \
{5.638828374388616, 6.693622937651227}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.278803223701912, 6.622013177204968}, \
{6.4205200640110025, 6.7637300175140584}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.960077848217306, 6.017181750986371}, \
{5.101794688526397, 6.1588985912954595}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.600864622954447, 6.347982699771446}, \
{5.742581463263537, 6.489699540080537}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.819712719977018, 6.03608656952267}, \
{5.961429560286108, 6.1778034098317605}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.631592462732006, 5.378612663749839}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.682307476793188, 5.310676183446713}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.268658213558723, 5.571852389245112}, \
{5.410375053867812, 5.713569229554201}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.772984559978685, 5.043428341027898}, \
{4.914701400287775, 5.185145181336988}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.6109559623987098, 4.341673585647152}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.6863531144583814, 4.2500082685669796}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.23300622412804, 4.566356187162409}, \
{4.374723064437131, 4.7080730274714995}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7726541898193315, 4.001267483734512}, \
{3.914371030128421, 4.142984324043601}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6839296367306575, 3.205998145720482}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.786306310141713, 3.0928340105688177}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.24405103990325, 3.5116215370743924}, \
{3.3857678802123394, 3.653338377383482}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.8204590101694236, 2.911251747537468}, \
{2.962175850478513, 3.0529685878465576}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.37692559478518195, 4.114835060585218}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.45855576763059336, 3.9471346597625243}, 
       0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{0.9942514340563124, 4.275241116118961}, \
{1.135968274365402, 4.4169579564280514}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.1804389593064517, 4.119423846856367}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.261738681849951, 3.970629132087455}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3465170871616987, 3.823788626702841}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.4347272288286854, 3.678983644275088}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.7821010592124122, 4.319414937276937}, \
{1.9238178995215018, 4.4611317775860275}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.414409412547912, 4.664900956507871}, \
{2.5561262528570015, 4.806617796816962}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.0467177658834106, 5.010386975738806}, \
{3.1884346061925, 5.152103816047896}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.6790261192189098, 5.35587299496974}, \
{3.8207429595279994, 5.497589835278831}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.3113344725544085, 5.7013590142006745}, \
{4.453051312863499, 5.843075854509765}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.103880559849452, 5.787250027062633}, \
{5.245597400158543, 5.928966867371724}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.2606861597306067, 4.654441898836325}, \
{3.4024030000396963, 4.796158739145415}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.8624275996593638, 5.0507772147676135}, \
{4.004144439968453, 5.192494055076704}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.464169039588121, 5.447112530698902}, \
{4.605885879897212, 5.588829371007993}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.544607409665481, 4.385576925759974}, \
{5.686324249974572, 4.527293766069063}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.9302611755787655, 4.994219362679047}, \
{6.071978015887856, 5.1359362029881375}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.315914941492052, 5.602861799598122}, \
{6.45763178180114, 5.744578639907212}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.701568707405336, 6.211504236517197}, \
{6.843285547714425, 6.353221076826287}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.018439636622185, 6.869627400837944}, \
{7.1601564769312755, 7.011344241147032}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.462914058681578, 6.400842532664861}, \
{6.604630898990669, 6.542559372973949}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.263968757112906, 6.739200749739689}, \
{7.405685597421996, 6.88091759004878}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.430058419912685, 5.647002064623726}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.473960181270838, 5.6213098200303655}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.819397294343254, 6.144397020176195}, \
{6.961114134652345, 6.286113860485285}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.538262529262775, 5.479669513774692}, \
{6.679979369571866, 5.621386354083782}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.834934118623273, 4.3279978349358865}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.910037297164822, 4.288667305062013}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.226724625939733, 4.82996298158114}, \
{6.368441466248822, 4.9716798218902305}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.992057145610783, 4.144502903047231}, \
{6.133773985919873, 4.286219743356321}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.362969336125143, 2.9517018051550323}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.4705879283168795, 2.90164684027853}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.695893326886559, 3.487645661585608}, \
{5.837610167195649, 3.629362501894698}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.508496114430352, 2.783279618254705}, \
{5.650212954739443, 2.9249964585637946}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.601756280284664, 3.293940595601695}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.7018095111652687, 3.2023489000786185}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.0671826981555785, 3.708466648500258}, \
{4.208899538464669, 3.8501834888093476}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.2714582792216875, 3.6614506872346118}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.362678441118414, 3.5855155638880736}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.455660126819172, 3.5117479082498337}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.550351847308551, 3.440188569482064}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{4.706970807818532, 4.106132477625149}, \
{4.848687648127623, 4.247849317934238}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{5.167955046387428, 4.659908583080181}, \
{5.309671886696519, 4.80162542338927}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.628939284956324, 5.2136846885352135}, \
{5.770656125265413, 5.355401528844304}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.0899235235252185, 5.767460793990248}, \
{6.231640363834309, 5.909177634299336}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.5509077620941145, 6.32123689944528}, \
{6.692624602403205, 6.46295373975437}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.957932968406414, 5.886869243819618}, \
{6.099649808715505, 6.0285860841287064}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.817428529086422, 5.069491763710738}, \
{5.959145369395513, 5.211208604019827}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.2312904566227925, 5.659316100371889}, \
{6.373007296931883, 5.8010329406809795}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.659089418786332, 6.239483101122804}, \
{6.80080625909542, 6.381199941431895}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.273270555608491, 5.630591069967304}, \
{6.41498739591758, 5.772307910276394}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.873401994400686, 5.03119172317129}, \
{6.015118834709774, 5.17290856348038}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.67807949589983, 5.418598043460031}, \
{6.8197963362089205, 5.560314883769122}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.186541365711205, 6.01644704381005}, \
{7.328258206020296, 6.158163884119139}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.669758922115518, 4.660794589793936}, \
{6.8114757624246085, 4.802511430103026}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.895006099624798, 5.345849819260319}, \
{7.036722939933886, 5.487566659569408}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.2697037163015725, 5.276745682688722}, \
{7.411420556610661, 5.41846252299781}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.9529524452412685, 3.945728924942662}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.036740994058963, 3.9328116073330195}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.201979541991461, 4.559397873466512}, \
{7.34369638230055, 4.701114713775603}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.218746375469085, 3.835075280361214}, \
{7.360463215778175, 3.9767921206703036}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.951640546218464, 2.4907582048145898}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.069665439215672, 2.4782128659544327}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.167920402716522, 3.1163325143623877}, \
{7.309637243025611, 3.2580493546714773}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.235578856600892, 2.390611099595009}, \
{7.3772956969099805, 2.5323279399040985}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.086300904613369, 1.0309626365204538}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.238638024575146, 1.0219900881037427}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.201679230510747, 1.6708713837721043}, \
{7.343396070819836, 1.812588224081194}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.3202856729792725, 0.9457461506932989}, \
{7.462002513288363, 1.0874629910023885}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.803722042853811, 0.062414275713426726}, 
       0.08030620415473716]}, 
     {GrayLevel[0.5], DiskBox[{4.979481445851299, 0.}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.061679409347256, 0.638827831692335}, \
{5.203396249656347, 0.7805446720014246}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.373667528389013, 0.6288213090752848}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.535941366595482, 0.5796612291063683}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.699327029125763, 0.5343331218399587}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.863734040454082, 0.492862087913859}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{5.592708900160913, 1.222493864814441}, \
{5.734425740470002, 1.3642107051235306}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{5.801616382279912, 1.912082225430098}, \
{5.943333222589002, 2.0537990657391876}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.010523864398911, 2.601670586045753}, \
{6.152240704708001, 2.743387426354843}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.21943134651791, 3.2912589466614093}, \
{6.361148186827, 3.432975786970499}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.4283388286369085, 3.9808473072770654}, \
{6.570055668945999, 4.122564147586155}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{6.933481347451114, 4.597562478375666}, \
{7.075198187760202, 4.739279318684757}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.412611929296233, 2.497725603464652}, \
{6.554328769605323, 2.6394424437737416}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.564078259287044, 3.20216324730618}, \
{6.705795099596132, 3.3438800876152697}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.7155445892778545, 3.9066008911477073}, \
{6.857261429586943, 4.048317731456796}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.230207889185948, 3.906600891147706}, \
{8.371924729495039, 4.0483177314567955}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{8.07874155919514, 4.611038534989234}, \
{8.220458399504231, 4.752755375298323}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.927275229204332, 5.315476178830762}, \
{8.06899206951342, 5.457193019139851}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.775808899213523, 6.01991382267229}, \
{7.917525739522613, 6.161630662981379}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.540600413542014, 6.711441301133137}, \
{7.682317253851105, 6.853158141442227}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.472876239231905, 5.987713896243482}, \
{7.614593079540995, 6.129430736552573}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.807149168468449, 6.790481933549767}, \
{7.948866008777538, 6.932198773858856}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.047734845066156, 5.39761189773108}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.097056948464651, 5.410053207908909}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.906889665431391, 6.0546238660684235}, \
{8.048606505740482, 6.196340706377514}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.172218024741488, 5.383430692943556}, \
{8.313934865050578, 5.525147533252646}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.547631305781927, 4.039654379808127}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.628768224885162, 4.0642344197925855}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.405331953244682, 4.701644553806291}, \
{8.547048793553772, 4.843361394115382}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.718336519474004, 4.048228539993312}, \
{8.860053359783095, 4.189945380302403}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.175532158908808, 2.727144556549047}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.287379051725384, 2.766862732003043}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.967428575522423, 3.372116425920906}, \
{9.109145415831513, 3.513833266229996}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.327401973673402, 2.738343287599609}, \
{9.469118813982492, 2.8800601279086986}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.6793707182776565, 1.7369426774769599}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.814931668107596, 1.7417298039266482}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.650878027897466, 2.3881678114335183}, \
{7.792594868206557, 2.529884651742608}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.899516468654383, 2.4684481685181057}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.017803879557217, 2.478212865954432}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.135828772554417, 2.490758204814587}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.253525790844922, 2.50607723806227}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{7.828551300849819, 3.1202191381846416}, \
{7.970268141158909, 3.261935978493731}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.769272123913501, 3.838314133546426}, \
{7.9109889642225895, 3.9800309738555155}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.709992946977181, 4.556409128908209}, \
{7.851709787286271, 4.698125969217299}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.650713770040863, 5.274504124269994}, \
{7.792430610349951, 5.416220964579084}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.591434593104543, 5.9925991196317785}, \
{7.733151433413633, 6.134315959940867}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{7.472876239231905, 5.267176289187551}, \
{7.614593079540995, 5.408893129496642}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.945502010548044, 4.585654225901562}, \
{8.087218850857134, 4.727371066210651}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.827345567719009, 5.296437947015008}, \
{7.969062408028099, 5.4381547873240965}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.725898919664427, 6.010100527221509}, \
{7.867615759973516, 6.151817367530599}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.877422408067494, 5.305369136370585}, \
{8.019139248376584, 5.447085976679675}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{8.01227113101269, 4.597562478375666}, \
{8.153987971321781, 4.739279318684755}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.314753435575419, 5.43785647088364}, \
{8.45647027588451, 5.579573311192728}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.258452945302517, 6.220663698153947}, \
{8.400169785611608, 6.362380538463038}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.839916671842442, 4.89146935389614}, \
{8.981633512151532, 5.03318619420523}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.520476157158496, 5.53799446243686}, \
{8.662192997467587, 5.67971130274595}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.836186047061062, 5.751303981803138}, \
{8.977902887370153, 5.893020822112227}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.613044297068297, 4.550525847204126}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.681865239442086, 4.6000339869185805}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{9.290622649670782, 5.192142272285736}, \
{9.432339489979872, 5.3338591125948245}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.810216510778158, 4.687219936587285}, \
{9.951933351087249, 4.828936776896374}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.63180919195372, 3.5117479082498266}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.724790877654478, 3.5855155638880674}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.277684565087409, 4.138906101833673}, \
{10.4194014053965, 4.280622942142761}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.83456074392543, 3.668652808727974}, \
{10.97627758423452, 3.8103696490370638}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.750947148169704, 2.56482301772738}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.865900451135262, 2.6651865712746945}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.314801387453075, 3.131490479924064}, \
{11.456518227762166, 3.2732073202331535}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{11.907601915721402, 2.697368808583614}, \
{12.049318756030493, 2.8390856488927034}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.801536665352904, 0.2742178744320318}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.970651595939916, 0.35287567638082074}, 
       0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.511595194738684, 0.8955179979926737}, \
{10.653312035047774, 1.0372348383017633}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.811129383829691, 1.0776870796141305}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.961335740912793, 1.1563481393618762}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.109649586438477, 1.238521828911468}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.255988790965654, 1.3241626442226666}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{10.481332602360792, 1.6840245191051317}, \
{10.623049442669883, 1.8257413594142213}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{10.147059673124248, 2.322331695910711}, \
{10.288776513433339, 2.4640485362198006}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.812786743887706, 2.9606388727162902}, \
{9.954503584196797, 3.10235571302538}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.478513814651164, 3.5989460495218695}, \
{9.620230654960254, 3.740662889830959}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.14424088541462, 4.237253226327448}, \
{9.28595772572371, 4.378970066636539}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.07235048406312, 5.031191723171288}, \
{9.21406732437221, 5.172908563480377}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{10.172452600624895, 3.1682920519218247}, \
{10.314169440933986, 3.3100088922309143}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.786798834711611, 3.776934488840899}, \
{9.928515675020702, 3.9186513291499887}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.401145068798327, 4.385576925759974}, \
{9.542861909107417, 4.527293766069063}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{10.481583438875688, 5.447112530698901}, \
{10.623300279184779, 5.588829371007991}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.879841998946931, 5.843447846630189}, \
{10.021558839256022, 5.98516468693928}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.278100559018174, 6.239783162561478}, \
{9.419817399327265, 6.381500002870569}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.676359119089419, 6.636118478492769}, \
{8.81807595939851, 6.777835318801857}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.023930745650201, 6.964554930077787}, \
{8.165647585959292, 7.106271770386877}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.48283841978223, 6.400842532664859}, \
{8.62455526009132, 6.5425593729739475}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.158670299176126, 7.207743978024618}, \
{8.300387139485217, 7.349460818333709}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.376436888553776, 6.353448364639445}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.402899931053874, 6.396889859367772}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.745535379247903, 6.752744373624639}, \
{8.887252219556993, 6.894461213933729}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.405197755165318, 6.459921963787879}, \
{9.546914595474409, 6.601638804096968}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.684732648154695, 5.735138331298664}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.725382509426446, 5.809535688683123}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.049304927143124, 6.13696624826539}, \
{10.191021767452215, 6.27868308857448}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.730516723141568, 5.890237987662305}, \
{10.872233563450658, 6.031954827971395}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.052484863231081, 5.238957521852464}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.104431336859978, 5.345675958739634}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.3820448199235, 5.582527763123698}, \
{11.52376166023259, 5.724244603432787}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.08299388458745, 5.382728746657843}, \
{12.224710724896541, 5.524445586966934}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.67921664077533, 3.4840587635606717}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.772559858715105, 3.582479957228936}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.132513957114183, 3.9579679553884266}, \
{11.274230797423273, 4.099684795697517}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.323583010340958, 4.1601424534514635}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.401116204314514, 4.250008268566976}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.47651335637419, 4.3416735856471504}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.549732715017011, 4.435087644621432}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{10.746201351144494, 4.604674617939997}, \
{10.887918191453585, 4.746391458249086}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{10.20064716582573, 5.075360366675888}, \
{10.34236400613482, 5.217077206984978}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.655092980506964, 5.54604611541178}, \
{9.796809820816055, 5.687762955720869}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.109538795188199, 6.016731864147671}, \
{9.251255635497289, 6.158448704456761}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.563984609869435, 6.487417612883563}, \
{8.705701450178525, 6.629134453192652}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{8.987819510057392, 5.886869243819614}, \
{9.129536350366482, 6.028586084128705}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.802589996555458, 5.731961216947301}, \
{9.944306836864548, 5.873678057256392}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.22016155722457, 6.156168190299313}, \
{9.36187839753366, 6.297885030608402}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.647634917192883, 6.594139590327373}, \
{8.789351757501974, 6.735856430636462}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{9.249622998768743, 6.19763479788581}, \
{9.391339839077833, 6.339351638194898}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.841871918614356, 5.7872500270626315}, \
{9.983588758923446, 5.92896686737172}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.468727270837656, 6.598639335751235}, \
{9.610444111146746, 6.740356176060326}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.87994496288177, 7.117573140884161}, \
{9.021661803190861, 7.259289981193252}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{10.226265853735038, 6.5769459782843676}, \
{10.367982694044128, 6.718662818593458}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.545292589718304, 6.814248258276637}, \
{9.687009430027395, 6.955965098585727}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.62099880719309, 7.187667934070806}, \
{9.76271564750218, 7.3293847743798946}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.08667334587503, 6.8462360649464316}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.101067392238775, 6.929783592955834}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.33703966318015, 7.107294208642626}, \
{10.47875650348924, 7.249011048951715}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{11.061545354667144, 7.111275237479763}, \
{11.203262194976235, 7.252992077788852}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.541394306289664, 6.819246347656889}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.55602065129588, 6.93703145251263}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.779279177754193, 7.047772462904646}, \
{11.920996018063283, 7.189489303213735}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.506081632819248, 7.102612498876539}, \
{12.647798473128338, 7.244329339185628}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.003339067169883, 6.928122559333835}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.01499873685589, 7.08027760146571}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{13.225110974760296, 7.056015840093851}, \
{13.366827815069387, 7.197732680402941}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{13.95221649558036, 7.161806451376778}, \
{14.093933335889451, 7.303523291685867}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.931452531040431, 4.628805794389138}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.996958972366583, 4.803436306326911}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{14.219226044183854, 4.898135315895583}, \
{14.360942884492944, 5.039852156204674}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.375192385496387, 5.20865873643829}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.427208695644286, 5.370039700332447}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.475413251916311, 5.532599943883665}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.519779360828434, 5.69624944864554}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{13.645022778729905, 5.439382919378803}, \
{13.786739619038995, 5.581099759687893}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{12.959228718785683, 5.6604280517095305}, \
{13.100945559094773, 5.802144892018619}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{12.273434658841461, 5.8814731840402565}, \
{12.415151499150552, 6.023190024349347}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.587640598897238, 6.102518316370984}, \
{11.729357439206328, 6.244235156680073}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.901846538953016, 6.3235634487017105}, \
{11.043563379262107, 6.465280289010801}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{10.294142417087977, 6.839511379064241}, \
{10.435859257397068, 6.981228219373332}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{12.384459695778956, 6.281664154090414}, \
{12.526176536088046, 6.423380994399503}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.682804916272236, 6.445539147842547}, \
{11.824521756581326, 6.587255988151636}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.981150136765514, 6.60941414159468}, \
{11.122866977074604, 6.751130981903771}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{11.007881642694803, 8.12384153789971}, \
{11.149598483003894, 8.2655583782088}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{10.300880562002224, 7.984831052390836}, \
{10.442597402311314, 8.126547892699927}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.593879481309644, 7.845820566881965}, \
{9.735596321618734, 7.987537407191054}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.886878400617064, 7.706810081373092}, \
{9.028595240926155, 7.848526921682181}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.191307552777735, 7.483842637932625}, \
{8.333024393086825, 7.625559478241714}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.913727010832144, 7.4033563223337975}, \
{9.055443851141234, 7.545073162642888}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.116983411209711, 7.751744825877832}, \
{8.258700251518801, 7.893461666186921}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.654337744861252, 7.966471484716658}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.642768832561828, 8.016005476588917}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.854487139556174, 7.838483011741145}, \
{8.996203979865264, 7.9801998520502355}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.530258419064575, 8.091924507347516}, \
{9.671975259373665, 8.233641347656606}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.020906178578597, 8.44232420130756}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.997761910197122, 8.523882283974384}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.216052479008798, 8.31296963967824}, \
{10.357769319317889, 8.45468647998733}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.874890780551725, 8.614393656650478}, \
{11.016607620860816, 8.756110496959568}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.344293078996014, 9.046963456824956}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.306555017234201, 9.159493895323072}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.55529368881569, 8.851514565909506}, \
{11.69701052912478, 8.993231406218596}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.195321102698282, 9.20024676647715}, \
{12.337037943007372, 9.34196360678624}]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.307935761304782, 7.5335594795002825}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.305541825232623, 7.669183801686693}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{12.51585393983274, 7.517803868430743}, \
{12.65757078014183, 7.659520708739834}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.580429437743874, 7.766580903432011}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.572753854207257, 7.885022223550842}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.562293429279979, 8.003250140746644}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.549053955468127, 8.121199185792817}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{11.7870522908782, 7.708369063051441}, \
{11.928769131187291, 7.850085903360531}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{11.06802294893715, 7.661772404268758}, \
{11.20973978924624, 7.8034892445778485}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{10.348993606996101, 7.615175745486075}, \
{10.490710447305192, 7.756892585795166}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.629964265055053, 7.568579086703394}, \
{9.771681105364143, 7.710295927012483}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.910934923114004, 7.521982427920712}, \
{9.052651763423095, 7.6636992682298}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.634152396632263, 7.390639928323024}, \
{9.775869236941354, 7.532356768632113}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{10.323909441975802, 7.851164260857926}, \
{10.465626282284893, 7.992881101167015}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.61115114128983, 7.745570473232281}, \
{9.75286798159892, 7.887287313541371}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.895809332372837, 7.656734685376961}, \
{9.037526172681927, 7.798451525686051}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{9.603105123083855, 7.795797136207458}, \
{9.744821963392946, 7.937513976516547}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{10.313181417701172, 7.918133144824829}, \
{10.454898258010262, 8.05984998513392}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.478356651191406, 8.235398251069569}, \
{9.620073491500497, 8.37711509137866}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.694677725343459, 8.192921887602303}, \
{8.836394565652549, 8.334638727911393}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{10.03392700347311, 8.750836792509718}, \
{10.1756438437822, 8.892553632818808}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.381864949255908, 8.442856215451396}, \
{9.523581789564998, 8.584573055760487}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.174160451994917, 8.762281523547236}, \
{9.315877292304007, 8.903998363856326}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.528917198211438, 9.516587363385826}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.48063135428891, 9.586271330579805}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{9.741255189582587, 9.206778994611199}, \
{9.882972029891677, 9.34849583492029}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.255268927562714, 9.717380818692693}, \
{10.396985767871804, 9.859097659001783}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.585513003599308, 10.516860736792218}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.51339782250015, 10.611129827957628}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.811747465228875, 10.175099160360162}, \
{10.953464305537965, 10.316816000669252}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{11.291755536463276, 10.723589351506567}, \
{11.433472376772366, 10.865306191815657}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.552041498381906, 11.619112605517117}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.45372232725536, 11.735819269132886}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.837309721782043, 11.194275100242455}, \
{11.979026562091134, 11.335991940551546}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.281825808812636, 11.779321713952545}, \
{12.423542649121726, 11.921038554261635}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.825534235270617, 10.629424289587387}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.749873305583062, 10.799901071800333}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{14.058758589739844, 10.351732487066023}, \
{14.200475430048934, 10.493449327375114}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.022359464562054, 10.653195524746252}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.946361569989463, 10.804766735895821}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.866818192741455, 10.95450772281921}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.783773380311324, 11.10233556578953}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{13.26984078703216, 10.335390550057717}, \
{13.411557627341251, 10.477107390366807}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{12.625733615054354, 10.012434834535233}, \
{12.767450455363445, 10.154151674844323}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{11.981626443076548, 9.689479119012747}, \
{12.123343283385639, 9.831195959321837}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.337519271098742, 9.36652340349026}, \
{11.479236111407833, 9.508240243799351}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.693412099120936, 9.043567687967775}, \
{10.835128939430026, 9.185284528276865}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.898328499112537, 8.985700291492583}, \
{10.040045339421628, 9.127417131801673}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{11.780353161050593, 10.052753722142613}, \
{11.922070001359684, 10.194470562451704}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.164999315076495, 9.677901634744432}, \
{11.306716155385585, 9.819618475053522}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.549645469102396, 9.303049547346252}, \
{10.691362309411486, 9.444766387655342}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{9.507343290345846, 10.402054133436696}, \
{9.649060130654936, 10.543770973745787}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.100449880123058, 9.807401128820425}, \
{9.242166720432149, 9.949117969129516}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.69355646990027, 9.212748124204156}, \
{8.835273310209361, 9.354464964513246}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.286663059677482, 8.618095119587887}, \
{8.428379899986572, 8.759811959896977}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.946763391421291, 7.971564763983732}, \
{8.088480231730381, 8.113281604292823}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.518487015769704, 8.420452297488746}, \
{8.660203856078795, 8.562169137797836}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.689882952331651, 8.115871732498805}, \
{7.831599792640741, 8.257588572807895}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.722099718492377, 9.311835648811982}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.679132022120866, 9.339061246162986}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.171276184516305, 8.689318875634333}, \
{8.312993024825396, 8.831035715943424}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.475695026941544, 9.343710640772079}, \
{8.617411867250635, 9.48542748108117}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.3634028845594, 10.609015413190086}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.289734522597453, 10.650971943707358}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.80996795617809, 9.982017817577656}, \
{8.95168479648718, 10.123734657886747}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.06868014289814, 10.658769138248832}, \
{9.21039698320723, 10.800485978557923}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.883645164042278, 11.967797768148932}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.77786012451918, 12.021619569560771}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{9.387840923631387, 11.30476514382753}, \
{9.529557763940478, 11.44648198413662}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.599979508086676, 12.002078889009203}, \
{9.741696348395767, 12.143795729318294}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.631682985885345, 11.56361638416954}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.534924486954697, 11.65868204875527}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.00774387115806, 11.026602132272034}, \
{11.149460711467151, 11.168318972581124}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.949428200462787, 11.21996999236497}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.860944724712153, 11.299077105908593}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.770624329368731, 11.376080268695109}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.678517029746782, 11.450936839886081}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{10.354320100397798, 10.651763083178793}, \
{10.496036940706889, 10.793479923487883}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{9.874079456870149, 10.114600754374885}, \
{10.01579629717924, 10.256317594683976}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.3938388133425, 9.577438425570977}, \
{9.53555565365159, 9.719155265880067}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.913598169814852, 9.04027609676707}, \
{9.055315010123943, 9.18199293707616}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.433357526287203, 8.50311376796316}, \
{8.575074366596294, 8.644830608272251}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.041292404038602, 8.916283891055446}, \
{9.183009244347693, 9.058000731364537}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.210555765677704, 9.728193588536884}, \
{9.352272605986794, 9.869910428845975}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.776135884066255, 9.153342468991498}, \
{8.917852724375345, 9.295059309300589}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.328128471254166, 8.588634527791864}, \
{8.469845311563256, 8.730351368100955}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.73519568444218, 9.183531144638737}, \
{8.87691252475127, 9.325247984947827}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.155968832845604, 9.768445156066536}, \
{9.297685673154694, 9.910161996375626}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.33812045915971, 9.40967841279466}, \
{8.4798372994688, 9.55139525310375}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.775808899213528, 8.8376643980384}, \
{7.917525739522619, 8.979381238347491}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.34090309163089, 10.177119598929185}, \
{8.48261993193998, 10.318836439238275}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.099598685588909, 9.497554192202312}, \
{8.241315525897999, 9.639271032511402}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.676048762162244, 9.58083253802197}, \
{7.817765602471335, 9.72254937833106}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.176291360467772, 11.04636898834448}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.092660596705475, 11.0602712672849}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.777515422111531, 10.294794354447658}, \
{7.9192322624206195, 10.436511194756749}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.76927212391352, 11.019264087164265}, \
{7.910988964222611, 11.160980927473355}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.194722344169318, 12.501223557141252}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.076853229425803, 12.515156707671439}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.828551300849844, 11.737359082526048}, \
{7.970268141158934, 11.879075922835138}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.769436363575267, 12.463826330531774}, \
{7.911153203884355, 12.605543170840864}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.077247251813358, 13.962502488765944}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.92502624782792, 13.973266813593868}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.8118020956243175, 13.183117361985548}, \
{7.953518935933408, 13.324834202294639}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.701735681801949, 13.909587923254838}, \
{7.84345252211104, 14.051304763563929}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.544511267628671, 14.835548795687522}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.371064042954673, 14.904126997820214}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.122198717005512, 14.129426000006383}, \
{10.263915557314602, 14.271142840315473}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.954931489271123, 14.289608809172893}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.794493668750187, 14.344465146776724}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.632809480576473, 14.395531136666442}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.469968458076835, 14.442778500826641}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.570901595760688, 13.564864362590702}, \
{9.712618436069778, 13.706581202899793}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{9.337787667257489, 12.88307822345344}, \
{9.47950450756658, 13.02479506376253}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.104673738754292, 12.20129208431618}, \
{9.246390579063382, 12.34300892462527}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.871559810251094, 11.519505945178917}, \
{9.013276650560185, 11.661222785488008}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.638445881747895, 10.837719806041656}, \
{8.780162722056986, 10.979436646350747}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{8.045545986273314, 10.253473243445935}, \
{8.187262826582405, 10.395190083755026}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.706504520287554, 12.319362592074253}, \
{8.848221360596645, 12.461079432383343}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.530271908708174, 11.62070923754298}, \
{8.671988749017265, 11.762426077852071}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.312876548698098, 10.93218183165336}, \
{8.454593389007188, 11.07389867196245}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.431341761490131, 11.644429488422507}, \
{8.573058601799222, 11.786146328731597}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{8.331880859794019, 11.66581530999123}, \
{8.47359770010311, 11.80753215030032}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.188713423033667, 10.959644276718583}, \
{8.330430263342757, 11.101361117027674}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.506787601356617, 10.31074003124714}, \
{7.648504441665706, 10.45245687155623}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.515265441887795, 11.031227761470086}, \
{7.656982282196884, 11.172944601779177}]}}},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{446., Automatic}]}]], "Input",
 CellChangeTimes->{{3.7717143621051307`*^9, 3.7717143655484996`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"502eed6b-bfd5-4965-9489-0b288f98a56e"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{
    {GrayLevel[0.6], Opacity[0.7], Arrowheads[0.013387081391419], 
     ArrowBox[CompressedData["
1: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
T3XwEB7/xp38e0YsNZAnOfh06atlwuPJ/nBGhkGLBuKQyp+9HZ/1wN8pwkYl
lQqpFpVL3mvpg92PpkW3h9WR3zs2VSp4pj5smvH5w0/h+QPpSe45mXf/8XJ9
qHQL5YfUUxC/jE3xZXrpwfEP9jcO6yhDq2KibfkGPmTkBM1wei+H/P4Kq39j
ovmwW3R/hfQkJ5pFZaxN48GUvie9xfmqYPdFJyvrqh60aLLcx69gv/GNp5br
cz3giu4vkX5sj/jJX0PCetH9KdLrqU84HaTJhxKjuNTIIuxJ7uotfDIxmguB
v7Pd7p9RRzzzenfXrZ0cuCuX0Hh3DxV5V6nwy6YlHIgte7WeaqaBxh92pUlt
dGbDT829NrfX0xCT+SOZzBfJg55u8TbqHHDb8brhVLYW6qfzmmyc2Bk2bOjo
uRHSTUNM5pvk1LBRDjWdDXv+edPRp6qJ+KY+dcvKFxxwFd2PIZnsj2Qy/yQL
Ugx4wXM4QF97d+v649rIk8/fkc/rkfWkXyzv5S41yAM369jVH+M1kf9imPju
kpYejIjW+5Dbs+5/vLn9PhfSRPe7yX4o8mESLfVc2HokKn37PdzvzCdS+5y/
Cvf3ozustXQG3O77GOhmrAfSp/7ciXbXRvXKBf1aJTP0QM87d6pmIfYkV+zc
vb16vh5MNmi1Cr+P2c9yluWCfD7c4Dxz3RtCB59D/mnTKAagJlpfQfo6P3ZR
Dt0APorWZ5Ce5MqYyltb+AZww8TeOe025i0n+pZGJRmCs2g9iW9iWMbdCcag
oXa+3OOeNvITY2lfsycZg3LiFTvTVbie5JEPuSH1csZQc2FWvqAX8/5Gv6Ej
CcbQtet1p+CDcD4wNdXxc+tkYJVEZX6KUEV+XZSc144/k2GDa/2EQjM15El2
Upo4FulnBFk7b9zZL0uFxJfu5pqlxlCtXZGW2aSOfGMBU/PBG+HPf7bn1re9
FOTjWGkbvYeMoWj1jPZNLCryOU/NjzBlJ0OKwcnUH1XYo35i3yZsVTKE9dfd
nZt7MDcq3DVZlKsPUm+1JabWaSDfua18F+OLPuzoC80e89JE4xVOxFbpreRD
vmLTzajbNMRk/kgm80Vyoue9o45rOLBgYsin7EwG6mfrEmODD+F8mME0OFqt
rIWYzDfJjlcpF+z19WC5aD0gyf9KesatKeZC4aULayLomMn+SCbzT/I2784E
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
HIp+M9VRF1Q/N1+xEZ7P/w/ryuqH
      "], 0.08030620415473716]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
     Tiny]}], 
     {GrayLevel[0.5], 
      DiskBox[{7.54373465938645, 7.499647530509891}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.224246151967048, 8.904860989865613}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.860642065772758, 9.839303576221086}, 0.08030620415473716]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.396716443512002, 8.145290421378425}, \
{7.538433283821091, 8.287007261687515}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.455920558169556, 8.869764570801243}, \
{7.597637398478646, 9.011481411110333}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.123676266589706, 8.05905399299484}, \
{7.265393106898797, 8.200770833303931}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.015036824648322, 9.59560759410371}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.965864519779344, 9.582586821604918}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.022724437359162, 8.797752633608715}, \
{7.164441277668253, 8.939469473917805}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.749517190266513, 9.46577749395425}, \
{6.8912340305756015, 9.60749433426334}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.4991972487914556, 10.947589333588171}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.418355154704595, 10.922056338643312}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.5083975072780476, 10.14477362182055}, \
{6.650114347587138, 10.28649046212964}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.187726519428178, 10.794461595496406}, \
{6.329443359737269, 10.936178435805497}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.855896878467199, 12.252620425574}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.744525051661233, 12.211589009707374}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.930696575467433, 11.467596092524618}, \
{6.0724134157765235, 11.609312932833708}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.563291124895963, 12.09708991546839}, \
{5.705007965205054, 12.23880675577748}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.34030404376866, 13.26035758642055}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.204808802994065, 13.253975782140095}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.235578856600899, 12.466967121115683}, \
{7.377295696909989, 12.608683961424774}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.12878042083221, 12.526312498042378}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.010616089347123, 12.515156707671443}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.892746974603601, 12.501223557141255}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.77523834713984, 12.484520761994908}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{7.066531193371244, 11.732875965688596}, \
{7.2082480336803325, 11.874592805997686}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.134255367681353, 11.015528156466386}, \
{7.275972207990444, 11.157244996775477}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.201979541991465, 10.298180347244179}, \
{7.343696382300553, 10.43989718755327}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.269703716301574, 9.580832538021971}, \
{7.411420556610665, 9.722549378331061}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.337427890611684, 8.863484728799762}, \
{7.479144730920774, 9.005201569108852}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{7.447442717638381, 9.59025230102419}, \
{7.58915955794747, 9.73196914133328}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.966830878366858, 10.26616627662302}, \
{7.108547718675947, 10.40788311693211}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.093342218583119, 9.5568219850561}, \
{7.23505905889221, 9.69853882536519}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.203178793341509, 8.844402426345185}, \
{7.3448956336506, 8.986119266654276}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.043373928950857, 9.547302210173289}, \
{7.185090769259945, 9.68901905048238}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.900206492190506, 10.253473243445937}, \
{7.0419233324995965, 10.395190083755027}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.607632019304106, 9.409678412794664}, \
{6.749348859613196, 9.551395253103754}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.659089418786332, 8.618095119587888}, \
{6.800806259095422, 8.759811959896979}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.076076348663113, 9.949848640913325}, \
{6.217793188972204, 10.091565481222416}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.403101761116293, 9.30712682083487}, \
{6.5448186014253835, 9.448843661143961}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.070472076304151, 9.07373061461618}, \
{6.21218891661324, 9.21544745492527}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.371635251329212, 10.373903128236822}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.30460439484337, 10.321997037207181}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.57732763047437, 9.599891724868897}, \
{5.7190444707834605, 9.741608565177987}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.040237995605958, 10.086162297394695}, \
{5.1819548359150485, 10.227879137703786}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.31684498940418, 11.37608026869512}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.226524594060761, 11.299077105908605}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.553710346880768, 10.617636934802565}, \
{4.695427187189859, 10.759353775111656}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.980585140109699, 11.067944313820062}, \
{4.122301980418788, 11.209661154129153}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.164985820859741, 12.282919267180715}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.053646103372185, 12.178561363535955}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.48168641166367, 11.587823628600736}, \
{3.6234032519727597, 11.729540468909827}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.873934371920655, 12.000754070722456}, \
{3.0156512122297445, 12.142470911031547}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.20114380832899, 14.686245754108828}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.0329660713207645, 14.605603591875575}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.357497206001481, 13.925854432290864}, \
{4.499214046310572, 14.067571272599954}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.201005367021017, 13.882719298565682}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.051734932964473, 13.80229635690484}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.90439820904058, 13.7183832958703}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.759076783605089, 13.63102658268689}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{4.397035265858195, 13.137758562388557}, \
{4.5387521061672835, 13.279475402697647}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{4.738795374010829, 12.503428623273757}, \
{4.8805122143199196, 12.645145463582848}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.080555482163463, 11.869098684158955}, \
{5.222272322472554, 12.010815524468045}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.4223155903160976, 11.234768745044153}, \
{5.564032430625188, 11.376485585353244}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.764075698468732, 10.600438805929352}, \
{5.905792538777822, 10.742155646238443}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.8453025983407585, 9.80740112882043}, \
{5.987019438649849, 9.94911796912952}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.72335776798476, 11.657228053060239}, \
{4.865074608293851, 11.79894489336933}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.116146121020067, 11.05316534695954}, \
{5.257862961329158, 11.19488218726863}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.508934474055373, 10.449102640858841}, \
{5.650651314364463, 10.590819481167932}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.396107009361417, 9.303049547346257}, \
{4.537823849670508, 9.444766387655347}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.011460855335514, 8.928197459948075}, \
{5.1531776956446045, 9.069914300257166}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.626814701309613, 8.553345372549893}, \
{5.768531541618701, 8.695062212858984}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.242168547283709, 8.17849328515171}, \
{6.3838853875928, 8.3202101254608}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.905781501644235, 7.873286581419311}, \
{7.047498341953325, 8.0150034217284}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.427265462694109, 8.42045229748875}, \
{6.5689823030031995, 8.56216913779784}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.779708379978919, 7.625493869017967}, \
{6.921425220288009, 7.767210709327056}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.67172304310899, 8.580453941093786}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.646809599379951, 8.536105588202693}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.177151278196787, 8.059498709202622}, \
{6.3188681185058755, 8.201215549511712}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.507565699360104, 8.328858257980015}, \
{5.649282539669192, 8.470575098289105}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.342421204084946, 9.15220713320286}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.304422256798652, 9.076421527628078}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.852462186069502, 8.628881307188237}, \
{4.994179026378593, 8.770598147497328}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.162967341102741, 8.85141490993603}, \
{4.304684181411831, 8.993131750245121}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.9580100663522435, 9.599808874967447}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.9098622020056206, 9.49132364992285}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.500985561476908, 9.135940069852166}, \
{3.6427024017859977, 9.277656910161257}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.7934219446597344, 9.310877105355205}, \
{2.935138784968824, 9.452593945664296}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.2691128197591475, 11.366787622596307}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.1793011768363257, 11.265133520397017}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.6930278882773924, 10.768294187413765}, \
{3.834744728586482, 10.910011027722856}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.6483848957233294, 10.70367592218219}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.5740714962727633, 10.611129827957644}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.5019563151736017, 10.516860736792232}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.4320792865230203, 10.42092085060779}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{4.101923070385267, 10.135623920237688}, \
{4.243639910694355, 10.277340760546778}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{4.663748598526373, 9.684484785257297}, \
{4.805465438835462, 9.826201625566387}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.22557412666748, 9.233345650276908}, \
{5.367290966976569, 9.375062490585998}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.787399654808585, 8.782206515296517}, \
{5.929116495117675, 8.923923355605607}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.3492251829496915, 8.331067380316126}, \
{6.490942023258782, 8.472784220625217}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.904460074425211, 8.916283891055452}, \
{6.046176914734302, 9.058000731364542}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.084730208171919, 9.0423409766561}, \
{5.22644704848101, 9.18405781696519}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.6817667159369165, 8.638953010080911}, \
{5.823483556246005, 8.780669850390002}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.269393359374391, 8.221459742217922}, \
{6.411110199683481, 8.363176582527013}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.653787044321435, 8.596472496208278}, \
{5.795503884630525, 8.738189336517369}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.047423979351278, 8.98570029149259}, \
{5.189140819660368, 9.12741713180168}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.4489712977463185, 8.187985248693268}, \
{5.590688138055407, 8.329702089002359}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.055700764636473, 7.690153696580726}, \
{6.197417604945564, 7.831870536889815}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.69113902387819, 8.182930446993486}, \
{4.8328558641872785, 8.324647287302577}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.380062828799307, 7.969808534914643}, \
{5.521779669108398, 8.111525375223733}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.317582298594417, 7.593949693087186}, \
{5.459299138903507, 7.735666533396275}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.9799431559565774, 8.02761646863812}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.9685065907566823, 7.943612998569131}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.599150985048588, 7.649003220664465}, \
{4.740867825357677, 7.790720060973555}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.8752371118337456, 7.619455805299726}, \
{4.016953952142835, 7.761172645608815}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.525175889492923, 8.003250140746655}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5147154645656444, 7.885022223550848}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.155709286354114, 7.657589144288602}, \
{3.2974261266632037, 7.799305984597691}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.431294969116505, 7.5771333476350495}, \
{2.5730118094255947, 7.71885018794414}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.0679842300697633, 7.842847581409768}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.061701597809507, 7.6903758355837954}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{1.7110690733857337, 7.598325381532151}, \
{1.8527859136948233, 7.7400422218412395}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{0.9881499995737824, 7.466940052969539}, \
{1.129866839882872, 7.608656893278628}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.05930266848285193, 10.107977532359206}, 
       0.08030620415473716]}, 
     {GrayLevel[0.5], DiskBox[{0., 9.93114398614787}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{0.6414185131219639, 9.719777904426934}, \
{0.7831353534310534, 9.861494744736024}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.6356801577651128, 9.548117037438903}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.5893916210021599, 9.385000872105246}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.5469540821351986, 9.220840684106674}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.5083910411371173, 9.055727377865802}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.2343655059550271, 9.199131938318937}, \
{1.3760823462641167, 9.340848778628027}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{1.927533365208014, 9.002427179656316}, \
{2.0692502055171036, 9.144144019965406}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.620701224461001, 8.805722420993694}, \
{2.7624180647700904, 8.947439261302785}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.313869083713987, 8.609017662331073}, \
{3.4555859240230764, 8.750734502640164}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.007036942966973, 8.412312903668452}, \
{4.148753783276064, 8.554029743977543}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{4.63257106076264, 7.9181331448248375}, \
{4.7742879010717285, 8.059849985133926}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.52386867438385, 8.401862508917466}, \
{2.6655855146929395, 8.543579349226556}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.2308697550764287, 8.262852023408593}, \
{3.3725865953855183, 8.404568863717683}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.9378708357690084, 8.123841537899718}, \
{4.0795876760780985, 8.265558378208809}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{3.9646023416982943, 6.609414141594687}, \
{4.106319182007384, 6.751130981903778}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.666257121205016, 6.77328913534682}, \
{4.807973961514106, 6.915005975655909}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.3679119007117375, 6.937164129098951}, \
{5.509628741020828, 7.07888096940804}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.069566680218461, 7.101039122851082}, \
{6.21128352052755, 7.242755963160173}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.7568353832448445, 7.348415384927167}, \
{6.898552223553933, 7.490132225236257}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.032025467631666, 7.403356322333799}, \
{6.173742307940756, 7.54507316264289}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.840567885896405, 7.083303091124412}, \
{6.982284726205496, 7.225019931433501}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.450921248953854, 6.95862810595059}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.464231081627491, 6.909533254522025}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.106584694009918, 6.970591351541026}, \
{6.2483015343190065, 7.112308191850117}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.440178699328232, 6.6934587764872635}, \
{5.581895539637321, 6.835175616796352}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.101997641257531, 6.4348436154211734}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.128005796331481, 6.3541531334740915}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.762612852693675, 6.448348665197901}, \
{4.904329693002763, 6.590065505506992}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.114822661207366, 6.123861048482281}, \
{4.256539501516457, 6.26557788879137}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.8007737329445463, 5.783876751484359}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.8424596501520965, 5.672748243887599}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.443211945602459, 5.862875436107668}, \
{3.5849287859115484, 6.004592276416757}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.8158904988184896, 5.491772969612418}, \
{2.9576073391275792, 5.6334898099215085}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7843210981878226, 7.262329611417853}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7914999238580576, 7.126874260248411}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{2.4361814608744834, 7.161855737433207}, \
{2.577898301183573, 7.303572577742296}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.519597897777113, 7.055128108484087}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5314486674770187, 6.9370314525126435}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.546075012483234, 6.8192463476569065}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.563468833393194, 6.701838017934224}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{3.171254436466025, 6.997129730152398}, \
{3.3129712767751145, 7.138846570461489}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.888191403593672, 7.069072960186222}, \
{4.029908243902762, 7.210789800495313}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.605128370721319, 7.141016190220048}, \
{4.746845211030408, 7.282733030529137}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.322065337848965, 7.212959420253872}, \
{5.463782178158056, 7.354676260562961}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.039002304976611, 7.284902650287696}, \
{6.1807191452857015, 7.426619490596787}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.311600081831546, 7.390639928323026}, \
{5.453316922140637, 7.532356768632116}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.638525290041041, 6.906059937904587}, \
{4.78024213035013, 7.0477767782136755}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.347113027338757, 7.036742231017277}, \
{5.488829867647846, 7.178459071326365}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.058874077846747, 7.150768139337597}, \
{6.200590918155836, 7.2924849796466855}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.356926605839849, 6.986830811887021}, \
{5.4986434461489395, 7.1285476521961115}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.65161006137583, 6.8395113790642466}, \
{4.793326901684921, 6.981228219373335}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.497111534079526, 6.551906097342137}, \
{5.638828374388616, 6.693622937651227}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.278803223701912, 6.622013177204968}, \
{6.4205200640110025, 6.7637300175140584}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.960077848217306, 6.017181750986371}, \
{5.101794688526397, 6.1588985912954595}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.600864622954447, 6.347982699771446}, \
{5.742581463263537, 6.489699540080537}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.819712719977018, 6.03608656952267}, \
{5.961429560286108, 6.1778034098317605}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.631592462732006, 5.378612663749839}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.682307476793188, 5.310676183446713}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.268658213558723, 5.571852389245112}, \
{5.410375053867812, 5.713569229554201}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.772984559978685, 5.043428341027898}, \
{4.914701400287775, 5.185145181336988}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.6109559623987098, 4.341673585647152}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.6863531144583814, 4.2500082685669796}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.23300622412804, 4.566356187162409}, \
{4.374723064437131, 4.7080730274714995}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7726541898193315, 4.001267483734512}, \
{3.914371030128421, 4.142984324043601}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6839296367306575, 3.205998145720482}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.786306310141713, 3.0928340105688177}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{3.24405103990325, 3.5116215370743924}, \
{3.3857678802123394, 3.653338377383482}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.8204590101694236, 2.911251747537468}, \
{2.962175850478513, 3.0529685878465576}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.37692559478518195, 4.114835060585218}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.45855576763059336, 3.9471346597625243}, 
       0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{0.9942514340563124, 4.275241116118961}, \
{1.135968274365402, 4.4169579564280514}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.1804389593064517, 4.119423846856367}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.261738681849951, 3.970629132087455}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3465170871616987, 3.823788626702841}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.4347272288286854, 3.678983644275088}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.7821010592124122, 4.319414937276937}, \
{1.9238178995215018, 4.4611317775860275}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.414409412547912, 4.664900956507871}, \
{2.5561262528570015, 4.806617796816962}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.0467177658834106, 5.010386975738806}, \
{3.1884346061925, 5.152103816047896}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.6790261192189098, 5.35587299496974}, \
{3.8207429595279994, 5.497589835278831}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.3113344725544085, 5.7013590142006745}, \
{4.453051312863499, 5.843075854509765}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.103880559849452, 5.787250027062633}, \
{5.245597400158543, 5.928966867371724}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.2606861597306067, 4.654441898836325}, \
{3.4024030000396963, 4.796158739145415}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.8624275996593638, 5.0507772147676135}, \
{4.004144439968453, 5.192494055076704}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.464169039588121, 5.447112530698902}, \
{4.605885879897212, 5.588829371007993}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.544607409665481, 4.385576925759974}, \
{5.686324249974572, 4.527293766069063}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.9302611755787655, 4.994219362679047}, \
{6.071978015887856, 5.1359362029881375}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.315914941492052, 5.602861799598122}, \
{6.45763178180114, 5.744578639907212}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.701568707405336, 6.211504236517197}, \
{6.843285547714425, 6.353221076826287}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.018439636622185, 6.869627400837944}, 
       {7.1601564769312755, 7.011344241147032}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.462914058681578, 6.400842532664861}, \
{6.604630898990669, 6.542559372973949}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.263968757112906, 6.739200749739689}, \
{7.405685597421996, 6.88091759004878}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.430058419912685, 5.647002064623726}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.473960181270838, 5.6213098200303655}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.819397294343254, 6.144397020176195}, \
{6.961114134652345, 6.286113860485285}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.538262529262775, 5.479669513774692}, \
{6.679979369571866, 5.621386354083782}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.834934118623273, 4.3279978349358865}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.910037297164822, 4.288667305062013}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{6.226724625939733, 4.82996298158114}, \
{6.368441466248822, 4.9716798218902305}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.992057145610783, 4.144502903047231}, \
{6.133773985919873, 4.286219743356321}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.362969336125143, 2.9517018051550323}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.4705879283168795, 2.90164684027853}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.695893326886559, 3.487645661585608}, \
{5.837610167195649, 3.629362501894698}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.508496114430352, 2.783279618254705}, \
{5.650212954739443, 2.9249964585637946}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.601756280284664, 3.293940595601695}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.7018095111652687, 3.2023489000786185}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{4.0671826981555785, 3.708466648500258}, \
{4.208899538464669, 3.8501834888093476}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.2714582792216875, 3.6614506872346118}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.362678441118414, 3.5855155638880736}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.455660126819172, 3.5117479082498337}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.550351847308551, 3.440188569482064}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{4.706970807818532, 4.106132477625149}, \
{4.848687648127623, 4.247849317934238}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{5.167955046387428, 4.659908583080181}, \
{5.309671886696519, 4.80162542338927}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.628939284956324, 5.2136846885352135}, \
{5.770656125265413, 5.355401528844304}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.0899235235252185, 5.767460793990248}, \
{6.231640363834309, 5.909177634299336}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.5509077620941145, 6.32123689944528}, \
{6.692624602403205, 6.46295373975437}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{5.957932968406414, 5.886869243819618}, \
{6.099649808715505, 6.0285860841287064}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.817428529086422, 5.069491763710738}, \
{5.959145369395513, 5.211208604019827}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.2312904566227925, 5.659316100371889}, \
{6.373007296931883, 5.8010329406809795}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.659089418786332, 6.239483101122804}, \
{6.80080625909542, 6.381199941431895}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.273270555608491, 5.630591069967304}, \
{6.41498739591758, 5.772307910276394}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.873401994400686, 5.03119172317129}, \
{6.015118834709774, 5.17290856348038}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.67807949589983, 5.418598043460031}, \
{6.8197963362089205, 5.560314883769122}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.186541365711205, 6.01644704381005}, \
{7.328258206020296, 6.158163884119139}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.669758922115518, 4.660794589793936}, \
{6.8114757624246085, 4.802511430103026}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.895006099624798, 5.345849819260319}, \
{7.036722939933886, 5.487566659569408}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.2697037163015725, 5.276745682688722}, \
{7.411420556610661, 5.41846252299781}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.9529524452412685, 3.945728924942662}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.036740994058963, 3.9328116073330195}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.201979541991461, 4.559397873466512}, \
{7.34369638230055, 4.701114713775603}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.218746375469085, 3.835075280361214}, \
{7.360463215778175, 3.9767921206703036}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.951640546218464, 2.4907582048145898}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.069665439215672, 2.4782128659544327}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.167920402716522, 3.1163325143623877}, \
{7.309637243025611, 3.2580493546714773}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.235578856600892, 2.390611099595009}, \
{7.3772956969099805, 2.5323279399040985}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.086300904613369, 1.0309626365204538}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.238638024575146, 1.0219900881037427}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.201679230510747, 1.6708713837721043}, \
{7.343396070819836, 1.812588224081194}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.3202856729792725, 0.9457461506932989}, \
{7.462002513288363, 1.0874629910023885}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.803722042853811, 0.062414275713426726}, 
       0.08030620415473716]}, 
     {GrayLevel[0.5], DiskBox[{4.979481445851299, 0.}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{5.061679409347256, 0.638827831692335}, \
{5.203396249656347, 0.7805446720014246}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.373667528389013, 0.6288213090752848}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.535941366595482, 0.5796612291063683}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.699327029125763, 0.5343331218399587}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.863734040454082, 0.492862087913859}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{5.592708900160913, 1.222493864814441}, \
{5.734425740470002, 1.3642107051235306}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{5.801616382279912, 1.912082225430098}, \
{5.943333222589002, 2.0537990657391876}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.010523864398911, 2.601670586045753}, \
{6.152240704708001, 2.743387426354843}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.21943134651791, 3.2912589466614093}, \
{6.361148186827, 3.432975786970499}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.4283388286369085, 3.9808473072770654}, \
{6.570055668945999, 4.122564147586155}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{6.933481347451114, 4.597562478375666}, \
{7.075198187760202, 4.739279318684757}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.412611929296233, 2.497725603464652}, \
{6.554328769605323, 2.6394424437737416}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.564078259287044, 3.20216324730618}, \
{6.705795099596132, 3.3438800876152697}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.7155445892778545, 3.9066008911477073}, \
{6.857261429586943, 4.048317731456796}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.230207889185948, 3.906600891147706}, \
{8.371924729495039, 4.0483177314567955}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{8.07874155919514, 4.611038534989234}, \
{8.220458399504231, 4.752755375298323}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.927275229204332, 5.315476178830762}, \
{8.06899206951342, 5.457193019139851}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.775808899213523, 6.01991382267229}, \
{7.917525739522613, 6.161630662981379}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.540600413542014, 6.711441301133137}, \
{7.682317253851105, 6.853158141442227}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.472876239231905, 5.987713896243482}, \
{7.614593079540995, 6.129430736552573}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.807149168468449, 6.790481933549767}, \
{7.948866008777538, 6.932198773858856}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.047734845066156, 5.39761189773108}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.097056948464651, 5.410053207908909}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.906889665431391, 6.0546238660684235}, \
{8.048606505740482, 6.196340706377514}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.172218024741488, 5.383430692943556}, \
{8.313934865050578, 5.525147533252646}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.547631305781927, 4.039654379808127}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.628768224885162, 4.0642344197925855}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.405331953244682, 4.701644553806291}, \
{8.547048793553772, 4.843361394115382}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.718336519474004, 4.048228539993312}, \
{8.860053359783095, 4.189945380302403}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.175532158908808, 2.727144556549047}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.287379051725384, 2.766862732003043}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.967428575522423, 3.372116425920906}, \
{9.109145415831513, 3.513833266229996}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.327401973673402, 2.738343287599609}, \
{9.469118813982492, 2.8800601279086986}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.6793707182776565, 1.7369426774769599}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.814931668107596, 1.7417298039266482}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.650878027897466, 2.3881678114335183}, \
{7.792594868206557, 2.529884651742608}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.899516468654383, 2.4684481685181057}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.017803879557217, 2.478212865954432}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.135828772554417, 2.490758204814587}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.253525790844922, 2.50607723806227}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{7.828551300849819, 3.1202191381846416}, \
{7.970268141158909, 3.261935978493731}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.769272123913501, 3.838314133546426}, \
{7.9109889642225895, 3.9800309738555155}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.709992946977181, 4.556409128908209}, \
{7.851709787286271, 4.698125969217299}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.650713770040863, 5.274504124269994}, \
{7.792430610349951, 5.416220964579084}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.591434593104543, 5.9925991196317785}, \
{7.733151433413633, 6.134315959940867}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{7.472876239231905, 5.267176289187551}, \
{7.614593079540995, 5.408893129496642}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.945502010548044, 4.585654225901562}, \
{8.087218850857134, 4.727371066210651}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.827345567719009, 5.296437947015008}, \
{7.969062408028099, 5.4381547873240965}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.725898919664427, 6.010100527221509}, \
{7.867615759973516, 6.151817367530599}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.877422408067494, 5.305369136370585}, \
{8.019139248376584, 5.447085976679675}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{8.01227113101269, 4.597562478375666}, \
{8.153987971321781, 4.739279318684755}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.314753435575419, 5.43785647088364}, \
{8.45647027588451, 5.579573311192728}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.258452945302517, 6.220663698153947}, \
{8.400169785611608, 6.362380538463038}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.839916671842442, 4.89146935389614}, \
{8.981633512151532, 5.03318619420523}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.520476157158496, 5.53799446243686}, \
{8.662192997467587, 5.67971130274595}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.836186047061062, 5.751303981803138}, \
{8.977902887370153, 5.893020822112227}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.613044297068297, 4.550525847204126}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.681865239442086, 4.6000339869185805}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{9.290622649670782, 5.192142272285736}, \
{9.432339489979872, 5.3338591125948245}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.810216510778158, 4.687219936587285}, \
{9.951933351087249, 4.828936776896374}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.63180919195372, 3.5117479082498266}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.724790877654478, 3.5855155638880674}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.277684565087409, 4.138906101833673}, \
{10.4194014053965, 4.280622942142761}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.83456074392543, 3.668652808727974}, \
{10.97627758423452, 3.8103696490370638}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.750947148169704, 2.56482301772738}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.865900451135262, 2.6651865712746945}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.314801387453075, 3.131490479924064}, \
{11.456518227762166, 3.2732073202331535}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{11.907601915721402, 2.697368808583614}, \
{12.049318756030493, 2.8390856488927034}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.801536665352904, 0.2742178744320318}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.970651595939916, 0.35287567638082074}, 
       0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.511595194738684, 0.8955179979926737}, \
{10.653312035047774, 1.0372348383017633}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.811129383829691, 1.0776870796141305}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.961335740912793, 1.1563481393618762}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.109649586438477, 1.238521828911468}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.255988790965654, 1.3241626442226666}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{10.481332602360792, 1.6840245191051317}, \
{10.623049442669883, 1.8257413594142213}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{10.147059673124248, 2.322331695910711}, \
{10.288776513433339, 2.4640485362198006}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.812786743887706, 2.9606388727162902}, \
{9.954503584196797, 3.10235571302538}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.478513814651164, 3.5989460495218695}, \
{9.620230654960254, 3.740662889830959}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.14424088541462, 4.237253226327448}, \
{9.28595772572371, 4.378970066636539}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.07235048406312, 5.031191723171288}, 
       {9.21406732437221, 5.172908563480377}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{10.172452600624895, 3.1682920519218247}, \
{10.314169440933986, 3.3100088922309143}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.786798834711611, 3.776934488840899}, \
{9.928515675020702, 3.9186513291499887}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.401145068798327, 4.385576925759974}, \
{9.542861909107417, 4.527293766069063}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{10.481583438875688, 5.447112530698901}, \
{10.623300279184779, 5.588829371007991}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.879841998946931, 5.843447846630189}, \
{10.021558839256022, 5.98516468693928}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.278100559018174, 6.239783162561478}, \
{9.419817399327265, 6.381500002870569}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.676359119089419, 6.636118478492769}, \
{8.81807595939851, 6.777835318801857}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.023930745650201, 6.964554930077787}, \
{8.165647585959292, 7.106271770386877}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.48283841978223, 6.400842532664859}, \
{8.62455526009132, 6.5425593729739475}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.158670299176126, 7.207743978024618}, \
{8.300387139485217, 7.349460818333709}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.376436888553776, 6.353448364639445}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.402899931053874, 6.396889859367772}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.745535379247903, 6.752744373624639}, \
{8.887252219556993, 6.894461213933729}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.405197755165318, 6.459921963787879}, \
{9.546914595474409, 6.601638804096968}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.684732648154695, 5.735138331298664}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.725382509426446, 5.809535688683123}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.049304927143124, 6.13696624826539}, \
{10.191021767452215, 6.27868308857448}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.730516723141568, 5.890237987662305}, \
{10.872233563450658, 6.031954827971395}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.052484863231081, 5.238957521852464}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.104431336859978, 5.345675958739634}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.3820448199235, 5.582527763123698}, \
{11.52376166023259, 5.724244603432787}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.08299388458745, 5.382728746657843}, \
{12.224710724896541, 5.524445586966934}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.67921664077533, 3.4840587635606717}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.772559858715105, 3.582479957228936}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.132513957114183, 3.9579679553884266}, \
{11.274230797423273, 4.099684795697517}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.323583010340958, 4.1601424534514635}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.401116204314514, 4.250008268566976}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.47651335637419, 4.3416735856471504}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.549732715017011, 4.435087644621432}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{10.746201351144494, 4.604674617939997}, \
{10.887918191453585, 4.746391458249086}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{10.20064716582573, 5.075360366675888}, \
{10.34236400613482, 5.217077206984978}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.655092980506964, 5.54604611541178}, \
{9.796809820816055, 5.687762955720869}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.109538795188199, 6.016731864147671}, \
{9.251255635497289, 6.158448704456761}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.563984609869435, 6.487417612883563}, \
{8.705701450178525, 6.629134453192652}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{8.987819510057392, 5.886869243819614}, \
{9.129536350366482, 6.028586084128705}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.802589996555458, 5.731961216947301}, \
{9.944306836864548, 5.873678057256392}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.22016155722457, 6.156168190299313}, \
{9.36187839753366, 6.297885030608402}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.647634917192883, 6.594139590327373}, \
{8.789351757501974, 6.735856430636462}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{9.249622998768743, 6.19763479788581}, \
{9.391339839077833, 6.339351638194898}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.841871918614356, 5.7872500270626315}, \
{9.983588758923446, 5.92896686737172}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.468727270837656, 6.598639335751235}, \
{9.610444111146746, 6.740356176060326}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.87994496288177, 7.117573140884161}, \
{9.021661803190861, 7.259289981193252}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{10.226265853735038, 6.5769459782843676}, \
{10.367982694044128, 6.718662818593458}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.545292589718304, 6.814248258276637}, \
{9.687009430027395, 6.955965098585727}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.62099880719309, 7.187667934070806}, \
{9.76271564750218, 7.3293847743798946}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.08667334587503, 6.8462360649464316}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.101067392238775, 6.929783592955834}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.33703966318015, 7.107294208642626}, \
{10.47875650348924, 7.249011048951715}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{11.061545354667144, 7.111275237479763}, \
{11.203262194976235, 7.252992077788852}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.541394306289664, 6.819246347656889}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.55602065129588, 6.93703145251263}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.779279177754193, 7.047772462904646}, \
{11.920996018063283, 7.189489303213735}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.506081632819248, 7.102612498876539}, \
{12.647798473128338, 7.244329339185628}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.003339067169883, 6.928122559333835}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.01499873685589, 7.08027760146571}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{13.225110974760296, 7.056015840093851}, \
{13.366827815069387, 7.197732680402941}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{13.95221649558036, 7.161806451376778}, \
{14.093933335889451, 7.303523291685867}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.931452531040431, 4.628805794389138}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.996958972366583, 4.803436306326911}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{14.219226044183854, 4.898135315895583}, \
{14.360942884492944, 5.039852156204674}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.375192385496387, 5.20865873643829}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.427208695644286, 5.370039700332447}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.475413251916311, 5.532599943883665}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.519779360828434, 5.69624944864554}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{13.645022778729905, 5.439382919378803}, \
{13.786739619038995, 5.581099759687893}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{12.959228718785683, 5.6604280517095305}, \
{13.100945559094773, 5.802144892018619}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{12.273434658841461, 5.8814731840402565}, \
{12.415151499150552, 6.023190024349347}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.587640598897238, 6.102518316370984}, \
{11.729357439206328, 6.244235156680073}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.901846538953016, 6.3235634487017105}, \
{11.043563379262107, 6.465280289010801}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{10.294142417087977, 6.839511379064241}, \
{10.435859257397068, 6.981228219373332}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{12.384459695778956, 6.281664154090414}, \
{12.526176536088046, 6.423380994399503}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.682804916272236, 6.445539147842547}, \
{11.824521756581326, 6.587255988151636}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.981150136765514, 6.60941414159468}, \
{11.122866977074604, 6.751130981903771}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{11.007881642694803, 8.12384153789971}, \
{11.149598483003894, 8.2655583782088}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{10.300880562002224, 7.984831052390836}, \
{10.442597402311314, 8.126547892699927}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.593879481309644, 7.845820566881965}, \
{9.735596321618734, 7.987537407191054}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.886878400617064, 7.706810081373092}, \
{9.028595240926155, 7.848526921682181}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.191307552777735, 7.483842637932625}, \
{8.333024393086825, 7.625559478241714}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.913727010832144, 7.4033563223337975}, \
{9.055443851141234, 7.545073162642888}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.116983411209711, 7.751744825877832}, \
{8.258700251518801, 7.893461666186921}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.654337744861252, 7.966471484716658}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.642768832561828, 8.016005476588917}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.854487139556174, 7.838483011741145}, \
{8.996203979865264, 7.9801998520502355}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.530258419064575, 8.091924507347516}, \
{9.671975259373665, 8.233641347656606}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.020906178578597, 8.44232420130756}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.997761910197122, 8.523882283974384}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.216052479008798, 8.31296963967824}, \
{10.357769319317889, 8.45468647998733}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.874890780551725, 8.614393656650478}, \
{11.016607620860816, 8.756110496959568}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.344293078996014, 9.046963456824956}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.306555017234201, 9.159493895323072}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.55529368881569, 8.851514565909506}, \
{11.69701052912478, 8.993231406218596}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.195321102698282, 9.20024676647715}, \
{12.337037943007372, 9.34196360678624}]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.307935761304782, 7.5335594795002825}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.305541825232623, 7.669183801686693}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{12.51585393983274, 7.517803868430743}, \
{12.65757078014183, 7.659520708739834}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.580429437743874, 7.766580903432011}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.572753854207257, 7.885022223550842}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.562293429279979, 8.003250140746644}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.549053955468127, 8.121199185792817}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{11.7870522908782, 7.708369063051441}, \
{11.928769131187291, 7.850085903360531}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{11.06802294893715, 7.661772404268758}, \
{11.20973978924624, 7.8034892445778485}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{10.348993606996101, 7.615175745486075}, \
{10.490710447305192, 7.756892585795166}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.629964265055053, 7.568579086703394}, \
{9.771681105364143, 7.710295927012483}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.910934923114004, 7.521982427920712}, \
{9.052651763423095, 7.6636992682298}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.634152396632263, 7.390639928323024}, \
{9.775869236941354, 7.532356768632113}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{10.323909441975802, 7.851164260857926}, \
{10.465626282284893, 7.992881101167015}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.61115114128983, 7.745570473232281}, \
{9.75286798159892, 7.887287313541371}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.895809332372837, 7.656734685376961}, \
{9.037526172681927, 7.798451525686051}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{9.603105123083855, 7.795797136207458}, \
{9.744821963392946, 7.937513976516547}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{10.313181417701172, 7.918133144824829}, \
{10.454898258010262, 8.05984998513392}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.478356651191406, 8.235398251069569}, \
{9.620073491500497, 8.37711509137866}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.694677725343459, 8.192921887602303}, \
{8.836394565652549, 8.334638727911393}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{10.03392700347311, 8.750836792509718}, \
{10.1756438437822, 8.892553632818808}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.381864949255908, 8.442856215451396}, \
{9.523581789564998, 8.584573055760487}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{9.174160451994917, 8.762281523547236}, \
{9.315877292304007, 8.903998363856326}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.528917198211438, 9.516587363385826}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.48063135428891, 9.586271330579805}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{9.741255189582587, 9.206778994611199}, \
{9.882972029891677, 9.34849583492029}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.255268927562714, 9.717380818692693}, \
{10.396985767871804, 9.859097659001783}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.585513003599308, 10.516860736792218}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.51339782250015, 10.611129827957628}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.811747465228875, 10.175099160360162}, \
{10.953464305537965, 10.316816000669252}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{11.291755536463276, 10.723589351506567}, \
{11.433472376772366, 10.865306191815657}]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.552041498381906, 11.619112605517117}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{12.45372232725536, 11.735819269132886}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.837309721782043, 11.194275100242455}, \
{11.979026562091134, 11.335991940551546}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{12.281825808812636, 11.779321713952545}, \
{12.423542649121726, 11.921038554261635}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.825534235270617, 10.629424289587387}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.749873305583062, 10.799901071800333}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{14.058758589739844, 10.351732487066023}, \
{14.200475430048934, 10.493449327375114}]}, 
     {GrayLevel[0.5], 
      DiskBox[{14.022359464562054, 10.653195524746252}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.946361569989463, 10.804766735895821}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.866818192741455, 10.95450772281921}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{13.783773380311324, 11.10233556578953}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{13.26984078703216, 10.335390550057717}, \
{13.411557627341251, 10.477107390366807}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{12.625733615054354, 10.012434834535233}, \
{12.767450455363445, 10.154151674844323}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{11.981626443076548, 9.689479119012747}, \
{12.123343283385639, 9.831195959321837}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.337519271098742, 9.36652340349026}, \
{11.479236111407833, 9.508240243799351}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.693412099120936, 9.043567687967775}, \
{10.835128939430026, 9.185284528276865}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.898328499112537, 8.985700291492583}, \
{10.040045339421628, 9.127417131801673}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{11.780353161050593, 10.052753722142613}, \
{11.922070001359684, 10.194470562451704}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{11.164999315076495, 9.677901634744432}, \
{11.306716155385585, 9.819618475053522}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{10.549645469102396, 9.303049547346252}, \
{10.691362309411486, 9.444766387655342}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{9.507343290345846, 10.402054133436696}, \
{9.649060130654936, 10.543770973745787}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.100449880123058, 9.807401128820425}, \
{9.242166720432149, 9.949117969129516}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.69355646990027, 9.212748124204156}, \
{8.835273310209361, 9.354464964513246}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{8.286663059677482, 8.618095119587887}, \
{8.428379899986572, 8.759811959896977}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.946763391421291, 7.971564763983732}, \
{8.088480231730381, 8.113281604292823}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.518487015769704, 8.420452297488746}, \
{8.660203856078795, 8.562169137797836}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.689882952331651, 8.115871732498805}, \
{7.831599792640741, 8.257588572807895}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.722099718492377, 9.311835648811982}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.679132022120866, 9.339061246162986}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.171276184516305, 8.689318875634333}, \
{8.312993024825396, 8.831035715943424}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.475695026941544, 9.343710640772079}, \
{8.617411867250635, 9.48542748108117}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.3634028845594, 10.609015413190086}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.289734522597453, 10.650971943707358}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{8.80996795617809, 9.982017817577656}, \
{8.95168479648718, 10.123734657886747}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.06868014289814, 10.658769138248832}, \
{9.21039698320723, 10.800485978557923}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.883645164042278, 11.967797768148932}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.77786012451918, 12.021619569560771}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{9.387840923631387, 11.30476514382753}, \
{9.529557763940478, 11.44648198413662}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.599979508086676, 12.002078889009203}, \
{9.741696348395767, 12.143795729318294}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.631682985885345, 11.56361638416954}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.534924486954697, 11.65868204875527}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{11.00774387115806, 11.026602132272034}, \
{11.149460711467151, 11.168318972581124}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.949428200462787, 11.21996999236497}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.860944724712153, 11.299077105908593}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.770624329368731, 11.376080268695109}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.678517029746782, 11.450936839886081}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{10.354320100397798, 10.651763083178793}, \
{10.496036940706889, 10.793479923487883}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{9.874079456870149, 10.114600754374885}, \
{10.01579629717924, 10.256317594683976}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.3938388133425, 9.577438425570977}, \
{9.53555565365159, 9.719155265880067}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.913598169814852, 9.04027609676707}, \
{9.055315010123943, 9.18199293707616}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.433357526287203, 8.50311376796316}, \
{8.575074366596294, 8.644830608272251}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{9.041292404038602, 8.916283891055446}, \
{9.183009244347693, 9.058000731364537}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.210555765677704, 9.728193588536884}, \
{9.352272605986794, 9.869910428845975}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.776135884066255, 9.153342468991498}, \
{8.917852724375345, 9.295059309300589}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.328128471254166, 8.588634527791864}, \
{8.469845311563256, 8.730351368100955}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.73519568444218, 9.183531144638737}, \
{8.87691252475127, 9.325247984947827}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{9.155968832845604, 9.768445156066536}, \
{9.297685673154694, 9.910161996375626}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.33812045915971, 9.40967841279466}, \
{8.4798372994688, 9.55139525310375}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.775808899213528, 8.8376643980384}, \
{7.917525739522619, 8.979381238347491}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.34090309163089, 10.177119598929185}, \
{8.48261993193998, 10.318836439238275}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.099598685588909, 9.497554192202312}, \
{8.241315525897999, 9.639271032511402}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.676048762162244, 9.58083253802197}, \
{7.817765602471335, 9.72254937833106}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.176291360467772, 11.04636898834448}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.092660596705475, 11.0602712672849}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.777515422111531, 10.294794354447658}, \
{7.9192322624206195, 10.436511194756749}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.76927212391352, 11.019264087164265}, \
{7.910988964222611, 11.160980927473355}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.194722344169318, 12.501223557141252}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.076853229425803, 12.515156707671439}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.828551300849844, 11.737359082526048}, \
{7.970268141158934, 11.879075922835138}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.769436363575267, 12.463826330531774}, \
{7.911153203884355, 12.605543170840864}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.077247251813358, 13.962502488765944}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.92502624782792, 13.973266813593868}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{7.8118020956243175, 13.183117361985548}, \
{7.953518935933408, 13.324834202294639}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.701735681801949, 13.909587923254838}, \
{7.84345252211104, 14.051304763563929}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.544511267628671, 14.835548795687522}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.371064042954673, 14.904126997820214}, 0.08030620415473716]}, 
     {GrayLevel[0], 
      RectangleBox[{10.122198717005512, 14.129426000006383}, \
{10.263915557314602, 14.271142840315473}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.954931489271123, 14.289608809172893}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.794493668750187, 14.344465146776724}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.632809480576473, 14.395531136666442}, 0.08030620415473716]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.469968458076835, 14.442778500826641}, 0.08030620415473716]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.570901595760688, 13.564864362590702}, \
{9.712618436069778, 13.706581202899793}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{9.337787667257489, 12.88307822345344}, \
{9.47950450756658, 13.02479506376253}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.104673738754292, 12.20129208431618}, \
{9.246390579063382, 12.34300892462527}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.871559810251094, 11.519505945178917}, \
{9.013276650560185, 11.661222785488008}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.638445881747895, 10.837719806041656}, \
{8.780162722056986, 10.979436646350747}]}, 
     {Hue[0.5, 0.67, 0.6], 
      RectangleBox[{8.045545986273314, 10.253473243445935}, \
{8.187262826582405, 10.395190083755026}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.706504520287554, 12.319362592074253}, \
{8.848221360596645, 12.461079432383343}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.530271908708174, 11.62070923754298}, \
{8.671988749017265, 11.762426077852071}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.312876548698098, 10.93218183165336}, \
{8.454593389007188, 11.07389867196245}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{8.431341761490131, 11.644429488422507}, \
{8.573058601799222, 11.786146328731597}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{8.331880859794019, 11.66581530999123}, \
{8.47359770010311, 11.80753215030032}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.188713423033667, 10.959644276718583}, \
{8.330430263342757, 11.101361117027674}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.506787601356617, 10.31074003124714}, \
{7.648504441665706, 10.45245687155623}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.515265441887795, 11.031227761470086}, \
{7.656982282196884, 11.172944601779177}]}}},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{446., Automatic}], " ", 
  GraphicsBox[{
    {GrayLevel[0.6], Opacity[0.7], Arrowheads[0.015807869077320166`], 
     ArrowBox[CompressedData["
1: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
xXhVtg==
      "], 0.07098292005859753]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7], Thickness[
     Tiny]}], 
     {GrayLevel[0.5], 
      DiskBox[{5.5332173286084565, 5.614396636018807}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.505828366954222, 8.020509641737572}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.451064637436041, 8.019262721031156}, 0.07098292005859753]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.286029056335169, 7.347004760450592}, \
{5.411293041260096, 7.47226874537552}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.362125020264227, 8.61736274825834}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.293812241106759, 8.612690026151247}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.170086850197749, 7.939196446027841}, \
{5.295350835122677, 8.064460430952769}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.027127580242243, 8.526730738819008}, \
{5.152391565167171, 8.651994723743936}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.102586009049869, 9.803290242105389}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.007344978199032, 9.79240229034393}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.938436029061493, 9.121723957871541}, \
{5.063700013986421, 9.24698794279647}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.755097708579891, 9.701505651293772}, \
{4.880361693504819, 9.8267696362187}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.734993367981708, 10.969335607491605}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.6133046645948985, 10.949777931681215}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.652885190356162, 10.294325795256261}, \
{4.77814917528109, 10.41958978018119}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.429460695377387, 10.864823307066587}, \
{4.554724680302315, 10.990087291991514}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.8238826567224784, 9.357454095517246}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.739898959185787, 9.249284695683029}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.1941144339747904, 8.872055218551223}, \
{1.3193784188997177, 8.99731920347615}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.1458811069545982, 8.78674809159255}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.0748050684233954, 8.686056284767076}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.0060395142924525, 8.583772650787191}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.9396200809567006, 8.479950196132982}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.5388868675218792, 8.327060476050018}, \
{1.6641508524468065, 8.452324460974946}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.030349176099893, 7.98014849698831}, \
{2.155613161024821, 8.105412481913238}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.521811484677907, 7.6332365179265995}, \
{2.647075469602835, 7.758500502851527}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.0132737932559213, 7.28632453886489}, \
{3.138537778180849, 7.411588523789818}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.954231080514561, 7.9019791516812505}, \
{5.079495065439489, 8.027243136606177}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.4890687760637435, 6.916946709666684}, \
{3.6143327609886713, 7.042210694591612}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{2.8830097030191593, 7.085234692850378}, \
{3.008273687944087, 7.2104986777753055}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.367894472180473, 8.557847249821778}, \
{5.493158457105401, 8.683111234746706}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.566965388790988, 9.664640032774932}, \
{4.692229373715915, 9.78990401769986}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.696053952698845, 9.077086405743705}, \
{4.821317937623773, 9.202350390668633}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.825142516606704, 8.489532778712478}, \
{4.950406501531631, 8.614796763637406}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.900866477876692, 7.889616301391333}, \
{5.0261304628016195, 8.014880286316261}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.063281532931183, 7.3099033495778105}, \
{5.18854551785611, 7.435167334502738}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.306758550633547, 6.743693027405822}, \
{5.432022535558475, 6.86895701233075}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.256281999526855, 6.113865347953026}, \
{5.381545984451782, 6.239129332877954}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.026566210127546, 7.3465204023432955}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.987268815108385, 7.334538583164783}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.054802466916562, 6.680771770873401}, \
{5.18006645184149, 6.806035755798328}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.8085229168379255, 7.230639698664387}, \
{4.933786901762853, 7.355903683589315}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.55827902619537, 8.459844466452791}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.493760155534879, 8.43691445431145}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.587835443735237, 7.790264717033735}, \
{4.713099428660165, 7.915528701958663}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.303739612888733, 8.324046935702983}, \
{4.429003597813661, 8.44931092062791}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.988405016889634, 9.531771764604244}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.8996333160482934, 9.495591845024101}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.070370468237281, 8.87850339413231}, \
{4.195634453162209, 9.003767379057237}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7490761955056557, 9.394768579956823}, \
{3.8743401804305835, 9.52003256488175}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.2886510150255006, 9.168733317145213}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.208583662220905, 9.093955629678842}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.5963741509561795, 8.629293366318747}, \
{2.7216381358811073, 8.754557351243674}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.555611497030189, 8.592002467597075}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.4886032091559294, 8.523451094107918}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.4231727326228514, 8.453392160403894}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.359353975487577, 8.381861973148453}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.889466721405612, 8.074782496750618}, \
{3.0147307063305395, 8.200046481675546}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.3196531571956758, 7.65427952121824}, \
{3.4449171421206035, 7.779543506143168}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.749839592985739, 7.233776545685861}, \
{3.8751035779106666, 7.3590405306107884}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.180026028775802, 6.813273570153481}, \
{4.30529001370073, 6.938537555078408}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.987147198920072, 5.90977398623454}, \
{5.1124111838449995, 6.0350379711594675}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.528718401768797, 6.30037613545603}, \
{4.653982386693725, 6.425640120380958}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.083712199841594, 6.706550771599666}, \
{4.208976184766522, 6.831814756524594}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.0034941746541355, 7.294972590010316}, \
{5.128758159579063, 7.4202365749352435}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.346833868239463, 6.683051368517948}, \
{3.472097853164391, 6.808315353442875}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.877771735216095, 6.400229687277546}, \
{4.003035720141023, 6.525493672202474}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.402340048476014, 6.105284736460167}, \
{4.527604033400942, 6.2305487213850945}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.858870679700787, 6.36375230597727}, \
{3.9841346646257145, 6.489016290902198}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.384065021104188, 6.068490966554148}, \
{4.509329006029116, 6.193754951479076}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.810723999530797, 6.557804157848788}, \
{4.935987984455725, 6.683068142773716}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.568234503913306, 7.1146821312354165}, \
{4.693498488838234, 7.239946116160344}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.241401521113944, 8.330697423623317}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.179904557906914, 8.30058773009415}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.2674508931690776, 7.6356546271284405}, \
{4.392714878094005, 7.760918612053368}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.9077619703819257, 8.121718179450612}, \
{4.0330259553068535, 8.24698216437554}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.55346555992565, 9.330961704855234}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.4693776376122685, 9.284933205291285}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.5951972972291126, 8.635708886629466}, \
{3.7204612821540404, 8.760972871554394}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.2012990506444265, 9.098962513838226}, \
{3.3265630355693543, 9.224226498763153}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.7729712398791952, 10.272032775647109}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6676637684942865, 10.207993883670564}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.877115295572774, 9.605705066735638}, \
{3.002379280497702, 9.730969051660566}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.449871819883862, 10.044850746914264}, \
{2.57513580480879, 10.170114731839192}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.903979977224882, 11.147613964627261}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.778966646805023, 11.063567176244996}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.1142369847436253, 10.544082536176255}, \
{2.239500969668553, 10.669346521101183}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.008382377970965, 10.489214660078652}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8983292689442353, 10.407715005441476}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7901598691100178, 10.323731307904785}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.6839302351307182, 10.237307090366805}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.150294761151114, 9.828235545727544}, \
{2.2755587460760416, 9.953499530652472}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.519215936150545, 9.353072112152967}, \
{2.644479921075473, 9.478336097077895}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.8881371111499763, 8.87790867857839}, \
{3.013401096074904, 9.003172663503317}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.257058286149407, 8.40274524500381}, \
{3.382322271074335, 8.528009229928738}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{3.27458308677429, 6.53548415249368}, \
{3.399847071699218, 6.660748137418608}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.6259794611488383, 7.927581811429233}, \
{3.751243446073766, 8.05284579635416}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.9949006361482686, 7.452418377854655}, \
{4.120164621073196, 7.577682362779583}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.347668098296461, 6.964565045122137}, \
{4.472932083221389, 7.089829030047064}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.70311999901635, 8.725627996677225}, \
{2.828383983941278, 8.850891981602153}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.09847219003487, 8.272218946231385}, \
{3.223736174959798, 8.397482931156313}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.4938243810533907, 7.818809895785545}, \
{3.6190883659783184, 7.944073880710473}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.889176572071911, 7.365400845339704}, \
{4.014440556996838, 7.490664830264632}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.823583649117216, 6.289554275259346}, \
{3.948847634042144, 6.414818260184274}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.367056827817098, 6.031094716869897}, \
{4.492320812742026, 6.156358701794825}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.884539100805504, 5.68753257796128}, \
{5.009803085730431, 5.8127965628862075}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.854342273500413, 6.2764590553268755}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.8397066376328706, 6.238070939862954}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.323824038048675, 5.915730319223059}, \
{4.449088022973603, 6.040994304147986}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7384615698215047, 6.058415762037255}, \
{3.8637255547464324, 6.1836797469621825}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.687769498174473, 6.589334938431897}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6663140833651635, 6.524310825185595}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.161086981046675, 6.227299468197558}, \
{3.286350965971603, 6.352563453122486}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.5652387587227055, 6.330249912709441}, \
{2.690502743647633, 6.4555138976343684}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.491595207184651, 6.796582579140936}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.4657321202158542, 6.7042760128331444}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.9841694432380483, 6.485946966540061}, \
{2.109433428162976, 6.611210951464988}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.3793449349347597, 6.548772645527626}, \
{1.504608919859687, 6.674036630452553}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.7209913171709248, 5.669174559327278}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.7209913171709239, 5.559618712710341}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.2596147857267879, 5.5517646435563455}, \
{1.3848787706517152, 5.677028628481273}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3247016798368465, 5.470629426467081}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3290647714731083, 5.374867404336889}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.335606582423039, 5.279229513516432}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3443237225218745, 5.183765316460222}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.8649225270046064, 5.3874840979308765}, \
{1.9901865119295337, 5.512748082855804}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{2.4658663285281706, 5.414864188868454}, \
{2.5911303134530983, 5.540128173793382}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.066810130051735, 5.442244279806032}, \
{3.1920741149766627, 5.56750826473096}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.6677539315752994, 5.46962437074361}, \
{3.793017916500227, 5.594888355668537}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.87217196384791, 5.4902458836194015}, \
{4.9974359487728375, 5.615509868544329}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.270255677250468, 5.46965984556544}, \
{4.395519662175396, 5.594923830490368}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.6800114842923692, 5.326390779095162}, \
{3.805275469217297, 5.451654764020089}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.8072159608580094, 6.2518720775107}, \
{3.932479945782937, 6.3771360624356275}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.099304760296033, 5.1429145706614285}, \
{3.2245687452209606, 5.268178555586356}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.692124904258523, 5.245127088885157}, \
{3.8173888891834507, 5.370391073810085}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.2873486895617505, 5.333857493472986}, \
{4.412612674486678, 5.459121478397914}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.6995657816425784, 5.204723096633474}, \
{3.824829766567506, 5.329987081558402}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.295478082083538, 5.2935875157406285}, \
{4.420742067008466, 5.418851500665556}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.276869434910243, 5.702013886530465}, \
{4.402133419835171, 5.827277871455393}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.97288996836002, 6.558669148977055}, \
{4.098153953284948, 6.6839331339019825}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.3731358679902916, 6.731101609839881}, \
{3.4983998529152194, 6.856365594764808}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.6856056789883933, 5.2856899900140935}, \
{3.810869663913321, 5.410953974939021}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.6856056789883933, 5.817839297098595}, \
{3.810869663913321, 5.943103282023523}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5954491934523225, 6.259839455558099}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.581518071102767, 6.192799214223592}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.0906124599358606, 5.9065308482793455}, \
{3.2158764448607884, 6.031794833204273}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.486295583056621, 5.92738775099165}, \
{2.6115595679815486, 6.0526517359165775}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3834763208710292, 6.329884263584915}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.3682647952407256, 6.235237494284061}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.8894376324387465, 6.002512372478711}, \
{2.014701617363674, 6.127776357403639}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.2816917300594117, 5.982395963114936}, \
{1.406955714984339, 6.1076599480398635}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.16149577304758722, 6.2905182294023625}, 
       0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.1474969779257087, 6.168065475451283}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{0.6832783577613287, 6.043914723051878}, \
{0.8085423426862562, 6.169178707976806}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{0.07365723390759997, 5.982693801059407}, \
{0.1989212188325274, 6.107957785984334}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.7901598691100165, 0.9050619641328286}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8983292689442344, 0.821078266596138}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.150294761151113, 1.2752937413851415}, \
{2.2755587460760407, 1.4005577263100688}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.360865873034713, 1.2270604143649484}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.461557679860184, 1.1559843758337491}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5638413138400717, 1.0872188217028027}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6676637684942817, 1.0207993883670516}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.695289503652313, 1.620066174932232}, \
{2.8205534885772408, 1.7453301598571593}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.042201482714023, 2.1115284835102455}, \
{3.1674654676389506, 2.236792468435173}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.389113461775733, 2.6029907920882596}, \
{3.5143774467006605, 2.7282547770131873}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{3.7360254408374427, 3.0944531006662737}, \
{3.8612894257623704, 3.2197170855912014}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{3.132733678311001, 4.982045785287044}, \
{3.257997663235929, 5.107309770211971}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.082937419899153, 3.5859154092442873}, \
{4.208201404824081, 3.711179394169215}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.068212446354365, 5.688638490231726}, \
{3.1934764312792927, 5.813902475156654}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.6677539315752994, 5.633904916369077}, \
{3.793017916500227, 5.759168901294005}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{1.2620696873743829, 5.695531853108074}, \
{1.3873336722993101, 5.820795838033002}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{1.8632862086274697, 5.674993680314969}, \
{1.988550193552397, 5.800257665239897}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{2.464502729880557, 5.654455507521865}, \
{2.5897667148054846, 5.779719492446793}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.0657192511336437, 5.6339173347287606}, \
{3.1909832360585715, 5.759181319653688}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.7171965927697492, 5.124475499854368}, \
{3.842460577694677, 5.249739484779296}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.304977597098256, 5.253618560990433}, \
{4.430241582023184, 5.378882545915361}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.936462692311003, 5.275004597104432}, \
{5.061726677235931, 5.400268582029359}]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.8010935622839677, 5.107745517537897}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{3.81307538146248, 5.068448122518736}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.341578208828935, 5.135981774326912}, \
{4.4668421937538625, 5.26124575925184}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{3.7917102810379477, 4.889702224248277}, \
{3.9169742659628755, 5.014966209173204}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.687769498174471, 4.639458333605723}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.710699510315812, 4.574939462945231}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.2320852626686, 4.669014751145588}, \
{3.3573492475935276, 4.794278736070516}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.6983030439993527, 4.384918920299085}, \
{2.8235670289242805, 4.5101829052240126}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.6158422000230184, 4.069584324299988}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.6520221196031608, 3.9808126234586454}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.143846585570025, 4.151549775647633}, \
{2.2691105704949526, 4.276813760572561}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.6275813997455104, 3.8302555029160104}, \
{1.7528453846704377, 3.955519487840938}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.9788806474820473, 2.369830322435854}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.0536583349484214, 2.289762969631256}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.3930566133835884, 2.677553458366531}, \
{2.518320598308516, 2.8028174432914588}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.5556114970301853, 2.6367908044405417}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6241628705193456, 2.5697825165662795}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.6942218042233668, 2.504352040033204}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.76575199147881, 2.4405332828979276}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{2.947567482951714, 2.9706460288159646}, \
{3.0728314678766417, 3.0959100137408924}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{3.3680704584840933, 3.4008324646060277}, \
{3.493334443409021, 3.5260964495309555}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{3.7885734340164734, 3.8310189003960904}, \
{3.913837418941401, 3.956282885321018}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.209076409548853, 4.261205336186154}, \
{4.334340394473781, 4.386469321111082}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.10709653017957, 5.072432806614076}, \
{5.232360515104498, 5.197696791539004}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.71130169377982, 4.618479671903777}, \
{4.836565678704748, 4.743743656828705}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{4.3157992081026695, 4.164891507251944}, \
{4.441063193027597, 4.290155492176872}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.7273773896920197, 5.084673482064486}, \
{3.8526413746169474, 5.209937466989413}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{4.291248369862455, 3.4543151754006423}, \
{4.416512354787383, 3.57957916032557}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{4.586082611433339, 3.9786775424395673}, \
{4.711346596358267, 4.103941527364495}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.892891989846773, 4.4963960418256566}, \
{5.018155974771701, 4.621660026750584}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.622120292424788, 3.9589510426264463}, \
{4.747384277349716, 4.084215027551374}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.929260227865375, 4.477288205926206}, \
{5.0545242127903025, 4.602552190851133}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.464545821853546, 4.891903306941147}, \
{4.589809806778474, 5.017167291866075}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.9076678484669185, 4.649413811323657}, \
{4.032931833391846, 4.774677796248585}]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.816916541003945, 4.322580828524297}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{2.8470262345331117, 4.261083865317264}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{3.3866953525738936, 4.348630200579429}, \
{3.5119593374988214, 4.473894185504356}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{2.9006318002517224, 3.9889412777922786}, \
{3.02589578517665, 4.114205262717206}]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8166522597720278, 3.6346448673360037}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{1.8626807593359773, 3.550556945022619}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{2.386641093072868, 3.676376604639466}, \
{2.511905077997796, 3.8016405895643937}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{1.9233874658641106, 3.2824783580547767}, \
{2.048651450789038, 3.4077423429797045}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.8755811889801528, 2.85415054728955}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.9396200809566979, 2.748843075904637}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{1.4166449129666987, 2.9582946029831247}, \
{1.541908897891626, 3.0835585879080525}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{0.9774992327880688, 2.5310511272942136}, \
{1.1027632177129962, 2.6563151122191413}]}, 
     {GrayLevel[0.5], DiskBox[{0., 1.985159284635237}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.08404678838226687, 1.860145954215373}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{0.47826744352607714, 2.1954162921539777}, \
{0.6035314284510046, 2.3206802770789055}]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.6583993045486096, 2.0895616853813195}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.7398989591857834, 1.9795085763545903}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.8238826567224748, 1.871339176520372}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{0.9103068742604528, 1.7651095425410723}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{1.194114433974787, 2.231474068561468}, \
{1.3193784188997142, 2.3567380534863958}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{1.6692778675493656, 2.6003952435608984}, \
{1.7945418524742929, 2.725659228485826}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.1444413011239436, 2.969316418560329}, \
{2.2697052860488713, 3.094580403485257}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{2.619604734698522, 3.33823759355976}, \
{2.7448687196234496, 3.4635015784846876}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{4.437132690150381, 3.3787240134727354}, \
{4.562396675075309, 3.503987998397663}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.0947681682731005, 3.7071587685591902}, \
{3.2200321531980283, 3.832422753484118}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{3.5699316018476788, 4.076079943558621}, \
{3.6951955867726065, 4.201343928483548}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.057784934580198, 4.428847405706812}, \
{4.183048919505126, 4.55411139063174}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{2.2967219830251073, 2.7842993064267034}, \
{2.421985967950035, 2.909563291351631}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{2.750131033470948, 3.1796514974452235}, \
{2.8753950183958756, 3.304915482370151}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{3.203540083916789, 3.575003688463743}, \
{3.3288040688417166, 3.700267673388671}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.6569491343626295, 3.9703558794822627}, \
{3.782213119287557, 4.09561986440719}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.695495851649285, 3.921984170993637}, \
{4.820759836574212, 4.047248155918565}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.9662596267454875, 4.459433161489177}, \
{5.091523611670415, 4.584697146414105}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.321512294863037, 4.968960774032475}, \
{5.446776279787965, 5.094224758957402}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.8331098946541, 3.9510272607308234}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.871154909300389, 3.9355215809107627}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.080610015180756, 4.413585511382749}, \
{5.205874000105684, 4.538849496307677}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.924636822645921, 3.831622696410366}, \
{5.0499008075708485, 3.956886681335294}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.493760155534879, 2.7918788177261624}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.558279026195372, 2.7689488055848215}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.742653984812564, 3.2582420473617075}, \
{4.8679179697374915, 3.3835060322866353}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.626166805344479, 2.664891699682194}, \
{4.751430790269406, 2.7901556846071216}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.259337463774959, 1.6007320926781938}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.351031385486337, 1.5727745145949985}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.457283099184176, 2.0875171109073642}, \
{4.582547084109104, 2.212781095832292}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.3807059593316655, 1.484279435163738}, 
       {4.505969944256593, 1.6095434200886654}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.3689119462636254, 0.8046644659941089}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.478439405299985, 0.802170624581275}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.374730180340563, 1.3418852194393847}, \
{5.499994165265491, 1.467149204364312}]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.581148011503368, 1.4036988760109663}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.676984538160186, 1.4058809872471967}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.772746560290381, 1.4102440788834585}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{5.868384451110838, 1.41678588983339}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{5.55274689826493, 1.943296565741807}, \
{5.678010883189858, 2.0685605506667346}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{5.539053304578441, 2.5447079120442293}, \
{5.664317289503368, 2.669971896969157}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.525359710891951, 3.146119258346652}, \
{5.650623695816879, 3.27138324327158}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.511666117205461, 3.747530604649075}, \
{5.636930102130389, 3.872794589574003}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.518466353646333, 4.952105965529855}, \
{5.6437303385712605, 5.0773699504547825}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.525345518021148, 4.349877040509214}, \
{5.650609502946076, 4.475141025434142}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.655141615956816, 3.7565245266620932}, \
{5.7804056008817435, 3.881788511587021}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{4.732795704442991, 3.9047629565275654}, \
{4.858059689367919, 4.030026941452493}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.825351540868993, 3.1717917673462104}, \
{5.95061552579392, 3.297055752271138}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.736659989688242, 3.7667849863987435}, \
{5.86192397461317, 3.8920489713236712}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.661501773286791, 4.363874327951894}, \
{5.786765758211719, 4.489138312876822}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.777222890817178, 3.773304211668873}, \
{5.902486875742106, 3.898568196593801}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.701946367427905, 4.371084940554066}, \
{5.827210352352833, 4.496348925478994}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.293202233784491, 4.361778205451277}, \
{5.418466218709419, 4.487042190376204}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.446698786563236, 4.065627223494656}, \
{4.571962771488164, 4.1908912084195835}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{4.243809296710763, 3.4817041370548774}, \
{4.369073281635691, 3.606968121979805}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.6959592006071755, 3.7611907917027194}, \
{5.821223185532103, 3.886454776627647}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.163947781474805, 3.7733042116688735}, \
{5.289211766399733, 3.8985681965938013}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.821068755771829, 2.692082063725068}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.887774509069167, 2.6766285008626722}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.061735263251076, 3.180484067706384}, \
{5.186999248176003, 3.3057480526313117}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{5.027127580242242, 2.5767985482936773}, \
{5.15239156516717, 2.702062533218605}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.723453719121761, 1.48201767551084}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.817729701042356, 1.4646556282813776}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.938436029061492, 1.9818053292411448}, \
{5.06370001398642, 2.1070693141660723}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.944712985736568, 1.3737589892312212}, \
{5.069976970661496, 1.4990229741561485}]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.73499336798171, 0.2594576645460087}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{4.857095735224915, 0.24267508045793473}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{4.869588364249507, 0.7769010386133469}, \
{4.994852349174435, 0.9021650235382744}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{4.9169164967135295, 0.1660442928735943}, \
{5.042180481638457, 0.2913082777985217}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.156127782956451, 1.765109542541063}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.242552000494435, 1.8713391765203662}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.670367708582539, 2.1349882529085664}, \
{9.795631693507467, 2.260252237833494}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.847203861088854, 2.3429973823210024}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.920553550262312, 2.4420451804450596}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.991629588793515, 2.5427369872705334}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.06039514292446, 2.645020621250422}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.338090433953358, 2.6876899021307628}, \
{9.463354418878286, 2.8129538870556905}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.854652296727437, 3.04569924480896}, \
{8.979916281652365, 3.170963229733888}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.371214159501516, 3.4037085874871575}, \
{8.496478144426444, 3.5289725724120853}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.887776022275597, 3.7617179301653554}, \
{8.013040007200525, 3.886981915090283}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.986939591777424, 3.201550135431435}, \
{6.112203576702352, 3.326814120356363}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.404337885049676, 4.119727272843553}, \
{7.529601869974604, 4.244991257768481}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.279061266144633, 3.15312993145039}, \
{5.404325251069561, 3.2783939163753177}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.347428139159635, 3.7512701552130565}, \
{5.4726921240845625, 3.8765341401379843}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.231056104464066, 1.3476120864209948}, \
{5.356320089388994, 1.4728760713459221}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.265274566132914, 1.948205308868902}, \
{5.390538551057841, 2.0734692937938295}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.29949302780176, 2.5487985313168084}, \
{5.424757012726688, 2.674062516241736}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.333711489470606, 3.149391753764715}, \
{5.458975474395534, 3.274655738689643}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.857851027869566, 3.789103762462662}, \
{5.983115012794494, 3.9143677473875895}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.742121204955866, 4.379672172875365}, \
{5.867385189880793, 4.504936157800293}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.735115330453517, 5.0114804552989}, \
{5.860379315378445, 5.136744440223827}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.000308490100314, 3.8711886895648338}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.0398684470893675, 3.882272869694318}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.860560657111226, 4.413585511382749}, \
{5.985824642036154, 4.538849496307677}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.09425963999014, 3.8582539525807564}, \
{6.219523624915068, 3.983517937505684}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.443131517775244, 2.7474933907755132}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.508155631021546, 2.768948805584823}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.302151074604855, 3.2937503889222275}, \
{6.427415059529783, 3.4190143738471552}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.574022701659442, 2.753639551709604}, \
{6.69928668658437, 2.8789035366345317}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.98845737091147, 1.6628716904091063}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.078029640327285, 1.6970215074333725}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.794710174762132, 2.194014533340256}, \
{6.91997415968706, 2.319278518265184}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.104169348706164, 1.6705694345510513}, \
{7.229433333631092, 1.7958334194759786}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.696034856756619, 1.9871242324520835}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.777783642191409, 2.0600599548923975}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.273997374424468, 2.409607117248481}, \
{8.399261359349396, 2.5348711021734087}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.442271786697564, 2.5697825165662755}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.510823160186725, 2.636790804440538}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.577831448060987, 2.7053421779296984}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.643261924594063, 2.775401111633722}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{7.993603189340268, 2.970646028815962}, \
{8.118867174265196, 3.0959100137408897}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.573100213807889, 3.400832464606025}, \
{7.698364198732817, 3.526096449530953}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.15259723827551, 3.8310189003960886}, \
{7.277861223200437, 3.9562828853210164}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.73209426274313, 4.261205336186152}, \
{6.857358247668058, 4.38646932111108}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.94151880333459, 5.177458897606498}, \
{6.066782788259518, 5.302722882531426}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.386344755734976, 4.771433192625765}, \
{6.511608740659904, 4.896697177550693}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.830812487483512, 4.36570807050078}, \
{6.95607647240844, 4.490972055425708}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.897874479847968, 3.7983759001800994}, \
{6.023138464772896, 3.923639885105027}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.540645842647458, 4.324988604121113}, \
{7.665909827572386, 4.450252589046041}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.0231307160220915, 4.631682613979921}, \
{7.148394700947019, 4.7569465989048485}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.512530327932041, 4.950197422067884}, \
{6.637794312856968, 5.075461406992812}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.043672437262767, 4.667261918843687}, \
{7.168936422187695, 4.792525903768615}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.532461070099257, 4.9861212810755395}, \
{6.657725055024184, 5.111385266000467}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.107375016171364, 4.530965255189285}, \
{6.232639001096292, 4.656229240114213}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.337125355594819, 3.9687117409603125}, \
{6.462389340519747, 4.09397572588524}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.762866714780125, 2.8693938243041774}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.825033136102969, 2.8980958484142967}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.625972028744427, 3.4410274400949685}, \
{6.751236013669355, 3.5662914250198963}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.974503389867137, 2.9469021640912207}, \
{7.099767374792065, 3.0721661490161485}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.427855207590619, 1.853729104313326}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.512969097291267, 1.897831567182381}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.275287000611367, 2.425929668198196}, \
{7.400550985536294, 2.5511936531231236}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.658538048215691, 1.95382969330437}, \
{7.783802033140619, 2.0790936782292975}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.18672550274642, 0.895135332668481}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.293463417337726, 0.956760496390511}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.971102721368506, 1.4398389861255165}, \
{8.096366706293434, 1.5651029710504438}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.388239131790876, 0.9910816674796444}, \
{8.513503116715803, 1.1163456524045718}]}, 
     {GrayLevel[0.5], DiskBox[{9.03556056874801, 0.}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.162454679992045, 0.08117930741036261}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.712422886862528, 0.48433911458223394}, \
{8.837686871787456, 0.6096030995071614}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.946172493884308, 0.6606052358131818}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.058052279245942, 0.7395786119589598}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.168105388272677, 0.8210782665961371}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.276274788106894, 0.9050619641328277}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{8.69266942024976, 1.2008214085230497}, \
{8.817933405174688, 1.326085393447977}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.334660077571565, 1.6842595457489706}, \
{8.459924062496492, 1.809523530673898}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.976650734893369, 2.1676976829748917}, \
{8.101914719818296, 2.2929616678998195}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.618641392215171, 2.6511358202008135}, 
       {7.7439053771400985, 2.7763998051257412}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.619538211406267, 4.469114426995106}, \
{7.744802196331195, 4.594378411920034}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.260632049536975, 3.1345739574267353}, \
{7.3858960344619025, 3.259837942351663}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.902622706858779, 3.6180120946526566}, \
{7.027886691783706, 3.7432760795775843}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.561051754045259, 4.113769132729542}, \
{6.686315738970187, 4.239033117654469}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.16508630158041, 2.315727325512743}, \
{8.290350286505337, 2.4409913104376706}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.780157592232635, 2.778018370947543}, \
{7.905421577157563, 2.9032823558724705}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.395228882884862, 3.2403094163823427}, \
{7.520492867809789, 3.3655734013072705}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.010300173537088, 3.702600461817143}, \
{7.1355641584620155, 3.827864446742071}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.0822999925911985, 4.739776981135416}, \
{7.207563977516126, 4.865040966060343}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.551153712660878, 5.022704654941292}, \
{6.676417697585806, 5.14796863986622}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.049844813219011, 5.389463749564854}, \
{6.175108798143938, 5.514727734489782}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.180219015637233, 4.876607004315804}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.19658670389644, 4.91428920206445}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.59959246346305, 5.13598177432691}, \
{6.724856448387977, 5.261245759251838}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.1778540344063835, 4.96680166210849}, \
{7.303118019331311, 5.092065647033418}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.331342420455197, 4.510959270505361}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.3557351469011, 4.574939462945229}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.74694360049318, 4.771814001625873}, \
{7.872207585418108, 4.8970779865508005}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.337488581389287, 4.641850454389559}, \
{8.462752566314215, 4.767114439314486}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.516844291216035, 4.2494830126404874}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.546881871949068, 4.3405167711853085}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.910869230437946, 4.459867616556202}, \
{9.036133215362874, 4.585131601481129}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.5122074575698, 4.369578700434223}, \
{9.637471442494729, 4.494842685359151}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.337963108191712, 5.340648942668039}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.342949498633153, 5.450091253673971}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.677191946810943, 5.360104006993294}, \
{9.80245593173587, 5.485367991918221}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.743915088616298, 5.566465953123894}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.743915088616298, 5.662327318913717}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.741732977380067, 5.758163845570536}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.737369885743805, 5.853925867700731}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.079988665076739, 5.551764643556342}, \
{9.205252650001666, 5.67702862848127}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.478421443588282, 5.551764643556342}, \
{8.60368542851321, 5.67702862848127}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.876854222099824, 5.551764643556342}, \
{8.00211820702475, 5.67702862848127}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.275287000611366, 5.551764643556343}, \
{7.400550985536293, 5.6770286284812705}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.0711785585939, 5.585983105225188}, \
{6.1964425435188275, 5.711247090150116}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.673408028750838, 5.579151830929321}, \
{6.798672013675766, 5.704415815854249}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{7.269561370225457, 5.6954076960573605}, \
{7.394825355150385, 5.820671680982288}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.100365808708698, 4.776675159059635}, \
{7.225629793633626, 4.9019391439845625}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.858017138617491, 5.852263129504585}, \
{7.983281123542419, 5.977527114429512}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.261159187999616, 5.777138508017524}, \
{7.386423172924544, 5.902402492942452}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.662513719995472, 5.715591429068787}, \
{6.7877777049204, 5.840855413993714}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.255564993303592, 5.81783929709859}, \
{7.38082897822852, 5.943103282023518}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.656225624070973, 5.7561896800038}, \
{6.7814896089959005, 5.881453664928728}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.656225624070972, 5.347339607108883}, \
{6.7814896089959, 5.472603592033811}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.933030743363945, 4.4943141583650945}, \
{7.058294728288873, 4.619578143290022}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.512184112880105, 4.2781852835055965}, \
{7.6374480978050325, 4.403449268430524}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.265825453040242, 5.736320923367166}, \
{7.39108943796517, 5.861584908292094}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.241604890649406, 5.204723096633471}, \
{7.366868875574334, 5.329987081558399}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.438563906031744, 4.835911366865708}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.455531900902194, 4.902248063182179}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.831944742150544, 5.089042580992515}, \
{7.957208727075471, 5.214306565917442}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.43468605595844, 5.040702052437696}, \
{8.559950040883368, 5.165966037362624}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.646092717827045, 4.710776688663801}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.665596289116422, 4.8046330265321116}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.027506199920932, 4.938489534213968}, \
{9.15277018484586, 5.063753519138896}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.635537869513724, 4.930923785291092}, \
{9.760801854438652, 5.056187770216019}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.868598624270867, 4.694483972005249}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.888156300081254, 4.81617267539206}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{10.230531088566257, 4.842232234110342}, \
{10.355795073491185, 4.96749621903527}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.842306891706865, 4.875643050172801}, \
{10.967570876631793, 5.000907035097729}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.486739238793666, 10.148487140477204}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.3825044220862, 10.237307090366802}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.982076865333593, 9.67268203170677}, \
{9.10734085025852, 9.797946016631698}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.901969042157056, 9.852797840716182}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.804616582306265, 9.928383168499202}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.705568784182205, 10.00173285767266}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.60487697735673, 10.072808896203863}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{8.421954736141448, 9.353072112152962}, \
{8.547218721066375, 9.47833609707789}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{8.053033561142016, 8.877908678578384}, \
{8.178297546066943, 9.003172663503312}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.684112386142585, 8.402745245003807}, \
{7.809376371067513, 8.528009229928735}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{7.315191211143152, 7.92758181142923}, \
{7.44045519606808, 8.052845796354157}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{7.8319447421505455, 6.0144867061201674}, \
{7.957208727075473, 6.139750691045095}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.946270036143721, 7.452418377854652}, \
{7.071534021068649, 7.57768236277958}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{7.864238825338324, 5.305689603808575}, \
{7.989502810263252, 5.4309535887335025}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.267809837431878, 5.387654346189634}, \
{7.393073822356806, 5.5129183311145615}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{9.66819608233141, 5.216597521053959}, \
{9.793460067256337, 5.341861505978887}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{9.068537404304921, 5.2644785385543}, \
{9.193801389229849, 5.389742523479228}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{8.468878726278433, 5.31235955605464}, \
{8.59414271120336, 5.437623540979568}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.869220048251945, 5.3602405735549805}, \
{7.994484033176873, 5.485504558479908}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.241604890649407, 5.8988061904792115}, \
{7.366868875574335, 6.024070175404139}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.648555124607226, 5.796549580490726}, \
{6.773819109532154, 5.921813565415654}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.016751077179576, 5.803927498256595}, \
{6.1420150621045035, 5.929191483181523}]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.2866060719847, 6.0416857797207815}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{7.276425275062429, 6.081487797510664}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.617346634243311, 5.915730319223056}, \
{6.7426106191682385, 6.040994304147984}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{7.1778540344063835, 6.136727625004195}, \
{7.303118019331311, 6.261991609929122}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.420090272482604, 6.458815166820324}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.40012057385175, 6.524310825185594}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.74694360049318, 6.331715285486812}, \
{7.872207585418108, 6.45697927041174}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.293103154438636, 6.591221816629924}, \
{8.418367139363564, 6.716485801554851}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.516844291216033, 6.979310259397131}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.484742274218156, 7.069636678321819}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.857606718097164, 6.7991132512446395}, \
{8.982870703022092, 6.924377236169567}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.387960464731426, 7.096576955275172}, \
{9.513224449656354, 7.221840940200099}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.231545692086856, 8.693826310800997}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.160489732175183, 8.777214164166967}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.675743304707442, 8.282924721813357}, \
{8.80100728963237, 8.408188706738285}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.643261924594064, 8.45339216040389}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.577831448060987, 8.523451094107914}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.510823160186725, 8.592002467597075}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.442271786697564, 8.659010755471336}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{8.108467098513767, 8.015374230861894}, \
{8.233731083438695, 8.140638215786822}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{7.668820138119139, 7.604772632977637}, \
{7.794084123044067, 7.730036617902565}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{7.22917317772451, 7.194171035093378}, \
{7.354437162649438, 7.319435020018306}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.789526217329881, 6.783569437209119}, \
{6.9147902022548084, 6.908833422134046}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.855514045493767, 6.014055688991142}, \
{5.980778030418695, 6.13931967391607}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.271560204225559, 6.449523936787159}, \
{6.396824189150487, 6.574787921712087}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{6.687297703739603, 6.884640898978743}, \
{6.81256168866453, 7.009904883903671}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.233246217239674, 5.9390303352799165}, \
{7.358510202164601, 6.064294320204844}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{6.744164696196739, 7.593363420290455}, \
{6.869428681121667, 7.718627405215383}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{6.425769856184052, 7.082963726106927}, \
{6.55103384110898, 7.208227711031855}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.0957146824516215, 6.579746057914049}, \
{6.220978667376549, 6.7050100428389765}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.3906673657224164, 7.104310023432441}, \
{6.515931350647344, 7.2295740083573685}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.060253819287762, 6.600489377634193}, \
{6.18551780421269, 6.725753362559121}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.505615589396727, 6.165152663273956}, \
{6.630879574321654, 6.2904166481988835}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.072953267650962, 6.382044782912075}, \
{7.19821725257589, 6.507308767837003}]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.305499620755096, 6.781242359276065}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{8.278220140323086, 6.844046022190475}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{7.607075911485952, 6.658804829363986}, \
{7.732339896410879, 6.784068814288914}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{8.10900684047271, 6.995998009304388}, \
{8.234270825397637, 7.121261994229315}]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.33603843125477, 7.422938766511124}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{9.293884860313938, 7.509034515000969}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{8.636691141338051, 7.284844682453997}, \
{8.76195512626298, 7.410108667378925}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{9.117392807397161, 7.657249918765949}, \
{9.242656792322089, 7.782513903690877}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.311658131398147, 8.15979176718242}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.252478631958782, 8.26790481015677}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{9.638365303290186, 7.958033529510178}, \
{9.763629288215114, 8.083297514435106}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{10.096501700755672, 8.36484670193167}, \
{10.2217656856806, 8.490110686856598}]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.225883721487484, 8.98803074446569}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{11.147613964627263, 9.116739876158363}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{10.610492407934526, 8.677411375084484}, \
{10.735756392859454, 8.802675360009411}]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.563414900070686, 8.913703319094783}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.487008728814084, 9.027351801294655}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.408035352668303, 9.139231586656294}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{10.326535698031126, 9.249284695683027}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{9.893746113348126, 8.673972455111723}, \
{10.019010098273053, 8.799236440036651}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{9.40228380477011, 8.327060476050015}, \
{9.527547789695038, 8.452324460974943}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.910821496192096, 7.980148496988306}, \
{9.036085481117023, 8.105412481913234}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.41935918761408, 7.633236517926596}, \
{8.544623172539008, 7.758500502851524}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{6.601872061107599, 7.675516111462871}, \
{6.727136046032527, 7.800780096387799}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.927896879036066, 7.286324538864887}, \
{8.053160863960994, 7.411588523789815}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{7.436434570458052, 6.939412559803179}, \
{7.561698555382979, 7.064676544728107}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.933030743363947, 6.609215128747588}, \
{7.058294728288875, 6.734479113672516}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{8.767119606466181, 8.171904865205246}, \
{8.89238359139111, 8.297168850130173}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{8.296186139277582, 7.797599119255404}, \
{8.42145012420251, 7.9228631041803315}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{7.825252672088984, 7.42329337330556}, \
{7.950516657013912, 7.548557358230488}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.354319204900386, 7.048987627355716}, \
{7.479583189825314, 7.174251612280644}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.319050379867198, 7.144578244486239}, \
{6.444314364792126, 7.269842229411167}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.024105429049817, 6.620009931226321}, \
{6.149369413974744, 6.745273916151249}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.691272809248682, 6.11138966192569}, \
{5.81653679417361, 6.236653646850618}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.308306813105166, 7.244177108581511}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.2710069603114595, 7.261398323047583}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{5.911960282351373, 6.671014680295038}, \
{6.037224267276301, 6.796278665219965}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.09425963999014, 7.245275334531929}, \
{6.219523624915068, 7.3705393194568565}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.700063051865718, 8.386678928165445}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.636654694121902, 8.412521727865547}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.302151074604856, 7.809778898190457}, \
{6.427415059529784, 7.9350428831153845}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.445523638559078, 8.397212473990328}, \
{6.570787623484006, 8.522476458915255}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.988457370911465, 9.565921581628508}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.898130951986776, 9.598023598626385}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.640511299041695, 8.966302040077125}, \
{6.765775283966622, 9.091566025002052}]}, 
     {Hue[0.08, 1, 0.92], 
      RectangleBox[{6.744465200979491, 9.565429186896957}, \
{6.8697291859044185, 9.690693171821884}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.672655045147062, 10.290099951688788}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.565925839871321, 10.314825652268622}, 0.07098292005859753]}, 
     {GrayLevel[0], 
      RectangleBox[{6.420960876980551, 9.654088290939766}, \
{6.546224861905479, 9.779352275864694}]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.342980938095156, 9.74677559652677}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.248704956174562, 9.764137643756236}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.154058186873708, 9.779349169386538}, 0.07098292005859753]}, 
     {GrayLevel[0.5], 
      DiskBox[{6.059089679017882, 9.792402290343928}, 0.07098292005859753]}, 
     {Hue[0.11, 1, 0.75], 
      RectangleBox[{6.124306786396067, 9.101474583309068}, \
{6.249570771320995, 9.226738568233996}]}, 
     {Hue[0.08, 0.9, 0.8], 
      RectangleBox[{6.0153532113543875, 8.509856260016948}, \
{6.140617196279315, 8.635120244941875}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.906399636312709, 7.918237936724826}, \
{6.031663621237636, 8.043501921649753}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.79744606127103, 7.3266196134327055}, \
{5.922710046195958, 7.451883598357633}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.545709957633054, 6.148622594174217}, \
{5.670973942557982, 6.273886579099145}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.661501773286794, 6.7396549591607915}, \
{5.786765758211722, 6.864918944085719}]}, 
     {Hue[0, 0.33, 0.6], 
      RectangleBox[{5.655141615956817, 7.347004760450592}, \
{5.780405600881744, 7.47226874537552}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{6.28257299856692, 7.163479300001549}, \
{6.407836983491848, 7.288743284926476}]}, 
     {Hue[0.1, 0.75, 0.8], 
      RectangleBox[{5.607459182821377, 7.954137533347971}, \
{5.732723167746305, 8.079401518272899}]}, 
     {Hue[0.04, 0.8, 1], 
      RectangleBox[{5.573240721152531, 7.353544310900063}, \
{5.6985047060774585, 7.478808295824991}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.525345518021149, 6.753652246603472}, \
{5.650609502946077, 6.878916231528399}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.532199854525306, 7.355414207315604}, \
{5.657463839450234, 7.480678192240532}]}, 
     {Hue[0.06, 0.75, 0.92], 
      RectangleBox[{5.48427981697311, 6.7548211464157255}, \
{5.609543801898038, 6.880085131340653}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.7951871241289705, 6.71028359770238}, \
{5.920451109053898, 6.835547582627307}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.561051754045261, 6.989760154383142}, \
{6.686315738970189, 7.11502413930807}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{6.790308009376387, 7.563843672141232}, \
{6.915571994301315, 7.68910765706616}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.614228388647011, 7.350740677635807}, \
{5.739492373571939, 7.476004662560735}]}, 
     {Hue[0.25, 0.7, 0.6], 
      RectangleBox[{5.9772364546269054, 7.283888409880831}, \
{6.102500439551833, 7.4091523948057585}]}, 
     {Hue[0.12, 0.7, 0.8], 
      RectangleBox[{6.14612016078721, 7.8612629986556595}, \
{6.271384145712138, 7.986526983580587}]}, 
     {Hue[0.58, 0.5, 0.8], 
      RectangleBox[{6.315003866947515, 8.438637587430488}, \
{6.440267851872442, 8.563901572355416}]}, 
     {Hue[0.5, 0.33, 0.69], 
      RectangleBox[{6.483887573107818, 9.016012176205319}, \
{6.609151558032746, 9.141276161130246}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{3.09061245993586, 5.196998438833343}, \
{3.215876444860788, 5.3222624237582705}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{7.864238825338325, 5.797839683304107}, \
{7.989502810263253, 5.923103668229035}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.6621094061473505, 7.950399355662295}, \
{5.787373391072278, 8.075663340587223}]}, 
     {Hue[0.12, 0.7, 0.8], 
      RectangleBox[{5.70999042364769, 8.550058033688783}, \
{5.8352544085726175, 8.675322018613711}]}, 
     {Hue[0.01, 0.8, 0.8], 
      RectangleBox[{5.75787144114803, 9.149716711715271}, \
{5.883135426072958, 9.274980696640199}]}, 
     {Hue[0.5, 0.33, 0.69], 
      RectangleBox[{5.805752458648369, 9.749375389741761}, \
{5.931016443573297, 9.874639374666689}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.853633476148708, 10.349034067768248}, \
{5.978897461073636, 10.474298052693175}]}, 
     {Hue[0.58, 0.5, 0.8], 
      RectangleBox[{5.901514493649048, 10.948692745794737}, \
{6.026778478573975, 11.073956730719665}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.949395511149387, 11.548351423821224}, \
{6.0746594960743145, 11.673615408746151}]}, 
     {Hue[0.08, 1, 0.7], 
      RectangleBox[{5.9376764976378515, 7.294972590010315}, \
{6.062940482562779, 7.420236574935243}]}}},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{389., Automatic}], " ", 
  GraphicsBox[{{}, {
     {Opacity[0], PointBox[CompressedData["
1:eJwllH9MVWUYxw8/NeEiXKiEuO7oH1YOLVu7czjiJM4MDRJWYpo7XLn0B6L4
c1pip6axzOksjMnIXROnlqulaU003tRhNaw7S+mGk1OOK5hxr5J0LwjE+3nZ
2HPf9zw/vt/n+T7vFM+aEm+spmkVY//Sjv0ZI95kQ/7YtTtdWuP3Y8FWee50
TBbyXHx8nLwX4W9G5L15sHkYW+2J5I9ZX9pUDb/7Jy/Ie+u3+g5pxY6QLu+t
RHeGjLevLZpI/uzgHRmnt38cK7+Lnt5Eac2uLY9i350XkfFG/u4/pZ8QIga/
s2/8J8+2acRzvp44TJ5teQnk/2rOTXm2nnAng6fwsgNeA1Yqdfv+mCCtuVXv
ln6Gs4J6WjTLSb7tm+5Rr3YJdbTkmoDEYdeE7oGn9P0k/IefU3jaiiZJq+f0
p5A34Rp4rOXz4W9/0urAv9MNDr18bSw4nzo3Sn+6iqhvtZz9lbihMyF5r3s9
ieB9qIK++fa+DX6roVDx7owyH/FsNnPTs0tjqH+4gDlpohyc1swHA+RtGe6B
z7q5GeAtm9ABz/nVmeAZ8PaR71zJY+R3NKdxP30vetAqVhFnF9Tcxe/58Hhw
mYO98NzjSmBuv9xGLyLzJrzFpg3MUfusnnmI5o2PgLOgIUbN+xb5fS95yKdP
PqXO1a4RdNWzknn5oge4N9sC8PIdrgKf/uZs5uLrXjkOXv5ccFhGNBW8ifsH
wPt3o9K1cQUcZvnJFvryjou+i4anr5Pn1RkKd/23Ko+/EV0ZJUdV33+qhZ/+
8MRR9LNTMEffYqeq9/KVfvLaqXH4lSx0Mrcp+9kbcSyO7+JDZz/7U9sDPyum
cRBdPzltiPvXS9kLLWNBFjztQ4pn2+eZ5LVz0rGROvpgOZWe9e2neqn/YiW6
1W4spb4eKUPf2gsp6MicVcn+aj+vCuI/rZT5+1bX0SfrmY1YcbApHnsiXenr
vWX039w8PY05FK6Fj9nyj5qPfx7vgPVl5QPmlzKD/RAfdbTCa/UlcPgOjCqe
+/6NlXH2xcAZ+rnGn6VwNsFDz4tXe7Ct+2vqVIUmoYcbV8/Tr9d61XvRtVC9
I/kpSt93HOjdun9J6Ti3nXlqxUPsk94k4CFO7CLOLEyCh++Levqm56xXevZu
wdqzj9B/+7ujt+lTZ9ItbHjHIP5H1mvUKd48qt7Dx+mX8UFQ7eH5bvgKz7Lv
+X46C71qczJUn2btscnvjLCv9g8XxlN/UV2Y8+WZLnAvCfThv6DoLvzcuehG
v+jmu9Ye5Lu1LsQ+WS4/74E+960u8uRuoJ/64uXEi62v8H7rKz5l37Sy48Sb
P8bRXy2vivnogRV/UbfjqurT0p1R6oROh/P/B3yg3ZE=
       "]]}, {
      {Opacity[0]}, {}}, {
      {Opacity[0]}, {}}}, {{}, {{}, {InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8+4PB8ILBlYAICdKkcaSYWIAAT97+jyhWwIOSYDqLKKSHLxaHKtYCE
+xYu6MWi7//s2WBqMdAtDGj6YMARmz4kOaMHuOUSsUvhk5uPLVygYDU3UN9r
0s0Ey3m+xy63BChn9wK7HChcVG6QZ98GPHI4pP7vCMIthwoA9BSiEQ==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.5498013496398926, 4.8892059326171875}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFWK0WMrpvD3w4c/3mZkYmLin4cudTSAiclNDSTHxLPyH4qmdkGQ
KBNYjonpI7LcB4gYTO4oslwrWIhdYevWYBBD5ipC6r42WK4eZLoniFWKkOsF
8Y0m/Aax20FsfYScHpAr+RjCfiyBKacA45SjyF2WYmRkjIXxNjMyMjBOg/Gm
AVWKHIPxtoAsnA7jmQI5vnBTHugiyzGiyIH0iZ/ALteO4hYhIM/l4QcQ8/vD
mVxA3ky43DRwqDhWVlZWxICZRo/hcj+1oUHNxAChXiK8/v9cIlI8aDke+Y0k
9//HdGGIPrXp0z//HyAAAP7GR8w=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.7082329988479614, -7.513530731201172}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcL9WDuiEmH+YMn/mqjCBwW1MqXaQODsfE1MqhtxZkJTorHVY5O6o
MjFx1jz/P4+JaQO6XApQl8///1+0mWy/oMtVMjFZPPv/fz4TUzyGdV/XrwdK
bRdmEt6F3YMfDbHYBgFXTZiYbD9jlboQysRkdRWr1CcroNRerFI7tZiYxLDr
OmkHDJV9WKW+OjAxicCkbiw8iyT1ThYYLBwK1bOBIE9BWG8NQuqoHxMKWIqQ
+uOMKjXrL0LuB0jA9+RnIDhfUVHxFEnq/29rJu+TyAIDAwDJaZTV
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.9591355323791504, -1.9199073314666748}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0Kx/A6dcvhxufeqBuOVUl+CUusa8EadcP+MBnHI9jH9wyrmZ/cMl
9dewGKe234wTcMpdxCO3kWEdTrlOkXc45fLwhFiaGm45WXxynjilPojo4pQ7
xhiMU+4A90Pc9tEBAAA2pftv
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.85269296169281, 1.524030089378357}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IMIXJbj0OqYm8zEz2OOQEmZmZZE7hllO+iluOeTnJctu5cMtVMhOQ
M3yFW84eu1MqmZiYGJiWkWzfBR5C/kvEIydEAzl37HKT+JiZ+LZhl/s/lZlp
Gg4pegAAktmz/g==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-2.0166351795196533, -0.15392938256263733}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+MYL9DPYTejykHdHN9PQME1KPKO0AEYbLIkiAxqKFAY1H9DdTmgMKt
R9FWjyS3H0kjmhRIcT2SHJqP8Mj9xyvngJCrR5erxym3H4+cA265elT/oepi
QOEgNO53QA1rBmjI1ENiAlkKHPQw4IAiA7beAZcMRPo/dnFqAgBpvZkS
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.3684588670730591, -8.467817306518555}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYFVD/WrsMsfCFViZFbBK3pZnZWVlZm0Cc4ruoshdYQYCRuZGIPND
NjOzypVXCLk+oDbWiMg1IHvBJkQ+hssxAwXyIcyrziA51ohXyHLXoOwGsByc
C5ZTQ5WDcf+rgNyicuXKRxAnlJkBxIW7kxXsAtbSVTserbIG62OFyb2KhMix
skqEQ1n5cIc+joDKwQm4W4A6r11DyKldu3btB2rA6eru9FMR1N2JLVTBhk/A
JTOIAQBLDISG
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {5.052759170532227, 3.9125192165374756}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8HFPcggjA6NC0UdMuSNMQMDGy8TkhlWOv+zw7RomJky5ftbu90Dq
pwjTEnSpm7Y2YPoBH9NcDH0MgWBqBydjBYacoMzt//9/5fAxNX3AkHsrG3b7
QTITU9RbTLf8n8jEw8cos+IvFqn/r4H+03+ATeb/LXlG7iQ9M2wmfhdg0tv4
/9si63cYUp88GDlOAumfYdYYOq8zcV8AM36KLMeUs4GyWpk2o8mVMep9gzKt
xZ+jyp1kYgzohDjDhnE1qtznHkYmJp2AtA0bFopgBujVOD4mJkZQBBs8w/Ti
taOh6gYpKetfYErRBQAAmMyuBw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.9030896425247192, -2.323631525039673}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cx+BvBwHgNu9S/fiYmJhxyD5hwyj1UZ2JSFn+IVS6bianl2T2sUjeF
mDy/4HCjCRPXL+xS/9cwMXXgkLoryeT6G8x6M+/qB1S5tUxMOWDGAh0mJuOz
KHIhTEzHQfR8bpAn49DkfEEuOcvNlHBtL5Mzmlw0iIpgivj0/08Q+3lkuX4m
5rv//89kZgWG2d9QVhQLTzIxJfz9H8/kD2RfZrL+gSz3xomJaQJE7qEaE1Md
ioWvlZmYPWSYrPd2qgAdWozqwyv2THAQgx6wHzKhMrabv/5HB//eLVZlYjLb
8gNDZhAAAHXAoss=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.864213466644287, -5.869016170501709}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AwMB0HKccE3MtHrlwsuTsmXDLdTO7/MAl94iZ+TFZckxMxXj0lVBb
7pMBbvv+hzFH4ZFjJkfuvToTHy45fO58I49b7n8H81KccnQAAIR86IY=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.5167258977890015, 0.5486141443252563}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QYMPUiFNuPgtuufPKuOVWc+OWs8VjJgPfBpxyTMo4pagtN18J5BYl
rHLPT/7/347HzETccu+9mNYhePe/I8vtZ2E6iOA11KHIMSUgc2cjczxZSnE6
RYkFpxTZcvQAAOKi7nk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.2191176414489746, 1.4628264904022217}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QsJShDqdcG2M8Trkw3HI/1HHLrWLELVfJyNiIR24HLjlHRp1/OKQ+
SjLm4tI2lRG3XA4j4zTccvx3cclpMyrhkvovxFiFS+oSB2657YyMa3DJZTMy
XsYlF8fIuAqPXD0uuW3sgo9wydEFAADC7+UX
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.5314347743988037, 1.8141753673553467}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9qYF2iLAOjU+EtTJkXtsyMYMCf9BlN6pUxIyNHTWtsrC8jYz2a3CV+
6+mvQYx/ZxkF76BJPoIxvjIyHsPlpA245dayM8b/xSrzrYeVkfE6Vql9OoyM
rJN+YJF5GMAO9B8nuivBwA7q+UNY5HQgcozuWORe9Bx+8+bNfkbh+9i9API7
8wlccrcYJV/ikHoZzaiBw8BaaUbGGVilOoSAzhR9h00qkZmRx6TtNVZtE9gN
r+ByIkkAALWpvGU=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.6550257205963135, 0.6010369658470154}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cW2MGQ/guX3FYmptc4pG7LM4l9wCHXwsQUics2Pibh59ilPujj1ubH
xGTyHbtUEguT1GXsBlYzMTEdwK6rAyjV+Q+r1EQWJqYG7LqmSjMxVbzBKnWd
n4nF7M+3ntTlfzHkApmYXP9/dANa2Ywu9VWLSfvNfxegFJM0utwrJu5N//+z
MYnoMnGeQpP76y39/P9yoLnOTIxbMe0Td9ICGckkguHYTiYYSMVw5/upsmAZ
/YYfWP04mAEAX62xLQ==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.526444435119629, 3.7252392768859863}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84UG39CcpqKEGT2svFmAph3VdiWYYi9cWDkTEawmxiZNRGkbvDyCh5
Esx6Ic3IWI8sddOdkbERwpzOyMi2BlnuOCMjx08I05WR0QhZ6noiI2MzhLmP
nZFxC7JcOSMj3x8w67cXI6PMFSSpFayMjF1g1tcFjIyMBUhS90qAAjMgvgSy
xK8jyXUCBRg1XRrmurhIAFl5/9HlQIABCBkZ72KVgwA8cuXvkOV2cgCF2DIy
XICUzep//1HAg7t3797//38J0Eb3/9hBMyMj+xrsUmlAo2VwaLsqg1sOaJ/0
dFxydAAAXr6Cpw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.125938415527344, 3.3568997383117676}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4O4sGLh15S2q1FNdJhhQUfB7gyJXwoQMnFHkTnAjSfntQZZ6mAwS
k9UMPpTNxCR8E1nqjCxIquEOkNnNxJSHYmI+SErvw38scpNZgFKd90DMz+pM
zPVIUs9MgVJ1YKn/75mYuJC1XQBK6XwFM196MjFNQ5L6mgCSew5mr2Zi4liD
JDcL7Ce9u0DmIUEmJgdkI4XAci5n//8/AJRSuoQsxwg0p231r//fkqWZmJjr
/qPJxf//f6PbBahbCVUKJOdxMFcaZLDCJVSp/wywIGaRuIAmBdIHAvx5s9Bl
/v+fogeSMl2HKQMEb+YAwU+sUtQFAGoeZLs=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.6602155566215515, -5.847725868225098}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9w0McY9wyH1Cs1JqbzOOT6mXDK/QpgYvJ6j13uJFDbYexSX2WYmESu
YJebwMQkvAO71AUhJqZEHI5sZWQSwuHIU7yMTLOwS/0SZ2SQvIhV6lsYE5Mk
DstmAL02HbvUTU0mpmAc2uyA2rBb9n+tABNT5R+sUteBUkzPsWs7B5RS/4Bb
LhmHS4By2jiMpBsAAIEr0dU=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.526340484619141, 1.153935194015503}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcMdH+gN2mb9HrBnz/2CVWhHIyMjo8Q1T4tNeN0YwED6GIXeSkZE1
fdfNjUaMwhg6b5uH7wfR5zkYl2Bo/A2hrnCx/sbhiW8tjLw4pC46MvLuxirz
p4ePkW8vpvjzfl8DXUZGo7tY9JyE+M4Xm3nPbXTabp2XZlyPwyX//xczriRB
7qN9EITxWZJpG5rcYkb+ByD6TxqjIbpJ92QZHR7//3/DjZEHXdv//+/0GQVl
ZXkZTfdgccMNB8bAxMSu1zgdSQ8AAEetwhg=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.458860158920288, -0.3974637985229492}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcOTIsuRkBs7zaMJ3tr9u1GRkAgI256tocskgYUam8I0bD2MYx8nE
pF664M1PLDZtZmTq/IXDFXMYRHE58IsbI6umpt/RL1jkypnATmRUm4xpoQyT
YldXV5ogE5PRN3Q5UaYkEHXEnIkpFF3u1Fwoo4uREZeb/m9gYiJJbndZefnq
6+9/F2LKTRUA+0HVgolJA01qBydjxdy5mfwMjIyM89HkAsAuf2MB0rwXQ85t
ZkAABzhwUtDkJrCChRVTd7zZvh3dLVMkGZkUZ3zE6TV6AADa8Z4Q
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-1.1834572553634644, -3.4420533180236816}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMhQeB+7zCdRJiYmW+xyJ4BSTEZYpb4HgeR452KTqwfKAE3lXvgW
Q+qaMhOTy4USNiYmkw9oUtflgdq2/f/fA6RM0HRuZmLi2Pbv//+/k4GSEahy
TUxMAmDGn2kGTFzzUOS0YHL//7/gYeI9hEPuvyYT0xZcctOZmLJwyU1G05eL
JMeHJrcZvxxL1l+wJzKZ0eTeBQP9XHTg8/9rhUBGyHsUD17gB0WDvY8MkLRB
lfr/fzUoasHAb99/dPCjmxUkE9j9E0OKTgAAOmuL+w==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.1557559967041016, -6.076930046081543}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gsJIhFI8cbucV4ZELZZDFFOw9BqYssclBzWLA4pZHDAyPIHJFWNwA
NusYA8MxLEb24nJmEVQ9FuuARjH0rgQ6FqxkZS+yZlkGNIDwyEp0qdCVSB4I
ffT/UW8oUNQyNLR35X8sAE86OIbN41AQCg0b7EZa4pLqhYYNqUbSBQAA4XKu
5A==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.868736505508423, 1.8647512197494507}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8OVMUDBjsGY/Fqm1WsxMIJiBKVXNxAiG3NfRZQ56AHVo15w9exZD
6pUmUEfha6zOAOqy34ndhUFM3LE4HB/DxIxL6jQToz0Oqf+LmZl2vpq5du01
LHLpTNytomC/BX1Fl7NjbgVicJgEY+ozAYbYwUITHkammehyzCYQRisTM4Yc
E1TuPyNTDIY+nnVgxjUmoM2ooIWHgan6zKtX28UYmTA8EQtyo4ICE7MYljAN
gsQc1oD7ejbDPmMCRszREQAAyP2kAw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.3636695146560669, -3.7185628414154053}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4NWL//9PiSzHJvVdQerFf39mSWxyn5mZm4FyLtjkdjEzrwLK+WKT
s2MWeQqUS8QmJ8Ec8B8o14ZFaiULcwtILhxT6q4Es+FTkNxMDKkfMcxsu/7/
fybG/BVDroOZOQ9IrWVm/rotOxZFagcbE1O6gxwTAxMYxCHL6TFDABOE8sEi
pweRM3+HLOfAb9j2+uvXn0zM5h+AFKpbbkAoJuY0LF6HAA1miQu45AqYmYPw
yGGNPxCYyMxsjUvul2vca5yOoQoAABhwp48=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.651784896850586, 2.305361032485962}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84cLs7wiriHlapXjZGRkYGtsLvmFJXWRgZWezFGBmDv2HILWJkr3/2
/503I+NMDLkcRk8QtYORUfwFupwK22GoHONKdOs4VP9D5EQYjX+iys1nTIeo
Eb4lzXgaVU6asR7CePZfhXENmpzgI7jN6PqkdOFMZcY+NH0IORXGMjxyy3DJ
7WVFt08LHhrqjOxXUOXmMHZBGFPZGKNRpf6fZzX+AKS+TWVlZLuBJvc/l1G2
YepULWBwTkGX+v9YghEM2HO+Ysj9/5IElImMxDCQfgAA/EatRg==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.983688235282898, -5.827025413513184}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4N+PZWoRCoo1i39hys1hhALNxd/R5VYLA0F+f7+2MLPOC5ym5zEm
/MUh9SSQUfY9VpnPGwUYHb5hk7l3OYKRMeQUhvj9/i2BYoyMFus/Y0i9N4B4
QeIoFvNa7EFAl1FiHYb/oODNTB7GjB84JP9flGVciUtut6TCOxxSIRyMqTik
bkkyKs/BLvXEko3xDFaZzeVCDAzNv9FE9zfF91UJsTEyRs74g66jABIoZZ8x
ZP7/31oo4FBbexVXvFERAAAtB7p4
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {0.30839431285858154, -0.9915750026702881}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8hoJ6BwcGBwQFIYfqZAQnUY2gjS+7//noHoNB+sCqcjnLALbcf6F5c
cviiDY82PC7Zj+kBZG045fDYhsdvZGrD5xA82vA6BMMdABXAu3o=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.798044443130493, 5.097691535949707}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4Omxmo6wY1OOHTv2BlVi5UQrRSZmZmYw1ki4gCwHFvMrKVlSUuII
ZPNnIMk1yrn0QZmfjJmYmGKwWnvMEKhP5iYWma/xGkA7XR9gkTrjA7I34w2m
zI/pTIxMTNJnsGj6kQnUw5/4DYvUTWOgeYbrsLnvphzQfRmfsEldkmJi4JgN
5/5+9OgRXEqOmZljBsyIY8eA7jWFyUkB7YLoerTKUhToJrH1P2FyoPD8/39Z
n7+cKDi8i48grPMBhiEDEAP9xyebuRnFKV8TQGHFLGMVsholfiDgzXEgwBaO
gwQAAIqYlYo=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.124578952789307, -2.536421775817871}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcPvKRjM9JqHsxZhS53mZmJmZ1ZiYJTDl4pnFGx+9+vzq1RsMqZ+O
zIrvcdiWxqzPdAC71Achi7e4HBnNvBqX1A0O+R+45EqYj+OSWsak9hmH1JcA
hgUvH13B6pg5zEzMSuLMailXMOX2SIhLAIEws9hVXLZ+XC0Q+gWX5G0+2ec4
pKbJMAVjlzlWz8Tc+gpddH/DjRux4pzM4l1/MXSkMYP8EIs1QMWZ9XN2Y5hG
ZwAAcIzLFw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.7180002927780151, 3.513772487640381}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4GfAVFxSH8wZp+OSm8qY+AeXnAPjNgyxyYvB1DMW9V/oUse5lT9D
jMzE0BbJmAqifphgGjmN2fA52GRG5+/oclaM88F0LOMsdKmtzHqfQPQlDr6H
aFKfzRknfwQxKhmT0bXlMzLKyOs7RGVxsu5Hl4tnZGQUkpeXYmRkv4Qu18Ok
v+jZ//83+VnaP2H47thvIPErlDENQwYKVjOKncUlV8lYh0uKbLllMitxytEB
AABmfNA+
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.165580987930298, 2.9080302715301514}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/EoIshG5dUBzOT+FXsUgdYmZiYlmCX+2XLxKT2A4eZTkxM83BIPddm
YlqNQ24iE5PmJ+xSh3mYmGbh0LadiUnnPQ65ICYmMxxSbzSZ+JfjkJvKxBSB
Q+q/HhPTPjLkvmgy6bzAITeHiWkyLiM1mHSe45A6LcQUgEvbYiamM7jltJ7h
kqMeAAChO9vt
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.4227294921875, 1.436567783355713}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+8YJYiExMDUwcWmUZZNmZmZiZmG0ypH1FMzDjkbvoy45SrYMYpl8ME
cgaYsEaXkwNpUSg/jUXfMQmQ3NH/j9DlXrSEgawSXv3tRw1QzhtZzgrijH6g
dhDrBKqRRUBn8B/4/78d6JapaNYVA/X5////SAOo7wmmnMC+//9tgSZH/USV
eqMBdt1iHqCDLqBpg7h8A9RBaHKg0NjsAHRQLLrU/zeaTMycPEDNZt8w5MDu
BDrRbCum1P9GcLjEYtEFBIHMyv1nscpQFQAA4pBwFA==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.7809731960296631, -5.064888000488281}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9I8KqCQS5xzUuscnWMIBD+AovUSlFGnj1rzBlVN2FIfVJhlH/y4P9P
b0ZWDMl8Rg2vbUD6iw+j3R9UqYfsjDMgrC9ajIdQpH7aMrbAVE9j9EaRy2F0
fQ5jz2RURpZ6I8249T8OuQjGtH845C6ySH9E8KYwliM4r8UZdyF4nzX1vyF4
jxgV38E5n9wZQ5GMnMiYDGf/cmfUfYOQusrDeAuuK4Mx6DSStgOMjL8hrD/T
ZFSOowQYRO7vr9vt5ozW9///R5PbsbvcExh3rK0/UKX+P5AHR6pg+s4n/zHA
1SRmRsaiu5gSdAUAsZCx4Q==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.3600063621997833, 6.356715202331543}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMfIaN/Gx5g9H0PmRT0bExMjExCwVKPLTQcJM2rZAkktNKljPExM
bDOuv/iw1hZDLoiJiXMqmLWbicvlEbLUYX4mpnoI860xE9MUJKkPPkBrFkE5
LqhyC4FS0nexy81kYmKt+Y9dTpqJyQLGvq2IIneaj5HRDMbZzcjAgCQ3mQlJ
H8j3aHLroext7ExMUl8QcspAOR8oex2Q7Y7klAqEmYesmJiUXiPJrQKaIzAf
KPJ0AgcwqOf+RwaGoEgwCQzUAtF7UaT+r2JjAgMGJiYuh2eocv+XqkPlHLb9
xwD324uBcg7tnzCl6AUACzlzbg==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.9499468207359314, -6.830801963806152}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8u4E0qk33R9EefsMmFMTMzMTMzG4TVHLv/BrscCEtpWFlVPMYuB8Z6
zxByoUxMDJX//3/q69OSlWBiYmQ6jqpvNcxdGsxMmm9wy1n/xy43Bciej+zQ
mzFn4OqA9q3+jxW8kWNmFn2MXa4L6Icy7FL/+YByB7BLHWBkYmLCoa0UFC44
5OTIlDuDx77/ePThlUtjZp6JSw4ZAACm0Zkf
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.410208702087402, 4.891765117645264}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1ePMDu/jN/LBQl+XHzmCRyRFlZpZ4U8PDYXUZXa6PiTl66bP//589
rk9Glzsj2wRh/K43/ITDNU/rmRdhlzm2Spd7Eaa2T319MbI8zMxbMHX0MjAx
MTGKysnxMkUtQdMJdKe+tfvj//8vTOJntkX1xrPjx2GqL09V51+Hw6n//z/W
4MFiLcy9TEwwZntYH6rcWmZmGJOJORxF6qsVsyaMbcLM04QkdcaHWXMjjPPJ
gImp7tGjR4uXFBUVqTMxsZhvRqg87sjMxMwMw6aojnxzPBwECo+DwE+c7h+k
AAD/0bOK
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-5.1058502197265625, -1.089908480644226}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcGcKA1fzL2wyfxcJMXFwMx3AJreZiTHt4VOmfGxyh1kZG/8/ZVTB
at3Ukrn/TzA54XSOP9NuXFJnOJle45B6psva/xe71AtDJgccul5oMUX9wSFl
xGj5DrvUBS1G+w9YZX6u5GZKwCZ1aGK8JRMTU/7OG+gyvzJZGaGAP3ErqtxV
JkYm7uKtW7d2B/ExcWb/RJabx8iS+QTCfNcrzKh4B0nuz/4jSIbIMO7D7g8g
uMnjjyPUgEBU9SdOOZoCACgRyAo=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.1173129081726074, -0.8118136525154114}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984MGZxczMzIwwnIkkdc2BlZmVFYGzkHQ5sKLK6R6Gy51hRZNjnY0w
UhFoh7ipqYmpqakmun0zgWodr8PNyFyKJsfqmJGecfj/69mzZ///jy4Hwkqm
GN5bK47wG3PtV1TJJRJI7jyHpnM90JrZULnQFiwhd+5cKFgvqqUPzpx5AGGh
++/VTAcU/yGHJyTMHB/ilmPVAbG10OSumYozMyDFH3cbTv+hufO/KZJc/XpU
uevnaqFyYefQwoyqAACU8TAS
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.639434576034546, -7.729306697845459}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8owMAIBAyM+gsxpV63vgWBswceYsot8cJtJF45sU845RYzvMUpd4Px
7YUTJ078xirJp8zOxMQY/gCb3KFFJ0925AvIrsVp9FUbxdU4JS+qKD3BKdnN
VIhT7qUanlAINPiBUy4Ft9xPU080kVNwVgvTRDS5I4EQl39fwBWLYdR0we75
b1ZPDOZueo9pz/bF/MDw7LqN0420BwBjkeK7
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.735888957977295, -1.5284335613250732}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+m4PenT9cW7kIW+bHMo3PWrFldHh5mjCCAJPVagxEJcIhlIqR+2jEy
ckHEJaTSWy4j6fq3m5FR7GhzUVHR3KM/0Kx/DZQ6g91l/0IZGaNm1RqDQNE7
VLlfyO5w/I3qI3mwqLjN6mOZjIwTUTW+8zEJ67v1Gsjaw8jogCNMnskyMuai
iBTI2W4E0d+2qTEyKr1CkWNgZGSWCpQyFQNayr8P1aQpCFd6n0D334UaHZAE
T9ixP1gc8evN8k2rvuJw4cADAAeQmHI=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.572589874267578, 5.614886283874512}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/a4HLzAWzCL3fvrAzmYvJFF/99oNmDnQkIOANXoMp8qjdiYmRikjFp
P3QHXVcYE5NGac+FT1gsesPDFPgTh9sWc6k/wSG1nJMpAIfULx0mJlYJidDr
2CTTJSQkhBkZmnHo/f9ZhHEJLrlFrPzHscv8uyPMFIgh+uQ1iOxlYjJ8gyFn
o/Dm/6PpnEz8czBNYxGOE+ZiYkp+isUmL2DQS3rvwOqKX2tadnzB5Xi6AQCB
Bcv7
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.1988589763641357, 4.976438045501709}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8R4PJ6IFjJCAQMjHPR5IqZEEAVTW4KF265/3P7oEAAUw4OpMmTa2fH
KffQHotboGAHExP7MpxyoutxWefKZI5L6gI7brkIJurLFTAzncQl95+T6RnV
5ZpQ5ABopMXd
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.047999620437622, 4.926872730255127}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cTYHDAKeVAntx+Bob9uOTq8WrDIre/HqKNoR6rDrBLsEmB3VeP1SVg
UZACTDkHcMDXYwn9/SApoD4sMbOfAQ4wPAAWrK/HJvUf6ifsjoSZjCu49mM1
EgJA1tXj1obLNmzeHjwAAGMpvrU=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.882184624671936, 3.298783540725708}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8Hx+ChMQMLSiS9zPcDRiYWIBAibuCb9R5SDCUOIBFjkpZ2dnaSBr
J6Zc+hEgIxHIckazcDaUTmBgYkIzEwbOA80UeYJdrgDolkasMt8L2FmYFD5g
lbsP8kMbVqnbmsBwScBuWQ9Qm8QN7HIgTy7EKnNcCUnu+/7Y5wip9V7g8LRL
ABmaEApkIZwIih4mFALV+SwoBFzufaMwmlwwklv2ONc9eBDm7CQMjq1JDz5j
ce+OhQsXHsHuSZoDAHLPcgg=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.905249118804932, -3.481335401535034}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcDGKraij4yE2qQuijCCg0X8XU06GUc0NLLsRU24jV+y3ZweSJRm1
VmNKrp8GIjcDjcXlom+2uOXO8eKWO4zHzIWMjF44pN4bMTKuwiEXz8iouge7
1EcDLH5/c/16YvP16+GMjCpP0aTemTDCgN7XF/fAACZXysgoyQyVdFFkZGDk
l46HyfkyMiZyMzKyi4CAZlva9EsIM09wgXTwzMbqwBNd7iJVb3F4bLADAFJs
q48=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.355123996734619, -1.1387883424758911}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8GlbAisjI0PoYQyZ97OcmECAkYmvGV1uOhMTu9+R48czRZmE36LL
ScZfgBjtwtSPJvf9E8IEL1xO+pPFNA2XXAWTxU9s4ifKM3WZmVqxSW1jAfmB
KfgTFrlVYP8xYXXLfbfJz54tsGVkNMflmA82TCz1f3FIXuJlYvqGS+cGDLnL
tTDWKxl0uSK2if8grIvcGr/Q5JiYGsE+W6XMNBPNlpVAn3EFZmTKszJp/UGT
+9HGDfE7d+orTPdtTBBgYjROQI8+OgIALGqw4Q==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.9237778186798096, -2.653717279434204}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8F2MHPnz9B1K+fcPAXLifEyJwOBBKMcOB5DSZ3s4CbEQkwALEMwtQX
lyoqKk4/gYE0RkacDigiU+4qHrkZjG54zMzFJfWNm3EJLrnpjPqfcMvNx2ld
HONmnHJleOQOZizGKUcFAADht9mQ
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.243410110473633, -1.4123600721359253}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8KCakYlRay02qWtizExAyLMOi1wMI5O8iSYTI9MrTDkTJubX/78G
MzEXYsqtLTwEouyYGM/ictEOZiaccmeYGPtxyjEzZZCpbwJWiRa7HWdwuLOF
h4lZC7s7XwHDEwi5r2ORm8kEDlGF15hSX7QYma4VQuLiy5kgppmoLgz5XwiO
CxOgrdqHkOROMzFk9DEx1miCbTVBsRWoT1yMWevr17P9GRk70b3AwMQodg2r
x///zxC3xxkH9AEAViOjPA==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.901289939880371, -3.602661609649658}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4EsSI0tkxNoNGzZ8xJD7a8LExMQIxEz2HzAk62FyTKcx5D739gaZ
mRdzYJODgPt8TAY/cMj5MzEdxSF1lptJ/jl2qZ9cTGyncGgLYGKKxiG1hJFJ
/B12qVuMDIyTsUtdZWdirMXu/h8hTEyuv7FrW8TEJPINu9QDTiaWTdilfiQz
MSVglwKZKIkZN2BwjYuJ9xgObaeYmBxxSAHlLN/jkiMZAAB+18e/
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.1082058772444725, 0.29867589473724365}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8OF8gQgTk0bpJwyZz7P1mJjBIABd6qsaMzNULgpdrhMoyCpZcuDr
16+/0aReWzIzS2/C7o4GoLbj2KWOszMz677DLhfFzMx1ErsUSE4fhxRIjkNZ
WclhNxa5SCYQYGBicn2KIbdVD+RpkN+tMDW+P5+WNvWoDzMzzyVUiW//oIw9
QGvPokhdtkh4DWZ8T8EwE6habS2IMQFoXwKq3H5WoM9rW1vVgG5xuojmkCYW
SOQwMYucxnBluCxEzvIIpg/+XyzkYVYpXPcVixS9AAC34pZj
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.44046586751937866, -3.6471378803253174}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFUqBpfUEyFGVlxyhYw45a5y8eSyfMYud4Kd+VjneexynoxuuGw7
y8Z4GZecG2PYO1xyLIy7zh25hVXqPTOjNBsj7yVscvMYgSCMsQuL1G99Rsa+
ow+wyn1jZNT+9v814yrscuH//0cwHcUuN+X/RqYQbE4ByV0SYTmOTe47L6Oo
IOs0bFL//y9kZOSfil3q/39dxsDp93DIvfRh1F6CSyMdAAAJLs4V
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.715127468109131, 2.7005929946899414}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8HqPEiMQMMjueYku9SucCQZCvqHJvWNCgMifqHKWSHJMJVjlzPsF
MeQm8YClWHM/L8eQq4ZoE13lgGlmNRNu+1Dl0r/hlmPaikfO5RemnLKGhjKY
8R1JbqMkSMQBGJQvwC5die5367sg1h0rEBNJqpmNiUngCoT9WQhVDmyfYe8s
YKD39vKgyt3QBDuB28fHEcxAlvufjOIH7c/Icr8ikaQsb6IE2v/XYXAptdv/
BwYAAEoZJh4=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.582188129425049, -7.6228437423706055}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YE1UlCQjwzksMm8jmRlBwBpT6p0ZI6PKxvOMjDPeokv9DWHkan71
f51qsK/0NTS59YyM1SD6uy8jI7qN8xkZbYDUVX1GxuZPaHJ/LBg1vvy/IsHI
2PgFwy0HmBhdGpkZJbb9w+KHOaxAD0hcxSLz//9JTkZGwddYpa4JA7UJfsMm
ddWFkdWAkXESFqnrLoyMcx4JM8ZhSn1OZGT0+/n/ECMbptxhRkbfX///r8Ai
98WD0f8HkA5htMCQO8vIew9InRZnXIMh91WbbdrbtxuEGJU/Ytp3nIVRXBwY
KneweOH/FFCMJ6BHANUBAOCOpkk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.941182255744934, -1.9845068454742432}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o0M1wFpfU3yDGrbjkljAyvsIlp86o/QOH1CstxsifOORaGdlxOWU/
F2MrLtsyGTme4ZB6Lc6Yg0PqRw0j12Mccm8kGP1x2dbGwbgMlzZjRp13OORm
MzKewWVkECPPEawSL/6/NWb0/4hV7uf3QEblmzhMfMrIWIHLtg2MjDgj/KJI
5D9ccnQCAKED51g=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.017889499664307, 1.2388466596603394}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8c4NsyXDL3W9knY5f51SXDuharzOflRmwJF7DquerMqILNvN87e20Z
lVqeYdP0xk/JcCFWmf8Pv2N3G8gqH5VduOSuMfJM6HqBVeqHGSMQKN3GKjnP
PO7cTsY2XMZ+C2LciktqCr/iY3TBWfvAVDUjYy2GhmxGUc/s9dEsjPZ/MOTu
1oPcyKi8/ScWm/5937V48eKXuNw4yAEAA27hVQ==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.3832406997680664, 4.5735554695129395}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwOCAU2o/HjkGhno6y+3HJVWPJwzJl8PtFAfyvLAfj1w9mXJA+xz2
45JzINtQ3NFOBwAA71Tnyg==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.9123854637145996, 1.18839430809021}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c96HOVeYVLbjmjyGUcUh9Utd7j0hbFeACX1H4O1Q+45FKZzuOSui1g
jUvqfx7jbFxS3xWMfuKSm8A4BaeRooyT/uKQOsrMyKh5HLucFeOUpcqs87HK
Gfl++X9Ln20jFqnXrIFA8qWQ4idMuQ2MZSCqj7EOU24h4x0Q1ckYjSnXy/Do
//9/dWy8BzHl9jFqTatUZZS6gsUtvyslGBnFSnFG7QADABuS3Og=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.1920344829559326, 3.363520383834839}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4GuWPoNg4Ny/WKRWSDKHTVgVxnwAU+qRnMkmEG2W82dSDJrcTMZl
YPqxgYPQRjS5Y2wQuRVMChcwDNWJBxLvozgzPmNamM7y9P9VK8bGf1jc+ZJt
+UpBrvZfWKT+/3dlZMl+gFXm/39fRnMcMv9zmZX4H2OXmsWc9F6tA7ucg/jt
/0UsB7FJ1TNt/f//X7DIG0ypPw7GP4HUM8FOTLlbjH0QtwpihsoP43QwfYTt
OBZnCm4A07LFWBwzgdd/14VdK3lTsLl0kiwjKyOj5wdsclQDAJR9y/s=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.6625990867614746, -1.6968172788619995}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4E6aw1NccjZMTL5/wKwCHvkzf5BkftWLMDHVfgYxbwFZTPeQ5D5p
aDAx9YKZnxeGMTG1I8n9fXmCmyn9A4TzQ5fJAcW+ZUxM9VDmV2GmWBS5ECam
hVDmN2mmEBQ5CyamvRDWjSgmpgVw8W931941YGQsvQsEJeqMjAw9cKlTVkxQ
wAgmldpfw+VcmJDlnFPvI1llyKT7/msaE5PJti9fv379jeIMQyam/uM6TKK3
/mOClzJgA1U+YpH7/yGZHSg3HZsUEBzU08vAITXoAQC/Aqfa
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.290705442428589, 6.5703887939453125}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4MUReSYmJgYmJsUjL9Dl5rKAABOIiHiLKvXYGCHHcgtV7gZYkEVL
WwBTrgci9///ZG50uUncMLn/YuhyAUBx0Vu3QIK7WVhMMeQk4DZLYMg14JG7
hUPOHxgmNyHMVUxMzuj6fF9DmNjcOf8/Ibk3gWxY5FKWAukX4UBHOb5Al2Ph
mfy/zQcUOPNRpP7HAU1iEdDkBcYDe/IHVLn/QSywONL+jw7eRkDlkudiyP1/
eUwRKHfs2FtMKWoCAF7cbSQ=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.1650086641311646, -6.417749881744385}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cWOODByFCJXaqFlYlJ8Ag2mY9trExCGU+xSf2tZGRSfYDdwG4mRrFz
2KUWMDKKXsIudV+CiWkidqn/eUxMsTik6tmY4t9jl5orzWSLQ2oTI4P2UexS
342ZGI/////6xIkT99HlFjAxJS8JVpNkZGISUtv1B1nquRgTkygTEDCCCQ9k
i1eAhQ1i527fvqrOlpHJ9zWS1xgZGRnWQNifbRgYGU8i5BpB+paBWPfzhIAm
5PxGyLWD5GTrI9VUBYEstXW/kOy7Lw9zBhO3dT+aH75siI3xYuKMjZlwG3sA
DGYAACYsl1g=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.793823719024658, 4.382782459259033}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYGEBEDgwMDFxt39HlytnBgEXV1cl5hp0ua9r09LSpgIZ15ijcRq+
Ho9cNR65EOaNuKROcZj+wiWnx+yLS+osn+kLHFIfbJi34dI2gckDl20bmUTu
45B6oMm/F4fUbyfmNBxS372Zk3EZWMDs8gq71J8CZtm7OLS1MHPewCH1f48w
18bXuCT3OzZ/wyWHBQAAww3d7A==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.6601650714874268, 0.8034077286720276}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Pvb+2VlZXe2Ysp8WWfBCAQ8KjHoMt/WWjEymtasWXMcXebvGjNG
Rtstf7HZ9JORUXTrd6yOmB/JyKi8BUP434ZGTW4mNmYWtiAMubcgt5X8OnAV
i3EfBIFyGvHxRVe/Ykpe2BRlY8PMyMhgfQyrW/4fP3KkyEysAKsfQOCTMuM0
XHL/NRmbcUl9VWc8gF3m11FJRmfs9j0pY2QMPYsp/mbv3iZ5RoG0z+gSJqam
akDfc6Rfw9SUqiGWljZ9yX2sNn35iMvhVAYAlgXB0g==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.39686810970306396, 4.587760925292969}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cD2KbNfBKH1EMtRqYs7FKTeRkZdbFLTWJnZAz/g1XqqyYjow92qf+J
jIysOBxyX4iRsR6HG4sZGTW/45DjZGQswSF1loWRsezcuXNfMaX+VjFCgNbq
v+hy7YxwcApN6iQzWI+OjiojYzCa3FGgjMUpoMe/lTOqofn/KjfUlZ+yGRmP
oWnMgMh97mNkFH2CJvfBlVGqdmaBBtDsGZi+4IS4kjnhG6bceTGQlDD2sDmS
aJt+8DFWqQEHAEMtqWk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.586884021759033, 4.013942718505859}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcCGzCqfcJGaORbjktJmZJ+OSY8Ij58DMHIbbPmZmastNZGJywKMP
pzvJ9R8Dk9BB3Po0cEmRLcfApIZHn+wDXHJZePwwiVniIk5DaQ8AiSreEA==

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.8374494314193726, 0.7007818222045898}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/s4MamTWexCJ870JJuws7IKI1FLpsRAjSxyJVzgWRYVFKwyL2ZXth+
6tR5VMHfG5ydnVdid1shyKwDWKVuqzMy1m+7h1VuLy8jo+DMx9jNvNfmxcio
sOgLdtn/l31YGAtxyP3/P8eSdRGa0N+n06CsZYz2aHJn9b5CWa9EldHkmoXf
QFl3NWXR5FzZpp98AGa1Mtahye1jYmQUUFGpqa1VYuxBd9+uUk02cNSwpH/E
4vyzB5szPDSrsMjQDQAAmHLBzw==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.9476501941680908, 4.88225793838501}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4I6oFy6pH9FMnGWoQrN7N0IYL5mYmNTfoMgpMindATNWAOWcUaQW
WzAxaYBZOkC5VBT7OYEigmCmPZC1DlnuJlCAqRLMFESX2wySU0q1AQJWIKvz
ts9TuFwaEwpg52PSg0syMmGAPJhcHR65P8ECzYmr1xgwc3ODJfQ2Nj9DuOYW
mNxwdgJIStD2938swBskl4NN5v//eUzo/kOAXay45W4CHSPxEbvcIqC2w9il
QHJuf3DIneKQXopDikoAAFjteAE=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.864450454711914, 2.5764803886413574}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YGdaXJxNXFw9hsS3ZYaMTExMIGx4EVXqxxwmJg6tsrL1F5eHMHIj
S15ZNJ2Jye0slJfOZISQsmRkZGDMhfGepjFKIuRyQfZsgMpECzBypyLkFrEx
Mc79BmK9WyPPxGS0AdklU5gYl4LoVaJAd2ag+WCmlNCJ/29CGRkZg85geO+6
vGipEBOTyvG/GFL/f2QB3cPf9wlT5v//UFCYrMMmc82GkVFzkZQrFm1X5Jn4
Sj79v87njSmXw8S0B0Rv5t6HLnWGA+qnd/Lx6HI7GSFhW6/NGIchx2ReWlKa
I8nIpLANXe6mLCROBfKuYrrl06Z4RtP0Xc8wZagMAMX4llg=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.1346182823181152, -3.419689893722534}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8LdL7tofHHJTmJiYzmOXeq/GxOX5FqvUnwYmpn4cJn5iYlJ9hUOu
hIkpFIfUNUYm+fc45FoZmPpwSJ0XZvD5hkMugontGA6p/xIM3LikdvMwxeGQ
+qTAJIxL20ompok4pN56MMngcmQUE9NpXEbaMjE9xyF1iosp9Dd2qVdmTEzT
cGg7B4zu27isoxMAAJPr3zI=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-4.29147481918335, 1.2151590585708618}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cpYGACAgYmmW3bMOWYWIAATEzDI8ezCF0uAC7HFPYBTe7Vjh3ZUDmW
O9gctA3soMlYHfvACaRvCla5L/E45TZkguxTOoRNSgLsFm9MZ/iDwwUIalHE
V+fn58P9noMitUwY7m0WFhFU2xDBxcSStPY/Lrmcr2jOOKUIcwaIaN62DUnB
VUMk+0BEQv41mNzXUk5UORYWWYTOUmNlZDmRwkKE3JdrZ7bvAAIogS3QBhYA
ADW6S2o=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {4.9821600914001465, -2.0336005687713623}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Mun5++wif96eqHYRJtZ5iym1P1SJWZmZiZmZhl0nU9dpIHCYDnm
l6hSL40gwkDCnLkeRWoeExAwQIjWPDNkqQVw45iZFI4vYkaSms2JkDN69r8Z
Se6pPESYy49ZdfIrEBchtxOixXzbr5cfIVy41G1FkAs4Kr5A+euYHGFSH1TA
LtgD4z+0Yu6CsSeDrNKYC+P+cEXyuxizLjNzN5Rzd5E2M7PqR5gck8QUZuZw
IGNqd3e4KtBVTnCp/wyL/+szMYgrQsOFOek+wgdMi/93ssP8LmK4Gjm8mPTW
/o+AyOnPvowSyv+Px89/9f9iR3z85ItYY5xeAADT3V+h
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.7750697135925293, -6.04400110244751}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y8EaPgdELu9TfZCYmJpdfWOWmMjFJ8TDtwyYVy8jm8ngWUzimzPMQ
Vuau//8PMZVgylUzMWUBqflM5zGkIjiYmNYBaU9MuQNAqUv/sco90WdimvEP
u9whJiaDT2AXqaPL/XFlZMwAs84xMqLJdTAxGX+AsVDlfnoyMS2EMMPQ5W4x
wUVCmQRu4JILY/JGte6pFEzugKjwDjQvhDIxLQNSl+aJMKWjSYFcwBecpSrI
xOR8CV3uvTMTCDA67PqOLgV0TbUEk1n1TuxRTicAAJ9DqZc=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.12438319623470306, -4.694756984710693}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+SIIKRQbTzPXY5CyZGJiaxQ1jlUplutysy8V/EkLh/6v8u9p8ztJg4
T2PIbRN6+r/LlIlJczumgdsYazMZGRhzX2OxbBETUE/x8z9YpI7wMTH5fMHu
fi9GYVbsrgfJvVXTwyG3mOGtvQgOuR+MrZNZ9uCQ1De8xbUKl6FMty3McMi9
4q+2YMIh91+Xz5RxMQ65Q8CAWYJD7rsebrn/p9hwy/2vZDqCU454AABhectT

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.74990713596344, 2.3694255352020264}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QMLU4kpGxHIvEyxV6jExAwF77G13quzNQ2HRZJFD2I7pcJROT54b/
3z0w5V4s4mda9/n//w8gU3NR5RYxMfGeBtI/AoFyMleRpfbzMzGtBjHA+piO
IEl94GRiavwHZBzjx5C7ysQk+RjEWMGELndbjYmpEsQ4IIIh18LIqHAZHC6M
YMCAJKfHxOQLZrzxYlMCavP9gkXu/6vV7UC5vf+xyWGGC0LupCwTE/ecv6hy
Lt/+///50MsKqKsLJcCAckxhlZXJTKA40rqDIpfMBAUMTOyLvqJI/f+YCJUT
Dj7+Hx2AQ998+vSDGDL0BADPpWxu
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.10488539189100266, -6.703549385070801}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964MuZ7f1nqtPTGZnWokvFaDEzgaHYTgxtHqL9LSYmJjNnYpr4yoTp
LC7b+pg8cLoknfkQbjlM18GBHTNOqf+MYjil1jJl4JZjZFp85syZa1glg8Fh
whOLTe7VzJkeJgpYwhIGXtcwK7zGJXmNhxFnyP3HE6r/CxlwyV3774FTnwcD
E059r7WYa77itI9YAACo5dah
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.8003268241882324, 2.7520697116851807}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0MXAKNh0BpvMAw1mJiBgDceU2sXNJFlYmMzExI8pt51JCmjcn4lM
zJOxyOWDqD/xTKJY5PrBdCYTB4bcl3hbnHL/P9+BypWgij/dfvYmlJnJ1IUi
dcScSUTOejWI+cOP5wmyJm8OkKeZBOe//f89l0kXSeqZAZNh6o4dkzWZmLzf
3mMSeIAkp88k+gpEv3ZjYuopYSpAknrNxlQPZXUADWZbjiTXxOT5A8rcCZSq
/Y8iVwhh/GiWZWLi2/QMSa6HKeMvkHp3zI+JTbeZk0kBWSM7U8bTQwWiTEw8
zf//75h4CVkuEOw5Jhath/8xQSc3k2FLyzIsMvQEAJkZmUk=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.0816267877817154, 6.2338080406188965}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4Ms2023bpAO2bXuAKXeLhYWJBQiYnF5jyNmD5UT4mFhsXqFJHZBg
YSkwElnrDVRQiCp1Sglo3P9rjv/PYMptY2Ji2g5jFaDK+bOwOD+EyKHpex/J
xKIMdR663CSgEzWg7EwscishzFomFrlrSFJfMpkYdJ5B2J4MTOrI2oBBonMR
ygb6rx/F3yws3hDW/R4+poZfyHJqcDkgS+kQstQ0PpgciHUGxd95wDDxBJq3
jQEeOHBwEBjMivn5jqB4gAYOAjjCoo7FFiPuXjlB5AoKMaP1/4MdZjtkg3Zg
SlAbAAA2voMT
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.14715178310871124, -5.977885723114014}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4LYno21E3z1sUr1sjCAgfQ1D5pMHCyMERGHI1TAyss99+vRUmTj7
WXS5FEb2ejBjK2MLupw0YxWEcZLVBlPuFITxmF8XXU6RMez997WRtnb6jEHo
csWMjJxaEIe6ossd5GWEAf6H6JLVYHEJExtGRt47aHKujIyeM+bv+fN3Czdj
GarUTBZG6wcQ5krGEnS3BP2EMg8whqLL1UBZXz0Y96PK1TPqvwYzvvUzyn9D
lfsiy6i08cmTJ2t9GdmmofshHewHBkZGzPD8f8sVLKmk2oQhBTQ1iVE5csMf
LDLUBACzW5Ji
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.2870471477508545, -5.013915061950684}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964PjMmTOvz5x5QsFt5lxUmRmmEoyMjIqMjPpCjIxMno+RpFYyM8KB
y+TJB5GkLkKkDDmc4uKO/kY1cQdQQmznoYfH32C6wxQo5/AduxuzQCbyKa48
jEXuU6KIMEhaNPj+C0zZS+dtIK5Uqt6OKfv5ZYWfOUiW6w5We58v4QFKpn/D
7qomkM7FWKV+xAOlkr5gSvx9f8AXKBX+CYumGWCHhmNKfD2gxw2SMt+PLvNr
nx9QnIGRMQTTrhyIx1OqMQ28AQoxYa+LvzGl/r9xYmQM24NFghwAAM4YjoI=

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.7516995072364807, 4.445272445678711}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x924LLuflxSc8SYnF+8uFBdXa1piyZ1UpKZiRkGUKW+STDD5eS6UKSu
KDAzJycF12x9BQQfUKS+RoHUM8k8weKOMrBZTMyLscgBtbkVOmKX2zbh6P//
ExiYLuPw3ysbJpH7aGKxeh3nQXQbM1MBunqgr9qA1D0lZu0/6HJeYLnjqszM
KzDsmcbMLG9pyc7MXI/phrfxrCDPKZ7FMBEE1s6ZM2chDtcPCgAAGSa1TA==

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.724721670150757, 5.245418548583984}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x98YHJycgwjo+8LLFJZrEyMTAIsTG5/MOVaAwPTNz6fw8R4A5fBfyxw
y71XwyX3axknI0PjkSdYpB6bMDEBHcRkgUXuCBOT9+xZOkx8pZhyT7rO/f3/
/501E9NuXO5528jE/xCnY20Y5uCS+/+BURVd6AGcpSCGblQmnKnHfhhVrsIG
xrrJaPMfTc4ayrggwYAecHMVJ74G+u9ZjgiTzis0uYeuTExeAf58TPxlmE5f
IA4KT1aPQ5hS///fUYhdf/QkNhlqAgDCd8Nk
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.469047784805298, -2.3187003135681152}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4NqZM+k7+tKDmNJ3YEjxMDGDoFhGMHMLupyCiYlJ7MxDQKaxMbrG
1zDGKwUTnPYyiF3DIbWWR+wsdpkzdoxa2HXN9BBj1vqKReIgIxMIivZj0wT0
XUhGhhYzNjlusNO3i73ClHt9HUwtZjZ5jSkJs9UDhxTI1kM4pM6IyeMyca2Y
9jocUtVM8til1saYMGljNfBVEBO3yVqsmq4pMIXgsol0AADKMMri
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.1902564764022827, -0.3996998369693756}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8YsEaLCQTW/cQil8QMAY5Y5EqYmeW5gHJsyz9iyH2ODni9u86YlYl5
Pi5rU5mY03DJteHRF4dbroQFl9wmKVZmXHLmQD/gkLujAAwYBiYmycvYzJSW
luYF6pW9g901ZyYAJX0uYJf8vrobGHzPsUv+38jMLP4EVejt5PRL///fWGUn
xswcgSpVps7MLDq/UAIcU/WocmGQ+GMCYo/9P1DlOuFyyWgy//8/rZEHStk2
fPnyG4cbaQ8ADpSbTA==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.681236505508423, -2.6842753887176514}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcJSdcTpWiV2TfdmZmIKwSSVzMzEx4pCrYTKccZ2HqRab3LdTL///
52OaiMstS1mZbuCSa2NiqsEjtxyPHD4zccq1MjJexyXnh0cfI33lXjIwMbnu
/oIu/P3Jubg4XaAcE+cRdLlSJhBgYGLnn4ph3P12nfD29rb2zbicQgcAAOrV
ydA=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.1658257246017456, -0.833098828792572}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848PfHHHuplGX/sEh9a2UEg9R36DJvC9QYoWDyXzS5+2BhdiEQ+Ryb
nNm2DGxyn/0YOeqfXRYBSvG/Qrfw04qd//+DtW3D6ot6kDbhZ1jlXIBS9hew
SoHlIrBL/U8DyokdxC73MUuQkdH5Gw6dWwQYGR/ikJvKiVNuGgcjply13uy7
/1/MBoc3ulwWI6OAhDA4vMP+YMpBgfojdIve6MHkJmK64k1tBgMjo1LtI2xJ
gk4AADeKlI4=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {-0.7201974987983704, -1.6577001810073853}, {0, 0}], InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8Jy7EqfcHKbZOOUKmdaTJafG9AuL6IvtQOI8IyM2HfU+QGIykx0W
qfcaE0AKmCZikdvEtARIhjAtwCIXJ/jy///XImLvsRjJaAgk+xmLsWibwJQH
JFuZhNZiSH0QYAr4+f+PKROTJYbcbEYmJq/CWUxMTHUYcols+xJ4mIAKnL9g
yD3bAnTkKgbmhVicAgbrGXVwSf1fwFiIUy6RsQWnXBXbZZxydAAALxLV7Q==

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.056471109390259, 1.966873049736023}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YL4qg39n5wZsUhWsTCDAIVp+C11qERsTDOigy01gYuKZtK+mS52J
SRxdrp6JyRVE35THlGNnYtoNpH5GMjFl4pALZGKKu4BN7nMPkKz6i+EFCyYm
UUkmpvD2n5jeywG5XvfCHwyJH8ddmZmYuLsfYch8O+oH9rPuV0xNKUBxTldR
JqbFGHJAQeGW//+XMjHJYpHL//Ifl5z2YxBViV2f5+v//9uA3u7EkNNhYjLx
8QH6QeUphtwtNUi0CfdiSP3/fycPJFX7EosUdQEAVAmM0g==
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {2.1440765857696533, -3.487570285797119}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wsLLkGE65VSxy4Tj1MTEwheLUx8SCU2MvA1AnLkkmoE5ccoT09eKQ
s2RiZArDIYfPpatopE/uOG59srjkaOROHFL/H1szleKSowcAADe+zow=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-1.743593692779541, 0.13560137152671814}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwMB0DKccE4vccRxSYYxMjKtxyIUzsTCtwS61iomRKQyHtlUsTCy4
rCsC6sPtSiYWXHKM5OuzxiHVi9t3oFCRxeUFYKiE45BahceVq2jjO5z6SliY
SnHJ0QUAAHWn0ak=
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-2.8880436420440674, 1.754939079284668}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4PXyEKfwX1ilzmrJ1l+6i1XqpmLpd1wmTg36jdO2qTG4XTJP8CpO
uZ/xFrtxSv5eqmh9FKfsl+mKKcdxyr6K5Z6H20l9hp9wyj1iPI1TboXAG5xy
Jek4pTazn8EldVBkPU5dItNwyPycxI9D18+VLtbbcOiqLjmByyoqAgCQ7vhS

             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-0.5174797177314758, 1.4355648756027222}, {0, 0}],
        InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4F8eazkuuZWs2x7jknMsxGnka4YDOOWmsV7GKRftg1PqO/96nHL1
jNdxymmV4JS6xLwAj5HXcMrFWv/GJfVecgJObTN57+KUK/fCKfXfoR6n1F+L
Bpxy7xn78cidf41L7qcm32rcjqESAADwfvvZ
             "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {-3.095597982406616, 1.0330318212509155}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJw1Ul1Ik2EUPghBQRdCEAYSVBddehtRRIFYN17MkqCgNlzLGpvNUSy7aBdF
YNAvEXVRGUgWMdMkwW6SGC7W0tzXwpzk1n5037b82dwvT+e8W+++73zvec7P
c362y2Q3nGsgot7NLAzGK4cdDqOro5GVE7bebovN3HXM5jRbzI59JnFrrr9R
8PlYZhEmrer9IGoMLvlQiYAc+oAN+DVPJ0OecAXTrMZQDiAOetTG4GusfmLP
tMToRSCxDn1ynZVsEni5V2BcVXKnZM3MfCuDHvB1PwZpBCuMlSk8C3xxxwHf
MLKI0hhnJFORKzx1aYLvw9jDEeMMNhEhTyB57O1cYWOWVPbETfpTx+W0cwn5
MxoQxJDwSsL/RtZ7kiooTtcYD1AtBZtSnDuriZIBOUO7VeBbscntdsehVDMr
L+4z4LDOsTxNUqVxa2btITCfHihrTxXJCC5KDGgiItkWQZE6RauqYpsU43py
0K+Ys4k05QWOpVhYsEXxcvgtZcaUGp6d0VVJnlS2Bn77uE4c6E9vAnnYqnNU
hW2VnuOAW3nh+xjOgwZrHQCybCzDW4FimP68wq1QU40nQoVX3O3jGYl0o79y
RE0UYaStYn82B+8s/aRlvn/FgKQsvFGRvEAUnYuc88f2cbcPd+qDhr50VAsF
W/AO75/TBeXbRi3oVMNRg566h+u0QZdrO5B97DgpXfAJ8A+Uo9KklDGEbmtX
bZeInWXxdy34C/ZWkB9VFTqKgjRIVR5Lgh3mfYzrQInv0SVA+70AffQGQcju
CkMOhpDQ8v8QGv4B36wuQQ==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {7.2957072257995605, 0.9640308022499084}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/mFhEasDl65/cFG8Zv77//vf/58YJv37//f/0/9XdmPV836iaqsn
Q6xP2v9/qGb/+f/59XGDeA4GUdN16O778/+8Z8uZ3z82Xbx6F8283zsYeI8/
/f/v7/87/X/+/0KW+vv/P4sPUOTf71yz+P//r/5G8tf//wwMi/7//36v/ALD
oS9vtvxAsg6Irh/4/3TtymUM6jv+P/oDlfgHkX7Zeen/xj31ZimP/z/C8PmT
r0ve2QLj9/fyL39R3fnn/5v/N//pxzEwvP3/FaID4ZavH0/+e/nfBCT3G83M
v3/fbL3zf7EBQ8x3hOg/ZHOtGHz+v8OWCn79/L/dqff/IyxxCBZi+PHowW8M
XUCw7FDvjp0Xf2NoAFJf88NVun9+/P0bU+7X99hAhhX/v33DtA6k5gswHv5i
iKKzCKdhAMZx3FM=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.081612229347229, 1.6392121315002441}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJwtUktIlFEU/rAWrcpAgiJ6LFqU1KpMCAppU1CLlCioja9RW0wwCuXKHkj0
lIIekAamBlmktSjKxtFqU0mOYxbZZEpS6jA6ko45mV/fub/3597/nu+8vnPP
WV9wPNeXBqB8iY7c/BM5gUB+ZV66hIP+8rISf3HRXn9FcUlxILvAzFYv7GFq
IamjH313cYcgJ3hG8hzs3sfnZCZ/nUrbyL/NHRzgI4ybTyMjxGxklhzhTOMt
sism9Mc8+JMcxaSixuW/A3Rr5ID7Jbk0zoarRMSJQKvCcCVRZ+L2KcbqXynz
PeeFtqoCIHjh7aoUa7juBdkjdKd0fjEXPSTNbsuUl4LnOEi+tKhOrfWA72h8
XCryBtDshHaFmHO3P6jZYHUW4r1J2ll8qI8cswRh54goP1k83XLQvkZloITM
AM87bFA67Bv/mCWT8HVW3WST8j9jFG1Cal87frVEwvFYK48GjyM3M44KxyPM
ppjxAPYIT+cx42sdGNb7WjfYr/ODoftPI2ItwDXtnmrO6FfLQrqax4mTvXSR
mCLfmG/1fZR1CVih+z/SZ1gqHkLHQk3ARbbk0bVgEl+bGsmtPrZCtouYAhKy
+8bQE9NnT7A76CYDiW0L71rqKliu/dvXrbMUvHKEQWkuO80AOpnYTc1IyDJm
HkY9FnvV7aLmK8oiceh1UV2f9P5HG7yefudTz/KS9YGdj5Eh9LYa5k3Q0Mgs
z3IedctUmiw+e24KMs0xjW9kSBPKLw6MqQGbRm3WK2nDaqE5nXJpGdBsHWrh
fyc+Oeo=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {7.303482532501221, 0.9656734466552734}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4B+I+PP//19Mid+X/z/auTbp+keoKiRwKTyewdssS4whE9NE70wG
Bve17AxWarfQZH47yDLI1mmYhEXpmrP8RjHz18/5DKktP/4vjshjqHdEcc7P
R/IpE8+DWDsZChkYviJr+8nPsO/et3//Pz1dG8jAUPUFSeoHA8Ox+nAQa20a
A8N7VL/VMcgz3Pzx7/9DjUyGiLeoriwHxhZD9ZP9tm2KDIxoPn/NsGNS1LH/
XQ/1VQTFUM38v5VPeOu2P/+uTWFi8CxGC87fp+ffAJr0p35eKmaAQd17laFx
Gsg6mI3INh9j+D8Tm6Z//3/838HA8PzPPywx+P/1T0+2qj1/sFr367+Zscc6
HG75y5DHoP0Nq8a//zcwLFgch9VEUgAAUda0+w==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {3.116917610168457, 2.976618766784668}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CNV4W9kDlbdx3EZ8ff/T4imM6jiv8Dk0c3eMv//97/DtLL1d7BN
Xsz/d1c+o5vY8+y/NIM3yMcv/39Fkfl5bEGT15wLuf8f/vj+/d9fZEP//Vzv
YN4IFHt/Es39/379+bqd4RGI+ef/7zf/n6CYuPJEoeHav3//v/zz/9fdh3+R
9f3/s24676Sk/yvX//f/+3njW1Rjjxkk+aYA42Xt+rwlqPb9//+xNvj/0/+B
vtGRSh//o0tqyln9K3++ioXNzQozrJ8B8WuvMIb/N9FDBRxF/1/zxGUwvP2D
LgkKgP/X9Ri0+v/DzUT2y0tzhogidD1QBQvXigSj+e0fOPaA8m93hH25CbMb
Ve/fX+/+3/vy4xuGFMyIjX/uYZe6xHDiTvYvDPV4ALpiEAAAYvrZBQ==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.4918980896472931, 2.806752920150757}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0cH/zBEyAeUmIVP79eb691aN33+jSnzZfsjAQUG50Xr/v/FlFwO9K+A
4RkM8b//f76Mq9m/jUFj4/lH6HL/Xl+9c/n/x7DN527/f47mst+vP9z4//uL
qzjD/T9o+n5+/fb/77c/Ze7OHj+eo8n9efD77edPG56mWAQ8//8LVe72xp//
/3/6X2Lj7PMLzX9/jqx+BqRaIw0MbH7/RvPf31P//3/7X86gZBn26T+Kxn9/
QPx/r9QYQq7//4um7d8vkH8+ajH4YYQKVMFNiayPmKIQPy4pPIslDv6D7Huf
qvb2x1+MWPwGjheGtnkIIUQA/Pj/2+5/qh12hzzcWcgw6fifHxiuAIH7exje
/b/3Hz0wSQNg4wB8cOCP
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.0850383043289185, 1.5208709239959717}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cH/uFgY4phkyUG/MVjY92Ne5+rfvxB1/Lny//pDIqX5RiCTn1Cl/tU
ygAGLgz7/vxAlXrMEGHjqxXw4nFY9o//f1F89t09sq71MpC13e3HN2QngJim
YXPB7K/Vm1Ed+/f/vf8fXoGZ0gzbPm76guz+X7cevQA64Pu7M6oMeb9RXfLr
59PPX36cA3rQ3HjXWzTPnX/y8f+X9U+WuTE4ogfqv1WFt7f1MkwvcWIQWPcf
KeyA6r4uYDf0Eslq2ODIIILsDhB4EzbZmz+qrHVHmwVP71+Ez8Dg56rb/2/8
/3Pb4zjD3P9o4PM/sC3piTzJ//+jxtXHv39AvtpfvSQcI+r/fPn8/+uj8+19
NR++oznlPzg2L8eHc0/6DnPGH4R7/n2PNO1kOPQMzd8Q/O/0qa3X3v3HSA8Q
SSBcg5Ga0PyKHqDYlAMAXTzKHw==
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {1.9146405458450317, 0.9585380554199219}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJx9UU1IG0EY/fDUS8FDwRxy8dBT8dyWHop6KD2IxdaropiIBZMQLSr00EOh
tN56qxTqwbaHolBEqidJaSmJIR4a/AGLgiBuUrdmkzWa7MzrzOwk7m6h3zLf
zM577/ub9uF4X7SFiCauCNc3NNWZTA7NPGwVP/2xibHRWGTkfmwyMhpJ3hqW
tLBeDjikcZzj/1bUTDR3V1EXqwrW5HEEjaOAP5x5birKOzAVeqpZLqMkHUOe
jhxxoN1FXywGbkzSdbqxwqzUsw11V+MNDFHqCnW8mEW2451bX6MaZ/8OIUEZ
mNyY/nlZqMyBe0+7pVxkLoV3pn2NrFJoMaeD8N4PGrKUf0Ikcsr+2du9j+Ou
QLl0hhD/Kmkc9TIVSt6pfN4WupPqubGfYsa6b2oF4z196wWWxdGq6uo0xqz8
ABXx6Yca+anK2zQHCxnT3FzLfznbK+SY7X+A2vEFXs7TVvnqL19zamYOF+o0
joAL8XlDMsk6zLX1zCVgc1dzyfiN6oO2u4NLz70Pq+OeAK9uX6M3dj2IMRmB
bj56XEbAagKsrH8fqJuvdd9+aRF2FgeNtrkf5bBlGZWgyG3ER/TW8m+gv8gS
2EQ=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.1407405585050583, 2.3023624420166016}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxVUjtLA0EQXqzEykYrG8sUgp22ARFs46NP8Aw2CSaCROwiYmFvYSmBaBM7
0X+QRg0IUbQQizMmdzmTS3LP3XF2b+9yGdjXzOw3M9/MYiaf2psihBSncUul
j5KFQrq0OYuP7VxxP5tTdjdyh0pWKaxmuNuCXBAXHxeNXh7eTWBSgzbPifkO
pX/8rzWBZgmfUDQJHBw2TAqTGIHVlBoVoB2PyRj47/xCuISpMnAjDx2gvoy2
44ncgFq8EKv8oOyQJWBNAU+DbKjJD6+r0VOt9MpjRPWDemf7DlDGKDRWkqQl
oknkKsAtfzBbWZ+TNcJjUEmDA1u4sRvlXA/RIm6fTRva/bNLkmi/McHGT0iO
78MIvyW2Lir3gsMwHQNtrMuAlDvzmtD8SpYo2OaXi1nla4Sc+AefYA3Dvmpg
DDBHA6zrNVJ3dZ78mBnD60MLnN7MS9i6sW3UC1w+OmOeuXQ5ywgq2lAB2a9R
jGwD/jzQqlbNUfGPiWREyD5iMJ59U+JdRbge9XkpWlOEcqAnGOPLwfgZGAyQ
NvTV8eUKNCZ+co8n+A7GxAm1cZmYhGjSgl0VsxZoRSf+AQiw6KE=
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->0], {0.5740781426429749, 1.239707589149475}, {0, 0}], 
       InsetBox[
        PaneBox[
         FrameBox[
          StyleBox[
           
           DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
            Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/8HI/gIxJ9vfMWUeNH94f+nbIb1mO7+u9/VjYHBTpThxL3/P1Fk
fv3/tL6ZsenKnjyDwB///6DI/ft/MJhh2dmP/9Wl6zAs+3k3qPL7/9+CDAwZ
d9Dc8vffuqK9//7/qGDg+P//DZrc11v/d75sSP5vlIth5Idv8wPPPp0JDP3g
f7/Q5J5Oe/Z//sW0LCaG3tfo+u4znDjb53P45L4FGn///UeJtl+OUxe4lAMZ
7/a4fkDX93rtmbuX///f+t6cATOm76x69f/b+//X039jyv0DWxF1LW01htT/
f6///P/zN///iz/oMn//fv7/7lG461RfjJT1DxQR/y8cPrjoNoY2kPS/L0Fl
bc+xyPz///X72p1FNx9g00ZNAADihdl2
             "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
            TagBox[
             TooltipBox[
              DynamicBox[ToBoxes[
                Pane[Charting`ChartLabelingDump`i$$, {
                  UpTo[15], 
                  UpTo[15]}], TraditionalForm],
               ImageSizeCache->{15., {5., 10.}}],
              DynamicBox[
               ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
             Annotation[#, 
              Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
            DynamicModuleValues:>{}],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           Opacity->1,
           FontOpacity->1,
           $CellContext`BackFaceOpacity -> 1],
          LabelStyle -> {},
          Frame -> True,
          Background->None,
          BaselinePosition->Automatic,
          ContentPadding->False,
          FrameMargins->2,
          FrameStyle->None,
          RoundingRadius->4,
          StripOnInput->False],
         FrameMargins->
          0], {1.596276879310608, 1.0446619987487793}, {0, 0}]}}}},
   AspectRatio->1,
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{288., Automatic},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->All,
   PlotRangePadding->{{
      Scaled[0.05], 
      Scaled[0.05]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Output",
 CellChangeTimes->{3.771714370287921*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"33a8b7d2-35db-4476-888e-80749f139c22"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1352, 829},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 241, 4, 96, "Title",ExpressionUUID->"fe0a5742-7e40-41e8-a196-51bb8d1f63f1"],
Cell[CellGroupData[{
Cell[846, 30, 156, 3, 67, "Section",ExpressionUUID->"e2d77acc-b928-4151-ac97-13499fba5b8b"],
Cell[1005, 35, 1319, 25, 56, "Text",ExpressionUUID->"0bf39b7d-0294-470d-acf9-f14e8d4ae4eb"],
Cell[2327, 62, 231, 3, 37, "CodeText",ExpressionUUID->"90042eeb-99f9-47a5-81e7-ea54957be6cf"],
Cell[2561, 67, 429, 9, 28, "Input",ExpressionUUID->"cfa06733-16f0-4a57-80cb-e175c6416245"],
Cell[2993, 78, 345, 7, 28, "Input",ExpressionUUID->"a66f552f-6124-4243-9d83-0a7afa6c83ef"],
Cell[CellGroupData[{
Cell[3363, 89, 976, 18, 28, "Input",ExpressionUUID->"bb04283e-c475-4964-8d54-8166f0548d59"],
Cell[4342, 109, 160819, 4266, 377, "Output",ExpressionUUID->"3874e28a-22f8-4dc1-9864-df53871a5f3b"]
}, Open  ]],
Cell[165176, 4378, 247, 5, 37, "CodeText",ExpressionUUID->"0a81f931-8b31-4219-b4d4-7407f9b5418b"],
Cell[165426, 4385, 641, 14, 28, "Input",ExpressionUUID->"03bbe2f1-10ce-4fd5-a8be-0d147c0d4d64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166104, 4404, 164, 3, 67, "Section",ExpressionUUID->"c0670f5c-db02-42c6-9811-a51fb13f0a99"],
Cell[166271, 4409, 434, 8, 56, "Text",ExpressionUUID->"881da0b1-34ec-42d2-886a-c9f12127a7e6"],
Cell[CellGroupData[{
Cell[166730, 4421, 166, 3, 53, "Subsection",ExpressionUUID->"b90c6092-a31e-45c9-bc33-1a8c304ad43e"],
Cell[166899, 4426, 232, 4, 37, "CodeText",ExpressionUUID->"6df85c53-3975-4066-9f0e-fe625db31c14"],
Cell[167134, 4432, 968, 18, 28, "Input",ExpressionUUID->"be3d5e49-f057-4906-ad80-ad87bcd24b42"],
Cell[168105, 4452, 199, 3, 37, "CodeText",ExpressionUUID->"203523d7-58a1-4b89-8258-f56b5490f355"],
Cell[CellGroupData[{
Cell[168329, 4459, 280, 6, 28, "Input",ExpressionUUID->"e9cb3b2f-e6cf-4aee-918e-c3b398a2b787"],
Cell[168612, 4467, 6905, 154, 47, "Output",ExpressionUUID->"5d998a3e-51eb-4aab-9538-e8c8364da72b"]
}, Open  ]],
Cell[175532, 4624, 228, 5, 37, "CodeText",ExpressionUUID->"b0e57079-de01-4dbb-b2a5-0093b78f8ce5"],
Cell[175763, 4631, 757, 17, 28, "Input",ExpressionUUID->"3c67d5ec-6e17-4106-842d-9339bfdc74a2"],
Cell[CellGroupData[{
Cell[176545, 4652, 239, 5, 28, "Input",ExpressionUUID->"54859cd8-04b6-413a-9c5c-63dc767c3af8"],
Cell[176787, 4659, 5234, 107, 47, "Output",ExpressionUUID->"7ec04e8f-acf9-4bca-a1fe-865d5400d3d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182058, 4771, 293, 7, 28, "Input",ExpressionUUID->"07e47594-0efa-4665-9cc8-c886325314ba"],
Cell[182354, 4780, 263, 5, 32, "Output",ExpressionUUID->"9b99725a-35e9-460e-9703-079dc721398b"]
}, Open  ]],
Cell[182632, 4788, 275, 6, 37, "CodeText",ExpressionUUID->"f161c240-a7bb-4825-ad46-e47fad1f78cc"],
Cell[CellGroupData[{
Cell[182932, 4798, 903, 19, 48, "Input",ExpressionUUID->"b87da9c1-8086-42fd-9692-2760db0e634d"],
Cell[183838, 4819, 76652, 1360, 90, "Output",ExpressionUUID->"eaeff4c7-ee0f-4dc6-b538-854ffb80fb14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260527, 6184, 240, 5, 28, "Input",ExpressionUUID->"fb62dba9-d0dd-4505-b85a-ad3f0169223f"],
Cell[260770, 6191, 4274, 91, 47, "Output",ExpressionUUID->"de7d8618-7657-4f8c-a905-275f2cc3a64d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[265093, 6288, 181, 3, 53, "Subsection",ExpressionUUID->"66d986cc-70f2-4a1e-8fe0-cfe912c1201b"],
Cell[265277, 6293, 2976, 70, 249, "Code",ExpressionUUID->"cd29f688-6463-4598-aeb0-9f4d368c00c4"],
Cell[268256, 6365, 1428, 29, 86, "Input",ExpressionUUID->"5be55884-988a-4412-9f3b-a33ac82298a2"],
Cell[CellGroupData[{
Cell[269709, 6398, 456, 8, 28, "Input",ExpressionUUID->"3cd50ab6-a416-49e0-af79-bc31221f8c70"],
Cell[270168, 6408, 512937, 8921, 88, "Output",ExpressionUUID->"9d4c40a0-afe0-476a-888a-ddb3c27b20e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783142, 15334, 337, 6, 28, "Input",ExpressionUUID->"253c52fd-ca45-4cab-b770-2821b2f9bca0"],
Cell[783482, 15342, 576626, 10529, 88, "Output",ExpressionUUID->"4ce31bf3-6be2-4a22-878d-20c232dfaa85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1360145, 25876, 337, 8, 48, "Input",ExpressionUUID->"d335fc01-2b79-4387-90e7-576f1d7d5d1d"],
Cell[1360485, 25886, 271, 4, 32, "Output",ExpressionUUID->"05d42c04-8339-4698-9d81-72ebac691251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1360793, 25895, 578, 13, 28, "Input",ExpressionUUID->"2258e947-0b11-4429-bc36-765e9f8512f2"],
Cell[1361374, 25910, 282, 7, 32, "Output",ExpressionUUID->"40b6fb32-a6b0-4444-bb49-2a34628beb17"]
}, Open  ]],
Cell[1361671, 25920, 553, 14, 48, "Input",ExpressionUUID->"0fe5d873-f792-40bb-bf77-32b9258110d0"],
Cell[CellGroupData[{
Cell[1362249, 25938, 148, 3, 28, "Input",ExpressionUUID->"64efb54b-48b4-410a-8517-9dca63b75461"],
Cell[1362400, 25943, 254, 6, 32, "Output",ExpressionUUID->"727ed046-2b13-4083-bc7b-68df3531a72b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1362691, 25954, 388, 11, 44, "Subsubsection",ExpressionUUID->"854b7638-4d2b-44af-81f0-3a1926ca25b8"],
Cell[1363082, 25967, 795, 20, 28, "Input",ExpressionUUID->"c623fabb-5a94-44eb-89ab-9361377c308c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1363914, 25992, 173, 3, 44, "Subsubsection",ExpressionUUID->"e4ff32c3-b981-4b7c-adbc-4893c6b840eb"],
Cell[1364090, 25997, 796, 18, 28, "Input",ExpressionUUID->"1a329a7a-208c-43fc-8904-293c06846d97"],
Cell[1364889, 26017, 345, 8, 28, "Input",ExpressionUUID->"484ed5b8-3f13-4251-ae13-0ea57d176cfd"],
Cell[CellGroupData[{
Cell[1365259, 26029, 834, 21, 28, "Input",ExpressionUUID->"2b7e9489-c6af-4a0f-ad9c-b1d674165b36"],
Cell[1366096, 26052, 9327, 194, 47, "Output",ExpressionUUID->"3e1e04ac-9922-45a9-939d-df8626e109df"]
}, Open  ]],
Cell[1375438, 26249, 9657, 205, 43, "Input",ExpressionUUID->"bc928d26-f831-4edc-8925-cc04f9ec68e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1385132, 26459, 377, 11, 44, "Subsubsection",ExpressionUUID->"91a43d56-fd69-47e7-b091-659cd41bc799"],
Cell[CellGroupData[{
Cell[1385534, 26474, 1106, 29, 105, "Input",ExpressionUUID->"1b0b2d90-e189-44e1-a52b-af8abbeb4d0e"],
Cell[1386643, 26505, 181, 3, 32, "Output",ExpressionUUID->"c81059b1-f0fe-409d-97d4-2d61f727a2ca"]
}, Open  ]],
Cell[1386839, 26511, 585, 14, 28, "Input",ExpressionUUID->"19ff763e-d5ae-4fe8-8335-3e5eada90e6c"],
Cell[CellGroupData[{
Cell[1387449, 26529, 484, 13, 28, "Input",ExpressionUUID->"7aee9c08-b551-4776-ade5-bfd4e624b070"],
Cell[1387936, 26544, 9761, 200, 47, "Output",ExpressionUUID->"c7ac60e6-949a-4912-87f3-f4fd9701a62f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1397770, 26752, 159, 3, 67, "Section",ExpressionUUID->"f09d7984-2384-4230-b463-87d1325cc2e9"],
Cell[CellGroupData[{
Cell[1397954, 26759, 181, 3, 53, "Subsection",ExpressionUUID->"032f982e-ef52-4c71-9727-8ed48d84984d"],
Cell[CellGroupData[{
Cell[1398160, 26766, 671, 16, 28, "Input",ExpressionUUID->"4d645742-cfa2-4247-a9c3-b5bd490788b3"],
Cell[1398834, 26784, 926, 21, 71, "Output",ExpressionUUID->"5513ecca-779f-470b-a176-046ca7e9a550"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1399797, 26810, 571, 14, 28, "Input",ExpressionUUID->"f4564381-48c6-4e7f-811f-d38b4ae1e161"],
Cell[1400371, 26826, 950, 21, 62, "Output",ExpressionUUID->"ee7d5064-c645-4d43-88c0-2290cf3adea7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1401370, 26853, 323, 8, 53, "Subsection",ExpressionUUID->"e1d6e7d9-f863-4c16-892c-f6e2701de71e"],
Cell[CellGroupData[{
Cell[1401718, 26865, 411, 10, 48, "Input",ExpressionUUID->"8bf9bdbb-4dd4-4617-ae0e-bde0b6b2968f"],
Cell[1402132, 26877, 230, 4, 32, "Output",ExpressionUUID->"ef7230cf-8681-4cce-8bf8-21befb46ad82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1402399, 26886, 631, 14, 28, "Input",ExpressionUUID->"01758d63-8f02-4ff4-8aa5-2bf47719c3e1"],
Cell[1403033, 26902, 251, 6, 32, "Output",ExpressionUUID->"5628a9dd-6d71-471a-a56c-aae8580ba93a"]
}, Open  ]],
Cell[1403299, 26911, 553, 14, 48, "Input",ExpressionUUID->"7388e50b-fcba-484b-b152-2e995bb0386d"],
Cell[CellGroupData[{
Cell[1403877, 26929, 148, 3, 28, "Input",ExpressionUUID->"3e3dca7a-e06a-4164-b693-0999f31a34d3"],
Cell[1404028, 26934, 249, 6, 32, "Output",ExpressionUUID->"be57b1ef-290e-45a6-a774-7c461339bfa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1404314, 26945, 437, 12, 44, "Subsubsection",ExpressionUUID->"e7fec1ec-650b-42d7-8750-9008c0b3482e"],
Cell[1404754, 26959, 846, 21, 28, "Input",ExpressionUUID->"8a1491b4-614b-4888-9d5b-6d40b20d5ebc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1405637, 26985, 430, 12, 44, "Subsubsection",ExpressionUUID->"f2cd47a9-e6cb-464a-8b59-ab6244fccc26"],
Cell[1406070, 26999, 1128, 31, 105, "Input",ExpressionUUID->"7bfed89a-04de-4722-8db7-d3bd2d68c5b9"],
Cell[1407201, 27032, 585, 14, 28, "Input",ExpressionUUID->"c292d22c-9bf0-43d6-ba51-d2c626fb0c91"],
Cell[CellGroupData[{
Cell[1407811, 27050, 484, 13, 28, "Input",ExpressionUUID->"f5a13c5c-9bcf-4b4c-ba1e-9cb81207add6"],
Cell[1408298, 27065, 1139, 24, 47, "Output",ExpressionUUID->"24223211-f3b0-4ecb-9325-4a1f0c7dd91f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409498, 27096, 373, 9, 53, "Subsection",ExpressionUUID->"7b1afc38-ccaf-42c5-8249-ed671720f568"],
Cell[CellGroupData[{
Cell[1409896, 27109, 464, 11, 48, "Input",ExpressionUUID->"16574dda-d464-4d19-92ad-7ea64847278a"],
Cell[1410363, 27122, 254, 4, 32, "Output",ExpressionUUID->"9d0a4ebe-9e4a-4e52-8a72-bd9cba3e67a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1410654, 27131, 679, 14, 28, "Input",ExpressionUUID->"2a078536-8f81-42d3-b916-ae0cba98904a"],
Cell[1411336, 27147, 273, 6, 32, "Output",ExpressionUUID->"a08076fe-ee00-4228-9d7c-f20ee9cab8da"]
}, Open  ]],
Cell[1411624, 27156, 553, 14, 48, "Input",ExpressionUUID->"824fabb2-b4b4-46d2-a6fc-e7e11500cf58"],
Cell[CellGroupData[{
Cell[1412202, 27174, 148, 3, 28, "Input",ExpressionUUID->"6cc56443-bff1-42cd-ab91-2697904eab81"],
Cell[1412353, 27179, 251, 6, 32, "Output",ExpressionUUID->"cc3b57df-12b7-4636-a4cf-7c057959bc34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1412641, 27190, 487, 12, 44, "Subsubsection",ExpressionUUID->"735673c4-496c-41fe-8664-c4664edf88a7"],
Cell[1413131, 27204, 848, 21, 28, "Input",ExpressionUUID->"6a436662-5fa8-455b-b8f7-87d1c200c50b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414028, 27231, 168, 3, 53, "Subsection",ExpressionUUID->"3772c025-6ac5-4dfd-a28f-7402d1d4b366"],
Cell[1414199, 27236, 351, 10, 28, "Input",ExpressionUUID->"455596a8-7399-4765-9eb8-bba4eb547ce3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414587, 27251, 427, 12, 53, "Subsection",ExpressionUUID->"4b4afa33-5fe9-4e98-b0fd-65344bc92714"],
Cell[1415017, 27265, 1128, 31, 105, "Input",ExpressionUUID->"dcb1c464-61e1-4df6-b2ca-aa689506d7f4"],
Cell[1416148, 27298, 585, 14, 28, "Input",ExpressionUUID->"805a7954-c770-4105-883c-4901114dae08"],
Cell[CellGroupData[{
Cell[1416758, 27316, 484, 13, 28, "Input",ExpressionUUID->"951edc1e-3fec-43b5-a07a-9bef2721cb9f"],
Cell[1417245, 27331, 903, 20, 47, "Output",ExpressionUUID->"a0da53af-4855-46d7-8d67-23ca9a46eade"]
}, Open  ]],
Cell[1418163, 27354, 536, 13, 28, "Input",ExpressionUUID->"a108e232-4f21-481c-99a9-b8098e19ec6a"],
Cell[CellGroupData[{
Cell[1418724, 27371, 967, 25, 48, "Input",ExpressionUUID->"ea90030a-fa1c-42fb-928c-86813fb1f1a6"],
Cell[1419694, 27398, 1987, 43, 141, "Output",ExpressionUUID->"5ed33a6c-67cf-42a6-99ca-106ec2e6cd38"],
Cell[1421684, 27443, 490, 10, 23, "Message",ExpressionUUID->"ca4546d2-e62d-4725-9bd8-81644dcc55e7"],
Cell[1422177, 27455, 377, 8, 23, "Message",ExpressionUUID->"71d4e52b-7beb-4067-a1ce-18f168830817"],
Cell[1422557, 27465, 490, 9, 23, "Message",ExpressionUUID->"8d993f3e-c493-430b-814a-3a26e3f6c49c"],
Cell[1423050, 27476, 490, 10, 23, "Message",ExpressionUUID->"7292acbb-0443-4cfa-866e-7f0d1d9a6f46"],
Cell[1423543, 27488, 377, 8, 23, "Message",ExpressionUUID->"781cc79d-df2d-49f7-88f8-4c5a0a5356f1"],
Cell[1423923, 27498, 489, 9, 23, "Message",ExpressionUUID->"0acdb0e2-96ec-4a8b-b7e7-ac9f588ffe2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1424449, 27512, 1368, 31, 48, "Input",ExpressionUUID->"95adbd45-a102-464c-8c71-37212610aa42"],
Cell[1425820, 27545, 282, 6, 32, "Output",ExpressionUUID->"ebb30626-d86a-44f8-9875-f31022f4031f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1426175, 27559, 155, 3, 96, "Title",ExpressionUUID->"7d77d778-79db-475d-ba03-f24dd2763c5b"],
Cell[CellGroupData[{
Cell[1426355, 27566, 155, 3, 67, "Section",ExpressionUUID->"dd791fdb-1561-45fe-867a-9c5c34dd246c"],
Cell[1426513, 27571, 507, 10, 56, "Text",ExpressionUUID->"f76dadcc-fcf0-4699-9512-2c707452b63d"],
Cell[1427023, 27583, 330, 8, 37, "CodeText",ExpressionUUID->"cf5108bc-98df-4aac-95fd-a9c5d0690031"],
Cell[1427356, 27593, 1688, 29, 48, "Input",ExpressionUUID->"6c617d62-ce15-4d25-a368-48bfaba12afa"],
Cell[CellGroupData[{
Cell[1429069, 27626, 221, 4, 53, "Subsection",ExpressionUUID->"b84d282a-f92a-4ff3-9e0e-dffff649e47e"],
Cell[CellGroupData[{
Cell[1429315, 27634, 293, 4, 44, "Subsubsection",ExpressionUUID->"f7adf46a-d6df-49a0-9302-efff18b1c80c"],
Cell[CellGroupData[{
Cell[1429633, 27642, 475, 9, 48, "Input",ExpressionUUID->"492bae76-a971-41ab-a326-112cebabe95c"],
Cell[1430111, 27653, 124246, 2587, 582, "Output",ExpressionUUID->"bbc1c622-2d4e-4754-ba32-55a3c2a42164"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1554394, 30245, 355, 7, 28, "Input",ExpressionUUID->"8895ec99-34d7-4e68-bb22-86f4c456e43a"],
Cell[1554752, 30254, 4814, 105, 246, "Output",ExpressionUUID->"defc9a30-31c0-4741-8d36-2acb1811cea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1559603, 30364, 161, 3, 30, "Subsubsubsection",ExpressionUUID->"92bb55ee-afee-4df2-8d93-27691df57c1c"],
Cell[1559767, 30369, 404, 9, 28, "Input",ExpressionUUID->"f750522d-eace-4d8e-8dc4-5d7ea14c0945"],
Cell[CellGroupData[{
Cell[1560196, 30382, 244, 4, 28, "Input",ExpressionUUID->"6f8bd9c7-9062-4fc5-9dce-4422d3902d3e"],
Cell[1560443, 30388, 44518, 888, 150, "Output",ExpressionUUID->"eabf93a6-413c-4986-8d7c-229dadc374d3"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1605022, 31283, 247, 4, 36, "Subsubsection",ExpressionUUID->"37d87131-a10b-4009-ab0e-ff79f831021a"],
Cell[CellGroupData[{
Cell[1605294, 31291, 453, 9, 48, "Input",ExpressionUUID->"5b9dcd2a-3595-4207-8c48-056ae75ead95"],
Cell[1605750, 31302, 123711, 2584, 582, "Output",ExpressionUUID->"e340f147-fc7c-40fe-83f1-05e8b55de0d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1729498, 33891, 161, 3, 30, "Subsubsubsection",ExpressionUUID->"29bd20aa-c895-4a36-b125-6eba6c8127d5"],
Cell[1729662, 33896, 459, 10, 28, "Input",ExpressionUUID->"63c705bc-1aa9-4a89-8478-96a868d4557c"],
Cell[CellGroupData[{
Cell[1730146, 33910, 299, 5, 28, "Input",ExpressionUUID->"75bb5056-e92c-481c-aec4-d165b4574a05"],
Cell[1730448, 33917, 43351, 871, 150, "Output",ExpressionUUID->"316d7468-5341-4b1f-845f-def36e8d3482"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1773860, 34795, 273, 6, 36, "Subsubsection",ExpressionUUID->"f684709d-c0f8-429c-bb74-18456cb090c6"],
Cell[CellGroupData[{
Cell[1774158, 34805, 404, 8, 66, "Input",ExpressionUUID->"c11b3709-aa26-4337-b8a7-ddd5c96b2ca6"],
Cell[1774565, 34815, 124231, 2586, 582, "Output",ExpressionUUID->"d495f91b-85be-4819-bfd7-3bdfb368665b"]
}, Open  ]],
Cell[1898811, 37404, 152, 3, 28, "Input",ExpressionUUID->"6cfc934b-88d3-4257-990c-81b7e9b529cf"],
Cell[CellGroupData[{
Cell[1898988, 37411, 161, 3, 30, "Subsubsubsection",ExpressionUUID->"b000ad86-55ab-4dc8-bfe8-33cde89f6c3f"],
Cell[1899152, 37416, 463, 10, 28, "Input",ExpressionUUID->"4768d639-cf46-4a13-8678-fbee66a7efd4"],
Cell[CellGroupData[{
Cell[1899640, 37430, 295, 5, 28, "Input",ExpressionUUID->"639bd400-3778-4880-8ca6-d30a7008dd77"],
Cell[1899938, 37437, 46728, 924, 82, "Output",ExpressionUUID->"f43a373b-9f88-4342-8f1d-9065b12bbb26"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1946727, 38368, 249, 4, 36, "Subsubsection",ExpressionUUID->"3cb124fb-4ded-4630-b484-f47f817c734f"],
Cell[CellGroupData[{
Cell[1947001, 38376, 451, 9, 28, "Input",ExpressionUUID->"b6daf586-6c1b-46ca-a162-e129777ebc52"],
Cell[1947455, 38387, 124206, 2587, 583, "Output",ExpressionUUID->"0ab6ade8-6526-407c-a755-535a7111412b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2071698, 40979, 159, 3, 31, "Subsubsubsection",ExpressionUUID->"a6f9b2d4-5035-42f1-bdb2-ae8aaf4942ae"],
Cell[2071860, 40984, 406, 9, 28, "Input",ExpressionUUID->"33811001-0b25-4755-98c5-befe07c67c9c"],
Cell[2072269, 40995, 506, 10, 28, "Input",ExpressionUUID->"e12ee345-1374-4d5a-86a7-23bc39b43c9c"],
Cell[CellGroupData[{
Cell[2072800, 41009, 428165, 7904, 456, 353881, 6686, "CachedBoxData", "BoxData", InheritFromParent,ExpressionUUID->"b113b300-e77a-4786-b2ee-247cfdc79907"],
Cell[2500968, 48915, 441, 10, 23, "Message",ExpressionUUID->"319af7a6-d319-48e5-9ff7-1e5198af584c"]
}, Open  ]],
Cell[2501424, 48928, 411, 8, 28, "Input",ExpressionUUID->"d8f788cf-a9e0-45ec-ac59-2b2b4bd7c69a"],
Cell[CellGroupData[{
Cell[2501860, 48940, 421307, 7719, 384, 351679, 6577, "CachedBoxData", "BoxData", InheritFromParent,ExpressionUUID->"fb83a133-8cd8-48b1-9749-96f0c9bacf17"],
Cell[2923170, 56661, 441, 10, 23, "Message",ExpressionUUID->"db155ed5-7f23-44b7-ae8e-bc83299f8da2"],
Cell[2923614, 56673, 438, 10, 23, "Message",ExpressionUUID->"98fc2ab0-671a-4264-80bf-749187d1e560"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2924089, 56688, 243, 4, 28, "Input",ExpressionUUID->"6014e775-a6f1-4efc-84e8-debbf7be24e5"],
Cell[2924335, 56694, 38971, 795, 82, "Output",ExpressionUUID->"55bf8707-fd69-40f6-8bfc-37442d27db8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2963367, 57496, 180, 3, 44, "Subsubsection",ExpressionUUID->"5aceb55d-8527-4d27-87a4-c9ad80fab547"],
Cell[CellGroupData[{
Cell[2963572, 57503, 1403, 32, 48, "Input",ExpressionUUID->"522a8782-52b7-46b1-9d0b-c5bc6d8dda4c"],
Cell[2964978, 57537, 25088, 542, 246, "Output",ExpressionUUID->"c4dde5fd-c4b1-42f9-b9e1-bd984a48abe2"]
}, {2}]],
Cell[CellGroupData[{
Cell[2990100, 58084, 1425, 34, 48, "Input",ExpressionUUID->"fc07d66e-aea3-4eb5-9164-5379ce319c61"],
Cell[2991528, 58120, 24764, 538, 218, "Output",ExpressionUUID->"153702d4-6ce5-495d-8ada-04ff9287a805"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3016329, 58663, 321, 6, 28, InheritFromParent,ExpressionUUID->"4720652c-2018-4557-86b2-d6e9022fc2e2"],
Cell[3016653, 58671, 167, 2, 32, "Output",ExpressionUUID->"2bf4b26a-0ec8-4c40-aac1-2cb6bcb4da10"]
}, Open  ]],
Cell[3016835, 58676, 268, 6, 28, "Input",ExpressionUUID->"00e08138-f27b-4d61-bddb-f0cb6d465e74"],
Cell[3017106, 58684, 130, 3, 28, "Input",ExpressionUUID->"8f622f62-bd4a-4236-8043-52a79d94d574"],
Cell[CellGroupData[{
Cell[3017261, 58691, 327952, 7721, 458, "Input",ExpressionUUID->"502eed6b-bfd5-4965-9489-0b288f98a56e"],
Cell[3345216, 66414, 329477, 7724, 462, "Output",ExpressionUUID->"33a8b7d2-35db-4476-888e-80749f139c22"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

