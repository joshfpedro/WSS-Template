(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1452705,      28049]
NotebookOptionsPosition[   1439006,      27815]
NotebookOutlinePosition[   1439817,      27842]
CellTagsIndexPosition[   1439774,      27839]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Transfer Learning with Invertible Neural Networks", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.7719072602550945`*^9, 
  3.7719072693823195`*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell["Joshua Pedro", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.771907276544566*^9, 
  3.771907278502771*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell["Etienne Bernard and Jerome Louradour", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
  3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
  3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, {
  3.7719072855185986`*^9, 
  3.771907295429405*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"],

Cell[CellGroupData[{

Cell["Dataset", "Section",
 CellChangeTimes->{{3.7716747241464777`*^9, 
  3.7716747251934824`*^9}},ExpressionUUID->"d2ed762a-69be-4433-b6a2-\
383fee6233b9"],

Cell[TextData[{
 "Given a set of grayscale images of handwritten digits (",
 Cell[BoxData[
  FormBox[
   RowBox[{"28", "\[Times]", "28"}], TraditionalForm]],ExpressionUUID->
  "ad2a8c0b-abc5-4a2d-840b-bcd9fc6eaa2b"],
 " pixels) from zero to eight, can we train a neural network to first learn \
the distribution from which these images can be generated? Can we then try to \
use this network to generate the digit nine from a small number of examples? \
For this task, we\[CloseCurlyQuote]ll use the classic MNIST dataset which \
consists of ",
 Cell[BoxData[
  FormBox["60000", TraditionalForm]],ExpressionUUID->
  "de86f893-b688-4e15-8ce4-1b3e314a5870"],
 " training images."
}], "Text",
 CellChangeTimes->{{3.771675570646763*^9, 3.7716755905970616`*^9}, {
  3.7716758271175227`*^9, 3.771675861368683*^9}, {3.7716758966675577`*^9, 
  3.7716759024836607`*^9}, {3.771675998447772*^9, 3.771676016327707*^9}, {
  3.7716760548219957`*^9, 3.7716760780858135`*^9}, {3.7716775070057783`*^9, 
  3.7716775515139*^9}, {3.7716776279680853`*^9, 3.7716776821928196`*^9}, {
  3.7716777855712905`*^9, 3.771677857087284*^9}, {3.77167794677822*^9, 
  3.7716779499835863`*^9}, {3.7716780205410805`*^9, 3.771678048825776*^9}, {
  3.7717113505911713`*^9, 
  3.771711411466216*^9}},ExpressionUUID->"a50765e9-21ca-4a5a-942e-\
206975429317"],

Cell["First we import the data from the Wolfram Data Repository:", "CodeText",
 CellChangeTimes->{{3.7716889406775923`*^9, 3.7716889618864436`*^9}, 
   3.771689091073711*^9},ExpressionUUID->"18aad861-086f-4bf3-9c9a-\
12f71b27cdf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnist", "=", 
   RowBox[{
    RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716747464114532`*^9, 3.7716747662161694`*^9}, {
   3.771678236957342*^9, 3.7716782418142366`*^9}, 3.771678734469898*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"96bf9321-f4d6-4692-b3a9-eee9936b2b1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistplot", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"mnist", ",", "90"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716836440942717`*^9, 3.7716836765419974`*^9}, {
  3.771712160279169*^9, 3.7717121677277956`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"1d0f40fe-65a5-4d34-b792-100dc9dbff3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FeatureSpacePlot", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"digits08", ",", "90"}], "]"}], ",", "gen9"}], "]"}], ",", 
   RowBox[{"LabelingSize", "\[Rule]", "15"}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7716836784411087`*^9, 3.7716837123073425`*^9}, {
   3.7716839787517614`*^9, 3.7716840215593743`*^9}, {3.7716880684656935`*^9, 
   3.771688070127359*^9}, {3.7717121950747957`*^9, 3.771712201497428*^9}, {
   3.771712743804612*^9, 3.7717127663344593`*^9}, {3.7717128061194525`*^9, 
   3.7717128679975615`*^9}, {3.7717129505519843`*^9, 3.7717129649990077`*^9}, 
   3.77171301517854*^9, {3.771713054877061*^9, 3.7717130570587835`*^9}, {
   3.771713088787491*^9, 3.771713089030876*^9}, {3.7717131579626713`*^9, 
   3.771713158713211*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"5b2b47bc-aa37-4409-bd7c-53b86a6643cd"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {Opacity[0], PointBox[CompressedData["
1:eJwllH9MVWUYxw8/NeEiXKiEuO7oH1YOLVu7czjiJM4MDRJWYpo7XLn0B6L4
c1pip6axzOksjMnIXROnlqulaU003tRhNaw7S+mGk1OOK5hxr5J0LwjE+3nZ
2HPf9zw/vt/n+T7vFM+aEm+spmkVY//Sjv0ZI95kQ/7YtTtdWuP3Y8FWee50
TBbyXHx8nLwX4W9G5L15sHkYW+2J5I9ZX9pUDb/7Jy/Ie+u3+g5pxY6QLu+t
RHeGjLevLZpI/uzgHRmnt38cK7+Lnt5Eac2uLY9i350XkfFG/u4/pZ8QIga/
s2/8J8+2acRzvp44TJ5teQnk/2rOTXm2nnAng6fwsgNeA1Yqdfv+mCCtuVXv
ln6Gs4J6WjTLSb7tm+5Rr3YJdbTkmoDEYdeE7oGn9P0k/IefU3jaiiZJq+f0
p5A34Rp4rOXz4W9/0urAv9MNDr18bSw4nzo3Sn+6iqhvtZz9lbihMyF5r3s9
ieB9qIK++fa+DX6roVDx7owyH/FsNnPTs0tjqH+4gDlpohyc1swHA+RtGe6B
z7q5GeAtm9ABz/nVmeAZ8PaR71zJY+R3NKdxP30vetAqVhFnF9Tcxe/58Hhw
mYO98NzjSmBuv9xGLyLzJrzFpg3MUfusnnmI5o2PgLOgIUbN+xb5fS95yKdP
PqXO1a4RdNWzknn5oge4N9sC8PIdrgKf/uZs5uLrXjkOXv5ccFhGNBW8ifsH
wPt3o9K1cQUcZvnJFvryjou+i4anr5Pn1RkKd/23Ko+/EV0ZJUdV33+qhZ/+
8MRR9LNTMEffYqeq9/KVfvLaqXH4lSx0Mrcp+9kbcSyO7+JDZz/7U9sDPyum
cRBdPzltiPvXS9kLLWNBFjztQ4pn2+eZ5LVz0rGROvpgOZWe9e2neqn/YiW6
1W4spb4eKUPf2gsp6MicVcn+aj+vCuI/rZT5+1bX0SfrmY1YcbApHnsiXenr
vWX039w8PY05FK6Fj9nyj5qPfx7vgPVl5QPmlzKD/RAfdbTCa/UlcPgOjCqe
+/6NlXH2xcAZ+rnGn6VwNsFDz4tXe7Ct+2vqVIUmoYcbV8/Tr9d61XvRtVC9
I/kpSt93HOjdun9J6Ti3nXlqxUPsk94k4CFO7CLOLEyCh++Levqm56xXevZu
wdqzj9B/+7ujt+lTZ9ItbHjHIP5H1mvUKd48qt7Dx+mX8UFQ7eH5bvgKz7Lv
+X46C71qczJUn2btscnvjLCv9g8XxlN/UV2Y8+WZLnAvCfThv6DoLvzcuehG
v+jmu9Ye5Lu1LsQ+WS4/74E+960u8uRuoJ/64uXEi62v8H7rKz5l37Sy48Sb
P8bRXy2vivnogRV/UbfjqurT0p1R6oROh/P/B3yg3ZE=
      "]]}, {
     {Opacity[0]}, {}}, {
     {Opacity[0]}, {}}}, {{}, {{}, {InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8+4PB8ILBlYAICdKkcaSYWIAAT97+jyhWwIOSYDqLKKSHLxaHKtYCE
+xYu6MWi7//s2WBqMdAtDGj6YMARmz4kOaMHuOUSsUvhk5uPLVygYDU3UN9r
0s0Ey3m+xy63BChn9wK7HChcVG6QZ98GPHI4pP7vCMIthwoA9BSiEQ==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.5498013496398926, 4.8892059326171875}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFWK0WMrpvD3w4c/3mZkYmLin4cudTSAiclNDSTHxLPyH4qmdkGQ
KBNYjonpI7LcB4gYTO4oslwrWIhdYevWYBBD5ipC6r42WK4eZLoniFWKkOsF
8Y0m/Aax20FsfYScHpAr+RjCfiyBKacA45SjyF2WYmRkjIXxNjMyMjBOg/Gm
AVWKHIPxtoAsnA7jmQI5vnBTHugiyzGiyIH0iZ/ALteO4hYhIM/l4QcQ8/vD
mVxA3ky43DRwqDhWVlZWxICZRo/hcj+1oUHNxAChXiK8/v9cIlI8aDke+Y0k
9//HdGGIPrXp0z//HyAAAP7GR8w=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.7082329988479614, -7.513530731201172}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcL9WDuiEmH+YMn/mqjCBwW1MqXaQODsfE1MqhtxZkJTorHVY5O6o
MjFx1jz/P4+JaQO6XApQl8///1+0mWy/oMtVMjFZPPv/fz4TUzyGdV/XrwdK
bRdmEt6F3YMfDbHYBgFXTZiYbD9jlboQysRkdRWr1CcroNRerFI7tZiYxLDr
OmkHDJV9WKW+OjAxicCkbiw8iyT1ThYYLBwK1bOBIE9BWG8NQuqoHxMKWIqQ
+uOMKjXrL0LuB0jA9+RnIDhfUVHxFEnq/29rJu+TyAIDAwDJaZTV
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.9591355323791504, -1.9199073314666748}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0Kx/A6dcvhxufeqBuOVUl+CUusa8EadcP+MBnHI9jH9wyrmZ/cMl
9dewGKe234wTcMpdxCO3kWEdTrlOkXc45fLwhFiaGm45WXxynjilPojo4pQ7
xhiMU+4A90Pc9tEBAAA2pftv
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.85269296169281, 1.524030089378357}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IMIXJbj0OqYm8zEz2OOQEmZmZZE7hllO+iluOeTnJctu5cMtVMhOQ
M3yFW84eu1MqmZiYGJiWkWzfBR5C/kvEIydEAzl37HKT+JiZ+LZhl/s/lZlp
Gg4pegAAktmz/g==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->
         0], {-2.0166351795196533, -0.15392938256263733}, {0, 0}], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+MYL9DPYTejykHdHN9PQME1KPKO0AEYbLIkiAxqKFAY1H9DdTmgMKt
R9FWjyS3H0kjmhRIcT2SHJqP8Mj9xyvngJCrR5erxym3H4+cA265elT/oepi
QOEgNO53QA1rBmjI1ENiAlkKHPQw4IAiA7beAZcMRPo/dnFqAgBpvZkS
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.3684588670730591, -8.467817306518555}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYFVD/WrsMsfCFViZFbBK3pZnZWVlZm0Cc4ruoshdYQYCRuZGIPND
NjOzypVXCLk+oDbWiMg1IHvBJkQ+hssxAwXyIcyrziA51ohXyHLXoOwGsByc
C5ZTQ5WDcf+rgNyicuXKRxAnlJkBxIW7kxXsAtbSVTserbIG62OFyb2KhMix
skqEQ1n5cIc+joDKwQm4W4A6r11DyKldu3btB2rA6eru9FMR1N2JLVTBhk/A
JTOIAQBLDISG
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {5.052759170532227, 3.9125192165374756}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8HFPcggjA6NC0UdMuSNMQMDGy8TkhlWOv+zw7RomJky5ftbu90Dq
pwjTEnSpm7Y2YPoBH9NcDH0MgWBqBydjBYacoMzt//9/5fAxNX3AkHsrG3b7
QTITU9RbTLf8n8jEw8cos+IvFqn/r4H+03+ATeb/LXlG7iQ9M2wmfhdg0tv4
/9si63cYUp88GDlOAumfYdYYOq8zcV8AM36KLMeUs4GyWpk2o8mVMep9gzKt
xZ+jyp1kYgzohDjDhnE1qtznHkYmJp2AtA0bFopgBujVOD4mJkZQBBs8w/Ti
taOh6gYpKetfYErRBQAAmMyuBw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.9030896425247192, -2.323631525039673}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cx+BvBwHgNu9S/fiYmJhxyD5hwyj1UZ2JSFn+IVS6bianl2T2sUjeF
mDy/4HCjCRPXL+xS/9cwMXXgkLoryeT6G8x6M+/qB1S5tUxMOWDGAh0mJuOz
KHIhTEzHQfR8bpAn49DkfEEuOcvNlHBtL5Mzmlw0iIpgivj0/08Q+3lkuX4m
5rv//89kZgWG2d9QVhQLTzIxJfz9H8/kD2RfZrL+gSz3xomJaQJE7qEaE1Md
ioWvlZmYPWSYrPd2qgAdWozqwyv2THAQgx6wHzKhMrabv/5HB//eLVZlYjLb
8gNDZhAAAHXAoss=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.864213466644287, -5.869016170501709}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AwMB0HKccE3MtHrlwsuTsmXDLdTO7/MAl94iZ+TFZckxMxXj0lVBb
7pMBbvv+hzFH4ZFjJkfuvToTHy45fO58I49b7n8H81KccnQAAIR86IY=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.5167258977890015, 0.5486141443252563}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QYMPUiFNuPgtuufPKuOVWc+OWs8VjJgPfBpxyTMo4pagtN18J5BYl
rHLPT/7/347HzETccu+9mNYhePe/I8vtZ2E6iOA11KHIMSUgc2cjczxZSnE6
RYkFpxTZcvQAAOKi7nk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.2191176414489746, 1.4628264904022217}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QsJShDqdcG2M8Trkw3HI/1HHLrWLELVfJyNiIR24HLjlHRp1/OKQ+
SjLm4tI2lRG3XA4j4zTccvx3cclpMyrhkvovxFiFS+oSB2657YyMa3DJZTMy
XsYlF8fIuAqPXD0uuW3sgo9wydEFAADC7+UX
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.5314347743988037, 1.8141753673553467}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9qYF2iLAOjU+EtTJkXtsyMYMCf9BlN6pUxIyNHTWtsrC8jYz2a3CV+
6+mvQYx/ZxkF76BJPoIxvjIyHsPlpA245dayM8b/xSrzrYeVkfE6Vql9OoyM
rJN+YJF5GMAO9B8nuivBwA7q+UNY5HQgcozuWORe9Bx+8+bNfkbh+9i9API7
8wlccrcYJV/ikHoZzaiBw8BaaUbGGVilOoSAzhR9h00qkZmRx6TtNVZtE9gN
r+ByIkkAALWpvGU=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.6550257205963135, 0.6010369658470154}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cW2MGQ/guX3FYmptc4pG7LM4l9wCHXwsQUics2Pibh59ilPujj1ubH
xGTyHbtUEguT1GXsBlYzMTEdwK6rAyjV+Q+r1EQWJqYG7LqmSjMxVbzBKnWd
n4nF7M+3ntTlfzHkApmYXP9/dANa2Ywu9VWLSfvNfxegFJM0utwrJu5N//+z
MYnoMnGeQpP76y39/P9yoLnOTIxbMe0Td9ICGckkguHYTiYYSMVw5/upsmAZ
/YYfWP04mAEAX62xLQ==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.526444435119629, 3.7252392768859863}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84UG39CcpqKEGT2svFmAph3VdiWYYi9cWDkTEawmxiZNRGkbvDyCh5
Esx6Ic3IWI8sddOdkbERwpzOyMi2BlnuOCMjx08I05WR0QhZ6noiI2MzhLmP
nZFxC7JcOSMj3x8w67cXI6PMFSSpFayMjF1g1tcFjIyMBUhS90qAAjMgvgSy
xK8jyXUCBRg1XRrmurhIAFl5/9HlQIABCBkZ72KVgwA8cuXvkOV2cgCF2DIy
XICUzep//1HAg7t3797//38J0Eb3/9hBMyMj+xrsUmlAo2VwaLsqg1sOaJ/0
dFxydAAAXr6Cpw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.125938415527344, 3.3568997383117676}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4O4sGLh15S2q1FNdJhhQUfB7gyJXwoQMnFHkTnAjSfntQZZ6mAwS
k9UMPpTNxCR8E1nqjCxIquEOkNnNxJSHYmI+SErvw38scpNZgFKd90DMz+pM
zPVIUs9MgVJ1YKn/75mYuJC1XQBK6XwFM196MjFNQ5L6mgCSew5mr2Zi4liD
JDcL7Ce9u0DmIUEmJgdkI4XAci5n//8/AJRSuoQsxwg0p231r//fkqWZmJjr
/qPJxf//f6PbBahbCVUKJOdxMFcaZLDCJVSp/wywIGaRuIAmBdIHAvx5s9Bl
/v+fogeSMl2HKQMEb+YAwU+sUtQFAGoeZLs=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.6602155566215515, -5.847725868225098}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9w0McY9wyH1Cs1JqbzOOT6mXDK/QpgYvJ6j13uJFDbYexSX2WYmESu
YJebwMQkvAO71AUhJqZEHI5sZWQSwuHIU7yMTLOwS/0SZ2SQvIhV6lsYE5Mk
DstmAL02HbvUTU0mpmAc2uyA2rBb9n+tABNT5R+sUteBUkzPsWs7B5RS/4Bb
LhmHS4By2jiMpBsAAIEr0dU=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.526340484619141, 1.153935194015503}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcMdH+gN2mb9HrBnz/2CVWhHIyMjo8Q1T4tNeN0YwED6GIXeSkZE1
fdfNjUaMwhg6b5uH7wfR5zkYl2Bo/A2hrnCx/sbhiW8tjLw4pC46MvLuxirz
p4ePkW8vpvjzfl8DXUZGo7tY9JyE+M4Xm3nPbXTabp2XZlyPwyX//xczriRB
7qN9EITxWZJpG5rcYkb+ByD6TxqjIbpJ92QZHR7//3/DjZEHXdv//+/0GQVl
ZXkZTfdgccMNB8bAxMSu1zgdSQ8AAEetwhg=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.458860158920288, -0.3974637985229492}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcOTIsuRkBs7zaMJ3tr9u1GRkAgI256tocskgYUam8I0bD2MYx8nE
pF664M1PLDZtZmTq/IXDFXMYRHE58IsbI6umpt/RL1jkypnATmRUm4xpoQyT
YldXV5ogE5PRN3Q5UaYkEHXEnIkpFF3u1Fwoo4uREZeb/m9gYiJJbndZefnq
6+9/F2LKTRUA+0HVgolJA01qBydjxdy5mfwMjIyM89HkAsAuf2MB0rwXQ85t
ZkAABzhwUtDkJrCChRVTd7zZvh3dLVMkGZkUZ3zE6TV6AADa8Z4Q
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1834572553634644, -3.4420533180236816}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMhQeB+7zCdRJiYmW+xyJ4BSTEZYpb4HgeR452KTqwfKAE3lXvgW
Q+qaMhOTy4USNiYmkw9oUtflgdq2/f/fA6RM0HRuZmLi2Pbv//+/k4GSEahy
TUxMAmDGn2kGTFzzUOS0YHL//7/gYeI9hEPuvyYT0xZcctOZmLJwyU1G05eL
JMeHJrcZvxxL1l+wJzKZ0eTeBQP9XHTg8/9rhUBGyHsUD17gB0WDvY8MkLRB
lfr/fzUoasHAb99/dPCjmxUkE9j9E0OKTgAAOmuL+w==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.1557559967041016, -6.076930046081543}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9gsJIhFI8cbucV4ZELZZDFFOw9BqYssclBzWLA4pZHDAyPIHJFWNwA
NusYA8MxLEb24nJmEVQ9FuuARjH0rgQ6FqxkZS+yZlkGNIDwyEp0qdCVSB4I
ffT/UW8oUNQyNLR35X8sAE86OIbN41AQCg0b7EZa4pLqhYYNqUbSBQAA4XKu
5A==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.868736505508423, 1.8647512197494507}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8OVMUDBjsGY/Fqm1WsxMIJiBKVXNxAiG3NfRZQ56AHVo15w9exZD
6pUmUEfha6zOAOqy34ndhUFM3LE4HB/DxIxL6jQToz0Oqf+LmZl2vpq5du01
LHLpTNytomC/BX1Fl7NjbgVicJgEY+ozAYbYwUITHkammehyzCYQRisTM4Yc
E1TuPyNTDIY+nnVgxjUmoM2ooIWHgan6zKtX28UYmTA8EQtyo4ICE7MYljAN
gsQc1oD7ejbDPmMCRszREQAAyP2kAw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.3636695146560669, -3.7185628414154053}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4NWL//9PiSzHJvVdQerFf39mSWxyn5mZm4FyLtjkdjEzrwLK+WKT
s2MWeQqUS8QmJ8Ec8B8o14ZFaiULcwtILhxT6q4Es+FTkNxMDKkfMcxsu/7/
fybG/BVDroOZOQ9IrWVm/rotOxZFagcbE1O6gxwTAxMYxCHL6TFDABOE8sEi
pweRM3+HLOfAb9j2+uvXn0zM5h+AFKpbbkAoJuY0LF6HAA1miQu45AqYmYPw
yGGNPxCYyMxsjUvul2vca5yOoQoAABhwp48=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.651784896850586, 2.305361032485962}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x84cLs7wiriHlapXjZGRkYGtsLvmFJXWRgZWezFGBmDv2HILWJkr3/2
/503I+NMDLkcRk8QtYORUfwFupwK22GoHONKdOs4VP9D5EQYjX+iys1nTIeo
Eb4lzXgaVU6asR7CePZfhXENmpzgI7jN6PqkdOFMZcY+NH0IORXGMjxyy3DJ
7WVFt08LHhrqjOxXUOXmMHZBGFPZGKNRpf6fZzX+AKS+TWVlZLuBJvc/l1G2
YepULWBwTkGX+v9YghEM2HO+Ysj9/5IElImMxDCQfgAA/EatRg==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.983688235282898, -5.827025413513184}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4N+PZWoRCoo1i39hys1hhALNxd/R5VYLA0F+f7+2MLPOC5ym5zEm
/MUh9SSQUfY9VpnPGwUYHb5hk7l3OYKRMeQUhvj9/i2BYoyMFus/Y0i9N4B4
QeIoFvNa7EFAl1FiHYb/oODNTB7GjB84JP9flGVciUtut6TCOxxSIRyMqTik
bkkyKs/BLvXEko3xDFaZzeVCDAzNv9FE9zfF91UJsTEyRs74g66jABIoZZ8x
ZP7/31oo4FBbexVXvFERAAAtB7p4
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.30839431285858154, -0.9915750026702881}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8hoJ6BwcGBwQFIYfqZAQnUY2gjS+7//noHoNB+sCqcjnLALbcf6F5c
cviiDY82PC7Zj+kBZG045fDYhsdvZGrD5xA82vA6BMMdABXAu3o=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.798044443130493, 5.097691535949707}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4Omxmo6wY1OOHTv2BlVi5UQrRSZmZmYw1ki4gCwHFvMrKVlSUuII
ZPNnIMk1yrn0QZmfjJmYmGKwWnvMEKhP5iYWma/xGkA7XR9gkTrjA7I34w2m
zI/pTIxMTNJnsGj6kQnUw5/4DYvUTWOgeYbrsLnvphzQfRmfsEldkmJi4JgN
5/5+9OgRXEqOmZljBsyIY8eA7jWFyUkB7YLoerTKUhToJrH1P2FyoPD8/39Z
n7+cKDi8i48grPMBhiEDEAP9xyebuRnFKV8TQGHFLGMVsholfiDgzXEgwBaO
gwQAAIqYlYo=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.124578952789307, -2.536421775817871}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcPvKRjM9JqHsxZhS53mZmJmZ1ZiYJTDl4pnFGx+9+vzq1RsMqZ+O
zIrvcdiWxqzPdAC71Achi7e4HBnNvBqX1A0O+R+45EqYj+OSWsak9hmH1JcA
hgUvH13B6pg5zEzMSuLMailXMOX2SIhLAIEws9hVXLZ+XC0Q+gWX5G0+2ec4
pKbJMAVjlzlWz8Tc+gpddH/DjRux4pzM4l1/MXSkMYP8EIs1QMWZ9XN2Y5hG
ZwAAcIzLFw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.7180002927780151, 3.513772487640381}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8E4GfAVFxSH8wZp+OSm8qY+AeXnAPjNgyxyYvB1DMW9V/oUse5lT9D
jMzE0BbJmAqifphgGjmN2fA52GRG5+/oclaM88F0LOMsdKmtzHqfQPQlDr6H
aFKfzRknfwQxKhmT0bXlMzLKyOs7RGVxsu5Hl4tnZGQUkpeXYmRkv4Qu18Ok
v+jZ//83+VnaP2H47thvIPErlDENQwYKVjOKncUlV8lYh0uKbLllMitxytEB
AABmfNA+
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.165580987930298, 2.9080302715301514}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/EoIshG5dUBzOT+FXsUgdYmZiYlmCX+2XLxKT2A4eZTkxM83BIPddm
YlqNQ24iE5PmJ+xSh3mYmGbh0LadiUnnPQ65ICYmMxxSbzSZ+JfjkJvKxBSB
Q+q/HhPTPjLkvmgy6bzAITeHiWkyLiM1mHSe45A6LcQUgEvbYiamM7jltJ7h
kqMeAAChO9vt
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.4227294921875, 1.436567783355713}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+8YJYiExMDUwcWmUZZNmZmZiZmG0ypH1FMzDjkbvoy45SrYMYpl8ME
cgaYsEaXkwNpUSg/jUXfMQmQ3NH/j9DlXrSEgawSXv3tRw1QzhtZzgrijH6g
dhDrBKqRRUBn8B/4/78d6JapaNYVA/X5////SAOo7wmmnMC+//9tgSZH/USV
eqMBdt1iHqCDLqBpg7h8A9RBaHKg0NjsAHRQLLrU/zeaTMycPEDNZt8w5MDu
BDrRbCum1P9GcLjEYtEFBIHMyv1nscpQFQAA4pBwFA==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.7809731960296631, -5.064888000488281}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9I8KqCQS5xzUuscnWMIBD+AovUSlFGnj1rzBlVN2FIfVJhlH/y4P9P
b0ZWDMl8Rg2vbUD6iw+j3R9UqYfsjDMgrC9ajIdQpH7aMrbAVE9j9EaRy2F0
fQ5jz2RURpZ6I8249T8OuQjGtH845C6ySH9E8KYwliM4r8UZdyF4nzX1vyF4
jxgV38E5n9wZQ5GMnMiYDGf/cmfUfYOQusrDeAuuK4Mx6DSStgOMjL8hrD/T
ZFSOowQYRO7vr9vt5ozW9///R5PbsbvcExh3rK0/UKX+P5AHR6pg+s4n/zHA
1SRmRsaiu5gSdAUAsZCx4Q==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.3600063621997833, 6.356715202331543}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AEMfIaN/Gx5g9H0PmRT0bExMjExCwVKPLTQcJM2rZAkktNKljPExM
bDOuv/iw1hZDLoiJiXMqmLWbicvlEbLUYX4mpnoI860xE9MUJKkPPkBrFkE5
LqhyC4FS0nexy81kYmKt+Y9dTpqJyQLGvq2IIneaj5HRDMbZzcjAgCQ3mQlJ
H8j3aHLroext7ExMUl8QcspAOR8oex2Q7Y7klAqEmYesmJiUXiPJrQKaIzAf
KPJ0AgcwqOf+RwaGoEgwCQzUAtF7UaT+r2JjAgMGJiYuh2eocv+XqkPlHLb9
xwD324uBcg7tnzCl6AUACzlzbg==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.9499468207359314, -6.830801963806152}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8u4E0qk33R9EefsMmFMTMzMTMzG4TVHLv/BrscCEtpWFlVPMYuB8Z6
zxByoUxMDJX//3/q69OSlWBiYmQ6jqpvNcxdGsxMmm9wy1n/xy43Bciej+zQ
mzFn4OqA9q3+jxW8kWNmFn2MXa4L6Icy7FL/+YByB7BLHWBkYmLCoa0UFC44
5OTIlDuDx77/ePThlUtjZp6JSw4ZAACm0Zkf
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.410208702087402, 4.891765117645264}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c1ePMDu/jN/LBQl+XHzmCRyRFlZpZ4U8PDYXUZXa6PiTl66bP//589
rk9Glzsj2wRh/K43/ITDNU/rmRdhlzm2Spd7Eaa2T319MbI8zMxbMHX0MjAx
MTGKysnxMkUtQdMJdKe+tfvj//8vTOJntkX1xrPjx2GqL09V51+Hw6n//z/W
4MFiLcy9TEwwZntYH6rcWmZmGJOJORxF6qsVsyaMbcLM04QkdcaHWXMjjPPJ
gImp7tGjR4uXFBUVqTMxsZhvRqg87sjMxMwMw6aojnxzPBwECo+DwE+c7h+k
AAD/0bOK
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-5.1058502197265625, -1.089908480644226}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcGcKA1fzL2wyfxcJMXFwMx3AJreZiTHt4VOmfGxyh1kZG/8/ZVTB
at3Ukrn/TzA54XSOP9NuXFJnOJle45B6psva/xe71AtDJgccul5oMUX9wSFl
xGj5DrvUBS1G+w9YZX6u5GZKwCZ1aGK8JRMTU/7OG+gyvzJZGaGAP3ErqtxV
JkYm7uKtW7d2B/ExcWb/RJabx8iS+QTCfNcrzKh4B0nuz/4jSIbIMO7D7g8g
uMnjjyPUgEBU9SdOOZoCACgRyAo=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.1173129081726074, -0.8118136525154114}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x984MGZxczMzIwwnIkkdc2BlZmVFYGzkHQ5sKLK6R6Gy51hRZNjnY0w
UhFoh7ipqYmpqakmun0zgWodr8PNyFyKJsfqmJGecfj/69mzZ///jy4Hwkqm
GN5bK47wG3PtV1TJJRJI7jyHpnM90JrZULnQFiwhd+5cKFgvqqUPzpx5AGGh
++/VTAcU/yGHJyTMHB/ilmPVAbG10OSumYozMyDFH3cbTv+hufO/KZJc/XpU
uevnaqFyYefQwoyqAACU8TAS
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.639434576034546, -7.729306697845459}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8owMAIBAyM+gsxpV63vgWBswceYsot8cJtJF45sU845RYzvMUpd4Px
7YUTJ078xirJp8zOxMQY/gCb3KFFJ0925AvIrsVp9FUbxdU4JS+qKD3BKdnN
VIhT7qUanlAINPiBUy4Ft9xPU080kVNwVgvTRDS5I4EQl39fwBWLYdR0we75
b1ZPDOZueo9pz/bF/MDw7LqN0420BwBjkeK7
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.735888957977295, -1.5284335613250732}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+m4PenT9cW7kIW+bHMo3PWrFldHh5mjCCAJPVagxEJcIhlIqR+2jEy
ckHEJaTSWy4j6fq3m5FR7GhzUVHR3KM/0Kx/DZQ6g91l/0IZGaNm1RqDQNE7
VLlfyO5w/I3qI3mwqLjN6mOZjIwTUTW+8zEJ67v1Gsjaw8jogCNMnskyMuai
iBTI2W4E0d+2qTEyKr1CkWNgZGSWCpQyFQNayr8P1aQpCFd6n0D334UaHZAE
T9ixP1gc8evN8k2rvuJw4cADAAeQmHI=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.572589874267578, 5.614886283874512}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/a4HLzAWzCL3fvrAzmYvJFF/99oNmDnQkIOANXoMp8qjdiYmRikjFp
P3QHXVcYE5NGac+FT1gsesPDFPgTh9sWc6k/wSG1nJMpAIfULx0mJlYJidDr
2CTTJSQkhBkZmnHo/f9ZhHEJLrlFrPzHscv8uyPMFIgh+uQ1iOxlYjJ8gyFn
o/Dm/6PpnEz8czBNYxGOE+ZiYkp+isUmL2DQS3rvwOqKX2tadnzB5Xi6AQCB
Bcv7
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.1988589763641357, 4.976438045501709}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8R4PJ6IFjJCAQMjHPR5IqZEEAVTW4KF265/3P7oEAAUw4OpMmTa2fH
KffQHotboGAHExP7MpxyoutxWefKZI5L6gI7brkIJurLFTAzncQl95+T6RnV
5ZpQ5ABopMXd
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.047999620437622, 4.926872730255127}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cTYHDAKeVAntx+Bob9uOTq8WrDIre/HqKNoR6rDrBLsEmB3VeP1SVg
UZACTDkHcMDXYwn9/SApoD4sMbOfAQ4wPAAWrK/HJvUf6ifsjoSZjCu49mM1
EgJA1tXj1obLNmzeHjwAAGMpvrU=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.882184624671936, 3.298783540725708}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8Hx+ChMQMLSiS9zPcDRiYWIBAibuCb9R5SDCUOIBFjkpZ2dnaSBr
J6Zc+hEgIxHIckazcDaUTmBgYkIzEwbOA80UeYJdrgDolkasMt8L2FmYFD5g
lbsP8kMbVqnbmsBwScBuWQ9Qm8QN7HIgTy7EKnNcCUnu+/7Y5wip9V7g8LRL
ABmaEApkIZwIih4mFALV+SwoBFzufaMwmlwwklv2ONc9eBDm7CQMjq1JDz5j
ce+OhQsXHsHuSZoDAHLPcgg=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.905249118804932, -3.481335401535034}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wcDGKraij4yE2qQuijCCg0X8XU06GUc0NLLsRU24jV+y3ZweSJRm1
VmNKrp8GIjcDjcXlom+2uOXO8eKWO4zHzIWMjF44pN4bMTKuwiEXz8iouge7
1EcDLH5/c/16YvP16+GMjCpP0aTemTDCgN7XF/fAACZXysgoyQyVdFFkZGDk
l46HyfkyMiZyMzKyi4CAZlva9EsIM09wgXTwzMbqwBNd7iJVb3F4bLADAFJs
q48=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.355123996734619, -1.1387883424758911}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8GlbAisjI0PoYQyZ97OcmECAkYmvGV1uOhMTu9+R48czRZmE36LL
ScZfgBjtwtSPJvf9E8IEL1xO+pPFNA2XXAWTxU9s4ifKM3WZmVqxSW1jAfmB
KfgTFrlVYP8xYXXLfbfJz54tsGVkNMflmA82TCz1f3FIXuJlYvqGS+cGDLnL
tTDWKxl0uSK2if8grIvcGr/Q5JiYGsE+W6XMNBPNlpVAn3EFZmTKszJp/UGT
+9HGDfE7d+orTPdtTBBgYjROQI8+OgIALGqw4Q==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.9237778186798096, -2.653717279434204}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8F2MHPnz9B1K+fcPAXLifEyJwOBBKMcOB5DSZ3s4CbEQkwALEMwtQX
lyoqKk4/gYE0RkacDigiU+4qHrkZjG54zMzFJfWNm3EJLrnpjPqfcMvNx2ld
HONmnHJleOQOZizGKUcFAADht9mQ
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.243410110473633, -1.4123600721359253}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8KCakYlRay02qWtizExAyLMOi1wMI5O8iSYTI9MrTDkTJubX/78G
MzEXYsqtLTwEouyYGM/ictEOZiaccmeYGPtxyjEzZZCpbwJWiRa7HWdwuLOF
h4lZC7s7XwHDEwi5r2ORm8kEDlGF15hSX7QYma4VQuLiy5kgppmoLgz5XwiO
CxOgrdqHkOROMzFk9DEx1miCbTVBsRWoT1yMWevr17P9GRk70b3AwMQodg2r
x///zxC3xxkH9AEAViOjPA==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.901289939880371, -3.602661609649658}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4EsSI0tkxNoNGzZ8xJD7a8LExMQIxEz2HzAk62FyTKcx5D739gaZ
mRdzYJODgPt8TAY/cMj5MzEdxSF1lptJ/jl2qZ9cTGyncGgLYGKKxiG1hJFJ
/B12qVuMDIyTsUtdZWdirMXu/h8hTEyuv7FrW8TEJPINu9QDTiaWTdilfiQz
MSVglwKZKIkZN2BwjYuJ9xgObaeYmBxxSAHlLN/jkiMZAAB+18e/
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.1082058772444725, 0.29867589473724365}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Q8OF8gQgTk0bpJwyZz7P1mJjBIABd6qsaMzNULgpdrhMoyCpZcuDr
16+/0aReWzIzS2/C7o4GoLbj2KWOszMz677DLhfFzMx1ErsUSE4fhxRIjkNZ
WclhNxa5SCYQYGBicn2KIbdVD+RpkN+tMDW+P5+WNvWoDzMzzyVUiW//oIw9
QGvPokhdtkh4DWZ8T8EwE6habS2IMQFoXwKq3H5WoM9rW1vVgG5xuojmkCYW
SOQwMYucxnBluCxEzvIIpg/+XyzkYVYpXPcVixS9AAC34pZj
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->
         0], {-0.44046586751937866, -3.6471378803253174}, {0, 0}], InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YMFUqBpfUEyFGVlxyhYw45a5y8eSyfMYud4Kd+VjneexynoxuuGw7
y8Z4GZecG2PYO1xyLIy7zh25hVXqPTOjNBsj7yVscvMYgSCMsQuL1G99Rsa+
ow+wyn1jZNT+9v814yrscuH//0cwHcUuN+X/RqYQbE4ByV0SYTmOTe47L6Oo
IOs0bFL//y9kZOSfil3q/39dxsDp93DIvfRh1F6CSyMdAAAJLs4V
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.715127468109131, 2.7005929946899414}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8g8HqPEiMQMMjueYku9SucCQZCvqHJvWNCgMifqHKWSHJMJVjlzPsF
MeQm8YClWHM/L8eQq4ZoE13lgGlmNRNu+1Dl0r/hlmPaikfO5RemnLKGhjKY
8R1JbqMkSMQBGJQvwC5die5367sg1h0rEBNJqpmNiUngCoT9WQhVDmyfYe8s
YKD39vKgyt3QBDuB28fHEcxAlvufjOIH7c/Icr8ikaQsb6IE2v/XYXAptdv/
BwYAAEoZJh4=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.582188129425049, -7.6228437423706055}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YE1UlCQjwzksMm8jmRlBwBpT6p0ZI6PKxvOMjDPeokv9DWHkan71
f51qsK/0NTS59YyM1SD6uy8jI7qN8xkZbYDUVX1GxuZPaHJ/LBg1vvy/IsHI
2PgFwy0HmBhdGpkZJbb9w+KHOaxAD0hcxSLz//9JTkZGwddYpa4JA7UJfsMm
ddWFkdWAkXESFqnrLoyMcx4JM8ZhSn1OZGT0+/n/ECMbptxhRkbfX///r8Ai
98WD0f8HkA5htMCQO8vIew9InRZnXIMh91WbbdrbtxuEGJU/Ytp3nIVRXBwY
KneweOH/FFCMJ6BHANUBAOCOpkk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.941182255744934, -1.9845068454742432}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o0M1wFpfU3yDGrbjkljAyvsIlp86o/QOH1CstxsifOORaGdlxOWU/
F2MrLtsyGTme4ZB6Lc6Yg0PqRw0j12Mccm8kGP1x2dbGwbgMlzZjRp13OORm
MzKewWVkECPPEawSL/6/NWb0/4hV7uf3QEblmzhMfMrIWIHLtg2MjDgj/KJI
5D9ccnQCAKED51g=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.017889499664307, 1.2388466596603394}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8c4NsyXDL3W9knY5f51SXDuharzOflRmwJF7DquerMqILNvN87e20Z
lVqeYdP0xk/JcCFWmf8Pv2N3G8gqH5VduOSuMfJM6HqBVeqHGSMQKN3GKjnP
PO7cTsY2XMZ+C2LciktqCr/iY3TBWfvAVDUjYy2GhmxGUc/s9dEsjPZ/MOTu
1oPcyKi8/ScWm/5937V48eKXuNw4yAEAA27hVQ==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.3832406997680664, 4.5735554695129395}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwOCAU2o/HjkGhno6y+3HJVWPJwzJl8PtFAfyvLAfj1w9mXJA+xz2
45JzINtQ3NFOBwAA71Tnyg==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.9123854637145996, 1.18839430809021}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c96HOVeYVLbjmjyGUcUh9Utd7j0hbFeACX1H4O1Q+45FKZzuOSui1g
jUvqfx7jbFxS3xWMfuKSm8A4BaeRooyT/uKQOsrMyKh5HLucFeOUpcqs87HK
Gfl++X9Ln20jFqnXrIFA8qWQ4idMuQ2MZSCqj7EOU24h4x0Q1ckYjSnXy/Do
//9/dWy8BzHl9jFqTatUZZS6gsUtvyslGBnFSnFG7QADABuS3Og=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1920344829559326, 3.363520383834839}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4GuWPoNg4Ny/WKRWSDKHTVgVxnwAU+qRnMkmEG2W82dSDJrcTMZl
YPqxgYPQRjS5Y2wQuRVMChcwDNWJBxLvozgzPmNamM7y9P9VK8bGf1jc+ZJt
+UpBrvZfWKT+/3dlZMl+gFXm/39fRnMcMv9zmZX4H2OXmsWc9F6tA7ucg/jt
/0UsB7FJ1TNt/f//X7DIG0ypPw7GP4HUM8FOTLlbjH0QtwpihsoP43QwfYTt
OBZnCm4A07LFWBwzgdd/14VdK3lTsLl0kiwjKyOj5wdsclQDAJR9y/s=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.6625990867614746, -1.6968172788619995}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4E6aw1NccjZMTL5/wKwCHvkzf5BkftWLMDHVfgYxbwFZTPeQ5D5p
aDAx9YKZnxeGMTG1I8n9fXmCmyn9A4TzQ5fJAcW+ZUxM9VDmV2GmWBS5ECam
hVDmN2mmEBQ5CyamvRDWjSgmpgVw8W931941YGQsvQsEJeqMjAw9cKlTVkxQ
wAgmldpfw+VcmJDlnFPvI1llyKT7/msaE5PJti9fv379jeIMQyam/uM6TKK3
/mOClzJgA1U+YpH7/yGZHSg3HZsUEBzU08vAITXoAQC/Aqfa
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.290705442428589, 6.5703887939453125}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+M4MUReSYmJgYmJsUjL9Dl5rKAABOIiHiLKvXYGCHHcgtV7gZYkEVL
WwBTrgci9///ZG50uUncMLn/YuhyAUBx0Vu3QIK7WVhMMeQk4DZLYMg14JG7
hUPOHxgmNyHMVUxMzuj6fF9DmNjcOf8/Ibk3gWxY5FKWAukX4UBHOb5Al2Ph
mfy/zQcUOPNRpP7HAU1iEdDkBcYDe/IHVLn/QSywONL+jw7eRkDlkudiyP1/
eUwRKHfs2FtMKWoCAF7cbSQ=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1650086641311646, -6.417749881744385}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cWOODByFCJXaqFlYlJ8Ag2mY9trExCGU+xSf2tZGRSfYDdwG4mRrFz
2KUWMDKKXsIudV+CiWkidqn/eUxMsTik6tmY4t9jl5orzWSLQ2oTI4P2UexS
342ZGI/////6xIkT99HlFjAxJS8JVpNkZGISUtv1B1nquRgTkygTEDCCCQ9k
i1eAhQ1i527fvqrOlpHJ9zWS1xgZGRnWQNifbRgYGU8i5BpB+paBWPfzhIAm
5PxGyLWD5GTrI9VUBYEstXW/kOy7Lw9zBhO3dT+aH75siI3xYuKMjZlwG3sA
DGYAACYsl1g=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.793823719024658, 4.382782459259033}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9GYGEBEDgwMDFxt39HlytnBgEXV1cl5hp0ua9r09LSpgIZ15ijcRq+
Ho9cNR65EOaNuKROcZj+wiWnx+yLS+osn+kLHFIfbJi34dI2gckDl20bmUTu
45B6oMm/F4fUbyfmNBxS372Zk3EZWMDs8gq71J8CZtm7OLS1MHPewCH1f48w
18bXuCT3OzZ/wyWHBQAAww3d7A==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.6601650714874268, 0.8034077286720276}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Pvb+2VlZXe2Ysp8WWfBCAQ8KjHoMt/WWjEymtasWXMcXebvGjNG
Rtstf7HZ9JORUXTrd6yOmB/JyKi8BUP434ZGTW4mNmYWtiAMubcgt5X8OnAV
i3EfBIFyGvHxRVe/Ykpe2BRlY8PMyMhgfQyrW/4fP3KkyEysAKsfQOCTMuM0
XHL/NRmbcUl9VWc8gF3m11FJRmfs9j0pY2QMPYsp/mbv3iZ5RoG0z+gSJqam
akDfc6Rfw9SUqiGWljZ9yX2sNn35iMvhVAYAlgXB0g==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.39686810970306396, 4.587760925292969}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cD2KbNfBKH1EMtRqYs7FKTeRkZdbFLTWJnZAz/g1XqqyYjow92qf+J
jIysOBxyX4iRsR6HG4sZGTW/45DjZGQswSF1loWRsezcuXNfMaX+VjFCgNbq
v+hy7YxwcApN6iQzWI+OjiojYzCa3FGgjMUpoMe/lTOqofn/KjfUlZ+yGRmP
oWnMgMh97mNkFH2CJvfBlVGqdmaBBtDsGZi+4IS4kjnhG6bceTGQlDD2sDmS
aJt+8DFWqQEHAEMtqWk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.586884021759033, 4.013942718505859}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9IcCGzCqfcJGaORbjktJmZJ+OSY8Ij58DMHIbbPmZmastNZGJywKMP
pzvJ9R8Dk9BB3Po0cEmRLcfApIZHn+wDXHJZePwwiVniIk5DaQ8AiSreEA==

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.8374494314193726, 0.7007818222045898}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/s4MamTWexCJ870JJuws7IKI1FLpsRAjSxyJVzgWRYVFKwyL2ZXth+
6tR5VMHfG5ydnVdid1shyKwDWKVuqzMy1m+7h1VuLy8jo+DMx9jNvNfmxcio
sOgLdtn/l31YGAtxyP3/P8eSdRGa0N+n06CsZYz2aHJn9b5CWa9EldHkmoXf
QFl3NWXR5FzZpp98AGa1Mtahye1jYmQUUFGpqa1VYuxBd9+uUk02cNSwpH/E
4vyzB5szPDSrsMjQDQAAmHLBzw==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.9476501941680908, 4.88225793838501}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4I6oFy6pH9FMnGWoQrN7N0IYL5mYmNTfoMgpMindATNWAOWcUaQW
WzAxaYBZOkC5VBT7OYEigmCmPZC1DlnuJlCAqRLMFESX2wySU0q1AQJWIKvz
ts9TuFwaEwpg52PSg0syMmGAPJhcHR65P8ECzYmr1xgwc3ODJfQ2Nj9DuOYW
mNxwdgJIStD2938swBskl4NN5v//eUzo/kOAXay45W4CHSPxEbvcIqC2w9il
QHJuf3DIneKQXopDikoAAFjteAE=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.864450454711914, 2.5764803886413574}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YGdaXJxNXFw9hsS3ZYaMTExMIGx4EVXqxxwmJg6tsrL1F5eHMHIj
S15ZNJ2Jye0slJfOZISQsmRkZGDMhfGepjFKIuRyQfZsgMpECzBypyLkFrEx
Mc79BmK9WyPPxGS0AdklU5gYl4LoVaJAd2ag+WCmlNCJ/29CGRkZg85geO+6
vGipEBOTyvG/GFL/f2QB3cPf9wlT5v//UFCYrMMmc82GkVFzkZQrFm1X5Jn4
Sj79v87njSmXw8S0B0Rv5t6HLnWGA+qnd/Lx6HI7GSFhW6/NGIchx2ReWlKa
I8nIpLANXe6mLCROBfKuYrrl06Z4RtP0Xc8wZagMAMX4llg=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.1346182823181152, -3.419689893722534}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8LdL7tofHHJTmJiYzmOXeq/GxOX5FqvUnwYmpn4cJn5iYlJ9hUOu
hIkpFIfUNUYm+fc45FoZmPpwSJ0XZvD5hkMugontGA6p/xIM3LikdvMwxeGQ
+qTAJIxL20ompok4pN56MMngcmQUE9NpXEbaMjE9xyF1iosp9Dd2qVdmTEzT
cGg7B4zu27isoxMAAJPr3zI=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-4.29147481918335, 1.2151590585708618}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cpYGACAgYmmW3bMOWYWIAATEzDI8ezCF0uAC7HFPYBTe7Vjh3ZUDmW
O9gctA3soMlYHfvACaRvCla5L/E45TZkguxTOoRNSgLsFm9MZ/iDwwUIalHE
V+fn58P9noMitUwY7m0WFhFU2xDBxcSStPY/Lrmcr2jOOKUIcwaIaN62DUnB
VUMk+0BEQv41mNzXUk5UORYWWYTOUmNlZDmRwkKE3JdrZ7bvAAIogS3QBhYA
ADW6S2o=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {4.9821600914001465, -2.0336005687713623}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Mun5++wif96eqHYRJtZ5iym1P1SJWZmZiZmZhl0nU9dpIHCYDnm
l6hSL40gwkDCnLkeRWoeExAwQIjWPDNkqQVw45iZFI4vYkaSms2JkDN69r8Z
Se6pPESYy49ZdfIrEBchtxOixXzbr5cfIVy41G1FkAs4Kr5A+euYHGFSH1TA
LtgD4z+0Yu6CsSeDrNKYC+P+cEXyuxizLjNzN5Rzd5E2M7PqR5gck8QUZuZw
IGNqd3e4KtBVTnCp/wyL/+szMYgrQsOFOek+wgdMi/93ssP8LmK4Gjm8mPTW
/o+AyOnPvowSyv+Px89/9f9iR3z85ItYY5xeAADT3V+h
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.7750697135925293, -6.04400110244751}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y8EaPgdELu9TfZCYmJpdfWOWmMjFJ8TDtwyYVy8jm8ngWUzimzPMQ
Vuau//8PMZVgylUzMWUBqflM5zGkIjiYmNYBaU9MuQNAqUv/sco90WdimvEP
u9whJiaDT2AXqaPL/XFlZMwAs84xMqLJdTAxGX+AsVDlfnoyMS2EMMPQ5W4x
wUVCmQRu4JILY/JGte6pFEzugKjwDjQvhDIxLQNSl+aJMKWjSYFcwBecpSrI
xOR8CV3uvTMTCDA67PqOLgV0TbUEk1n1TuxRTicAAJ9DqZc=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.12438319623470306, -4.694756984710693}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+SIIKRQbTzPXY5CyZGJiaxQ1jlUplutysy8V/EkLh/6v8u9p8ztJg4
T2PIbRN6+r/LlIlJczumgdsYazMZGRhzX2OxbBETUE/x8z9YpI7wMTH5fMHu
fi9GYVbsrgfJvVXTwyG3mOGtvQgOuR+MrZNZ9uCQ1De8xbUKl6FMty3McMi9
4q+2YMIh91+Xz5RxMQ65Q8CAWYJD7rsebrn/p9hwy/2vZDqCU454AABhectT

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.74990713596344, 2.3694255352020264}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QMLU4kpGxHIvEyxV6jExAwF77G13quzNQ2HRZJFD2I7pcJROT54b/
3z0w5V4s4mda9/n//w8gU3NR5RYxMfGeBtI/AoFyMleRpfbzMzGtBjHA+piO
IEl94GRiavwHZBzjx5C7ysQk+RjEWMGELndbjYmpEsQ4IIIh18LIqHAZHC6M
YMCAJKfHxOQLZrzxYlMCavP9gkXu/6vV7UC5vf+xyWGGC0LupCwTE/ecv6hy
Lt/+///50MsKqKsLJcCAckxhlZXJTKA40rqDIpfMBAUMTOyLvqJI/f+YCJUT
Dj7+Hx2AQ998+vSDGDL0BADPpWxu
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.10488539189100266, -6.703549385070801}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964MuZ7f1nqtPTGZnWokvFaDEzgaHYTgxtHqL9LSYmJjNnYpr4yoTp
LC7b+pg8cLoknfkQbjlM18GBHTNOqf+MYjil1jJl4JZjZFp85syZa1glg8Fh
whOLTe7VzJkeJgpYwhIGXtcwK7zGJXmNhxFnyP3HE6r/CxlwyV3774FTnwcD
E059r7WYa77itI9YAACo5dah
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.8003268241882324, 2.7520697116851807}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y0MXAKNh0BpvMAw1mJiBgDceU2sXNJFlYmMzExI8pt51JCmjcn4lM
zJOxyOWDqD/xTKJY5PrBdCYTB4bcl3hbnHL/P9+BypWgij/dfvYmlJnJ1IUi
dcScSUTOejWI+cOP5wmyJm8OkKeZBOe//f89l0kXSeqZAZNh6o4dkzWZmLzf
3mMSeIAkp88k+gpEv3ZjYuopYSpAknrNxlQPZXUADWZbjiTXxOT5A8rcCZSq
/Y8iVwhh/GiWZWLi2/QMSa6HKeMvkHp3zI+JTbeZk0kBWSM7U8bTQwWiTEw8
zf//75h4CVkuEOw5Jhath/8xQSc3k2FLyzIsMvQEAJkZmUk=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.0816267877817154, 6.2338080406188965}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4Ms2023bpAO2bXuAKXeLhYWJBQiYnF5jyNmD5UT4mFhsXqFJHZBg
YSkwElnrDVRQiCp1Sglo3P9rjv/PYMptY2Ji2g5jFaDK+bOwOD+EyKHpex/J
xKIMdR663CSgEzWg7EwscishzFomFrlrSFJfMpkYdJ5B2J4MTOrI2oBBonMR
ygb6rx/F3yws3hDW/R4+poZfyHJqcDkgS+kQstQ0PpgciHUGxd95wDDxBJq3
jQEeOHBwEBjMivn5jqB4gAYOAjjCoo7FFiPuXjlB5AoKMaP1/4MdZjtkg3Zg
SlAbAAA2voMT
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.14715178310871124, -5.977885723114014}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4LYno21E3z1sUr1sjCAgfQ1D5pMHCyMERGHI1TAyss99+vRUmTj7
WXS5FEb2ejBjK2MLupw0YxWEcZLVBlPuFITxmF8XXU6RMez997WRtnb6jEHo
csWMjJxaEIe6ossd5GWEAf6H6JLVYHEJExtGRt47aHKujIyeM+bv+fN3Czdj
GarUTBZG6wcQ5krGEnS3BP2EMg8whqLL1UBZXz0Y96PK1TPqvwYzvvUzyn9D
lfsiy6i08cmTJ2t9GdmmofshHewHBkZGzPD8f8sVLKmk2oQhBTQ1iVE5csMf
LDLUBACzW5Ji
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.2870471477508545, -5.013915061950684}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x964PjMmTOvz5x5QsFt5lxUmRmmEoyMjIqMjPpCjIxMno+RpFYyM8KB
y+TJB5GkLkKkDDmc4uKO/kY1cQdQQmznoYfH32C6wxQo5/AduxuzQCbyKa48
jEXuU6KIMEhaNPj+C0zZS+dtIK5Uqt6OKfv5ZYWfOUiW6w5We58v4QFKpn/D
7qomkM7FWKV+xAOlkr5gSvx9f8AXKBX+CYumGWCHhmNKfD2gxw2SMt+PLvNr
nx9QnIGRMQTTrhyIx1OqMQ28AQoxYa+LvzGl/r9xYmQM24NFghwAAM4YjoI=

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.7516995072364807, 4.445272445678711}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x924LLuflxSc8SYnF+8uFBdXa1piyZ1UpKZiRkGUKW+STDD5eS6UKSu
KDAzJycF12x9BQQfUKS+RoHUM8k8weKOMrBZTMyLscgBtbkVOmKX2zbh6P//
ExiYLuPw3ysbJpH7aGKxeh3nQXQbM1MBunqgr9qA1D0lZu0/6HJeYLnjqszM
KzDsmcbMLG9pyc7MXI/phrfxrCDPKZ7FMBEE1s6ZM2chDtcPCgAAGSa1TA==

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.724721670150757, 5.245418548583984}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x98YHJycgwjo+8LLFJZrEyMTAIsTG5/MOVaAwPTNz6fw8R4A5fBfyxw
y71XwyX3axknI0PjkSdYpB6bMDEBHcRkgUXuCBOT9+xZOkx8pZhyT7rO/f3/
/501E9NuXO5528jE/xCnY20Y5uCS+/+BURVd6AGcpSCGblQmnKnHfhhVrsIG
xrrJaPMfTc4ayrggwYAecHMVJ74G+u9ZjgiTzis0uYeuTExeAf58TPxlmE5f
IA4KT1aPQ5hS///fUYhdf/QkNhlqAgDCd8Nk
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.469047784805298, -2.3187003135681152}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9q4NqZM+k7+tKDmNJ3YEjxMDGDoFhGMHMLupyCiYlJ7MxDQKaxMbrG
1zDGKwUTnPYyiF3DIbWWR+wsdpkzdoxa2HXN9BBj1vqKReIgIxMIivZj0wT0
XUhGhhYzNjlusNO3i73ClHt9HUwtZjZ5jSkJs9UDhxTI1kM4pM6IyeMyca2Y
9jocUtVM8til1saYMGljNfBVEBO3yVqsmq4pMIXgsol0AADKMMri
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.1902564764022827, -0.3996998369693756}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8YsEaLCQTW/cQil8QMAY5Y5EqYmeW5gHJsyz9iyH2ODni9u86YlYl5
Pi5rU5mY03DJteHRF4dbroQFl9wmKVZmXHLmQD/gkLujAAwYBiYmycvYzJSW
luYF6pW9g901ZyYAJX0uYJf8vrobGHzPsUv+38jMLP4EVejt5PRL///fWGUn
xswcgSpVps7MLDq/UAIcU/WocmGQ+GMCYo/9P1DlOuFyyWgy//8/rZEHStk2
fPnyG4cbaQ8ADpSbTA==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.681236505508423, -2.6842753887176514}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcJSdcTpWiV2TfdmZmIKwSSVzMzEx4pCrYTKccZ2HqRab3LdTL///
52OaiMstS1mZbuCSa2NiqsEjtxyPHD4zccq1MjJexyXnh0cfI33lXjIwMbnu
/oIu/P3Jubg4XaAcE+cRdLlSJhBgYGLnn4ph3P12nfD29rb2zbicQgcAAOrV
ydA=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.1658257246017456, -0.833098828792572}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x848PfHHHuplGX/sEh9a2UEg9R36DJvC9QYoWDyXzS5+2BhdiEQ+Ryb
nNm2DGxyn/0YOeqfXRYBSvG/Qrfw04qd//+DtW3D6ot6kDbhZ1jlXIBS9hew
SoHlIrBL/U8DyokdxC73MUuQkdH5Gw6dWwQYGR/ikJvKiVNuGgcjply13uy7
/1/MBoc3ulwWI6OAhDA4vMP+YMpBgfojdIve6MHkJmK64k1tBgMjo1LtI2xJ
gk4AADeKlI4=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.7201974987983704, -1.6577001810073853}, {0, 0}],
       InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9o8Jy7EqfcHKbZOOUKmdaTJafG9AuL6IvtQOI8IyM2HfU+QGIykx0W
qfcaE0AKmCZikdvEtARIhjAtwCIXJ/jy///XImLvsRjJaAgk+xmLsWibwJQH
JFuZhNZiSH0QYAr4+f+PKROTJYbcbEYmJq/CWUxMTHUYcols+xJ4mIAKnL9g
yD3bAnTkKgbmhVicAgbrGXVwSf1fwFiIUy6RsQWnXBXbZZxydAAALxLV7Q==

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.056471109390259, 1.966873049736023}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+0YL4qg39n5wZsUhWsTCDAIVp+C11qERsTDOigy01gYuKZtK+mS52J
SRxdrp6JyRVE35THlGNnYtoNpH5GMjFl4pALZGKKu4BN7nMPkKz6i+EFCyYm
UUkmpvD2n5jeywG5XvfCHwyJH8ddmZmYuLsfYch8O+oH9rPuV0xNKUBxTldR
JqbFGHJAQeGW//+XMjHJYpHL//Ifl5z2YxBViV2f5+v//9uA3u7EkNNhYjLx
8QH6QeUphtwtNUi0CfdiSP3/fycPJFX7EosUdQEAVAmM0g==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {2.1440765857696533, -3.487570285797119}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wsLLkGE65VSxy4Tj1MTEwheLUx8SCU2MvA1AnLkkmoE5ccoT09eKQ
s2RiZArDIYfPpatopE/uOG59srjkaOROHFL/H1szleKSowcAADe+zow=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-1.743593692779541, 0.13560137152671814}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YwMB0DKccE4vccRxSYYxMjKtxyIUzsTCtwS61iomRKQyHtlUsTCy4
rCsC6sPtSiYWXHKM5OuzxiHVi9t3oFCRxeUFYKiE45BahceVq2jjO5z6SliY
SnHJ0QUAAHWn0ak=
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-2.8880436420440674, 1.754939079284668}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4PXyEKfwX1ilzmrJ1l+6i1XqpmLpd1wmTg36jdO2qTG4XTJP8CpO
uZ/xFrtxSv5eqmh9FKfsl+mKKcdxyr6K5Z6H20l9hp9wyj1iPI1TboXAG5xy
Jek4pTazn8EldVBkPU5dItNwyPycxI9D18+VLtbbcOiqLjmByyoqAgCQ7vhS

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-0.5174797177314758, 1.4355648756027222}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/E4F8eazkuuZWs2x7jknMsxGnka4YDOOWmsV7GKRftg1PqO/96nHL1
jNdxymmV4JS6xLwAj5HXcMrFWv/GJfVecgJObTN57+KUK/fCKfXfoR6n1F+L
Bpxy7xn78cidf41L7qcm32rcjqESAADwfvvZ
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {-3.095597982406616, 1.0330318212509155}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJw1Ul1Ik2EUPghBQRdCEAYSVBddehtRRIFYN17MkqCgNlzLGpvNUSy7aBdF
YNAvEXVRGUgWMdMkwW6SGC7W0tzXwpzk1n5037b82dwvT+e8W+++73zvec7P
c362y2Q3nGsgot7NLAzGK4cdDqOro5GVE7bebovN3HXM5jRbzI59JnFrrr9R
8PlYZhEmrer9IGoMLvlQiYAc+oAN+DVPJ0OecAXTrMZQDiAOetTG4GusfmLP
tMToRSCxDn1ynZVsEni5V2BcVXKnZM3MfCuDHvB1PwZpBCuMlSk8C3xxxwHf
MLKI0hhnJFORKzx1aYLvw9jDEeMMNhEhTyB57O1cYWOWVPbETfpTx+W0cwn5
MxoQxJDwSsL/RtZ7kiooTtcYD1AtBZtSnDuriZIBOUO7VeBbscntdsehVDMr
L+4z4LDOsTxNUqVxa2btITCfHihrTxXJCC5KDGgiItkWQZE6RauqYpsU43py
0K+Ys4k05QWOpVhYsEXxcvgtZcaUGp6d0VVJnlS2Bn77uE4c6E9vAnnYqnNU
hW2VnuOAW3nh+xjOgwZrHQCybCzDW4FimP68wq1QU40nQoVX3O3jGYl0o79y
RE0UYaStYn82B+8s/aRlvn/FgKQsvFGRvEAUnYuc88f2cbcPd+qDhr50VAsF
W/AO75/TBeXbRi3oVMNRg566h+u0QZdrO5B97DgpXfAJ8A+Uo9KklDGEbmtX
bZeInWXxdy34C/ZWkB9VFTqKgjRIVR5Lgh3mfYzrQInv0SVA+70AffQGQcju
CkMOhpDQ8v8QGv4B36wuQQ==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {7.2957072257995605, 0.9640308022499084}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/mFhEasDl65/cFG8Zv77//vf/58YJv37//f/0/9XdmPV836iaqsn
Q6xP2v9/qGb/+f/59XGDeA4GUdN16O778/+8Z8uZ3z82Xbx6F8283zsYeI8/
/f/v7/87/X/+/0KW+vv/P4sPUOTf71yz+P//r/5G8tf//wwMi/7//36v/ALD
oS9vtvxAsg6Irh/4/3TtymUM6jv+P/oDlfgHkX7Zeen/xj31ZimP/z/C8PmT
r0ve2QLj9/fyL39R3fnn/5v/N//pxzEwvP3/FaID4ZavH0/+e/nfBCT3G83M
v3/fbL3zf7EBQ8x3hOg/ZHOtGHz+v8OWCn79/L/dqff/IyxxCBZi+PHowW8M
XUCw7FDvjp0Xf2NoAFJf88NVun9+/P0bU+7X99hAhhX/v33DtA6k5gswHv5i
iKKzCKdhAMZx3FM=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.081612229347229, 1.6392121315002441}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJwtUktIlFEU/rAWrcpAgiJ6LFqU1KpMCAppU1CLlCioja9RW0wwCuXKHkj0
lIIekAamBlmktSjKxtFqU0mOYxbZZEpS6jA6ko45mV/fub/3597/nu+8vnPP
WV9wPNeXBqB8iY7c/BM5gUB+ZV66hIP+8rISf3HRXn9FcUlxILvAzFYv7GFq
IamjH313cYcgJ3hG8hzs3sfnZCZ/nUrbyL/NHRzgI4ybTyMjxGxklhzhTOMt
sism9Mc8+JMcxaSixuW/A3Rr5ID7Jbk0zoarRMSJQKvCcCVRZ+L2KcbqXynz
PeeFtqoCIHjh7aoUa7juBdkjdKd0fjEXPSTNbsuUl4LnOEi+tKhOrfWA72h8
XCryBtDshHaFmHO3P6jZYHUW4r1J2ll8qI8cswRh54goP1k83XLQvkZloITM
AM87bFA67Bv/mCWT8HVW3WST8j9jFG1Cal87frVEwvFYK48GjyM3M44KxyPM
ppjxAPYIT+cx42sdGNb7WjfYr/ODoftPI2ItwDXtnmrO6FfLQrqax4mTvXSR
mCLfmG/1fZR1CVih+z/SZ1gqHkLHQk3ARbbk0bVgEl+bGsmtPrZCtouYAhKy
+8bQE9NnT7A76CYDiW0L71rqKliu/dvXrbMUvHKEQWkuO80AOpnYTc1IyDJm
HkY9FnvV7aLmK8oiceh1UV2f9P5HG7yefudTz/KS9YGdj5Eh9LYa5k3Q0Mgs
z3IedctUmiw+e24KMs0xjW9kSBPKLw6MqQGbRm3WK2nDaqE5nXJpGdBsHWrh
fyc+Oeo=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {7.303482532501221, 0.9656734466552734}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4B+I+PP//19Mid+X/z/auTbp+keoKiRwKTyewdssS4whE9NE70wG
Bve17AxWarfQZH47yDLI1mmYhEXpmrP8RjHz18/5DKktP/4vjshjqHdEcc7P
R/IpE8+DWDsZChkYviJr+8nPsO/et3//Pz1dG8jAUPUFSeoHA8Ox+nAQa20a
A8N7VL/VMcgz3Pzx7/9DjUyGiLeoriwHxhZD9ZP9tm2KDIxoPn/NsGNS1LH/
XQ/1VQTFUM38v5VPeOu2P/+uTWFi8CxGC87fp+ffAJr0p35eKmaAQd17laFx
Gsg6mI3INh9j+D8Tm6Z//3/838HA8PzPPywx+P/1T0+2qj1/sFr367+Zscc6
HG75y5DHoP0Nq8a//zcwLFgch9VEUgAAUda0+w==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {3.116917610168457, 2.976618766784668}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CNV4W9kDlbdx3EZ8ff/T4imM6jiv8Dk0c3eMv//97/DtLL1d7BN
Xsz/d1c+o5vY8+y/NIM3yMcv/39Fkfl5bEGT15wLuf8f/vj+/d9fZEP//Vzv
YN4IFHt/Es39/379+bqd4RGI+ef/7zf/n6CYuPJEoeHav3//v/zz/9fdh3+R
9f3/s24676Sk/yvX//f/+3njW1Rjjxkk+aYA42Xt+rwlqPb9//+xNvj/0/+B
vtGRSh//o0tqyln9K3++ioXNzQozrJ8B8WuvMIb/N9FDBRxF/1/zxGUwvP2D
LgkKgP/X9Ri0+v/DzUT2y0tzhogidD1QBQvXigSj+e0fOPaA8m93hH25CbMb
Ve/fX+/+3/vy4xuGFMyIjX/uYZe6xHDiTvYvDPV4ALpiEAAAYvrZBQ==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.4918980896472931, 2.806752920150757}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0cH/zBEyAeUmIVP79eb691aN33+jSnzZfsjAQUG50Xr/v/FlFwO9K+A
4RkM8b//f76Mq9m/jUFj4/lH6HL/Xl+9c/n/x7DN527/f47mst+vP9z4//uL
qzjD/T9o+n5+/fb/77c/Ze7OHj+eo8n9efD77edPG56mWAQ8//8LVe72xp//
/3/6X2Lj7PMLzX9/jqx+BqRaIw0MbH7/RvPf31P//3/7X86gZBn26T+Kxn9/
QPx/r9QYQq7//4um7d8vkH8+ajH4YYQKVMFNiayPmKIQPy4pPIslDv6D7Huf
qvb2x1+MWPwGjheGtnkIIUQA/Pj/2+5/qh12hzzcWcgw6fifHxiuAIH7exje
/b/3Hz0wSQNg4wB8cOCP
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.0850383043289185, 1.5208709239959717}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cH/uFgY4phkyUG/MVjY92Ne5+rfvxB1/Lny//pDIqX5RiCTn1Cl/tU
ygAGLgz7/vxAlXrMEGHjqxXw4nFY9o//f1F89t09sq71MpC13e3HN2QngJim
YXPB7K/Vm1Ed+/f/vf8fXoGZ0gzbPm76guz+X7cevQA64Pu7M6oMeb9RXfLr
59PPX36cA3rQ3HjXWzTPnX/y8f+X9U+WuTE4ogfqv1WFt7f1MkwvcWIQWPcf
KeyA6r4uYDf0Eslq2ODIIILsDhB4EzbZmz+qrHVHmwVP71+Ez8Dg56rb/2/8
/3Pb4zjD3P9o4PM/sC3piTzJ//+jxtXHv39AvtpfvSQcI+r/fPn8/+uj8+19
NR++oznlPzg2L8eHc0/6DnPGH4R7/n2PNO1kOPQMzd8Q/O/0qa3X3v3HSA8Q
SSBcg5Ga0PyKHqDYlAMAXTzKHw==
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.9146405458450317, 0.9585380554199219}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJx9UU1IG0EY/fDUS8FDwRxy8dBT8dyWHop6KD2IxdaropiIBZMQLSr00EOh
tN56qxTqwbaHolBEqidJaSmJIR4a/AGLgiBuUrdmkzWa7MzrzOwk7m6h3zLf
zM577/ub9uF4X7SFiCauCNc3NNWZTA7NPGwVP/2xibHRWGTkfmwyMhpJ3hqW
tLBeDjikcZzj/1bUTDR3V1EXqwrW5HEEjaOAP5x5birKOzAVeqpZLqMkHUOe
jhxxoN1FXywGbkzSdbqxwqzUsw11V+MNDFHqCnW8mEW2451bX6MaZ/8OIUEZ
mNyY/nlZqMyBe0+7pVxkLoV3pn2NrFJoMaeD8N4PGrKUf0Ikcsr+2du9j+Ou
QLl0hhD/Kmkc9TIVSt6pfN4WupPqubGfYsa6b2oF4z196wWWxdGq6uo0xqz8
ABXx6Yca+anK2zQHCxnT3FzLfznbK+SY7X+A2vEFXs7TVvnqL19zamYOF+o0
joAL8XlDMsk6zLX1zCVgc1dzyfiN6oO2u4NLz70Pq+OeAK9uX6M3dj2IMRmB
bj56XEbAagKsrH8fqJuvdd9+aRF2FgeNtrkf5bBlGZWgyG3ER/TW8m+gv8gS
2EQ=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.1407405585050583, 2.3023624420166016}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxVUjtLA0EQXqzEykYrG8sUgp22ARFs46NP8Aw2CSaCROwiYmFvYSmBaBM7
0X+QRg0IUbQQizMmdzmTS3LP3XF2b+9yGdjXzOw3M9/MYiaf2psihBSncUul
j5KFQrq0OYuP7VxxP5tTdjdyh0pWKaxmuNuCXBAXHxeNXh7eTWBSgzbPifkO
pX/8rzWBZgmfUDQJHBw2TAqTGIHVlBoVoB2PyRj47/xCuISpMnAjDx2gvoy2
44ncgFq8EKv8oOyQJWBNAU+DbKjJD6+r0VOt9MpjRPWDemf7DlDGKDRWkqQl
oknkKsAtfzBbWZ+TNcJjUEmDA1u4sRvlXA/RIm6fTRva/bNLkmi/McHGT0iO
78MIvyW2Lir3gsMwHQNtrMuAlDvzmtD8SpYo2OaXi1nla4Sc+AefYA3Dvmpg
DDBHA6zrNVJ3dZ78mBnD60MLnN7MS9i6sW3UC1w+OmOeuXQ5ywgq2lAB2a9R
jGwD/jzQqlbNUfGPiWREyD5iMJ59U+JdRbge9XkpWlOEcqAnGOPLwfgZGAyQ
NvTV8eUKNCZ+co8n+A7GxAm1cZmYhGjSgl0VsxZoRSf+AQiw6KE=
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {0.5740781426429749, 1.239707589149475}, {0, 0}], 
      InsetBox[
       PaneBox[
        FrameBox[
         StyleBox[
          
          DynamicModuleBox[{Charting`ChartLabelingDump`i$$ = 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/8HI/gIxJ9vfMWUeNH94f+nbIb1mO7+u9/VjYHBTpThxL3/P1Fk
fv3/tL6ZsenKnjyDwB///6DI/ft/MJhh2dmP/9Wl6zAs+3k3qPL7/9+CDAwZ
d9Dc8vffuqK9//7/qGDg+P//DZrc11v/d75sSP5vlIth5Idv8wPPPp0JDP3g
f7/Q5J5Oe/Z//sW0LCaG3tfo+u4znDjb53P45L4FGn///UeJtl+OUxe4lAMZ
7/a4fkDX93rtmbuX///f+t6cATOm76x69f/b+//X039jyv0DWxF1LW01htT/
f6///P/zN///iz/oMn//fv7/7lG461RfjJT1DxQR/y8cPrjoNoY2kPS/L0Fl
bc+xyPz///X72p1FNx9g00ZNAADihdl2
            "], "Byte", ColorSpace -> "Grayscale", Interleaving -> None]}, 
           TagBox[
            TooltipBox[
             DynamicBox[ToBoxes[
               Pane[Charting`ChartLabelingDump`i$$, {
                 UpTo[15], 
                 UpTo[15]}], TraditionalForm],
              ImageSizeCache->{15., {5., 10.}}],
             DynamicBox[
              ToBoxes[Charting`ChartLabelingDump`i$$, TraditionalForm]]],
            Annotation[#, 
             Dynamic[Charting`ChartLabelingDump`i$$], "Tooltip"]& ],
           DynamicModuleValues:>{}],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1],
         LabelStyle -> {},
         Frame -> True,
         Background->None,
         BaselinePosition->Automatic,
         ContentPadding->False,
         FrameMargins->2,
         FrameStyle->None,
         RoundingRadius->4,
         StripOnInput->False],
        FrameMargins->0], {1.596276879310608, 1.0446619987487793}, {0, 0}]}}}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{528., Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.771683690339246*^9, 3.7716837178899565`*^9}, {
   3.7716839812626967`*^9, 3.771684022993404*^9}, {3.771712181622834*^9, 
   3.771712202693672*^9}, {3.771712814250845*^9, 3.7717128698569922`*^9}, 
   3.7717129673248663`*^9, 3.7717130165973735`*^9, 3.771713058415433*^9, 
   3.7717130959313974`*^9, 3.771713160253644*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"fec9bbea-40c3-4e75-b155-8613fb38f4e9"]
}, Open  ]],

Cell["\<\
Extract from this dataset only the examples with digits from 0 to 8:\
\>", "CodeText",
 CellChangeTimes->{{3.771688981771391*^9, 3.771689030245325*^9}, 
   3.7716890884030685`*^9},ExpressionUUID->"d5f0680b-2121-45d3-b8c1-\
a37d4790998c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"digits08", "=", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
      RowBox[{"Except", "[", 
       RowBox[{"_", "\[Rule]", "9"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716085555774364`*^9, 3.7716085947686825`*^9}, {
   3.771608663368194*^9, 3.7716087361559644`*^9}, {3.771636762632452*^9, 
   3.7716367955514083`*^9}, 3.771690309919181*^9, 3.7716909019814234`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"832a4486-9a6a-4ef8-87ca-6b2633aed565"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<image1.gif\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"digits08", ",", "10"}], "]"}], ",", "10"}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717753448091545`*^9, 3.771775355220356*^9}, {
  3.77177541922552*^9, 3.77177577332697*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"7ee3f671-72d3-4f9f-aec4-41fa0c486125"],

Cell[BoxData["\<\"image1.gif\"\>"], "Output",
 CellChangeTimes->{
  3.771775355810411*^9, {3.771775409161468*^9, 3.771775417589658*^9}, {
   3.7717754516290236`*^9, 3.7717754684130936`*^9}, {3.7717755123908515`*^9, 
   3.771775566085886*^9}, 3.7717755965516715`*^9, {3.771775642614925*^9, 
   3.7717756784738345`*^9}, {3.771775713325563*^9, 3.7717757772904263`*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"a6be03d5-bfe2-4bf4-bfc2-200e9e37fa1e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<image1.gif\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[35]:=",ExpressionUUID->"19638e67-3f78-4770-b858-8a60f92f03e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transfer Learning", "Section",
 CellChangeTimes->{{3.7716886469732533`*^9, 
  3.771688653861806*^9}},ExpressionUUID->"77eaac21-b9af-4ab0-96d7-\
c626c57915b4"],

Cell["\<\
We would like to use features already learned in our model to generate a good \
representation of the digit nine. Note that our model has not yet seen the \
digit nine, so by transfer learning, we will give our model only 10 examples \
of nines to see how well it can generate them.\
\>", "Text",
 CellChangeTimes->{{3.771688661910346*^9, 
  3.7716888901573844`*^9}},ExpressionUUID->"d66f3ab5-3252-464e-aa71-\
45b290cfe6f9"],

Cell[CellGroupData[{

Cell["New data and model", "Subsection",
 CellChangeTimes->{{3.771691520014856*^9, 
  3.771691539602042*^9}},ExpressionUUID->"f7b54e93-d33d-416c-962d-\
05afc9a39511"],

Cell["Import data with the digit 9 only :", "CodeText",
 CellChangeTimes->{{3.771690837797229*^9, 3.771690869771495*^9}, {
  3.771690925423807*^9, 
  3.7716909430386767`*^9}},ExpressionUUID->"84f411eb-26a8-4fb7-94f6-\
2d059d6837b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"digit9", "=", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"_", "\[Rule]", "9"}], "]"}]}], "]"}], " ", 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771688897742191*^9, 3.7716889009764557`*^9}, {
  3.771689387661723*^9, 3.7716894238481855`*^9}, {3.771689477724319*^9, 
  3.7716895191338983`*^9}, {3.771689764444676*^9, 3.7716898029136896`*^9}, {
  3.771689840889064*^9, 3.7716898449004884`*^9}, {3.7716898927175922`*^9, 
  3.771689935715558*^9}, {3.7716900289100533`*^9, 3.7716900336803217`*^9}, {
  3.77169008076956*^9, 3.7716901199254456`*^9}, {3.7716907278933654`*^9, 
  3.771690732643916*^9}, {3.7716908601506767`*^9, 3.7716908931908627`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3a1bf359-b545-485e-9208-4f5fbf995833"],

Cell["Now we only take 10 examples to train the model on:", "CodeText",
 CellChangeTimes->{{3.771691028549061*^9, 
  3.7716910473392324`*^9}},ExpressionUUID->"0a9e2bd3-a631-4629-939b-\
a6b0db9a3c9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampledigit9", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"digit9", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771691019244401*^9, 3.7716910623460894`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"78ad43bb-dccf-4530-ac85-ca7f6cdb5d92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9i4Mf6KCYGg9QdWKS+BTKCAZP+NnSpr8FAcUVjSSDJ9QxNLpyR0X7O
h/+3DICSUppbkaXOsjNKfwTb2qIIlG1CljvAyDgZyuzEIncKylyIRW4jlPl3
EqacYN+Rf0DWrxZVNLmH+iC/ySsoKMgxopv5/9tyYy6w31mUQtDlgODK0bzc
2UdP/n/DwRiLLgcHnIxaOOVcGfnv4ZJLZmQ8h0duDh65MlxyqxgZc3DJ7Wdm
5LiAS1Kckfs6LjmiAADE4J+z
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+CoL6eAQT2Y8o4MMBAPW4pDE87wE1zQJerRzIKXQ4htR/dzHq4gAOG
ffUQy/ZDPOGAIrcfyZFoUqg+2I/uvXqc2iAG19c7YA8ysKwDDm0I52IFuGyD
OrYetzac6Q6Pbf/xJdf9OF1CGgAAMlKSog==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9W4NX2dE0mRhAMfoUmtVaBiRkGFa6jSMUwMiGgyWtkqWs8QPUhGTvP
nj27hIn5EIq200DVmmdOfwXZim7bV22wTdomQFs90F15LQhuG4bc/69ng6Gu
fI0hBwIzX6cD9eHw/zUxoGtxyAF9KY/dSLAvY3FoA4ZnBnaZV4VMzPZnsUuB
YmEmdikTkN+wyq0F6ZJvxaoNqEtsAnbnX+NhEFuL3YlAfThciAsAACxvndw=

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4OebqipNuZtYZF5VWjEyAYHLL3SZLxv5mZhU1YraeZjOo0l9nszE
JJ4DYnkyuT1HlYpiYjI7DWZZMDHdRpE7xyRe/A1sNFCR1FMUuRwmbxD1K1UL
6Jh6VOuamfTnzs1SVQK50+EHqtxjRZAoE6NDPIa2//9vVQPBuy9bLJnk72Px
OxB8MmFg3oVd6rkJEyuGiRCwko1RHIdULicT83KsMm9n8jDJY7frrScTUygO
FyYwMXnfwCpzX5WHqRIj2iBgGRNTBQ6p/7OZyv7gkCIdAAAdcLHl
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9W4MyZdLH09MUPMGVaTJiYwVC8BU3mtB0jEwxqfkWRuiYG1GGfUVNz
tkaLmSnYZB2S3ExGJu5WCPOVCSMTAxOSnAcTM1zpTJCtaxFyQLUw5oMgoJ1i
SPpimZgLX4M1zQTZLHYW1T5GJrv0IIhLkXX9//+6hpkJASegefCaCRjMVGBk
MsEMGKirmJhbccoxMl3DrS8El9QZJsYMnHLMTLjlmBhrcMk9EGfCKYccshig
Fbc7UQEAeeuY9g==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84M2GWEaGdVgkvq6OkGAEgnRMqXY9kASrM2MHusxrAyZGr1l3fv9+
VP4CTWqzFKPsnr8ww1GktvAw9n6GcW7pvUKSOskmsO0fjPPNiLENSS6EbTqC
E8vIiOSL06LWcPbvPA7Gkm8IuSmMUkdhBtYzMvr/QjLynRwjm6FhzISbE/w1
GRll76E4c4EtIxyIv0Pz3q/HPT22uoHheozsF/9jBxcMmRtxSH10YdTFIfU/
k1HrAA6pO1xMs3Bp82XUxCWVwcV4FIfUNR7G/M845KgHAOo5tyI=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9I8Kk/Tskk7Q1WqQwmJkYmhQdYpK64MDEJr7/4DIvUN3dGJtNTixa9
wyJXxMgof8aNkVESi4lsTIxT/wP1amHKLWNisvr9hp+RaT6mXCkTk/v/50B3
XsSU62VkNF5hwsjIdxdT7pU0UA/QfxrfsLhzvREXEzd2M4Hg8q5DOOX+/3/O
yMiIKfdwfcuy////ODIy5WI6k4VJeNX//5MYmbCESx0Tk8jq/0ewyv1fJcLA
GLaTgZHrMhbJs64g/zEx7cLmyk994kA5lgPY/fBjhitTPXYpOgAAhf6l/A==

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9e4NXxoyn86obNT9El/q42kmGEAFN0uVagIG/20qVLQxlVUGW+ZrIw
es97DNS+XJY9BlWug5Gx/heIsYqRoxlV6q4g48ofIMb3GkbeG6hyl3kYnwGp
d8tNgbZORnOJEaNjcXExLyOjAiNjIJrcGojrNSqeMTKWocn922pjbBxx8c//
94yMVejeg4H3mGZSQy4Hj9wWXHIr8Mh1M3JdxCW3Ho++T/y45f7XMKbhlEMG
AORTtoc=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9O4GZfPRMDE5NQX2/fMzSpHFFmZmYmZjAxA0XmpBUTs4D3ieMnokyB
cjYoUvLM/P77wMyvfkzM3shyVszMxTB2MRPzCWRnKDIxwdifHBiYjiPJHRNj
DoKxU5lR9YHMnABmvIkUZWYSu4Is58XMrB4GAtYgP0SgeOGZEcxrRUbocv/f
F9szSZsUb/j/P4yJ4cl/NPD5yasPQOoMD3P6H3Q5mJORfIoOMvHIWeGRs2Ri
KiJHH1BuIi45YAgtwCUHDCGcZqIAAIjAnlc=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9i4EczKyMjQ8yit/8wpL5GMEFB8jp0uXlMTDJOa6P5gJLyaFJbhZiY
5gHps/v27TuGJhfCxNT0F8K8uOwBhtwjKFOEaTm6nO4HCOsIC9MSdLloKEuC
iakEXc7nF5hxmIsJ00yIfW9cmLDJpV8H0r1MmHKn3JiYRLW0tLiZ9DDk/l/3
BgeYyrweJiYbNLn/f0808PFprvx/wpFJ8iq6JAzUMjE5kyN3iYlJ5CYOuc9A
J53CIfddB7fc/2wmphhccsQBAOS6pBY=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771777499277703*^9, 3.7717775083275223`*^9}, 
   3.771791313325594*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"2a53d85b-c5c7-4173-8267-c31a3445a57b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4FNfb0JBXx+D4TMMqT1ezEzMQMDEfAJN5ul0fpCwvk1nh80VNLk+
kBa5OW+wWebAzCzcj9UZj5gYmKQvgFiLmRiWoskBrdoJZoUxM0WgypUyM7l+
BjEuiaLL3ZRnZsoAszKBjt2KIncMKPIEzLJiZnb8jCrHxFQEos8kMEFZKPqK
gdT5BJAnF2LIRR47likDCjM0bWD7IEHJLHYLTe6ZEVxO4T86WGDCwMTEDyJi
MeT+f3jy5MnzYiZmseOYciDwAuiWaOxS/1uwRCsU3NfALUctAACKcY9r
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+CYL8D0OEMDtikwDIgsB9DigEO6rFJ1QN17Mc0dT9cPWZgOcCVY8gh
pDDNRCh2wHALVG5/PRZ3gvxcXw/1A6ZT4AAjYOoh4VWPaR3ErnqI4Vjk0PyC
qRevFE4TsXgAyTIscQc3EaeR9bj1kQQAUyGVXw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4EmNOt8h7FJn1RgZGa2wyXyP57TZdTuP/TQWuSiWRe///6/n2YQp
dYptOZB8bcTIiCnnqPIJSOYyMjDcw5BjXAAkDvKbMYZhSG1gfAski9dVM3Zi
yC0Gy/3/bSb2HkPuKUM3iGpnzMfihRBG/0XbatgZT2KR+9VqoShqLmn+G4sc
ELx/8T+vAbsUCKjhkRPGLXeevR6n3FFW3Pq+COCW28aIW24q40GccsQDAGjR
2MM=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4M9BV84t37HL1TMCQT02mb9BzIyMrIzJWKR+BDMycjV+MMEmBzTQ
4Mz//1XJS+ajS21gZmz8CKSTuJnYb6DJOTLKvwDR4UDnXEGVusvPsgxEvxPB
lCtg5AbTAUApl9+ocumMLCuB1GseoNw6NOv6GBm5O1cctgRKcZ1Gk/tTA/Q4
IxsoYFQx/bfWkBECLmDK/f96fsF2e0bGgL9Y5EAgk5ExD4fURw1GhvM45E4w
MhrhiD+Q3HIcUv9rGBlX4JLrYnT6hEuOSgAAsSuuiQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4GUtJyOj4RssMs9S2BmBQOgFptQGdUYw4LmNLvO8kYPR1O/+07MC
Ao/R5eoYmbPAVkrw3UeTWs0l0AZmrOdEl9vLxegDMdqVEc3Mr96MSiAX/Dpk
yMhS/wFFbgIj/wEgtacY6Eyrt6hGmjE6/9/TGgDygeBxVKmlYH8xyPgv42FI
RnPkRg6gFFvmgceejEqf0D3XZ581//3///OZBB6gS0HBAw3GqG/Ypd5VMPI9
xaFtDyPjBBxSb60YdbHEDhhsZmSc/Q+HXCkjo+0fHHLVjHYYEUcWAABAmq4y

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4PvmVPHJC/Zik9pqyQgCgm7X0WX+tbIwMmUVF1szMcreQpO7zMgY
vxvE2G3AmPQdVa6RkfMZhLWHhXEjqpHJjEVQ5gU2xgwUuZ+MjE+gzDmMmHL7
ccn9i2cU+QFhTmVknIvqljWMjH6fQIyDQoyMV1DlvkYzMvqv+P//mDAjhtz/
XzpAQQEBDiBp9wdN7v/vND6gOFuYAqMTuhQQ3Dp/fvmZ/waMOVjkIMCAcR0N
5IpwytUyJuCU++B8AacckQAAr+e15Q==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KYFFiAAOj00csMq8CORhB4Bim1GpRoLhgJGPoLQypPiGglNuX79Vf
MaS+cTLHrr/5+f+/Z38w5FYwRoHpfsbjaDKfDrgzXvz/f1+WKTOjPZrc1xBG
xtLuUElGIVHGPnQjnzHCwXOsciIWIPIqutyvrNwCXYGUiYyMbJsw3AkBmxgZ
vXBI/V/IyKj3DYdcECOjLw6pr7KMjCtxyHUxMrJfwyFnyMjIjUPqGDAqPHHI
5QONXIRD7qSw/AIcUiQBAEhcsBQ=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9u4PCEsDBBjt1YZN4WMjGCgDgWKVNGvrK18xilFC9jyPUyWrwEqgh6
/gNTXw7jbSB5gsUZi3WGjKoxxqLcjNJY5FZasjMyijAy6mH1wpOHD68JMO7F
KgcECYzS33FI3WJnLMch9T2aUfsbDrlZjGwrcUg9F2b0x+WQdkaRKzikzsgw
TsIh9cubUesrDrlDjMzHcUhdsGAMxeWQvYyiF3HLheGSwgYAjZLP6g==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4EUwAyMDY/YvLFLLlZiYmJTiZXZjSt3QZOL0uyNX9fYfpi5OpqBT
/9OZmLIxpJ5zMOk8/n+QhYkpCkPuOBPbgf97BJmYuE5jyDUz2XzJ4QU6pgnT
JU+Y2BWYQOADptyvQjawVOUfLL77/2PuXDsmpoPYpEAgGbfcT2bccleZmBSx
OAUMJjIx9eCyroiJ6S4OqQdiTEZYfQAE1UxMKbiMjGRi2otLroCJ6Qwuuc++
4g9wyZECADavvmo=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4NePi0GMQLAZQ+bbdDkmHj4+Pk4miz+oMr+nKTGxl70Esi6IMn1A
lnmTFcGkPG0ThBPHvAsh82daBJvZHKjM/3VF8WfgUn97mNiaoexPq+O4rH8i
tD22kIZJfexmYhLpRHK5GtM0qMzZACYmpmaE1P+9Mkxlx0FghTmTiDoT03Nk
R06XZQID/d27L/oytf9A8dvloDK36YcOXfj/v4WHaSFGoEBBJxPTMRxSs7mZ
Sn9il3quxqTwHLvULism30s4TGxkkl+CQ2qzptw0HFIX2JnccEj9n8DE1IRb
zv43LjmSAADd27U6
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7717772873258815`*^9, 
  3.771777294181181*^9}},ExpressionUUID->"ceb20704-fa89-4ded-b787-\
2c2417c7e98e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<image4.gif\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"digit9", ",", "10"}], "]"}], ",", "10"}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717773082495556`*^9, 3.7717773177168894`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"edd4d7cd-5bb6-459c-884e-f363c5589d17"],

Cell[BoxData["\<\"image4.gif\"\>"], "Output",
 CellChangeTimes->{3.771777332031858*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"f74dc906-b1be-4fff-8ac1-7386a70cb25a"]
}, Open  ]],

Cell["\<\
Finally, we train the model but this time using the Multinormal method :\
\>", "CodeText",
 CellChangeTimes->{{3.7716914654325027`*^9, 
  3.771691502902852*^9}},ExpressionUUID->"29c504d8-8086-47f7-b345-\
f6742e43fe93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ld9", "=", 
   RowBox[{"LearnDistribution", "[", 
    RowBox[{"sampledigit9", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Multinormal\>\"", ",", 
        RowBox[{"\"\<IntrinsicDimension\>\"", "\[Rule]", "10"}], ",", 
        RowBox[{"\"\<CovarianceType\>\"", "\[Rule]", "\"\<Diagonal\>\""}]}], 
       "}"}]}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.771691097157357*^9, 3.771691123858289*^9}, {
   3.7716912095220165`*^9, 3.77169125720986*^9}, {3.771691320777122*^9, 
   3.7716914169006786`*^9}, 3.771691455862616*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"341e565d-4d9a-4342-8066-e26290041066"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"ld9", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.77169258803761*^9, 3.771692594280308*^9}, {
  3.7717913271371465`*^9, 3.7717913278177423`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d1accab3-7312-495b-a926-441b5abf2a4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/4eBfxASSP2FciEi///++48G/sKVI4N/ONio5iPL/fl/4v9HbBqAFvz+
9H/h/2k+j39CJeEK7n5fln2cgWH1qkjD7wjnQEDd6VN1DG5qOqsY/vt9+41k
3r//E4PkhBgYFJMZpgba156EmQkxtZTF27n9/7OuVy8krZN2wt3779+za25i
DPMZth3///wxQ9Z/eWR33j9rc81P+P+ib///tzA4vGWIvQj2HDgADzOc329/
s+3Vtq/35iueDCjNQXLKHgaGytv/t52U42aY1iPF8BU5fO5/3cXwZ+FyBlEG
D4apYgwOEAmoneITGY6eiIzv+HicgcVT4DsiqP7//zWbj+HaCosY9f8M3CIZ
c4B6/v5BhNnhY/fibjf+t9VjYF7ufAAa8tBA+/Ll//98YAjUMLT/t/uIHmff
TsTfP/7/NsPF/5lrXyPCBUqfebUzruGs7O3JB5H1AJ3798f/bmNB7ar/O5X/
/3/xD+Y7iJWv/h/5f+f/DOFnFxm0Lv+HSYI8CXTKc/cLQH6wzv/QkjUohv4H
2vFw9aKFH07ocTMIQbT9gWp+8D/7//v//z8tC3T/f/H/rN/IGhFpw/cHsnGY
LCgbAMgCmJY=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUl9IU2EUP9hD+dSoF0EzlN6ih0RwJT7sRVLB4jYpFYXJlqixyd20hAm2
EhqkkNH8B0NRNAJB97AX/+GLjSkUyKSUnJiECMpKlpL33p/f7d7de10Hvo9z
vt/5vu/3O+fkNbi4JxlE5L7ENs72zMLzto6HJhZUOd1NjU6HvczpcTQ6eHOD
nJajLkhQTILIdlGLNJNSoX4mGWADKiA99Xxe+hnz4sPAyX8fMEdaHZkBks1y
KBpQcRNf/gLZO+MXEEtRUaBT9JLfRGbKsXpevRYFTQxjFsBAbhZdv0pX+oun
N3CgvchWSxeVcHbf7nsMluGlV2cqxnBzjD55b0RZQO5c81pS0CiGeqhTdo4k
8IHCt+AOdRnz8BXM1QiIw0ovMFo/uK0L+976nK9G5E0Y2HEVsgZAKbt8VSAM
JHAfyCwiy4OZul/yFUGR8QMX+x/HvbPcHgWplvaNJT2t7v5Mfop2g+hybfh8
3U8Crp7xTerruzVGlbvp3ZhDVwhVsfJ8O1kSUAdAVMl+bVv5GDGR7edS4uhY
7bqUUjIP9NbcoQW0W/e1IVHR9dZlG4K4Fl2UBaid00i9W/BjbfXwNiaVn1IA
5wMq7tUBpQhN6Tz+FeFbMILF8BY8EJ7G8EcyaPw90SGnDsGFDwePoLfIIDN5
F50GBrqpBDTkDGkBors=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf//+wwCU9RfEQoiCRf7BFPxFFoepQlH+D0kCrh+JBZL6A6QPfv//
88+nfyjaEHTv/5nfn6NIAMH1/zu9todN/r/gIYj3B0nuz9z/UgKRsXbhDDVT
7vz/i7AQpGLJZgYGT7ZUBqloBob3s1B89RsUDNZdIVWiDIuWMRR9R9h1pfNT
aSXDgczHjxqa/j+fX4vsn9N61zZ2r9969/u3JebnGAL/P30Bl/pSmys038X/
2OW0xf39agw1DLkI637NOtkLtKF/b8mEg9GKHQt+/vkLD9f/k+Z7rPv/eaHm
f60aYBwtbfuI7HWxouh7xb/ro+/l8HEzuKGE6++s+fpKDFdKFjKoAP0yE+pr
mM77AfbLm+58d5s2m3GZPzSoYMY++vY/u+X//qQCZZ6JFrAYBsUMOPQeXX64
pn3rynmp///vhwQWOJaheu97X0zJZShm+H/qAyJYoDH/Zy/DxSMzfq////8T
qhQw4P4bln/SZ5hecO8AaoT/2fV/J9DHB9fsXf3o/9XbUAmIkqdd//9HAT3a
1jUt//931CT46n/H//8nZ/x/7Jk78ev/b9BAgSfkbyD25bNLUV2B5iq4eQB3
6qDB
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weCv//+gaj/f4AYwoIAbOx/SKLI8kDd/xAK/iIphun4h0Xjuf9XVrz/
ChOBC//99//3f7P/ClP+H0STAYIl22Neai1bP+X/5gMo9v//fv5+VfyeCH4G
tsXBF3/9RLbr9/8LZtpsnAyBDBZ5p81W/n8HdwnQ1QynGIIZfHYWpRT8Z2BI
WvUWYeLdb5sUFdv+/z/66EW/IcP6d8i2rbZhWKz4/f8OIHPp0Yzg0kkP//6B
yb2OtGjYU/T/W8+B6mkMeyf+r74NCVwgeHmIwe1pX0my8zGG/5HzZBj2IcLm
3/8VdbEH//8/6/A/TIXBz850Azw8QATj1v//M/43TegNYWfgmnjrz19EqPzI
+O/Su8t8ztpdhZoMUi6b/kG9Dbbz094D/70X/V94ZQ67FcN/dPDcz9dz8SpV
rbhFM1VPIoTBNv6JXPj//7ztDH4M5gwnf8GDDErdvVz1M+zj3qfc//d8QWj8
9w+o9df/o/8Z3v//z/AG1UAwWPT07v9SBYNle+r+g5MeQubMrrYNM0/++nf7
88WZdy+BDEPITf7x/3963P/TvW43p/+v+IuSJBj2vP7/z/Tcnv/M/4Xe+f5H
kbv8FxxrwKRy+g+KQ/4izEb2GAD+qpyn
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/4eDf/9A5N//WMHff///wRVCCITIP6xawMJ/ICb++wcX+vcXSf3Tm/+n
nEXS/hfJvPj//1cda36EZijQwIUlh/7vnRH0/8FFNLl9/93+M7AEMzDo/ldZ
BTbtL8Sl/379LxRtYjDg0ZJgYBBTLTz3A2YLUMF529sMXskMB5Ys1FOaW8Gw
4AuykafcvVjElv4HuuKjK4PN/8dIUgzsvEH/zy39/+d0oW0bw9c9WxFSd1Yz
nFp44v//1wu8luYx3DkNEf0F9tvHRww70tb/31nNAHSoP8y7EC8n5i0yFfvf
ypC+jsGXgzvvJMi3MBWPPM0Y/s/YUPqOwVpD1Mb1/V+UUI+Y5s2gpspwolWe
YcluRHiDwZSjMqqZ/y//1/TyC75w9j9KfH2//Kh68hugtxR2sv7/hhae/6/M
zwN5tPX+/y1PYGL/YIb/Wv3qWIzKSkvfef/hcQ2iIXF4738HQ4kWyzyIr/8j
Eta9lHq7d4WKh///7zz0ACXpfGzYaff1/79TcTeaSljQnTLvf8n/r2//b//8
P/J/7VuYkTDrKt4////zf9b//oy7LX9Q9LVd+QJKdOeyYQ74h5FeUbgAlbya
0A==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxtUl1IFFEUPiRBAxqFQg/Wg1lGz4kklCYooclSlmSsPbi4LUKOuiarEmyJ
WW+uKK2yUGxUGKwvPciyLBiagsjSDyIJIWIq4kZiS6bpvV93nJndO9GBOfee
n3u+c74zOY6mqjsHiKj1kFBVdZ4St7uu4/oRYVSrrQ0u1Vlfrt5zupzu8w4t
7bjxQQgDOEzh5sGZYYpzb9+RyuKaxyJGiIkAY1KmJYVLjzVQhgAaragp3b+G
zpGQbnAwM8Mfxwe0x8Kx2+K0Yn+swX16eO3UYcq2lwoQ/amm93BjJFcpuuA5
15ZmAyZ35Xm6yvIu5thm3zjgzB3tnU62y5FoofzBYbx68X0c7tfk25HQlkCN
zfCN/9wGvE/S2j+/TQ66CeoBIVE5s4IawXGl1OdKw5Dg3FUc8D/zkHKmsN6X
GoEh9GgRtm4lSL4QBZfUBYm9vq/pmagtf+8XBbOaM1+afOrtnH2e8fTupxjr
P6GcHtv+Z0tRMW/Tu6tHC+nmxA/Iy8bqGuCfwjQ9oIh9Q96STukqqdXpYyeD
gkLdzZLR38BBdHaJ25Z1D4Cgt/fXJbo8XIDwvBUQiXiYKrZAjz3wLhooRig6
D3uGcgUYmorumBX1Jc6JeXvEJbtvHRjANxlwg89g888kECiO3/K2WH5mPoBl
7RL5ciwiNbFfl+E/8hft+J13
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weDf0gkkPr39z8K+AeXg4O/YHWYQgg2GvgHVf8PSeT//0//jdeiCPyD
O+Tb//e3WOqRJP+CyUO3FtbNd79UE+0ahmzPP5CeDbsYXG6HZ+rzOrH+/oXq
qI0xPmYMDImRDEHl/4VQvLPrhTkDA3v1wepGFob/RtO6fiBk/2yWY1h6IfrW
5XfzPh14pKY/7wPCewGKE+wv/ld///B/XNfz/cBwvAU38TvDf5/Cesf/ezZt
/H8qez/DBORweH1oPVDlp5hn//9bMUQzoATVmzX9/3f9mv2fYZMFgzyD3v9v
SHKL/1+8YMT8zp8hrkudiWHidWQv/Nio2s6QoPA/5D+DkCJD71FYIILj8et/
hiX2Mv//M4QwZK/5344RMf+v/Tf9X+BX0Xr2EMJ38Pj4Yf5/d3JS/P+TGNo+
/F9y/SDD/8j/N2WQogASAL+Sbv7/f69xyv+lvU9hZv6DqHi29L/Z/+LV/7cB
XbQHPZ1smh/5/7+a2awjGUBXwd0AAn2n/p+6tf7/Y4uPO5b/n4qi6cn//6/+
X7xRAgyjxlmrtiL74P//u7f//wWasbqusBrVd39RzYd5AAAdFaEa
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/4eBf//RwL+/cLG/GHIgoX8Y2uCcf/8QJIoMxKS/UO6vNffRTYYq+vvz
x/v/7Tb//38Cav0D0v4Hasa8v/9f/D/4/+ns3v93oUb9hmm7/v8jA4sDgxpD
DYPBn39Ixv3/2RZ5W9JQVYOBwf3FNIb/L5Ht2iCbzBAj/n/z3v8M7T/+n0Fy
yEsGhvDsx5H/N39dsum/0yIGhF/+/X+4fJJNciGY0z7pBkrQPGtlYLADMhuf
NrydqqJVlnz0Htwh73dp/lfW/6/w/79s0n92JwbXLcg+Z1C+dHBu1P9jzj4O
ht7B01CDhcOI4XncgQA/BhmjdvYDf+H2/f//9f8OoF6G6cbaVQyS8h1X4I4E
kfeA0p2LvrVUMfTy5Li9hEbBP4jk//z/W640/Z/Z6zXF0WEqekSc+X9EXxRI
H1X4cuEnIhL/gMkrzy4LzVx1fs5Bhi3fkZLBX7B7vgIDT+f/ndL/W+79gwvD
VK1e4aLDsG3a+p67KHH0Y9lKuQkV9lv+i786MuUN2I3/YHrePv52+v//tX97
/p+YdfrCoc+woP4LTKTX/h+a/fbpyc+zp+z+z9Ws9BphJBAdfgLmnH3BgLAf
FjYYyRooBgDpL5/0
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUl9I01EUPghB9VKKkFQoifXUQ0RpQkk+2CgjYTIiCEHZ1FFONjOx9RgE
/QGNZvgQ/CBwYqDQQ0ambT2IjCkOLVErHbZ6iETD2czd+/W7d79/ywP3cu45
33fud+65Rxpa7Y05RNS2W93s9R2VPl99Z+1+9eDwtLmbPC7nRc8tV5PLd6ZB
wA5rCwDnkLYN05jhZbLcPMs9LTHMmsmCpLmswdh/PEHkwueSvIZENP13x50S
J8KE5R21k8DqAt3oXMMwLGFV5zhmUJ57oKqs9kFUCDcKcrY0OYcLp/ecLDpV
fNyrFdXsS3iWSq6gn449GszBHVVTRo1658Yi3acKxMLA8+7Xwx1W2jsK0XIB
/UptI3CTjs5YUivgvaMsOYXbGCp3EvLP6T1wrA/MUay1UAToRKOT9vWb/XFQ
LsGW73dQXWFlM8m40CFmMADaCyXQ7n4WPJhHlxf1dxHU309RZo+edVPpIVuB
9+cnbTjyoTGPkQjGIkU1ZG8PjU7oIpm880/ibm+ypq/7FV2ttnanD+MjVlHa
kno8H9BHZtjWZFWiosuvIP4miWzber+0C+w7KNKn9ca43uVY/KvScj4+7oVr
Re/BqEv3sI7whC0GbMpUOgPhmP5w/doP+J/A8bbnRSJlfgmOUDCulvgG5eGl
ID57DRUSoeiu7aXG4OZnyoZK+wdbxqQ9
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cD/kGov3DiH0wIRR7IQJFAUYNp6O/////AOF83/v///M8/JD1/oQb8
nvm/9r9z+//X/+BG/oWoSLsRuwjs7JsfoVpgsmv+P5xUZsPMregl5Hn4G8I5
QPk1n245+jCrzi1kiHvy6DqyC/8l31/KwHbVmG//I8Fepfca9gib/v+v8q+Y
zOBjfPx/c/TtnUcuMPxChMLW/6eOmTD8ffX//7Xi/4sYFMCO/AcE////+K/E
PDd9+e5r/6et0mFgWPvn5W+oS/7+/zWhkOHo8vZlX53+VzDo9jH4XkVyzGqG
JKYJ//8XMuzfaW4rZ/v/G1J4vmc4Hp+yo+8uA4OvJgvLKZgb/4Jx0cOfRf/T
ozZ8YpDhZNz7HmwTTMGfD///35v8n4GPgUE3+eQWpOgEUQ+m/M8p/P9/j5jp
rVNzUWMKHK5t621WXZxh+/8DzAtw8O7M3OKb//8/9tn6HqEFZDMwkC4sBCYt
xSDrZc+kUUwEhVv9/6n6DK07PkinzbiDSEEg4qJu839Hhudm3IX/Gf5fREQe
COR/BRKb/3+ch+pGUNq5d7sB6Jq1/j1b0/5vvSiD6sr/X8DGPJj6CRZWSBZi
AQC1WZqq
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716925954524355`*^9, 3.7716926020713463`*^9}, 
   3.7717913290060854`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"e3acdd21-f44b-4a7f-a708-de9c99d5625a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ld9", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<Sampler\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7716962914538355`*^9, 3.771696307691295*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"5d2b3b55-e670-4175-8bcd-32d2306b9cd2"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"Sampler\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.771696301259468*^9, 3.771696308777294*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"20544afb-3395-40a3-9759-c363fa526e03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<image6.gif\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{"ld9", ",", "10"}], "]"}], ",", "20"}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717914261211247`*^9, 3.77179142678601*^9}, {
  3.7717914692971606`*^9, 3.771791471753169*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"e3ab136d-0ac6-4d2d-86ce-d9b6a39ef94d"],

Cell[BoxData["\<\"image6.gif\"\>"], "Output",
 CellChangeTimes->{{3.7717914498886766`*^9, 3.7717914745313263`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"ab1e885c-3862-49a6-9cf6-4f54e6ef8771"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<image6.gif\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[7]:=",ExpressionUUID->"70c6ae5e-c836-4d01-8683-7c2038a3c296"],

Cell["\<\
Finally, we train the model but this time using the RealNVP method :\
\>", "CodeText",
 CellChangeTimes->{{3.7716914654325027`*^9, 3.771691502902852*^9}, {
  3.7716922323839607`*^9, 
  3.771692234273775*^9}},ExpressionUUID->"f1dc5bf1-531d-4b32-b4e4-\
e284a66f94d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ld9test", "=", 
  RowBox[{"LearnDistribution", "[", 
   RowBox[{"sampledigit9", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RealNVP\>\"", ",", 
       RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"\"\<CouplingLayersNumber\>\"", "\[Rule]", "4"}], ",", 
       RowBox[{"MaxTrainingRounds", "\[Rule]", "40"}], ",", 
       RowBox[{"\"\<ActivationFunction\>\"", "\[Rule]", "Ramp"}]}], "}"}]}], 
    ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<DirectTraining\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771691097157357*^9, 3.771691123858289*^9}, {
   3.7716912095220165`*^9, 3.77169125720986*^9}, {3.771691320777122*^9, 
   3.7716914169006786`*^9}, 3.771691455862616*^9, {3.7716922287764378`*^9, 
   3.7716922595552025`*^9}, {3.771777439680786*^9, 3.7717774400101624`*^9}, {
   3.7717774947073097`*^9, 3.771777494806123*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"3b93c870-d3b1-4e91-bfaa-80159cb92265"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["LearnedDistribution", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GraphicsComplexBox[CompressedData["
1:eJyFXHl4TkfbzxPZitJQa7WK0Iq1qnbm2GlVtEIspWqvV1RpvZZSte8iJHZV
ak2LlmpImGOpfY8QUSJCEmvzJCKLLJ8+9/nNuc593lyff+b6PTNn5t7nnnsm
qg3+6tNh7m5ubl093dz+bemfj462ZtdQv66hHgp/+C/0cyh8a3/wzf3BLyRw
Ldf4ZwrfdvU/UjjRhW9K6zqR0cCx1C+A4+h7hWvQ/ArH0/oKdyH6NOt4D4WN
lmPFJ2/BLzD4BQa/wOAXGPxa5RgZDQx+gcEvMPgFBr/A4Nc63kNjeuPYxhcw
b8EvMPgFBr/A4NdqJ5HRwOAXGPwCg19g8AsMfq3jPTRmlxzb9Mb5AuYt+AUG
v8Dg1+oHkdHA4BcY/AKDX2DwCwx+reM9NOZ3HNvskuuN8wXMW/ALDH6tfh4Z
DQx+gcEvMPgFBr/A4Nc63kNjcYVjm99xu+R643wB8xb8WuNYZDQw+AUGv8Dg
Fxj8AoNf63gPjcVNjm1xhfsdt0uuN84XMG/BLzD4BQa/wOAXGPwCg1/reA+N
7Qsc2+Imjyvc77hdcr1xvoB5a92PIqOt+1FktHU/ioy27keR0db9COM9NOs6
Phzb9gUeN3lc4X7H7ZLrjfMFzFvwCwx+gcEvMPi1jvfQ2L7OsW3f4/sCj5s8
rnC/43bJ9cb5AuYt+AUGv8Dg1zreQ2N5C8e2fZ3ve3xf4HGTxxXud9wuud44
X8C8Bb/A4Nc6zkOzrufDsS1v4fs63/f4vsDjJo8r3O+4XXK9cb6AeQt+reM9
NJZ3cmzLy3jewvd1vu/xfYHHTR5XuN9xu+R643wB8xb8sryaY1veyfMynrfw
fZ3ve3xf4HGTxxXud9wuud44X9bxZmu1Z/s5gufZPA/leRrPY/g+z/dBvk/w
OMrjDPdDbqdcj5xP3rqGd/XS0YJ/9rvG+m3fYRz7Xiuq5fPw7zgdRdCtudjz
89ZZ+//9rlqsw8fx3/n6fB2MZ/06m4evq0W61F0gqXXX6YyerTDZm1Phd1wT
3FMY8uHzWLHZXnTZy1kBXI3mUxjzgQ6sD4z1gQsK//2XJax0F9i+A+Yt6AEG
PVa+C9S6+B2Ytyk0n8KY3yq3AjUO8wHDrhjWMQ/5l1MA/0HzKYzvwAd+B+Yt
5gPGfMCgG+MwPzBvoQ9gzAfM9YZ1+HfAkAcw6MG8oAeYtxTO3DVgzMf5xDis
D4x1+TzAiL/c7vk5GP2Ix8Cg/3/jAnX+4v7B6wvoJ7+OjAZGPAcGfxxDL4gX
wKCX+xH4Ar3o53aN/QL9kB/HGG/ly/Q/fp5GP/gFtp5jnIo/jmFH0CP6gbm/
8vMsjwf8XIt+0AfM/QoYcuN2DszjA/qBsS7sg8cP0AH9cjvjcZDHG+73mK8o
P0Q/6MN8oAd8ww7QD8zlxOMoj1/QO9bneYx133HXrfuOu87thO8D6Iec0Q8+
gbEuMPInHl/xe1F+Cb1b83Mnq3OY+wDH+N6aj5txmp9L8Dv8D9+Df465nNEP
voAhfx7P+XkL84E/vq9xbI3XDo3HfZ53c3rxPegFhlyAQScw6OPxmtcRuF55
nYzHS34O5fGR1yG4XfJzHI9nvE7D/Yif63n84eckHh95HAYGveAT/PF4xuKF
rf7E4wOvP/H4wOtb3N95fYf7O68Pcf/k9Q/uf7yewv2H1xO4fVv1mC8drnHu
+t+ufk8dvx9wffdUrnDJ7bnkv6Pt5vo90bCHdIHWRd7L88Dof+H+HLHMNY+b
hnY5tTpaY7w+lsYb+k9X7T5aT3Si9Qw+8gV+RxtC9Brxx1PDOLQucRU6NH/X
glcV/xmu8VES9GA+8A2+QB++h3zwPejFeugH35wfyBHzkx2mStCJfpJjMQ39
kAPkn+canyJAF+SAfugB/ZAP+iF/8AG+jxFWdAKDfowHv8DQP8bDvkA35PgW
0aPkhH7wiX7Qif4xJA8dfEOPoAtyRj/oRz/0DLmDX8gNdKMfdKAf80OumB9y
wPfQO76HXpEvQV7Yz/Ad4gavsyC+Qb74Hr8jvsDfgSE30InxmB92AbljXmDM
h/Ggk+sJGPRhXvCLeWBv+A7joC/MD4z4C36wDvQJ+wDG/JgH/GA+xEdg0AHM
7QbrAiPeQh74HXRhfmCeZ4FO8I35gSE/zIN4D/nBX7j/8HOK9ZyWrvwH8wGD
D9gd+ClKDhgPPnidxHquc+j83GWtlzh0vu9bz0EOW14PjH28qDpKUfskMPp5
Heh/z5uv9jueZ2G8NW/LV36E9fg+bs07zThTVB2F5z38HId58Ttv0Y/xtK67
Zj2HOTT8zlv0I34j7sK+gGH31n57C/0iniMu4ztgfs6ynisdys8xHnIEhp1D
L6APfoO4Dgz98hb2wvMUfAfM80pgfA96MR70AnM6YYfWukmqaq12maq+Rzzh
dRWsg35gtn/r3D5BN/JMa15p7nvA4AvyRzzhdTrMZ7X7fFu+x/Mc0AX9AUPu
vA4F+4f+uN6BQQfGgw70gw5gfq4Btp67UlV+AH0Bgx/kC8gTgIuqo8IfQR++
A33ARdVN8T3iOMZDjsDgC99b66oODXLAeORFwIiP8GvIGxj2CYz9Bhh2zzH3
V/wO/WIeYMR//A49wd6x30IvHPN3BpAz5In4zPMIyJdjbu/4HnTB/vg5C3kE
sNWezDoM+q33qU61PvqBeV0H/dAnMPQO+4SdW+0rX+W/1nOYWVdBP843wOAH
+ga/HCNfgP8g3iPOAUPuiIvWc3g+yyuzVV4Du4E8gEEf7A/0cAx743GWx2HI
F99Dnhxb6zP5ar+APIG5HVnztFQWF1NtdlSU3XG7BB/wf/CJ+ACM9XneAv8C
/9h/wC8w+vm9APYX+DMw4gDvt+YR6bb6DOwE64Jv0AmMftgr+oGt9zcFaj+G
PfJ7UdSTgHFehr3xOpOVbofKbzC/C3b1Unk3MH83yOMh5AL98Lox+IK+OX38
XIH5+D0m1gfG+rAXYGtdxcz7IC9gyMt6Ds1W5zDQifwE6+J7+Csw7N6al7mr
+iHyVSufBZLrBRhxC/aF9TEf+ObzwY95Xcr6/sZpq1NZ39M4VR6Gfl5Xh39h
fugH46x1qBxVb8f8wIgLxn6q8gJ+jwJ64C/Ubb8XRRzA/sDzJx7feXzm8ZXX
hRD/8B0wrwPBDiEf0F/Uvg57tOb57up+FfZj1Zt5DkM93Frf9lT1FH4Pz+s+
oIPX60A35oe8MT/kxO8xrff15v7N7835fQH6kQfyelJRfgh7QT/8wpr3m/cm
sA9+Puf3wrAnyB96h754XsrrJfBLjIP9We/fC1T84vbJ771BP68rw96gV+iN
vweF/jAedmvdr9xVnRB6wH4A+wA/1jpWtq3OD3/lcRqY5ye8Lor+oup2sBes
g++Bi6oL8zoi5MDlAnuCnXP+8Tv0ba1LpbPztdN2Prfew6UqufB7e/6Ogtcp
+DkLdgsMOsEX4i/0Df8Ghn9A/4jT1ncq6bbzDDD4wvqQO79n4O95sT76sT6v
m1ntJ5/ly+Z9J/QCe4HeeB0S8oG88R3kiu+sebT5Ls3690VOFR+s91L2dzZY
D/EF9gX+ef7BW3wP/nmdiO9rPP5az2/5Nvuwvp/1VPbA7314HRP2YZWbU1jr
XuY5HvyDziNX/jwxqZH5fmnIiW03S+d42t4bLYgoX9p3hZuS45wBD7M+PeKm
8q7YMjWCDo0vVPcJkUszRzVv/VxO8DvXfkFp8/0Q5PDt4827X5uaI7f3HBcQ
quXZ3vv4Bpdvvn1phpL7D5/0qyFvZSi/7Ls5a2zOBqf8pcqxucn5+bb3OoFL
ZzVcvOOeHNEkfX61qDTbex1Hr4WJvzZOVfT679vTouWLg7JhXr9OlcvmqXWL
LXqytXuFNIXvFv954fkNZv1/XPKCjOgZnrb763m7C9OmXtgjhi+rt3WETJL8
fYqxnsqXG2zxHl6vwV1xr29aWMOR5n31z82rtPzN94nt7w+6puz21/omqnz2
9HGf2KXF0kSj7wZlT/wsz/aeP/LYyvc2j3ksrvi955VV7pztPUjsL4tXz5n7
RNG/Kyes9xsiU6TFJt4cOStN7c/go3G/Yd32lMxU+97tlPRNtctnKv4OkP7V
+jWPdv6z8s08Uapzx/oR/S7Z3mvIN8KvJ+ww6zhxQ7tUOjjWfG/+dKVv0w43
zfg4a97zjZWTzPfmS0bVGvxiskML+vnB+olZL6T3/MH+47906FcLkhMqJ2TK
ak8u1HpxxqH3HPRPsex3n8rteR2WD45x6Oe/a7Yi6vEt6fOo9Z1x3zj0vM2t
3H9v5qkvHH00fN7BPOl0q73kfN/HsuHTf6YG+mTK8EtH5i796pZcHrAtQJbJ
lB8emuFV7+kLeYDkKzf+ePdSft0HotyF7Ptf7XoiJ7fbO6jskjz56ECfwFOe
v8vPJ/vXqvWuN/Qv34lIkBPaxgrHb1vPhwelijNv1lnxldse2WVlQJ12oRki
/aP+Fy7FmW1Q/W513q++V15reGb39IVu2tUvJ55dst9svx1aaVX3t4vp7/cP
mtRgWKHUk33yWvm761dba+Epb7npF3Pubwz864rYsSbGMae0m55ZOabCqfAk
senalIa/DiiQaUu+/PtZlpd++Kq2YuOAHFn3/eb1Vm3JEg2plSW3DOhbYkK2
DGw6Y9P6NU45tX/miu09n8uLTRrse3ApXXpv++JEi+tXRKOOAVV3jk6XtX+p
czvBL0lcaO/ccis4TS6IKFnvxslk1ZYKd4ttdeCwrPrzeW1peIqsN6zi84ev
nBUh61PebBVxT9Zu/2lGm3VnRZvRC/0frb8nTy79pZlXRL5s0nPc8EkTr8hp
rS7+VeI9p5znc0yfcfllPjpo50WP+k75SmexrXr1l/E7dnal2FleWtNzzQLk
uxdlKmHdn7DoSOPFg06u8eIEzS9q0PyiB60vW9L6YleYi15h0Cv+fGvGLI/3
/xFd258tX/u7RBEfterQ8Jv54j/3SzZqGXpXNCT+5TniX7xO8pHvkXzEWJKf
uEbyE21KROzduztHHn0W2K1bj+fiPUPu9Qw9bJ/sf7ycV4rMDCw9Yu5P+SKf
9Cc3kv7EXdKv3E761SJJ/1oc6V+9/3ZPqdrFs6z597rR5H9ysaN1glxRzPb+
dHqu/5jF53PlUf/Wpf3W3VHn4Jize5c8/N7b9n5bJua+nbrkmdyycsSbsYXP
1f7vXuLq7MSzhWJlgzcrepVLV3nGBYo/8simX4N6/5Sg8tEWVbeXPeCXLooP
WX0gPDRZzvyk7a1WU4tpA+JqH55dKUU+jY15WDbc/j7zinvSqxtuXpB3P+n+
86vVcoSjRlqBb8srcizFa/5+Uls7ftjCAW9dkQ6K97Z3PsN/uDitZccz4j7N
J9Oru+YTI2l/sZ3rqxVzrS/q1Eva1TvXjGuziX69N9EvWhN/0ov4E1fCz7RP
8Dhne284j/xFxdtetL+JZ8S/yhc9Sb4yjOSr9oue5K+i8HWfDi32Jag8oebc
wU2HlXHa6stNxr959+GSZyI/t3RCSskc890l6VudT4dRvqDiMORp2It5bqT8
QMSQ/ai8KDdsfPGPWxTY6s/fhrdtc8/XoYWQParfe9D+ofIS5EPnq8YENSvv
0B/QfmWrw1yoV33qquov5Niarv3Pdu82K+rbV5ctfSYb0P6p8tlxaROOBZd9
Yjs/n6P9Vpas51a2zX/d1Pu7u7R/q/d3yLNDRhwJOrrxgfkOgPZvuZD0rc5X
/ShfsL07jW+2L8/LP17t62Movkh97R6fNUMy1PcZu1IuTayeZTsXDI4f2fLe
zOuqftGU8g1Z6vdGG+a9br7vAx/ryN5lwJrAH4bMNu+11//WN2Zodg5/z6dv
JP8R9yt5h33slmu7Zw2g9ZUcp1C8Fr1oftt7vmvEr3iN6LO955tP8hTHiH8l
p1dJH7b3e81PbD4Ydzld1WEcW7r/9eNS873eN5SPil8oXtneJUwvPym3RG3z
XrXg8umByyo4tEiK//Ijiv8yaOA7k/9TM03umjO4wqejEuSjlIx2PWo7xfSM
o/4LFz8Txv6qRdH+KipucV/zdZmX8fB5SNBrrziwj+toq1K/DKd+PYPyAKla
ml9OpfnlZ7S+mEnrCyM/EUZ+ItIonxENKJ8RRr6jLaJ8Rxj5kzDyJ61V3Xk/
NQq5IX9s/8WldoMc+qNti47P2blFRnxepn7qeTd9a07retfanZETyF/1r50D
J23o/kTUDhy+039gnly0P/Gd5VqG6OR36LZblVzZZnKjd5ofd4qUC5/nl76Q
Kz+aOjSj8OQNuWjlitv7XzyTG97zrXfgwCa5RtbuPyUvQw71Pnny+KdnpRGP
5O+F47v9feXleXvZqrAxWc9kXVe+/lg0olZ+0/hSdNUjDm2pqLLzccITWbDw
33h+R3i44vod+XqNHM9NJVJFX1f8vCq/7f1bpfahKaL5ugbOo8GxskRedO6g
+EzRtm3JyiU635GtZvXXS1bw1HYs/fNAzPIE+fB+386Z0lsPnz2n9i73jbK9
59gwv+svZIfVy6eP6b9GXPPdkZX39cv88np8YsPqkWLYoOgj428+kr+/9n67
Y/tPiyvUL5KpX35B/eI49ct2NJ/osMY1H9bTetJ6og3Ro68lekQpole2JHpF
ZeJPfkz8iYnEn2xE/AkvQw5u1IoJJC99PslLvG/IsZ4h1z9I3vIFyVu8QvoR
q0k/4gvSj/jA2C8akz7FQtKnCCH9yw6kf9GS9C8fkP7Ff8le5DtkL8Kf7EsY
9qVtIftS+0FNskexgexR3b/v8jt1ZvrLc9qXwQHFPtxl/j1Va2eFun/W9NbG
hN1o3jPUfI8XfrvO0m6bzDpt77Z5K9emm/X/IMLyXcrPpZGfy+ydfuWn5MTI
Ny428R7RLVWGJhfPzNX3y+db3p85clSKimMraX65dXXVpnu/iBDH23n0Gdol
WW6n8SKHxqt49wvRLzbQ+UFWpPODaJpxICJmV4p8MChscNsFT8VgOj/oO/bS
+bEN8af3If5ELcqf5TLKn0WrNa715VFaXyQR/aIy0S8a0PziMc2vzplRxnlm
Q0T/c8WmPZIpraeXC99k1smQv3/Wd1Loo0mPRLa27s/5G8x3jsuNfHxEYK+c
9IqpZn34zke1vBdnyW3N138T89MNMUF6Z6e+laX2RdQtBlYfOe7U8dviRv/h
O/qUfCbnjmlRf+ScJBWvvzTy6113k76sPShT1aEjvn071tMvTa6eOixj/egH
qs55alGJMN+Ah2o/CvykY2hvab5/iy/7drPZj8z3bv3dYurc/N28JwoVNVMu
NjXfv5V/2njvlJaZap9YvipucY1xWXJTv+J+V3bnq3E36Twgg439+nKdCUvG
pefLqYfdp272TZDy0jdjPcaYdZ24H6u0WZOcJyvcfryw6cdSDvrjzYDGDc13
5sZ5R2D/BH3Tsh582KOdab8LXq0evCrZvE9aGRfVbtst8+964hofv7wjwLzf
OfZx1LTHEYXCp0bJvUP35coPPus1oOUPDn3t4TJBXdxzZLjz12/2b3HoqWe/
C55RJ0M+6LH758zrDn3HvaV9AkLS5aSW8ZfGxjv0ASNX3fV3e2DELYd+s9v9
sUPPJcumPZtXqbTXoe5Xj9B6cubiXaW2Oh16ud+zNp5pYb4nu0H06SPpvCuM
864eUuFqQVRrXfTO7rc29OuX498KWTQpME4cjAktfuinQpkcNSDvwqCHclOn
yq8fqpgpv4r7vEXr+PvyzGuTGrRvkqnq5+EkD5keXnfK6E7PZfk7h3/8I858
H7aQ5CclnceFcR6XTVvvjN+Yr4uMG5OGduqQITfVXHn8je/ixMom8aVy7jjl
kP4TO5WqnC8vBffx9CmXKvtF7/ZqXC1fVg8sP6V9Toqyi+9IX/LvF5+4D2n7
SNb22JW/7vA9Gfi8YqtffRNl7toSr94vkypLzi3TIqFx4svz4JO0bq+lynDX
Ovmyn5HPGfah7Ofi8sshvbd52d7z+u/sU/DPqShh2Juyp0lUnxAXqD4hrpH9
iaRbLvsTxnqij5G/dSX6RA7RJ0oQfeII0ScM+1d2adi7GEn2LkaSfEQ0yUcY
8hHVSD5iJ8nT4NMp0kg/wtCP8t8Q8jcxdnv40KjIHBnifHe+x0fm+zDDP8Uq
qteIFVSvEV/fnFgQFpQkXhRu+HNTg0xxg+xFGPYixpK9CMNeVHwOIf8Xw+vH
H1wyPlVO3rFsa9+B+eI82Z807E8Y9qwZ9qz2JyOeaBep3iS8qd6k3bmx/M3l
R++KivXvnfl+lUPrQf4jDP/RbpH/CMN/1L2uEa+0QKpniW1Uz9JKPvy0S8WZ
/4gHb2/qX+6aQ7tL/ioMf9V2kr8Kw1/VOc6Ih5pRLxNGvUzruXlivx5nnov1
Wuobo172Oyg+iMYUH7Q1FB+EER/U+wrU0z6j76XxvapDo/5WnuiVD4ledV+H
ep16T2bU217fvH5ibL9cOX1aYPIe3zQ5e2Wt+I2+5vsx3Nft2PPf0i/Wpal7
sLdzvR5WuJQojfqtqmPfGv205a1Sebb/twb1uPnGuRvtafJX0ZD8Vayn/VEk
0/5ovh+j9USb7A4l9ok8834wOmbi2CN/y5Cy0/ZMn+RU9w/bwn6aHXw7TZ3D
uxr1vxmOjoff1cz3k9s9fBrFV3OKmXReVestWHynct3bz0Rxqs8Joz6nztWo
F1ZddtJ332nzfVj0vGZXDxwuEOfo/Kzu8WN7tyvzUWcH6omaUU8Uj8leZSWy
V/XeC/XWBu2L/+VR55ycc3rBqEMVHfo2qleJZ1SvkgPJf8QU8h+VLxjnD5lc
6ZuWHT9/oN5N/LI7KePrZ2mi7dW6c8Jbv5DTyH9lLvmvqucb5xk5LPSvqjun
n5X7P/aOfvjyPN+O6mniMNXT5CiKFyKU4oWqa2/OPf5p8UaZsso72roPosz3
XhHjFzQaHZcv3ghou7Hz0gxVtygzodxPvvvT5ZmY+DXzdpjvu7ZR/iHWU/6h
6g9+Rvzf1KpXwNWq5vuua5TfiEWU38gIymds77v6Lqy+Zuao+3Iv5U9iH+VP
suacVyo/2pJt3q/OTGg9eVmuCK+S9/TywuOKvwKj/lz/VDGH+xv291uRl//T
O6XiBfkuzafubQdTfifvUH4ngimfs72L7kX0mX9Pa8TzrcSvetfRh/ZPmU77
p/I71LcP0v4ue9H+ru5ZUN8+RPaq6j0lBtUYElbj5X5n1HeKOcPqtC93S3T4
7v6ZHh0L5TbyF2n4i2zYoPuUit9nitLJUb0vPs6W6VEufxTLyB9lh2GHF5y4
kSZPu8cmzm0XL0uXaHPdc0Sa3JhyqdWS37bJOr27ZQy86qmvaT83af7J6yKU
5C3HkbxFvaGHan7S6p5MfHzs1okj8eJpXptqt7p76B0rdqywelaS6P5Zeq/q
m931Bl+fDpq/6KEY9a3P8cddr8vh2xMqDp1+V4QMnH4v+LqbHuP/9/ddF6SJ
X8n+ZCWyP9GG7Fv8QfYtjHgoZlA8FHvIX6RG/iKaufaNl+efreOaNRqeJXzI
P8Us8k/tYAttdWFTD+1ej6Yb42sViCjCehJh6U/8aluIX/kqyUNUIXkIQ17i
L5KXKEn60Ix6m+hG/GofEL+yJslHpJJ85GOSj9aN5KPspLJXcNO2n5nvBmc2
qd92SmCqKEf6le1Iv2IJyUu7RvKSQSRPMZLkKRuTvmVJ0rf4P/LWkQQ=
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.9], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmGmMV+UVxu/933tZyiJiZUehFGQbVGSEGQZhbJqmNjEpDSYdPyE0qSRt
00JNKUstSVMWAVNIBo2gFotgl4TKUqB8UCgIdBhGB2ZAZBGwAlqs1bYOI+3z
y3n+HT6cnPd977uc9yzPOe8d+tgPpn+/lCRJU5okmfi7Ivq3ivZqoJPGV+dJ
0svfGL8quijqKZqgyXWat0ftb4rPFe1Tu08W44eT2Pc2UW/v3dv7FKLbRV8U
5ebMOyc6hkyiD0Xvi94UXbAMyNJZ1JdzRBO16bd0yP3ifcUfzeL8X0j28eJ/
ToLf53ZlKdrI3mS52Z+1E32XOu9Dm32nZzEXzlmvq/0l8VmiXWrPy+Ib48PE
Z2fxfVEac15Jgs92u5tooGiAqJPvgS6+4LH+1vFg65k7DxHdKerh8UGiVtEb
okOi7h5j35MeQ/9jRTWiyaIx5tWmh0RfF523rbH5YfE1olrRCd19kr6PEo32
mirRKe99RPS2+V9Fp80bRGdER0WNonc8Rv+sx7BxF1E/27Kr793PNtlnu78n
+ouoOQndT7etW9Q/6PufEB1w/7jn06/QHV7zWT/VmqfUH5uGvfBVzkEf37Au
sN1XbSO+z7NN0UOLdTE8DV/ZbZ3wDf0c0fhWtdemocM/lEKPtxQx3rMIn+pr
v2I/1la53er9h9l3tiRhkxbPwZ59HFN97ePI0L2Is7oVob/GUujwWCnaI9Gd
AuxHah8XP6l1BP2xPGLrnGPtBfWrNf6i+C7NeUDtjWoPLyJudmisVfQ99tX4
n0SPqL0rj7OaRHdp3m7NeVDtlzVeSuMbMpxU/wm1T+Uh1zHP76r+05r3oPgB
8Zc0vlp8kvgC0bg04maY7ULcEs/43NA0xtFVrvW/VP86sjk+ic3P8vCBneqP
U/tVzfmOeIVoq9qP5eFT8+wPgNHPNT5N9/6u2tfUflz8lL7drfYIjb+jdqXa
d6l9Rd/maNnDeWDR+lL4zEp936D25/i/vs1X+7T4ijTa+GGV+CLRPWnQQrWv
E495tLfonOUa/7HaY8TvFS1Wu11zLuTRfkVzbuRx1m/VzovQYSbeWeOrtGaq
+H7x50shF3b+WSn2G5WGryPzTLWXis9Pwrbt6FPULFovmiE6L/qdaI5oXRLz
l4leFtUnMXZJ3xawr2izx54BK+incU6V5HtS/EYWsXrCsVtnbMbPy2csuwlr
wJ7xxnfGlomPTgN3Dvs7+IesdeKPJ4Fl1cY6MGJnEj6y03JvNo4wtsuxBie+
Phb9PYn8U2ecAC/KeAq+js3DF49nEfPELTG7Q7TJZ7CuOunAGzi4/FAa377t
+D7kc8t4yp3BTfAUHEWvnIXPl/X7jDGOWD7rex00Bu4wBxPBPzAR/J3l/LTL
9tlsOZekgXHIsN3r9jue0M8W6+NKEvm43us2+cwW2xJ9trp/yDah32gZuQ++
jV833KT3sh3e8H4Nvvdpn7PTd9p8kw0/Ev0tiVyxyd+RnTyBXoj/FcZ+dDnd
sd7k++F35JdHXbf0yTp0t9NztrtPvGxLIj+Bqcvtf1fT8EX8ska+PUH8dBb5
nDxBjuhvDh4OtP/wjXpkvP0ebOzvOeU17DHVuA5mEsPgCnXD+DTy54gk4hls
oJYYZN/kDOqFCvcbjbvsBR6vsA3OZIHXe7LAYTC4yr5ZZ/88qn59Gj57Q/1x
SdQkVcYwzq42rnxumZEL+cAf5EbeNvWHJlELTi5FbUNNOMl4f916GWA9bcjj
jOfzuM9A3w8ZkXmk9+ntfZfap+u9B3VVN6+hTurhPbq5P9hj1FrVPptzSnnE
Qotrt1nOzTXWZYV9EF8kLibL7ks1v9C6y2nEEjF2Td8uJVHTYc+ulgkbdHH/
Ht+bOpi6ABmqfM4gyzjBeh/isxm7IwmdodPb/K2X9YkfUGd3sg06+zzmOdX9
vy7Pko5avLBvdfIa/ABfpD55Lg87rc/jrsQDuWOd/QI/2ep7k68nFdEn3x7M
A7+eywK7FhjH0N9ct3/vvAGmVRbRH5WHPed4fIvzD3lhfBH9EXnYfabHNzrP
zLdNa43JtUXIeqvmv55GrucO97l+oI7A32f4LkUR9Ql1yiPOgeQUcg3xSg7a
q7HJacQD8YIeyDXUgrVut6WxnrVfLuId8qz23J1GHgRTFmcRL7/J4zv7UytO
KYXtse2iLHx8gg1Ffi/neWKL9eT2xeX8bvuNtA8wB9sSn3zHR6hjqGcWZuFf
lb5Lu/0Sv6BOWVjq8FN8Dj+iRtuWRh9sJ7+Aufgj9RKyPm0swX/2paHnCmPx
WK+jrmL+gixy32jnBWoT7APe0h/jdRNdSxOfvEmvOb7+7fYton+IPhNdTiJH
/CeJPIG8dztmrnkN8VmZxzi1XpNrVPClwThwwu8Dak5y8AHn/eYsdNHmeEJf
1x1n29PQZzlu4WAmdWWb/eGPWv8T8VVZ1Fvt9ltq7Ur7wCadNU3tl1xnktte
S6JOxYf/m3XY9XZTu2UhtxKP5PS3tP6HWvum+Lgi4uTOPN751C1dNTalCF+9
qj3/lUS+Vzf51DrlXf6JdfqBdcz4+SRyJXl4v9d97LUfeg5vjgv+9q5twj5v
ea+PvB67/NN2HGzb3mF+ye0PPLfZ+yErdUmr32vcZ6XfIWkR539qOd+zL+z3
mZ9YhvftL+eSeH/Sb7IsyHTVcnNOyXe67HlP+C1wxe8MagLqgdl5vKF4S+HX
y9MOX15xUxw85Vg4mkfueNE12hLb7lXvx15w6g1i5Yj7tKuLmMdbhzfpWuMP
75KlxuqvFZHHe+aBT2uMjYwd8Xww8qgxnXPwGWTvZKwBe8CSlcYT3hYb/L4g
1lcbc3hn8t5sE9+YhQzkSfat91n4WrOxtcL4gG83piEHOHxvEW+HNVnEx0bH
CLi43fEF3jMH/Cc/8E4hX5xLI0cwfjGNnMI4mLXNODChiPn1ftvtNQZed17I
/E494PuV3/m1lnu95fxKEe0Bmn8mj/8OZ8Xb88C+GudNcg+4hi6pjdAlcUw+
IBc8kAeWkxPwi33WTW0eOLpE4y9kkTuqfGajZXg7C71Qh47yvuwJLt/v/16/
zsJP8BfsM9F4wtt9mmvEqW4jR00paqyhaq/NQp/k3j2uG4kz6ljwCv/slYft
aq3Xi9Y5uud9ONe2Ome7POzYWaE9ZuSBh7/Kws68G2fahrw/sS01BTUW8bEu
i32pF1rzeC+3iM/MowYZI74+izXUI8dvwu/VPgMs7J6HXXvwrs/CL8FC/oXU
+O5d7AfUBcPzuAO+OTKPe+JHkz1/CPiVh58Tc09mUSecFR+Yh83wF+ZO8fxy
TUz9tsp5AX30sz3I4S3Oew3OCVNtL/6PTfT/h/8Bor+oIg==
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtMz3EYxn+H798cUtxyYW0isdnQig7SVuPCjYtuzIUchg1jk1OJblBN
ttpqyKGjiC1n4cJhTDYtQnRQiQ0XNlekg8+zt4vnv+d53+/v/Z7e5/uPzd29
blfged4O4MB2fn75nncAfiP0vC3om+iH6M3wXNCCvoLeCL8Pcijwj9h++AWw
HD1CvgS+EpwiNw+dDq8F6eRj0QXUz0SfJp+MXgUfBlrQY/Rf+CWwAj2KLoU3
gkz0fHQh31ejkzU/uhi+0NnassitiXheO3on+QfEfHhRaHN1EUuIWA3V6kDH
o0cZUw1PAmfh9c7WnoFugA+CgsD2eB7exPf5gcWU6wAJ7GcP+i18CBQGtoeL
ztaoteqbAfh7rZnx+9Bdzs5MZ3cE/QX+DuwNrKZqH2a+xfBb4DI8h1g3vBaU
odeiO+E54Ac6RB+HPwUj8H7VCOzMzjnbs/YekO9j/HpiA/AmUIH+Dfo1F4jT
etFx8CLwWmcd2lq1R+31bmh3pzmXou+h08ilghr0BvCV3DVQRW4q85fDr5OP
goegDv6cWAZjA3SZbzEHnxaxsW3EsslPR1fAW4jFwHuIHYSXEGsI7c5190nw
bPLRERv7ivwgsWXOelFnmqizBIt8q9EL/+DsboqJ1TN+E/q7bx6oRm9F//TN
IzXoP2AI3gziyV1Fn+f7C2Ac/RI97JvHtjmLKfcMneasx9Xr+mYM3sb4Ed88
dg99JzQvJqLnRsxz8p78mwevI3/StzVpbY3oUvghxvepl53dre5UdzvHWe9o
Ds21wNndaA/ai3pMvaaeUe/oDnWX8vB9cnXOvCFPtqIrQ9u7eki9JA/JS/L0
R3KdIFb1wAtyY+ij8FawBD2FPU3yrSfUGxFiJ3zzpLwpT2dN1Fjk7E6TJnoy
QJ9xdjbyfBfxHt2xbz2oXpxJvgrdDr6hf4bmFd2J7uYzSIE/0pun/omYN9SD
6kX1gHpBnuykVnlo3pAH5cVm9G3f5uxWPWdnr55Sb50Lbe/ygLyQj0707Rt9
qzdJb5POYAA9Do7Bn4AUxkeDSnkPrHbW4+r1PJ2v3svQvKkeVa9+cpbTG6O3
JtXZW6CeUG+opmrrjGtDq6naOqMZzjwir2jOGGdnorPRmnvhs/Re+vbm6O3R
mepsFZvtzKPyqjwa5eyOddfak/5w5HF5Xf8Bk515QF7Qf8Yk+Btnb6l6Wr39
H65O6iM=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.78], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmX3Y1uMZx+/7d113rKeimfQUentU2o6DktpRVKiEimMdh2qrpPQiHbNE
Ty/GRuUY5m0JlaaXR1JJWN6lbYaUTWGKSEzJFmbzWmvfT+fXsf1x3df5u37X
73o5r/P8nt/zuluNuvRHPy1KpdJT+kmqN6quknCi5J3lUmmFyo2Sj1L7e37e
nkulqXp+U/UslfvVNlv1GaofVTlE5QONcY7qxmqfrfpJlXYqffXcT+NVVUql
3pJ7S56lvqPLMQ5zzdHz9ap/ovf9VQ9DVnlf7VXqs171YpWn1TZWfe6T3Fry
DNV3qsyTPFzt3SV3U1mttTbQd8PVPlDlLcl1KldK/lzvLlZZIXlAKfow3216
/4JKD5VJKheoT3PVy1Q/r7qbyhbN8TM9v6L6C5X1tKs+WeUpyZ1VL9b75ySf
pHJ1Ofq0Uemudw9rngMp9MW6eqqcqvbjaFc9Vu/GpFjX5iJ0capKl3KMX1I5
RWWtSlaZrvKsSkuVXvq+q7ok6flCjTFSpU5jnJTjLB7V806V0yU3Up8WeteH
sVX6qc8Q1Y1Uz9X7jSr9VN7Q8+Xq97rqwdiI5JXqN1/vNqmcjx2pPUl+h/cq
tZJXqX2l5BNUX5livNs9Zjs9N9c4nfTuFclHq22yxl+gerPKIJXROc5nkd5f
zr6L6HdFDvnyHOPVK8I+5uu5ver92Fcl2h/Ut1eprbXKA/psseptKiNZt/pN
V9tv1GdpOewD2xig9vGqm+WwhVttD0dpzC2qP1T/IapfUxmsslDldZUf+zxO
K8W+ehdxThXsSGWrygiVa3PY4TWqN6hPtUrHUujnkCL29AnnU8R6T6jE+m7R
vN+rhH7669tF5VjPWH3bpohzOFPl7hR6Q39X6v2D6EbPL6rPCyoP6fmsSrR/
X31mlqON8+qEztA5st7VqP0/KXwPHY9T20Ol8Ok1qkeofbjKPfrueNXHYGtq
38Ba1adFDl/FZ5em8AX8YDXr0fMRkj9KcSb/UBlvvf5dZShzF3GmzNlVdVnl
ZMlnF4EhyPjDBuvwao31Q/w1h+3jA/jsVPtCN9vfBSl0xbpZf2fJc1Vmq1yn
8onaL1O/GzwH83bxGq5I4df3FjE+/jXFeqCdeoTlRUXIzHOu6stUBqrcDv55
PvAFeY7KJPdZXIp+PC+RPD0FLvQoxT5Yf99SzD3SMngBboApw1Ksk7VTT/F6
tlnH2H9bte0BB8sx9nTjzjTLPUr/ewajbpROj1X/RaqvV2km+W7VN6gcLfm3
OfY+zPoc5zWDYcQI8K6X2nuprvVZgFmTvF/2VOtzYU9Tvc89tk/sdHs54gVx
48Mi/JUzGu49Mjc6naJSq7JDz6eq7/GViHHTvK8OWutq7EB1k3L05wxqPS9r
uwXdskfj8Fhj8jvoTPJEyeNz2DC2/IMcPoVvNdJzwxQ4Uqv2Qt88rrq+2nYU
4RuFnq9V3bcSYzLeDPBI7Y3V/qcUuLLU2PKK485rObAYTN6WIx4Tl99R3TJH
fzDjOn3fX/JtansvxRl8IHl+ipjRVX2e0/OF+vbfqn+eIsYskfy2/ai9+ryb
4sw6VAK/xlm/4BSYgO3NS6HPLpXwL84QPEqOw+DTGNvRQMfbAZYbOt4cXgm9
TlC5BN2meEamHm+dcw7jfI5bipA5n+H+ZphjeX/Pgb4ZEx03dYxpUokYM7gU
+An3OVAK/sMYjMVch+WIlcTMb/T9pUVgWU89N1NpShzLwXngPsQD5mbNZZ/v
n3OMC06BUfVz8IxDtYav9c2tGvMzfKgSMWhviviw3XZO7LramNnM8QLeU0/9
75P8gPqfpfrMImIPtjLD629kjMUXiMlXOQ6iE/RB/FtQijgx3+dVUwRX61OE
zFnW+AzPdGzra7xlzr6e9wzVLYvAyVtzcK9bcthOH3/b1+vsZftgTM6gnOLb
rh6zn/vgQ9gaNkfcmFaO2EQsXeR4emcR3Aa+iQ2yz4WlsEWe8fVV3j97bwrx
LYJTfKx6r7F+YjnaFjhWcc6b9e2SFJytu/nFbMejg9hVDtzu4pgE3qLHiR7n
10VwSPq1LYc9wJ3weWRshDXNdPy9owjfBA8/z7Hfb1Jw8KZe8xTHDfBqhdcN
f37CWLYxBb7PNgbCKeqZV0D2wXC4ZocUuF0j+V59e5rkOtUdPe8+vX/MfvFW
Co45yZhNHKQ/cfFx91ms725W203maWBnR+Nn60rId6rPPTnmfD+HLuCT7J33
J7o/tlVtfsga4YptJLdP4QPIj+XAUbjGX1LE0Wd91m2t5yPhISl4DHGGtS+x
DTc3V+mYYm5sZmGOsXcaF08qwt7OddyG8wxQ2znmzdhsC9s8umluezjbfeAo
azTWQHhVjraz/S3ncIz1v9XjgKW9y9Ef/wGDz/D4rJX+xNYnUuh+qcb8qoj9
LS0FfoMz4M3+IuyU/Z6XYi/YFfwOnsdeSuZ4nWyHrY0z6+1r+BzfdbIeFuTA
nh05+vGe8a7LgVeDc+D/7Y4LhzunILcgTo+2rdYZ24jfYD/fgAfw3ZHGq2vM
k1uRG+XgKf90fKcPPI14ChcHb8FeOCM54+wiMALevdDxEzxs4jZ8CF6EHX/L
79A1eibmIcMlZ6bAti45uEg/7+tpPY+T/CkxNsX47OUCY9K3mIVMfJlVBK9l
rWtzxGXiM9g3yHvnvGkfbpzsZT/Ax9+zn7N/9NDW+fdO63NTEfyGmDgihy23
qUQ+TF68QN99mQLnjjf32WWsxFaYi9h8wDZEG3k4+fgd+u7mFLHifMfPQd5X
K3wqRfxjb4N9FsRX+lXnOGfOHv0M8zlxRuQ38FHOfI+5ErkXnBRux9zodal1
28B3CNwltM+xF/aEXsBc9HCvnteBV3q/vIj4SP7W2Of/LUe4xGt5zTbDmnaX
g78RC+s5HycvJ8azV84qa19LNGahehmYqLZTcuSHzINvNtC7VepTX/URlciT
m+TIlef6rMnh5luPdRrnGbX9NYe9LLJuj7Bu8AXyvAVuH+RvGaex7Zu9Herc
nzuAZj4TbHC31rLLPB+/GW/fmWq+jV3/ooj7BPLVw8gN9dywEjGGXAVMm+Kc
Ao79Zoq8fqW5JLgKtuCbc/0NsYo4QByEO8IDrkmRW40qwi576Lk6Bcci5sNR
sUXm6GF9wt3h8L80xuN3rItcm3b8Ey4Fp6rKkW+zD/CSOyYweFWOvbIGeAh9
GZ935CUHMVfyVzn4xNeq/5Ajdv9e9eQicG6d8bmB+5P/kQeSL1Avs0xs4Y6D
WAKu1xnbq93eybFjiTkPeeI9jsucVVv7+R7L8LltRcSJKs9V52+xO+ycfTMO
d0/keuSdiywXttuy6nbGDu7wwI/nisCYA7b5FSmwAwx5JMX6tzpm9bK+enqd
cEjWBp98t4h4TN9t7j/BHJ5+3KUstz+SzxGjidXwavgP8edRnwVzoKf21iH6
5H6BM4XvbzHWwfHh/vB82pC5K+MuaovlKvPtPvbBR4rww6Ny+BE+CseADzU3
B+EOa5XHPM65xkGsTKEX6o6W16juoH5zuI9KcWf6qxycgj6MN8U5ILngkBT3
aNw/PpuCT6xWe3PnFEOM5zUpMH2d+f0K8jjn2jc45wB78fF3nY+Tl5OjEJvB
FHTGvuAY2Dt+RbxrVYlzb6n6u5XQSWPVXXP4FHnzsTmwqKnam6k8oz7VlZiH
c6l2jKWdfpusK3R/jM+LeckdwEOwm3sFcnByQTAAzAa76xszv1OJ+1vwB0wg
PyB/BHsfMH9ameP9ao/Z1HpDD1W2P3wNe8QuiVvoekIR92LwU57BJfKhcUXw
nrdz4Pky87xa+/wE94dPbsjR/0Xn+mOKWP/zer5I8qv6dnQRMvjG+9Huw3jk
6WDIKLfTB9tZ6Bh1o98d5ErGSb4lv1lQxL0bfIw8Abz9Vw5e9rsU7+e5z12W
2Q/1fMvfvmN/YPNN1gPcnlwFDjs0hY3ybqL1xt735Rgn5bifJDYRo3aYE3If
D//n3uRu7/cuzzvU72gnr4Bbkt90TuEXcAfyYPqwLua8xOf1cg759RQ500Sv
B/+oso9gey8XEZO4dyWeneKYcm0RcWWa+4Jd2OkmY0iNZb7FbsFh4g53ii8V
sbeaStydrlXf3TnG3JVjf7XWJ5hGH3CNHBFdw7+/LIKbExO5y+Ielr74zwaP
D78jXsJl9jvPrKh+NYcfwxG475ls+xlaBNeEz/a37cBttuZ4Dw9633nW/Sm+
43vGGufvZhmf8RH40FTvhfPiTGb5XMAT7p3Ih6kv9Tj4xmRjDYV2MPyNFDqY
l2Ods73WrSn2xT09vJl1rM9xl1Jt3Jtnm0F35C/c/6JDap4P/nfi9ofdzjPj
cm7kt8Qw9E1/ch/+6/miCF6HH39umyd+7TY+DDCPh3d+VETchX9yN/Ch/fEL
f4tNEnu5syD+Ep8Za4Zj2b4i4tlcnz3nzv56eI89cvw31NM8rafbqy2DZ/B/
OALc5knr8akc/K+psY58lP2hH3JA5qrznF/Z5r62XOfz+cZnRBvvyP32uZ3z
JU7v+j+d7PG+9lgvcBJwl3sisBf/JQcj7jewP55g3ZN3c0a08Y7cgvuow1Lg
BnUj837WQf+ljheM38ZjHOlxkPd7X/hnxRxvrXlgdjxsaP009PgH+XOKfJ77
zs0p7ib+mMO/8UFyZmJaO8c1cPcTnzv1p0XkG5+6HdzGLvbaTtA5511nm/nY
7cfaJsGVlzTfeNUbc/gcesPvpnitrLOl7QrONcd2zBkz916v57MUvK1FJXI4
Ylit+SyxHU5Lvn6u4xjjYa+MyX9X5BLNK/E/A30Wl6I+z/Ia2xZ2xX+ecGY4
LWuZYxzj7hjev9/Y8owxAP+C24DPxCnGZC1wvor5PLY0wL72nxw64r8F7o+w
kcccf4gZxIsZOe6v+E+PPGOOdYIuuRcldmNjNbY9dNnSdoV/wavgSt2MM3AJ
/I/cH27MHcYi49l51glrZoxWHofYQoyA21TbRxnnoRSx8OIc2ADGgC2cOXjE
uR/kgOaB9+WIT8t9VzbUcfa0HLo+XfXfUvDUI/2fBbl4T8fTdV4n8WuL17Pd
nIv/YPHNbl4bGN7ZvkkbvOp0r7+bZc4A3CO/JtdGxt8H+z5nZo44mu1r3F1x
RwK3vzBHzjzKfKy756cf/cEvbJw1EEdOtG1wpoN9xsjsHxnbgavCG+HhF+WI
l2Ny5B3ogfuQnb6jW27MHuA1Y8/c8WG7/wXWWLS1
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlneMVkUUxb/53jwUWZrSIcAiTVEM0hGQpQQMqInRRBMjRQxYokbRKCii
4FrpKLAu4FKkCSyKINLWQpMi0kFKEFECNkSDFMHfydk/zvedM/fOm3l35t77
cgc8dc+T2UwmsxJEsJqfBxioFjKZL+Ad0kzmEnoNtplJJpOHrs3//ehK2Luh
c9G98a+N7onujO6KrohujT7D/AL8pzDeBV2V/4bBC84H3bGn6DHwaaAWugHm
QvgScCe6BzqfeTPQddDXo6fDW/C8k+hHmd8IXQTqohti/xB+G/Yr6E/Rs5h/
K/o0+m30JHRHdA7/t6B/4L8TuiL/g9Gn+F/IM+7APw89Ct0e+wX0HD0f3Qr9
B/oZ1m+Kbzv0OfRC7NOw92BsArbu6O7w5tiPYR+KHot9EmM3oivjMxF+FZiJ
LtKhaC30FHg+9h3wCtGxV4wV61rRe9UZ6CwO8X8l43fSu1WOpWdTenan+b8u
+B31rvWwVwnek/Z2JXGsqpaelWKu2B/E3gz9D/79tT/G/oanoGlwjBXrG6Jj
oTPX2U9OHGvFSLHSGeus56HLoBtHn53ORGfzHXokujHYz9zLpXdFMVfsJyaO
nc5cZ38z/i8Fx1yx35A4ln3AcmzDEt+lLdgbY1+O3gTfDBqh38RnIb7r0bmp
x2Q7xdhAbPVT235En2VuTcYK4btAdWzb0I9hfwLsw/4Vui98NDijvZXere3o
JvgXRL+b9tAQXQMUodeia8ErgffRy9DXwiukzqVidEV4zdS+Bxi7l2eVRS/S
s8BY3R/0fPgm7N3QlVM/axv6BHsph+6V8Zwc+IP4HNe7oN/D3hw9KjjnlfsX
0QXwQhDhCfgg6zHZToARWefwPHhHUJKxzyX4PrAWPQS9H74ZDIIPZ43pifes
vfdQjUGXoGsHx/Br+GidAbwbWJV4D9rLKnxawk+D/Kxr1ir4IbCO9V5AH4b/
CybDW4Kp0Weisylhfnv4eZ45TrEDf6F/0f2D9wJrsZ1Cvw7PgufhP6vmBfuc
hC9OfJcVc8V+D/oReDE+N2HfjR6IfhhsiL4juiu641n07WB9cM4r979UfIJj
sAPfosS15HHs27EF1piVdUwUm7JgLvwj1dDU76h3VY7uYm5h4tqrPWzEtkA1
Ouuatg7bzuja/rT84ZtAg+Az+hY+C7QJrikrVdfRG4PX1Nq5YA76EKjD+lNU
k7H1Azvx35t478oR5crWxL1F77gGXU33Cb4TVFFvSH1XNVYdWz+dCXwJKGDu
GFCBZ/2J/kSxAY0yrvmXlW/KAfhW7D31vol7gXrGcfWbxL1DPeYYunzq3FJO
5KCnYq+RdU4oN0aBw8HvOBL+rPqPehc+z8GL8S+T9ZpauxjcpXyQv+4WOid4
bCl8SPRcraG1FkX3ht7oxfBljE3POIYN2NsgxsoFrzEsugeoF6jmHkh8R3VX
daY6277RsdIzHlLvia6F2sN4+FH8E3gn7CPgAxg7GVxDVUv3RN8F5exu+MHo
3FVOHdD5qd9kfUd0V86C8VnH5HueVy91rVwAmkT3MPUynVGZ6BqoWqg9HMZ/
ZXRuqQd9Hn2HdZfb4n+1ekP0WatnDY6u4arlGfRB5Vp0rVbNUu16K7qWqaar
tiepn6Wcial7mHqZYvpT4pqj2tNFPTBxjVGtaYc+Ap8bzYO+h3ReYHlwzVPt
axad64phf8Ue+4rgGnEcnh8dC92hN+D3KabBd1h3eQZ4JTimW7D9njiXZoP6
0TVStVI5oFzooBoRPEdzW6FXB+foy+gJ4LfgNbTWu7pPwd8YSxPXPNW+ocox
9DvgV/ge3VFsKxLXVn1znI+OsWKtNVqjxyXe215wd3SPUa/RN8410Tmn3FMP
Kx/do9SrVKNVq2dHxzJPNQs+nOe1Da6BnVVLom0ak+1VfacEx1yxfy3xWakG
5UXnmHJNMVfs20R/q2lOW/WS1L1aPbYu+iI+LwbH8Bz6s8TfMhprgf4vcWzU
M9Q79I56V8VQsVSMFCv1BPWGPtG1S98ENaJ7iHqJcuIC/keje5F64hH4N9G1
UT1HvUc9Qb1BPUO94+PoWqBv3hL0/yPOcsY=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.65], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNWFmMVUUQvbe7HzsBRkBAWaOCmQWMAdGgJAOyRALDJoiDmgngh8KgAnGP
MBN0EJBdwUT5U0EBUVDZt+Aag4rRPxMU0AjDMiCgETyHc0j86HTdun2ru6pO
ner3uldVj5kRsiybn2dZxLwCDysx1kIel7JsNuaOhSxrhNED+sXQRcwJ4zW8
m4zvfsaoxBibJI/BPBrjJ8gVmN/OJT+IUYVNdgbZ3Yt5H8aLkIdB3xRyy1xz
E4zR0DfNJVdA7o81d2IMhO552B0P3SY87w+yRfvj8DweoxPPFPRck0lHeRnk
UuhLgvQcxZBrMb+K+X6sqQtaf7/tjMJe0/F+CZ6LvBfPPDTq3DzztW9o/0bE
ag+eu+O7RtDtCNpjXZAPY7BmFN8HyU9g3UXYOIB3qzFfoh/QX8ilHwu5Gdb+
ZZnzOcu0R5l2aO8wRjnPBl2D7TTLZYvre2N9E4yzuWJ72HG+nEvHnPbw2Wjn
kr+lHeb8stcUw0bCqMfzvxhnMBZn2rPe69fBryaQd2FdiLI7CPqemG/BeAjy
I8QH5rfwvhClH5XpXD/6DGXQN47aowTzzdA/nGn93KDn6T4Hz9A6KP5VuX2F
PCfXurnGUnfkqD3kV7D/dUF5fQxrpuayRTvb8G4i9Dswfw87naF/A/KaqDPz
7PSJvjFetxf07So8l2MMIubw/FmQ/KkxwPWMA3FR7jVLk+KyDHM/6OYFxW53
1MxYEovTcmF2YEHyKbzvgne7sf6GgnA20Xjug+d3sOampJm+Ebft7Cvlo0kx
/iAqT9zrOHRXvH6xc0N/v4T+aei65MI59xkcVcvPmBeeTooxc8M8fgT5bsib
MQ+IkofnynPBuWQcWCezsP7DqFpb6G+IMdZ5U8zL8VyG0dy2hpsrWIPkiPVB
/MAYz4yqT9bmDp+z2HXfyDIxscF47lIQF/VIOtOQKIzRBuUK4zCa98hn+805
nzqPPD/PMdTrr/k8JdM+xDC/LcV8q/E/G/o8KM6sG/o72vXd31zH8xD3XN8D
5zyI54/pnzmQXHg99Nug7wj5HObzGF1z4XKdeYYYJBaJt6OOX5uC+LjKPDUX
37fE/FLS2m1eT17fHsTz1NPnqZmeKdP3NZAP5Tr/eu87yPXYCuOFTBzcyRjm
mveDfCTHNDNvTA7ibmL4dBTOiXfmtr/zey95xRx2R5LcL2mf1q79a7h/IAk/
vaFfam7pbt5bDf0izLOS8sM8sc6ZN+KMuduCeav9Jf7IJ0sgty1I3x7f/mLe
YM0Q48Q940v/vszlIzFY5XohBksct0FJcWoMey2C4j/FtUMMMceMQal7FnsC
+wH5nHFivlmPDT4ba5W5auF8cc/Bzi+fm9sX7sd9N9jXFt633Gt5tueScPko
5k+CYjHcNrbYDvdscD2d93mWm1PILXPZt5N0Z5LuEOTN9zCvdPwrk2qCtdEr
KBdlrhfWXJn5v5drgbXJudR1wbiTs2iL9XTF3MX3JbZJ/iAOiAH2BfZC5rG3
9cwtubev+wo5dafxz/MtMl4aovizG+J3DPPnQbg5ErTPjEz47Gs+pa2+5gTO
/ayf5/34/oz5obP7MM83x3xQbA5knJv4zMT1L8Yb9yYn8Nve5kiuGYnnanPg
yzh/W+jnY27jGmE9DnHdEUvksiLrKbeyL+wX7d0zyP+fuQfQ31+D+Hqj+b4m
qk7Xu64ZjyNeU+VvaPO2JDtbHEvuy370e1JcjiXFkPXNuNGPmfaFHEs96/dA
UP+mDfJ0tbFBXVv7UmOfa5Pi1c57TXOs1mbirM3GP33lGub79aSY7k7i9Znu
B0Xel/aZ/4PGAM/OfDIWXR0v1uZYY4Nn432Y8WUcJgTdoVlre6Jy8T72+jiJ
sxeQSyBXYN2+KC4ZYj7hHbLCPHZPQXZORt1PeT7usSsJCyeSei57CeuFayu9
L++9debGbkl5qo/ig+bmjNm+EzyVxPfUsfaD+Zh8Sj6bYN445zMSV8RKnTnq
h6i4rE7CzhFzNe/aPAd7A2tuh+vuevNOu4L2GGV/66FfAPmk87PA52dsRgTF
cUOS/IG5ZYx9/zuq756F/l3ff3gP2u7fO39iLi0oTzdCHheUP+auk/tlB8y1
URhdjzUv03ZQz2qX1AvvS+IH4oK1/HtUTZYUVMtl5uoOSbEckWRjsu2QRyvN
pcN8nyH2f4u63xfDzhdJOP4G81eWqSPf837Ge84Kcx/zsDkphlt4T4jqWby3
Xpf022MY5PFBvhOfte4xNT5PV+OZZ5/m87dyDrl+vs+2MSmn/E1UZ1+Xu9Zm
JOHjccyXnIsDSftMtr+3ul7IG/wdcNg1X+cY9kmqxWrX40LfG/lb7UQUvlkT
p3x/6M/fGVH735WEP/pyManWp7p3HIrKwV72K+NmRVJPH/C/OylnckaJY8z4
PJvE3Y8l+cx4E5PfRfWkBnKwsVFe0N21NojTiEXG4ZL9YZ2S976N+s31ZFKP
6Oy+9qHreUmSbrb1fyTZPE4u8b2C9wv+ziGv1SXd0Zjr0c435SLoJwXhmDnf
6edvfO9e4dydMJ98BP2bUblib3/IWH84yS5tXv0Nm/R/wj9Yuz8pv3swL43q
YfyN0td1RH9Xea8u7jOrLO+P+t1bjW+XBb0jt7b0HZh3Yd4tK80zrLGRxktR
QXep1taNcy3zPsy7Dvms2rii/pz3OJ9UY8TzfHPzUPtFPhjvXnbRWPo36k5E
zuQd6eukmBF3f5pb+J9KjXvlpiTflpu7eib1s67Yc3AS19/rOy25nL3mV3/L
fnsa7xbi3YWoPsF+Md0YJN+85vsWc7QP89YkDjxorl1ovu1lfqMv9cYFfRzo
XkMOJ5dMMjYWRfEDOXKN11+9N/qZ/PcfaqYDtQ==
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtsVlUQhc85e34C1SZAKzep0JJIvKX6IsZHpRrUCBQISkJNiGIiFFCp
QY0XarEgkhQEL/iAb2pABMslgFCgXERAQEP0TRPklkhF21JFUb+V5cNq19oz
+/x7Zs/Mrp41v35ekWVZMwhwhT+rWXgX/J2ybDt6CnwqOIxeg74dfod84M1g
IHwQeAN+DZ9ReZb1oseVsqwlbHuFb0+Ht4Gb0WPBSvjToAv/brCPvVvBDvgq
7D3YBoMP0CfBBPj7oAp+CHsN3+9A18Lb+P6e8G/qt99Bf8i3tiT7HgZjsE3C
53v2rwMrsNWjf4DPBL+gh+CzA9+n2D8MW3/0evT96DL0r2C5zq5c4f85+kH2
loG96N7w2RehD8K7QY5uQl/Ffjd6D7wOtKAXg/v41ml8buG3asEZ+Czso/G9
Ab0dPQF9NjkGxXIO3YD9GfAb/Bo4ru9j78a+jm+uRT+MfS22J9EPwZeBIdhX
oNdg/wkMyH2mcdjWh8/WH3RgGxnO1TT2fJV8B7oLfbMSvoS1B+BHwHj0reCF
3GfQWc5jb4EPUA1gu4iein0neij2KtZ2Fb6DKfDhrDVxtt2sjYAvDJ/1X+xN
ipX9rdhmgN3oV0EZ/A/sz4ZzoFw0gp7kO9JdvYVPF/ZLYa6aeQ/eh/3twneq
u70ObCh857p79YB6QTV5F7Z7wUfKHWt98Md0BvR+9E34/5VsUw+pl0axdgA+
RznBdgKMyP2bl1W7oDx3ji7Cz4dz34y+AO/FP+AJvBjuOfXebHwuY1sUtqkG
VAsbwrX4CGsb4Uvxmcz5JqHb0fuT+UTwBfpLxVA457vgY0Bn4R6ZHO5J9aZq
/Gd4TTjWfaCK2KrRewvPAM2CruTa1dpI7PeEz6qYFftn4bOpZlQ7G5N7q4a1
fspV8l32gQX4HkT/mXsGVKDPhXMzkT1nkmtatV3O2mJ4I6hH9+A/LzxzNHsq
sbfCN4X3agZtho8u+W7UE9XwN8O+FWAJ/JBmhHpTM0Wxh2fLTHSnYgnPim3o
Sva/hr6+cE2rtpUj5Uo5VW4Vk2JTTIqtTj3P/9/RL2EbVnLtd6ie0M+Bf3LX
gGphPvpK7ppX7euMOqtqbKzqI7n2fwQzdH+goXDPqHc0YzRr1PPq/UvJs286
a0fhm8A04rmN/+PxfT7ce5php1g7EJ5lmsHfoleFZ3kDe1rR7cmzuPb/2OrC
s0E9pd7STNRs1BvxHT5zw3elmDrRN5Ycu2aEZsWccG6Ug2/QFdi3Fp6JQ7G9
Hr575Vy514zRrFHNq/Y1szS79IbpLVOMilVvmN6yI+FZORv9dfiN01v3KL93
AT48PKv0JuhtUIyKVTWxTbM0fPc6k852LHk2qad2Ylsdrp1G9mzW+xbuPdXo
Fr2NJc/2dtYGw9uSffUG6C14HJ+Pc88YzRrdie5Gb+bL6E/DvaM35BP4neGz
a6ZothwLx6aZdVS9Gq5d1cRJvvNE+C3RzNbsVs2odvSbK7EPLPlsqolybP8B
nBENLg==
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.5], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNVD1PVFEQfbv3bovLopFNeBDlB2BpKYXF7oawrg1Ko0gl+wmNmihiRWOM
hdha+QNEo5UkKsHEoKFWqFg/ElYpXG09J+eQWMze2Xkzc2fOnLmn5lq1ZjZJ
kgeQAKng5zMMbegrMUl2MklSxvkQ9mXYLkMfhq0JuYv/8zifQlrQ05z00/Ap
wX8A+lXYn0Xpb2ArQ74g/xXYV3HmIK2M7p13np/wb0P/A1sesgLbIuRm1L19
2DYy8rkH+3PYLyDPC5zf8a0A+xbOYka5Gb+Mb09YM85aRvoS7IdRuT7BfwHS
zaqOHfvQl7b9rPq/H1RjFXFVfMtD5vB/KErfxPdJyChkBPID9lewT7DGKHzG
o/J1EmFIjI45D+sdds2D7p91su+Txpx9F937UJDfCcd0jNWjKNuHoJmx9jXX
NRbU15j/X0s0c86MtbyMwvA9/s9mNSfWxbnRj/2zN97Fmifc45koHInnWegp
9HPOP+7eyZFbUXM/n1OOFeOwZy4R/9Q48p6ZqG+XouqddM56EE9ZM+9hDGdA
rrEXcmw6I2zpM+q+iQ97KZvrTeTtw97AeWC8a1G18X76bzp3Oypn33nfBp11
2A89h7WouFHHpu6DWE26TtZf9n5VouqomFsXzdU0ipMV98k5c96ce8m7xB5f
R81pwxxMfRd3Ytp4sN9d7x3jSke942wE8ZF9VM3D30F82/b+DZt7x6NqLxEr
7wXt3JGv3p073o0Wzo9BsQvQf3mv/8K2l1VN7LeXVS7e13Esc2x5l8nHpneT
OLCfac+UcT3vJuMPXM+sOXv0BpBvrIOco74eVG/XsY+jfHtRvOe9I9DXIVPQ
V4N2ifPtBfGdduLJeRS9f/vuZdnzKvy3m3nPju8X93mRfM6J2zN+Exreq23j
fz3qHSRuxK/rmdG37jnTn3FN82TNu883oOD3YcmcJ+7sbdf4F9zHgHtpm0Pv
gu5mDTei4vPmc8VvJWd92/h881s16B6J15S/s+YF10bOcW5tvx11vzl187Dt
96vm97lkvhWivteNT+od4bv+D5pLwgc=
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtkj0vw1EUxm/9T1ek1SARQgwGkiYWE2KSiGhrEotgQ+tlweJlQmKwsJp8
ACUxaYJZ4gPo6CVp1UCsfk/Of3hyn+ece889b72LpUKxKYQwAAwMJkN4xZBK
hPARcWJcwj4On8S3iS7i6wDP2DLoArwHPoF/Df2LngEn2G7ReeI1o6/hQ9yp
okvEPMXfAIfwNOcYvmFQx9/O/Z/4T/3dik7zvgRy8BbwiH0OXYUvg374CKgk
PGYjjqnYGWzfnHX8nfB18AXfNv9LNe3As+AOvsD7Y+7nzHO9wpY3r0m1qaYb
1Q628F9im4X/RR5bOXyj9819L+AA/hTXoho20O/o6YT/+YleNa9NPSzCa+CI
v+bBvXmNqvUNnaW2FfNZJNG75jPQLDSzNvQoOhV5jjXOcuR3FVOx63FvdEd3
zzn3gs9As1AP1AvthHZjyrwWzVyz7zPvjWbQnfSclJtinPG2Yp67en4B7zLf
Le2AduEh8t1QD8r4/gHuzksf
                    "]]}]}}, {{}, 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0DsvQ2EYwPFH1Bdw2ZC4jBUSi4lEInFZOJYyGIwuLSYkig2JwaC+hxIb
iUtIBB9DJa12cFn9GsMv/+d5+56c5nQt5pJsQ0Qs8NQY0Z6K6GuKODZPm2fo
ocNZt3ZqRufoZcB+4u68uaCD9i99YcnZJlt82zf0VZd1mzF3i/ay+Zobzqjw
yY/fqvqrNX3TIa3qiGdrWrCf8myuMOy8rImz2fr/Zpc99plkijZG3W3VCZoZ
t7fog+fX9F7XNU+OO/uKZlnlyH6hl5xzay/qge7ou35of/07cWhPe0dJH7lK
/X/zP/EwNII=
                    "]]}, "0.09`"], Annotation[#, 0.09, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0stLVVEUx/EdXUsUoaevorw1iGoQTrrU1KJJIETQJFKaNKtBOcpJ7wIR
SwMrUGiUli+oBr3U0khrkPYPBKYVQZA3MyvBz6LBl+9vrb3O3oezT/b4qUMn
l6WU7qIrk1IzVhSk1Ls8pZVcoy5CoVzM+7EPl6z3cC8eYEjdx5d5p9lPPIwT
emfjGb1+daN8ACVYpbcGqzFtbT2X6a/lUl7HB7kcpXIFl/FXsxt4U6xxZazh
sPobnuIZnuCd2ef8I96H3/MQv8LL6GMP7ujn7LHIv9W38EEe5Tn8xCN1Nf/j
X/yX53kvOuW3cR7eYBxj6NCv59u82/475Docw1b1Q/0t3K6elEd4gWf5D+d5
gk9zA87Eu6mP8k2+xleRtUcV8nqbeVvcUdwHruAILuICzsc8Npr7br5K3iW3
yLVyEw+gTW7Fa/lx7MM3+DpaMID+2DPuHlOYUX/BZ7xQd/Mg34/z4xtwDh/l
7c48F/8RpvXuZf7/g0vqMlnN
                    "]]}, "0.05`"], Annotation[#, 0.05, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwVzLkyg2EUgOEvKyGElkqDUdOJdYY0GjO5AVU0XIB1lNYZtS2WWCuV9QLc
gj1hFNwDnhTPvOec/5u/bWJ6fCoSQiiwGAvhjTte6EiEMKsXPNFrf9Yr9uMh
XOuBzmm39vBobvduRk94d9tim2XKnLpXdIddVvjgzP1T9yiyyi/n7n+aJUnw
/xrtp49534+0xCE39mNd0E5vX/WWNbeIPUqcGANutSTMKR1ikCXvu9zKes+G
W8peR5p6RtzSNJgzNFLxNuM2Wt01R1P1n/Zm/fK9VYftLTrGt1vW/qMPFNwm
uTSvkzdv6j9y3DKZ
                    "]], 
                    LineBox[CompressedData["
1:eJwV0LkuhFEAhuEzZuY6RGKEWBKDBKNQSaZRKDSiMJZEQ8dFKBQkxJLY3cHg
Bkgk9mXseqXKOjynePN+33f+/P+ZqSpM9k0kQgjjmEmG0JsK4Q1TmMYB9nHs
rJKb0iHMyv3yHDfrGfldruGsPi8PyAvcqtfKH3Idt+mL8qC8wkd8zYd8ww2c
90w9D6GARrTbVp0Py+t8yrd8wiWu4B7PJPgMd7YlrrYV5QyP6KPxN6BT37CP
yVt8yVe4iPeId8K2vRTfFb+FB9xjx/7Ez3jEK16wa+/iHyTxjRRasOfsk79w
Ht+jL/Mv0si5z6YtJ/9xtx7i/4my3qGv8T9DIzxw
                    "]]}, "0.01`"], 
                    Annotation[#, 0.01, "Tooltip"]& ], {}, {}}}], {}}, {{}, {{{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]], 
                    
                    PointBox[{{4.905308194867242, 2.630836391598927}, {
                    0.20100883034436162`, 0.02382136569576569}, {
                    1.0719666600928879`, -1.250632626872198}, {
                    3.0527398070698992`, 
                    0.3872158300237583}, {-1.8438997564108928`, \
-1.502672689805559}, {-2.913246104009823, -1.3391199692975575`}, {
                    0.3149621009629985, 
                    1.9477027131642348`}, {-0.9556834229157016, \
-0.4484871006542206}, {3.2651237363484125`, 0.27047000138291255`}, {
                    2.9757868411226935`, 1.1755085189629118`}}]}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}}, {{}, {}}}}, {
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], DisplayFunction -> 
                   Identity, DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                   AxesLabel -> {None, None}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                   AxesLabel -> {None, None}, DisplayFunction :> Identity, 
                   Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "GridLinesInFront" -> True}, 
                   PlotRange -> {{-3, 3}, {-3, 3}}, PlotRangeClipping -> True,
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RealNVP\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GraphicsComplexBox[CompressedData["
1:eJyFXHl4TkfbzxPZitJQa7WK0Iq1qnbm2GlVtEIspWqvV1RpvZZSte8iJHZV
ak2LlmpImGOpfY8QUSJCEmvzJCKLLJ8+9/nNuc593lyff+b6PTNn5t7nnnsm
qg3+6tNh7m5ubl093dz+bemfj462ZtdQv66hHgp/+C/0cyh8a3/wzf3BLyRw
Ldf4ZwrfdvU/UjjRhW9K6zqR0cCx1C+A4+h7hWvQ/ArH0/oKdyH6NOt4D4WN
lmPFJ2/BLzD4BQa/wOAXGPxa5RgZDQx+gcEvMPgFBr/A4Nc63kNjeuPYxhcw
b8EvMPgFBr/A4NdqJ5HRwOAXGPwCg19g8AsMfq3jPTRmlxzb9Mb5AuYt+AUG
v8Dg1+oHkdHA4BcY/AKDX2DwCwx+reM9NOZ3HNvskuuN8wXMW/ALDH6tfh4Z
DQx+gcEvMPgFBr/A4Nc63kNjcYVjm99xu+R643wB8xb8WuNYZDQw+AUGv8Dg
Fxj8AoNf63gPjcVNjm1xhfsdt0uuN84XMG/BLzD4BQa/wOAXGPwCg1/reA+N
7Qsc2+Imjyvc77hdcr1xvoB5a92PIqOt+1FktHU/ioy27keR0db9COM9NOs6
Phzb9gUeN3lc4X7H7ZLrjfMFzFvwCwx+gcEvMPi1jvfQ2L7OsW3f4/sCj5s8
rnC/43bJ9cb5AuYt+AUGv8Dg1zreQ2N5C8e2fZ3ve3xf4HGTxxXud9wuud44
X8C8Bb/A4Nc6zkOzrufDsS1v4fs63/f4vsDjJo8r3O+4XXK9cb6AeQt+reM9
NJZ3cmzLy3jewvd1vu/xfYHHTR5XuN9xu+R643wB8xb8sryaY1veyfMynrfw
fZ3ve3xf4HGTxxXud9wuud44X9bxZmu1Z/s5gufZPA/leRrPY/g+z/dBvk/w
OMrjDPdDbqdcj5xP3rqGd/XS0YJ/9rvG+m3fYRz7Xiuq5fPw7zgdRdCtudjz
89ZZ+//9rlqsw8fx3/n6fB2MZ/06m4evq0W61F0gqXXX6YyerTDZm1Phd1wT
3FMY8uHzWLHZXnTZy1kBXI3mUxjzgQ6sD4z1gQsK//2XJax0F9i+A+Yt6AEG
PVa+C9S6+B2Ytyk0n8KY3yq3AjUO8wHDrhjWMQ/5l1MA/0HzKYzvwAd+B+Yt
5gPGfMCgG+MwPzBvoQ9gzAfM9YZ1+HfAkAcw6MG8oAeYtxTO3DVgzMf5xDis
D4x1+TzAiL/c7vk5GP2Ix8Cg/3/jAnX+4v7B6wvoJ7+OjAZGPAcGfxxDL4gX
wKCX+xH4Ar3o53aN/QL9kB/HGG/ly/Q/fp5GP/gFtp5jnIo/jmFH0CP6gbm/
8vMsjwf8XIt+0AfM/QoYcuN2DszjA/qBsS7sg8cP0AH9cjvjcZDHG+73mK8o
P0Q/6MN8oAd8ww7QD8zlxOMoj1/QO9bneYx133HXrfuOu87thO8D6Iec0Q8+
gbEuMPInHl/xe1F+Cb1b83Mnq3OY+wDH+N6aj5txmp9L8Dv8D9+Df465nNEP
voAhfx7P+XkL84E/vq9xbI3XDo3HfZ53c3rxPegFhlyAQScw6OPxmtcRuF55
nYzHS34O5fGR1yG4XfJzHI9nvE7D/Yif63n84eckHh95HAYGveAT/PF4xuKF
rf7E4wOvP/H4wOtb3N95fYf7O68Pcf/k9Q/uf7yewv2H1xO4fVv1mC8drnHu
+t+ufk8dvx9wffdUrnDJ7bnkv6Pt5vo90bCHdIHWRd7L88Dof+H+HLHMNY+b
hnY5tTpaY7w+lsYb+k9X7T5aT3Si9Qw+8gV+RxtC9Brxx1PDOLQucRU6NH/X
glcV/xmu8VES9GA+8A2+QB++h3zwPejFeugH35wfyBHzkx2mStCJfpJjMQ39
kAPkn+canyJAF+SAfugB/ZAP+iF/8AG+jxFWdAKDfowHv8DQP8bDvkA35PgW
0aPkhH7wiX7Qif4xJA8dfEOPoAtyRj/oRz/0DLmDX8gNdKMfdKAf80OumB9y
wPfQO76HXpEvQV7Yz/Ad4gavsyC+Qb74Hr8jvsDfgSE30InxmB92AbljXmDM
h/Ggk+sJGPRhXvCLeWBv+A7joC/MD4z4C36wDvQJ+wDG/JgH/GA+xEdg0AHM
7QbrAiPeQh74HXRhfmCeZ4FO8I35gSE/zIN4D/nBX7j/8HOK9ZyWrvwH8wGD
D9gd+ClKDhgPPnidxHquc+j83GWtlzh0vu9bz0EOW14PjH28qDpKUfskMPp5
Heh/z5uv9jueZ2G8NW/LV36E9fg+bs07zThTVB2F5z38HId58Ttv0Y/xtK67
Zj2HOTT8zlv0I34j7sK+gGH31n57C/0iniMu4ztgfs6ynisdys8xHnIEhp1D
L6APfoO4Dgz98hb2wvMUfAfM80pgfA96MR70AnM6YYfWukmqaq12maq+Rzzh
dRWsg35gtn/r3D5BN/JMa15p7nvA4AvyRzzhdTrMZ7X7fFu+x/Mc0AX9AUPu
vA4F+4f+uN6BQQfGgw70gw5gfq4Btp67UlV+AH0Bgx/kC8gTgIuqo8IfQR++
A33ARdVN8T3iOMZDjsDgC99b66oODXLAeORFwIiP8GvIGxj2CYz9Bhh2zzH3
V/wO/WIeYMR//A49wd6x30IvHPN3BpAz5In4zPMIyJdjbu/4HnTB/vg5C3kE
sNWezDoM+q33qU61PvqBeV0H/dAnMPQO+4SdW+0rX+W/1nOYWVdBP843wOAH
+ga/HCNfgP8g3iPOAUPuiIvWc3g+yyuzVV4Du4E8gEEf7A/0cAx743GWx2HI
F99Dnhxb6zP5ar+APIG5HVnztFQWF1NtdlSU3XG7BB/wf/CJ+ACM9XneAv8C
/9h/wC8w+vm9APYX+DMw4gDvt+YR6bb6DOwE64Jv0AmMftgr+oGt9zcFaj+G
PfJ7UdSTgHFehr3xOpOVbofKbzC/C3b1Unk3MH83yOMh5AL98Lox+IK+OX38
XIH5+D0m1gfG+rAXYGtdxcz7IC9gyMt6Ds1W5zDQifwE6+J7+Csw7N6al7mr
+iHyVSufBZLrBRhxC/aF9TEf+ObzwY95Xcr6/sZpq1NZ39M4VR6Gfl5Xh39h
fugH46x1qBxVb8f8wIgLxn6q8gJ+jwJ64C/Ubb8XRRzA/sDzJx7feXzm8ZXX
hRD/8B0wrwPBDiEf0F/Uvg57tOb57up+FfZj1Zt5DkM93Frf9lT1FH4Pz+s+
oIPX60A35oe8MT/kxO8xrff15v7N7835fQH6kQfyelJRfgh7QT/8wpr3m/cm
sA9+Puf3wrAnyB96h754XsrrJfBLjIP9We/fC1T84vbJ771BP68rw96gV+iN
vweF/jAedmvdr9xVnRB6wH4A+wA/1jpWtq3OD3/lcRqY5ye8Lor+oup2sBes
g++Bi6oL8zoi5MDlAnuCnXP+8Tv0ba1LpbPztdN2Prfew6UqufB7e/6Ogtcp
+DkLdgsMOsEX4i/0Df8Ghn9A/4jT1ncq6bbzDDD4wvqQO79n4O95sT76sT6v
m1ntJ5/ly+Z9J/QCe4HeeB0S8oG88R3kiu+sebT5Ls3690VOFR+s91L2dzZY
D/EF9gX+ef7BW3wP/nmdiO9rPP5az2/5Nvuwvp/1VPbA7314HRP2YZWbU1jr
XuY5HvyDziNX/jwxqZH5fmnIiW03S+d42t4bLYgoX9p3hZuS45wBD7M+PeKm
8q7YMjWCDo0vVPcJkUszRzVv/VxO8DvXfkFp8/0Q5PDt4827X5uaI7f3HBcQ
quXZ3vv4Bpdvvn1phpL7D5/0qyFvZSi/7Ls5a2zOBqf8pcqxucn5+bb3OoFL
ZzVcvOOeHNEkfX61qDTbex1Hr4WJvzZOVfT679vTouWLg7JhXr9OlcvmqXWL
LXqytXuFNIXvFv954fkNZv1/XPKCjOgZnrb763m7C9OmXtgjhi+rt3WETJL8
fYqxnsqXG2zxHl6vwV1xr29aWMOR5n31z82rtPzN94nt7w+6puz21/omqnz2
9HGf2KXF0kSj7wZlT/wsz/aeP/LYyvc2j3ksrvi955VV7pztPUjsL4tXz5n7
RNG/Kyes9xsiU6TFJt4cOStN7c/go3G/Yd32lMxU+97tlPRNtctnKv4OkP7V
+jWPdv6z8s08Uapzx/oR/S7Z3mvIN8KvJ+ww6zhxQ7tUOjjWfG/+dKVv0w43
zfg4a97zjZWTzPfmS0bVGvxiskML+vnB+olZL6T3/MH+47906FcLkhMqJ2TK
ak8u1HpxxqH3HPRPsex3n8rteR2WD45x6Oe/a7Yi6vEt6fOo9Z1x3zj0vM2t
3H9v5qkvHH00fN7BPOl0q73kfN/HsuHTf6YG+mTK8EtH5i796pZcHrAtQJbJ
lB8emuFV7+kLeYDkKzf+ePdSft0HotyF7Ptf7XoiJ7fbO6jskjz56ECfwFOe
v8vPJ/vXqvWuN/Qv34lIkBPaxgrHb1vPhwelijNv1lnxldse2WVlQJ12oRki
/aP+Fy7FmW1Q/W513q++V15reGb39IVu2tUvJ55dst9svx1aaVX3t4vp7/cP
mtRgWKHUk33yWvm761dba+Epb7npF3Pubwz864rYsSbGMae0m55ZOabCqfAk
senalIa/DiiQaUu+/PtZlpd++Kq2YuOAHFn3/eb1Vm3JEg2plSW3DOhbYkK2
DGw6Y9P6NU45tX/miu09n8uLTRrse3ApXXpv++JEi+tXRKOOAVV3jk6XtX+p
czvBL0lcaO/ccis4TS6IKFnvxslk1ZYKd4ttdeCwrPrzeW1peIqsN6zi84ev
nBUh61PebBVxT9Zu/2lGm3VnRZvRC/0frb8nTy79pZlXRL5s0nPc8EkTr8hp
rS7+VeI9p5znc0yfcfllPjpo50WP+k75SmexrXr1l/E7dnal2FleWtNzzQLk
uxdlKmHdn7DoSOPFg06u8eIEzS9q0PyiB60vW9L6YleYi15h0Cv+fGvGLI/3
/xFd258tX/u7RBEfterQ8Jv54j/3SzZqGXpXNCT+5TniX7xO8pHvkXzEWJKf
uEbyE21KROzduztHHn0W2K1bj+fiPUPu9Qw9bJ/sf7ycV4rMDCw9Yu5P+SKf
9Cc3kv7EXdKv3E761SJJ/1oc6V+9/3ZPqdrFs6z597rR5H9ysaN1glxRzPb+
dHqu/5jF53PlUf/Wpf3W3VHn4Jize5c8/N7b9n5bJua+nbrkmdyycsSbsYXP
1f7vXuLq7MSzhWJlgzcrepVLV3nGBYo/8simX4N6/5Sg8tEWVbeXPeCXLooP
WX0gPDRZzvyk7a1WU4tpA+JqH55dKUU+jY15WDbc/j7zinvSqxtuXpB3P+n+
86vVcoSjRlqBb8srcizFa/5+Uls7ftjCAW9dkQ6K97Z3PsN/uDitZccz4j7N
J9Oru+YTI2l/sZ3rqxVzrS/q1Eva1TvXjGuziX69N9EvWhN/0ov4E1fCz7RP
8Dhne284j/xFxdtetL+JZ8S/yhc9Sb4yjOSr9oue5K+i8HWfDi32Jag8oebc
wU2HlXHa6stNxr959+GSZyI/t3RCSskc890l6VudT4dRvqDiMORp2It5bqT8
QMSQ/ai8KDdsfPGPWxTY6s/fhrdtc8/XoYWQParfe9D+ofIS5EPnq8YENSvv
0B/QfmWrw1yoV33qquov5Niarv3Pdu82K+rbV5ctfSYb0P6p8tlxaROOBZd9
Yjs/n6P9Vpas51a2zX/d1Pu7u7R/q/d3yLNDRhwJOrrxgfkOgPZvuZD0rc5X
/ShfsL07jW+2L8/LP17t62Movkh97R6fNUMy1PcZu1IuTayeZTsXDI4f2fLe
zOuqftGU8g1Z6vdGG+a9br7vAx/ryN5lwJrAH4bMNu+11//WN2Zodg5/z6dv
JP8R9yt5h33slmu7Zw2g9ZUcp1C8Fr1oftt7vmvEr3iN6LO955tP8hTHiH8l
p1dJH7b3e81PbD4Ydzld1WEcW7r/9eNS873eN5SPil8oXtneJUwvPym3RG3z
XrXg8umByyo4tEiK//Ijiv8yaOA7k/9TM03umjO4wqejEuSjlIx2PWo7xfSM
o/4LFz8Txv6qRdH+KipucV/zdZmX8fB5SNBrrziwj+toq1K/DKd+PYPyAKla
ml9OpfnlZ7S+mEnrCyM/EUZ+ItIonxENKJ8RRr6jLaJ8Rxj5kzDyJ61V3Xk/
NQq5IX9s/8WldoMc+qNti47P2blFRnxepn7qeTd9a07retfanZETyF/1r50D
J23o/kTUDhy+039gnly0P/Gd5VqG6OR36LZblVzZZnKjd5ofd4qUC5/nl76Q
Kz+aOjSj8OQNuWjlitv7XzyTG97zrXfgwCa5RtbuPyUvQw71Pnny+KdnpRGP
5O+F47v9feXleXvZqrAxWc9kXVe+/lg0olZ+0/hSdNUjDm2pqLLzccITWbDw
33h+R3i44vod+XqNHM9NJVJFX1f8vCq/7f1bpfahKaL5ugbOo8GxskRedO6g
+EzRtm3JyiU635GtZvXXS1bw1HYs/fNAzPIE+fB+386Z0lsPnz2n9i73jbK9
59gwv+svZIfVy6eP6b9GXPPdkZX39cv88np8YsPqkWLYoOgj428+kr+/9n67
Y/tPiyvUL5KpX35B/eI49ct2NJ/osMY1H9bTetJ6og3Ro68lekQpole2JHpF
ZeJPfkz8iYnEn2xE/AkvQw5u1IoJJC99PslLvG/IsZ4h1z9I3vIFyVu8QvoR
q0k/4gvSj/jA2C8akz7FQtKnCCH9yw6kf9GS9C8fkP7Ff8le5DtkL8Kf7EsY
9qVtIftS+0FNskexgexR3b/v8jt1ZvrLc9qXwQHFPtxl/j1Va2eFun/W9NbG
hN1o3jPUfI8XfrvO0m6bzDpt77Z5K9emm/X/IMLyXcrPpZGfy+ydfuWn5MTI
Ny428R7RLVWGJhfPzNX3y+db3p85clSKimMraX65dXXVpnu/iBDH23n0Gdol
WW6n8SKHxqt49wvRLzbQ+UFWpPODaJpxICJmV4p8MChscNsFT8VgOj/oO/bS
+bEN8af3If5ELcqf5TLKn0WrNa715VFaXyQR/aIy0S8a0PziMc2vzplRxnlm
Q0T/c8WmPZIpraeXC99k1smQv3/Wd1Loo0mPRLa27s/5G8x3jsuNfHxEYK+c
9IqpZn34zke1vBdnyW3N138T89MNMUF6Z6e+laX2RdQtBlYfOe7U8dviRv/h
O/qUfCbnjmlRf+ScJBWvvzTy6113k76sPShT1aEjvn071tMvTa6eOixj/egH
qs55alGJMN+Ah2o/CvykY2hvab5/iy/7drPZj8z3bv3dYurc/N28JwoVNVMu
NjXfv5V/2njvlJaZap9YvipucY1xWXJTv+J+V3bnq3E36Twgg439+nKdCUvG
pefLqYfdp272TZDy0jdjPcaYdZ24H6u0WZOcJyvcfryw6cdSDvrjzYDGDc13
5sZ5R2D/BH3Tsh582KOdab8LXq0evCrZvE9aGRfVbtst8+964hofv7wjwLzf
OfZx1LTHEYXCp0bJvUP35coPPus1oOUPDn3t4TJBXdxzZLjz12/2b3HoqWe/
C55RJ0M+6LH758zrDn3HvaV9AkLS5aSW8ZfGxjv0ASNX3fV3e2DELYd+s9v9
sUPPJcumPZtXqbTXoe5Xj9B6cubiXaW2Oh16ud+zNp5pYb4nu0H06SPpvCuM
864eUuFqQVRrXfTO7rc29OuX498KWTQpME4cjAktfuinQpkcNSDvwqCHclOn
yq8fqpgpv4r7vEXr+PvyzGuTGrRvkqnq5+EkD5keXnfK6E7PZfk7h3/8I858
H7aQ5CclnceFcR6XTVvvjN+Yr4uMG5OGduqQITfVXHn8je/ixMom8aVy7jjl
kP4TO5WqnC8vBffx9CmXKvtF7/ZqXC1fVg8sP6V9Toqyi+9IX/LvF5+4D2n7
SNb22JW/7vA9Gfi8YqtffRNl7toSr94vkypLzi3TIqFx4svz4JO0bq+lynDX
Ovmyn5HPGfah7Ofi8sshvbd52d7z+u/sU/DPqShh2Juyp0lUnxAXqD4hrpH9
iaRbLvsTxnqij5G/dSX6RA7RJ0oQfeII0ScM+1d2adi7GEn2LkaSfEQ0yUcY
8hHVSD5iJ8nT4NMp0kg/wtCP8t8Q8jcxdnv40KjIHBnifHe+x0fm+zDDP8Uq
qteIFVSvEV/fnFgQFpQkXhRu+HNTg0xxg+xFGPYixpK9CMNeVHwOIf8Xw+vH
H1wyPlVO3rFsa9+B+eI82Z807E8Y9qwZ9qz2JyOeaBep3iS8qd6k3bmx/M3l
R++KivXvnfl+lUPrQf4jDP/RbpH/CMN/1L2uEa+0QKpniW1Uz9JKPvy0S8WZ
/4gHb2/qX+6aQ7tL/ioMf9V2kr8Kw1/VOc6Ih5pRLxNGvUzruXlivx5nnov1
Wuobo172Oyg+iMYUH7Q1FB+EER/U+wrU0z6j76XxvapDo/5WnuiVD4ledV+H
ep16T2bU217fvH5ibL9cOX1aYPIe3zQ5e2Wt+I2+5vsx3Nft2PPf0i/Wpal7
sLdzvR5WuJQojfqtqmPfGv205a1Sebb/twb1uPnGuRvtafJX0ZD8Vayn/VEk
0/5ovh+j9USb7A4l9ok8834wOmbi2CN/y5Cy0/ZMn+RU9w/bwn6aHXw7TZ3D
uxr1vxmOjoff1cz3k9s9fBrFV3OKmXReVestWHynct3bz0Rxqs8Joz6nztWo
F1ZddtJ332nzfVj0vGZXDxwuEOfo/Kzu8WN7tyvzUWcH6omaUU8Uj8leZSWy
V/XeC/XWBu2L/+VR55ycc3rBqEMVHfo2qleJZ1SvkgPJf8QU8h+VLxjnD5lc
6ZuWHT9/oN5N/LI7KePrZ2mi7dW6c8Jbv5DTyH9lLvmvqucb5xk5LPSvqjun
n5X7P/aOfvjyPN+O6mniMNXT5CiKFyKU4oWqa2/OPf5p8UaZsso72roPosz3
XhHjFzQaHZcv3ghou7Hz0gxVtygzodxPvvvT5ZmY+DXzdpjvu7ZR/iHWU/6h
6g9+Rvzf1KpXwNWq5vuua5TfiEWU38gIymds77v6Lqy+Zuao+3Iv5U9iH+VP
suacVyo/2pJt3q/OTGg9eVmuCK+S9/TywuOKvwKj/lz/VDGH+xv291uRl//T
O6XiBfkuzafubQdTfifvUH4ngimfs72L7kX0mX9Pa8TzrcSvetfRh/ZPmU77
p/I71LcP0v4ue9H+ru5ZUN8+RPaq6j0lBtUYElbj5X5n1HeKOcPqtC93S3T4
7v6ZHh0L5TbyF2n4i2zYoPuUit9nitLJUb0vPs6W6VEufxTLyB9lh2GHF5y4
kSZPu8cmzm0XL0uXaHPdc0Sa3JhyqdWS37bJOr27ZQy86qmvaT83af7J6yKU
5C3HkbxFvaGHan7S6p5MfHzs1okj8eJpXptqt7p76B0rdqywelaS6P5Zeq/q
m931Bl+fDpq/6KEY9a3P8cddr8vh2xMqDp1+V4QMnH4v+LqbHuP/9/ddF6SJ
X8n+ZCWyP9GG7Fv8QfYtjHgoZlA8FHvIX6RG/iKaufaNl+efreOaNRqeJXzI
P8Us8k/tYAttdWFTD+1ej6Yb42sViCjCehJh6U/8aluIX/kqyUNUIXkIQ17i
L5KXKEn60Ix6m+hG/GofEL+yJslHpJJ85GOSj9aN5KPspLJXcNO2n5nvBmc2
qd92SmCqKEf6le1Iv2IJyUu7RvKSQSRPMZLkKRuTvmVJ0rf4P/LWkQQ=
                    "], {{{
                    EdgeForm[], 
                    GrayLevel[0.9], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmGmMV+UVxu/933tZyiJiZUehFGQbVGSEGQZhbJqmNjEpDSYdPyE0qSRt
00JNKUstSVMWAVNIBo2gFotgl4TKUqB8UCgIdBhGB2ZAZBGwAlqs1bYOI+3z
y3n+HT6cnPd977uc9yzPOe8d+tgPpn+/lCRJU5okmfi7Ivq3ivZqoJPGV+dJ
0svfGL8quijqKZqgyXWat0ftb4rPFe1Tu08W44eT2Pc2UW/v3dv7FKLbRV8U
5ebMOyc6hkyiD0Xvi94UXbAMyNJZ1JdzRBO16bd0yP3ifcUfzeL8X0j28eJ/
ToLf53ZlKdrI3mS52Z+1E32XOu9Dm32nZzEXzlmvq/0l8VmiXWrPy+Ib48PE
Z2fxfVEac15Jgs92u5tooGiAqJPvgS6+4LH+1vFg65k7DxHdKerh8UGiVtEb
okOi7h5j35MeQ/9jRTWiyaIx5tWmh0RfF523rbH5YfE1olrRCd19kr6PEo32
mirRKe99RPS2+V9Fp80bRGdER0WNonc8Rv+sx7BxF1E/27Kr793PNtlnu78n
+ouoOQndT7etW9Q/6PufEB1w/7jn06/QHV7zWT/VmqfUH5uGvfBVzkEf37Au
sN1XbSO+z7NN0UOLdTE8DV/ZbZ3wDf0c0fhWtdemocM/lEKPtxQx3rMIn+pr
v2I/1la53er9h9l3tiRhkxbPwZ59HFN97ePI0L2Is7oVob/GUujwWCnaI9Gd
AuxHah8XP6l1BP2xPGLrnGPtBfWrNf6i+C7NeUDtjWoPLyJudmisVfQ99tX4
n0SPqL0rj7OaRHdp3m7NeVDtlzVeSuMbMpxU/wm1T+Uh1zHP76r+05r3oPgB
8Zc0vlp8kvgC0bg04maY7ULcEs/43NA0xtFVrvW/VP86sjk+ic3P8vCBneqP
U/tVzfmOeIVoq9qP5eFT8+wPgNHPNT5N9/6u2tfUflz8lL7drfYIjb+jdqXa
d6l9Rd/maNnDeWDR+lL4zEp936D25/i/vs1X+7T4ijTa+GGV+CLRPWnQQrWv
E495tLfonOUa/7HaY8TvFS1Wu11zLuTRfkVzbuRx1m/VzovQYSbeWeOrtGaq
+H7x50shF3b+WSn2G5WGryPzTLWXis9Pwrbt6FPULFovmiE6L/qdaI5oXRLz
l4leFtUnMXZJ3xawr2izx54BK+incU6V5HtS/EYWsXrCsVtnbMbPy2csuwlr
wJ7xxnfGlomPTgN3Dvs7+IesdeKPJ4Fl1cY6MGJnEj6y03JvNo4wtsuxBie+
Phb9PYn8U2ecAC/KeAq+js3DF49nEfPELTG7Q7TJZ7CuOunAGzi4/FAa377t
+D7kc8t4yp3BTfAUHEWvnIXPl/X7jDGOWD7rex00Bu4wBxPBPzAR/J3l/LTL
9tlsOZekgXHIsN3r9jue0M8W6+NKEvm43us2+cwW2xJ9trp/yDah32gZuQ++
jV833KT3sh3e8H4Nvvdpn7PTd9p8kw0/Ev0tiVyxyd+RnTyBXoj/FcZ+dDnd
sd7k++F35JdHXbf0yTp0t9NztrtPvGxLIj+Bqcvtf1fT8EX8ska+PUH8dBb5
nDxBjuhvDh4OtP/wjXpkvP0ebOzvOeU17DHVuA5mEsPgCnXD+DTy54gk4hls
oJYYZN/kDOqFCvcbjbvsBR6vsA3OZIHXe7LAYTC4yr5ZZ/88qn59Gj57Q/1x
SdQkVcYwzq42rnxumZEL+cAf5EbeNvWHJlELTi5FbUNNOMl4f916GWA9bcjj
jOfzuM9A3w8ZkXmk9+ntfZfap+u9B3VVN6+hTurhPbq5P9hj1FrVPptzSnnE
Qotrt1nOzTXWZYV9EF8kLibL7ks1v9C6y2nEEjF2Td8uJVHTYc+ulgkbdHH/
Ht+bOpi6ABmqfM4gyzjBeh/isxm7IwmdodPb/K2X9YkfUGd3sg06+zzmOdX9
vy7Pko5avLBvdfIa/ABfpD55Lg87rc/jrsQDuWOd/QI/2ep7k68nFdEn3x7M
A7+eywK7FhjH0N9ct3/vvAGmVRbRH5WHPed4fIvzD3lhfBH9EXnYfabHNzrP
zLdNa43JtUXIeqvmv55GrucO97l+oI7A32f4LkUR9Ql1yiPOgeQUcg3xSg7a
q7HJacQD8YIeyDXUgrVut6WxnrVfLuId8qz23J1GHgRTFmcRL7/J4zv7UytO
KYXtse2iLHx8gg1Ffi/neWKL9eT2xeX8bvuNtA8wB9sSn3zHR6hjqGcWZuFf
lb5Lu/0Sv6BOWVjq8FN8Dj+iRtuWRh9sJ7+Aufgj9RKyPm0swX/2paHnCmPx
WK+jrmL+gixy32jnBWoT7APe0h/jdRNdSxOfvEmvOb7+7fYton+IPhNdTiJH
/CeJPIG8dztmrnkN8VmZxzi1XpNrVPClwThwwu8Dak5y8AHn/eYsdNHmeEJf
1x1n29PQZzlu4WAmdWWb/eGPWv8T8VVZ1Fvt9ltq7Ur7wCadNU3tl1xnktte
S6JOxYf/m3XY9XZTu2UhtxKP5PS3tP6HWvum+Lgi4uTOPN751C1dNTalCF+9
qj3/lUS+Vzf51DrlXf6JdfqBdcz4+SRyJXl4v9d97LUfeg5vjgv+9q5twj5v
ea+PvB67/NN2HGzb3mF+ye0PPLfZ+yErdUmr32vcZ6XfIWkR539qOd+zL+z3
mZ9YhvftL+eSeH/Sb7IsyHTVcnNOyXe67HlP+C1wxe8MagLqgdl5vKF4S+HX
y9MOX15xUxw85Vg4mkfueNE12hLb7lXvx15w6g1i5Yj7tKuLmMdbhzfpWuMP
75KlxuqvFZHHe+aBT2uMjYwd8Xww8qgxnXPwGWTvZKwBe8CSlcYT3hYb/L4g
1lcbc3hn8t5sE9+YhQzkSfat91n4WrOxtcL4gG83piEHOHxvEW+HNVnEx0bH
CLi43fEF3jMH/Cc/8E4hX5xLI0cwfjGNnMI4mLXNODChiPn1ftvtNQZed17I
/E494PuV3/m1lnu95fxKEe0Bmn8mj/8OZ8Xb88C+GudNcg+4hi6pjdAlcUw+
IBc8kAeWkxPwi33WTW0eOLpE4y9kkTuqfGajZXg7C71Qh47yvuwJLt/v/16/
zsJP8BfsM9F4wtt9mmvEqW4jR00paqyhaq/NQp/k3j2uG4kz6ljwCv/slYft
aq3Xi9Y5uud9ONe2Ome7POzYWaE9ZuSBh7/Kws68G2fahrw/sS01BTUW8bEu
i32pF1rzeC+3iM/MowYZI74+izXUI8dvwu/VPgMs7J6HXXvwrs/CL8FC/oXU
+O5d7AfUBcPzuAO+OTKPe+JHkz1/CPiVh58Tc09mUSecFR+Yh83wF+ZO8fxy
TUz9tsp5AX30sz3I4S3Oew3OCVNtL/6PTfT/h/8Bor+oIg==
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtMz3EYxn+H798cUtxyYW0isdnQig7SVuPCjYtuzIUchg1jk1OJblBN
ttpqyKGjiC1n4cJhTDYtQnRQiQ0XNlekg8+zt4vnv+d53+/v/Z7e5/uPzd29
blfged4O4MB2fn75nncAfiP0vC3om+iH6M3wXNCCvoLeCL8Pcijwj9h++AWw
HD1CvgS+EpwiNw+dDq8F6eRj0QXUz0SfJp+MXgUfBlrQY/Rf+CWwAj2KLoU3
gkz0fHQh31ejkzU/uhi+0NnassitiXheO3on+QfEfHhRaHN1EUuIWA3V6kDH
o0cZUw1PAmfh9c7WnoFugA+CgsD2eB7exPf5gcWU6wAJ7GcP+i18CBQGtoeL
ztaoteqbAfh7rZnx+9Bdzs5MZ3cE/QX+DuwNrKZqH2a+xfBb4DI8h1g3vBaU
odeiO+E54Ac6RB+HPwUj8H7VCOzMzjnbs/YekO9j/HpiA/AmUIH+Dfo1F4jT
etFx8CLwWmcd2lq1R+31bmh3pzmXou+h08ilghr0BvCV3DVQRW4q85fDr5OP
goegDv6cWAZjA3SZbzEHnxaxsW3EsslPR1fAW4jFwHuIHYSXEGsI7c5190nw
bPLRERv7ivwgsWXOelFnmqizBIt8q9EL/+DsboqJ1TN+E/q7bx6oRm9F//TN
IzXoP2AI3gziyV1Fn+f7C2Ac/RI97JvHtjmLKfcMneasx9Xr+mYM3sb4Ed88
dg99JzQvJqLnRsxz8p78mwevI3/StzVpbY3oUvghxvepl53dre5UdzvHWe9o
Ds21wNndaA/ai3pMvaaeUe/oDnWX8vB9cnXOvCFPtqIrQ9u7eki9JA/JS/L0
R3KdIFb1wAtyY+ij8FawBD2FPU3yrSfUGxFiJ3zzpLwpT2dN1Fjk7E6TJnoy
QJ9xdjbyfBfxHt2xbz2oXpxJvgrdDr6hf4bmFd2J7uYzSIE/0pun/omYN9SD
6kX1gHpBnuykVnlo3pAH5cVm9G3f5uxWPWdnr55Sb50Lbe/ygLyQj0707Rt9
qzdJb5POYAA9Do7Bn4AUxkeDSnkPrHbW4+r1PJ2v3svQvKkeVa9+cpbTG6O3
JtXZW6CeUG+opmrrjGtDq6naOqMZzjwir2jOGGdnorPRmnvhs/Re+vbm6O3R
mepsFZvtzKPyqjwa5eyOddfak/5w5HF5Xf8Bk515QF7Qf8Yk+Btnb6l6Wr39
H65O6iM=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.78], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNmX3Y1uMZx+/7d113rKeimfQUentU2o6DktpRVKiEimMdh2qrpPQiHbNE
Ty/GRuUY5m0JlaaXR1JJWN6lbYaUTWGKSEzJFmbzWmvfT+fXsf1x3df5u37X
73o5r/P8nt/zuluNuvRHPy1KpdJT+kmqN6quknCi5J3lUmmFyo2Sj1L7e37e
nkulqXp+U/UslfvVNlv1GaofVTlE5QONcY7qxmqfrfpJlXYqffXcT+NVVUql
3pJ7S56lvqPLMQ5zzdHz9ap/ovf9VQ9DVnlf7VXqs171YpWn1TZWfe6T3Fry
DNV3qsyTPFzt3SV3U1mttTbQd8PVPlDlLcl1KldK/lzvLlZZIXlAKfow3216
/4JKD5VJKheoT3PVy1Q/r7qbyhbN8TM9v6L6C5X1tKs+WeUpyZ1VL9b75ySf
pHJ1Ofq0Uemudw9rngMp9MW6eqqcqvbjaFc9Vu/GpFjX5iJ0capKl3KMX1I5
RWWtSlaZrvKsSkuVXvq+q7ok6flCjTFSpU5jnJTjLB7V806V0yU3Up8WeteH
sVX6qc8Q1Y1Uz9X7jSr9VN7Q8+Xq97rqwdiI5JXqN1/vNqmcjx2pPUl+h/cq
tZJXqX2l5BNUX5livNs9Zjs9N9c4nfTuFclHq22yxl+gerPKIJXROc5nkd5f
zr6L6HdFDvnyHOPVK8I+5uu5ver92Fcl2h/Ut1eprbXKA/psseptKiNZt/pN
V9tv1GdpOewD2xig9vGqm+WwhVttD0dpzC2qP1T/IapfUxmsslDldZUf+zxO
K8W+ehdxThXsSGWrygiVa3PY4TWqN6hPtUrHUujnkCL29AnnU8R6T6jE+m7R
vN+rhH7669tF5VjPWH3bpohzOFPl7hR6Q39X6v2D6EbPL6rPCyoP6fmsSrR/
X31mlqON8+qEztA5st7VqP0/KXwPHY9T20Ol8Ok1qkeofbjKPfrueNXHYGtq
38Ba1adFDl/FZ5em8AX8YDXr0fMRkj9KcSb/UBlvvf5dZShzF3GmzNlVdVnl
ZMlnF4EhyPjDBuvwao31Q/w1h+3jA/jsVPtCN9vfBSl0xbpZf2fJc1Vmq1yn
8onaL1O/GzwH83bxGq5I4df3FjE+/jXFeqCdeoTlRUXIzHOu6stUBqrcDv55
PvAFeY7KJPdZXIp+PC+RPD0FLvQoxT5Yf99SzD3SMngBboApw1Ksk7VTT/F6
tlnH2H9bte0BB8sx9nTjzjTLPUr/ewajbpROj1X/RaqvV2km+W7VN6gcLfm3
OfY+zPoc5zWDYcQI8K6X2nuprvVZgFmTvF/2VOtzYU9Tvc89tk/sdHs54gVx
48Mi/JUzGu49Mjc6naJSq7JDz6eq7/GViHHTvK8OWutq7EB1k3L05wxqPS9r
uwXdskfj8Fhj8jvoTPJEyeNz2DC2/IMcPoVvNdJzwxQ4Uqv2Qt88rrq+2nYU
4RuFnq9V3bcSYzLeDPBI7Y3V/qcUuLLU2PKK485rObAYTN6WIx4Tl99R3TJH
fzDjOn3fX/JtansvxRl8IHl+ipjRVX2e0/OF+vbfqn+eIsYskfy2/ai9+ryb
4sw6VAK/xlm/4BSYgO3NS6HPLpXwL84QPEqOw+DTGNvRQMfbAZYbOt4cXgm9
TlC5BN2meEamHm+dcw7jfI5bipA5n+H+ZphjeX/Pgb4ZEx03dYxpUokYM7gU
+An3OVAK/sMYjMVch+WIlcTMb/T9pUVgWU89N1NpShzLwXngPsQD5mbNZZ/v
n3OMC06BUfVz8IxDtYav9c2tGvMzfKgSMWhviviw3XZO7LramNnM8QLeU0/9
75P8gPqfpfrMImIPtjLD629kjMUXiMlXOQ6iE/RB/FtQijgx3+dVUwRX61OE
zFnW+AzPdGzra7xlzr6e9wzVLYvAyVtzcK9bcthOH3/b1+vsZftgTM6gnOLb
rh6zn/vgQ9gaNkfcmFaO2EQsXeR4emcR3Aa+iQ2yz4WlsEWe8fVV3j97bwrx
LYJTfKx6r7F+YjnaFjhWcc6b9e2SFJytu/nFbMejg9hVDtzu4pgE3qLHiR7n
10VwSPq1LYc9wJ3weWRshDXNdPy9owjfBA8/z7Hfb1Jw8KZe8xTHDfBqhdcN
f37CWLYxBb7PNgbCKeqZV0D2wXC4ZocUuF0j+V59e5rkOtUdPe8+vX/MfvFW
Co45yZhNHKQ/cfFx91ms725W203maWBnR+Nn60rId6rPPTnmfD+HLuCT7J33
J7o/tlVtfsga4YptJLdP4QPIj+XAUbjGX1LE0Wd91m2t5yPhISl4DHGGtS+x
DTc3V+mYYm5sZmGOsXcaF08qwt7OddyG8wxQ2znmzdhsC9s8umluezjbfeAo
azTWQHhVjraz/S3ncIz1v9XjgKW9y9Ef/wGDz/D4rJX+xNYnUuh+qcb8qoj9
LS0FfoMz4M3+IuyU/Z6XYi/YFfwOnsdeSuZ4nWyHrY0z6+1r+BzfdbIeFuTA
nh05+vGe8a7LgVeDc+D/7Y4LhzunILcgTo+2rdYZ24jfYD/fgAfw3ZHGq2vM
k1uRG+XgKf90fKcPPI14ChcHb8FeOCM54+wiMALevdDxEzxs4jZ8CF6EHX/L
79A1eibmIcMlZ6bAti45uEg/7+tpPY+T/CkxNsX47OUCY9K3mIVMfJlVBK9l
rWtzxGXiM9g3yHvnvGkfbpzsZT/Ax9+zn7N/9NDW+fdO63NTEfyGmDgihy23
qUQ+TF68QN99mQLnjjf32WWsxFaYi9h8wDZEG3k4+fgd+u7mFLHifMfPQd5X
K3wqRfxjb4N9FsRX+lXnOGfOHv0M8zlxRuQ38FHOfI+5ErkXnBRux9zodal1
28B3CNwltM+xF/aEXsBc9HCvnteBV3q/vIj4SP7W2Of/LUe4xGt5zTbDmnaX
g78RC+s5HycvJ8azV84qa19LNGahehmYqLZTcuSHzINvNtC7VepTX/URlciT
m+TIlef6rMnh5luPdRrnGbX9NYe9LLJuj7Bu8AXyvAVuH+RvGaex7Zu9Herc
nzuAZj4TbHC31rLLPB+/GW/fmWq+jV3/ooj7BPLVw8gN9dywEjGGXAVMm+Kc
Ao79Zoq8fqW5JLgKtuCbc/0NsYo4QByEO8IDrkmRW40qwi576Lk6Bcci5sNR
sUXm6GF9wt3h8L80xuN3rItcm3b8Ey4Fp6rKkW+zD/CSOyYweFWOvbIGeAh9
GZ935CUHMVfyVzn4xNeq/5Ajdv9e9eQicG6d8bmB+5P/kQeSL1Avs0xs4Y6D
WAKu1xnbq93eybFjiTkPeeI9jsucVVv7+R7L8LltRcSJKs9V52+xO+ycfTMO
d0/keuSdiywXttuy6nbGDu7wwI/nisCYA7b5FSmwAwx5JMX6tzpm9bK+enqd
cEjWBp98t4h4TN9t7j/BHJ5+3KUstz+SzxGjidXwavgP8edRnwVzoKf21iH6
5H6BM4XvbzHWwfHh/vB82pC5K+MuaovlKvPtPvbBR4rww6Ny+BE+CseADzU3
B+EOa5XHPM65xkGsTKEX6o6W16juoH5zuI9KcWf6qxycgj6MN8U5ILngkBT3
aNw/PpuCT6xWe3PnFEOM5zUpMH2d+f0K8jjn2jc45wB78fF3nY+Tl5OjEJvB
FHTGvuAY2Dt+RbxrVYlzb6n6u5XQSWPVXXP4FHnzsTmwqKnam6k8oz7VlZiH
c6l2jKWdfpusK3R/jM+LeckdwEOwm3sFcnByQTAAzAa76xszv1OJ+1vwB0wg
PyB/BHsfMH9ameP9ao/Z1HpDD1W2P3wNe8QuiVvoekIR92LwU57BJfKhcUXw
nrdz4Pky87xa+/wE94dPbsjR/0Xn+mOKWP/zer5I8qv6dnQRMvjG+9Huw3jk
6WDIKLfTB9tZ6Bh1o98d5ErGSb4lv1lQxL0bfIw8Abz9Vw5e9rsU7+e5z12W
2Q/1fMvfvmN/YPNN1gPcnlwFDjs0hY3ybqL1xt735Rgn5bifJDYRo3aYE3If
D//n3uRu7/cuzzvU72gnr4Bbkt90TuEXcAfyYPqwLua8xOf1cg759RQ500Sv
B/+oso9gey8XEZO4dyWeneKYcm0RcWWa+4Jd2OkmY0iNZb7FbsFh4g53ii8V
sbeaStydrlXf3TnG3JVjf7XWJ5hGH3CNHBFdw7+/LIKbExO5y+Ielr74zwaP
D78jXsJl9jvPrKh+NYcfwxG475ls+xlaBNeEz/a37cBttuZ4Dw9633nW/Sm+
43vGGufvZhmf8RH40FTvhfPiTGb5XMAT7p3Ih6kv9Tj4xmRjDYV2MPyNFDqY
l2Ods73WrSn2xT09vJl1rM9xl1Jt3Jtnm0F35C/c/6JDap4P/nfi9ofdzjPj
cm7kt8Qw9E1/ch/+6/miCF6HH39umyd+7TY+DDCPh3d+VETchX9yN/Ch/fEL
f4tNEnu5syD+Ep8Za4Zj2b4i4tlcnz3nzv56eI89cvw31NM8rafbqy2DZ/B/
OALc5knr8akc/K+psY58lP2hH3JA5qrznF/Z5r62XOfz+cZnRBvvyP32uZ3z
JU7v+j+d7PG+9lgvcBJwl3sisBf/JQcj7jewP55g3ZN3c0a08Y7cgvuow1Lg
BnUj837WQf+ljheM38ZjHOlxkPd7X/hnxRxvrXlgdjxsaP009PgH+XOKfJ77
zs0p7ib+mMO/8UFyZmJaO8c1cPcTnzv1p0XkG5+6HdzGLvbaTtA5511nm/nY
7cfaJsGVlzTfeNUbc/gcesPvpnitrLOl7QrONcd2zBkz916v57MUvK1FJXI4
Ylit+SyxHU5Lvn6u4xjjYa+MyX9X5BLNK/E/A30Wl6I+z/Ia2xZ2xX+ecGY4
LWuZYxzj7hjev9/Y8owxAP+C24DPxCnGZC1wvor5PLY0wL72nxw64r8F7o+w
kcccf4gZxIsZOe6v+E+PPGOOdYIuuRcldmNjNbY9dNnSdoV/wavgSt2MM3AJ
/I/cH27MHcYi49l51glrZoxWHofYQoyA21TbRxnnoRSx8OIc2ADGgC2cOXjE
uR/kgOaB9+WIT8t9VzbUcfa0HLo+XfXfUvDUI/2fBbl4T8fTdV4n8WuL17Pd
nIv/YPHNbl4bGN7ZvkkbvOp0r7+bZc4A3CO/JtdGxt8H+z5nZo44mu1r3F1x
RwK3vzBHzjzKfKy756cf/cEvbJw1EEdOtG1wpoN9xsjsHxnbgavCG+HhF+WI
l2Ny5B3ogfuQnb6jW27MHuA1Y8/c8WG7/wXWWLS1
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlneMVkUUxb/53jwUWZrSIcAiTVEM0hGQpQQMqInRRBMjRQxYokbRKCii
4FrpKLAu4FKkCSyKINLWQpMi0kFKEFECNkSDFMHfydk/zvedM/fOm3l35t77
cgc8dc+T2UwmsxJEsJqfBxioFjKZL+Ad0kzmEnoNtplJJpOHrs3//ehK2Luh
c9G98a+N7onujO6KrohujT7D/AL8pzDeBV2V/4bBC84H3bGn6DHwaaAWugHm
QvgScCe6BzqfeTPQddDXo6fDW/C8k+hHmd8IXQTqohti/xB+G/Yr6E/Rs5h/
K/o0+m30JHRHdA7/t6B/4L8TuiL/g9Gn+F/IM+7APw89Ct0e+wX0HD0f3Qr9
B/oZ1m+Kbzv0OfRC7NOw92BsArbu6O7w5tiPYR+KHot9EmM3oivjMxF+FZiJ
LtKhaC30FHg+9h3wCtGxV4wV61rRe9UZ6CwO8X8l43fSu1WOpWdTenan+b8u
+B31rvWwVwnek/Z2JXGsqpaelWKu2B/E3gz9D/79tT/G/oanoGlwjBXrG6Jj
oTPX2U9OHGvFSLHSGeus56HLoBtHn53ORGfzHXokujHYz9zLpXdFMVfsJyaO
nc5cZ38z/i8Fx1yx35A4ln3AcmzDEt+lLdgbY1+O3gTfDBqh38RnIb7r0bmp
x2Q7xdhAbPVT235En2VuTcYK4btAdWzb0I9hfwLsw/4Vui98NDijvZXere3o
JvgXRL+b9tAQXQMUodeia8ErgffRy9DXwiukzqVidEV4zdS+Bxi7l2eVRS/S
s8BY3R/0fPgm7N3QlVM/axv6BHsph+6V8Zwc+IP4HNe7oN/D3hw9KjjnlfsX
0QXwQhDhCfgg6zHZToARWefwPHhHUJKxzyX4PrAWPQS9H74ZDIIPZ43pifes
vfdQjUGXoGsHx/Br+GidAbwbWJV4D9rLKnxawk+D/Kxr1ir4IbCO9V5AH4b/
CybDW4Kp0Weisylhfnv4eZ45TrEDf6F/0f2D9wJrsZ1Cvw7PgufhP6vmBfuc
hC9OfJcVc8V+D/oReDE+N2HfjR6IfhhsiL4juiu641n07WB9cM4r979UfIJj
sAPfosS15HHs27EF1piVdUwUm7JgLvwj1dDU76h3VY7uYm5h4tqrPWzEtkA1
Ouuatg7bzuja/rT84ZtAg+Az+hY+C7QJrikrVdfRG4PX1Nq5YA76EKjD+lNU
k7H1Azvx35t478oR5crWxL1F77gGXU33Cb4TVFFvSH1XNVYdWz+dCXwJKGDu
GFCBZ/2J/kSxAY0yrvmXlW/KAfhW7D31vol7gXrGcfWbxL1DPeYYunzq3FJO
5KCnYq+RdU4oN0aBw8HvOBL+rPqPehc+z8GL8S+T9ZpauxjcpXyQv+4WOid4
bCl8SPRcraG1FkX3ht7oxfBljE3POIYN2NsgxsoFrzEsugeoF6jmHkh8R3VX
daY6277RsdIzHlLvia6F2sN4+FH8E3gn7CPgAxg7GVxDVUv3RN8F5exu+MHo
3FVOHdD5qd9kfUd0V86C8VnH5HueVy91rVwAmkT3MPUynVGZ6BqoWqg9HMZ/
ZXRuqQd9Hn2HdZfb4n+1ekP0WatnDY6u4arlGfRB5Vp0rVbNUu16K7qWqaar
tiepn6Wcial7mHqZYvpT4pqj2tNFPTBxjVGtaYc+Ap8bzYO+h3ReYHlwzVPt
axad64phf8Ue+4rgGnEcnh8dC92hN+D3KabBd1h3eQZ4JTimW7D9njiXZoP6
0TVStVI5oFzooBoRPEdzW6FXB+foy+gJ4LfgNbTWu7pPwd8YSxPXPNW+ocox
9DvgV/ge3VFsKxLXVn1znI+OsWKtNVqjxyXe215wd3SPUa/RN8410Tmn3FMP
Kx/do9SrVKNVq2dHxzJPNQs+nOe1Da6BnVVLom0ak+1VfacEx1yxfy3xWakG
5UXnmHJNMVfs20R/q2lOW/WS1L1aPbYu+iI+LwbH8Bz6s8TfMhprgf4vcWzU
M9Q79I56V8VQsVSMFCv1BPWGPtG1S98ENaJ7iHqJcuIC/keje5F64hH4N9G1
UT1HvUc9Qb1BPUO94+PoWqBv3hL0/yPOcsY=
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.65], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNWFmMVUUQvbe7HzsBRkBAWaOCmQWMAdGgJAOyRALDJoiDmgngh8KgAnGP
MBN0EJBdwUT5U0EBUVDZt+Aag4rRPxMU0AjDMiCgETyHc0j86HTdun2ru6pO
ner3uldVj5kRsiybn2dZxLwCDysx1kIel7JsNuaOhSxrhNED+sXQRcwJ4zW8
m4zvfsaoxBibJI/BPBrjJ8gVmN/OJT+IUYVNdgbZ3Yt5H8aLkIdB3xRyy1xz
E4zR0DfNJVdA7o81d2IMhO552B0P3SY87w+yRfvj8DweoxPPFPRck0lHeRnk
UuhLgvQcxZBrMb+K+X6sqQtaf7/tjMJe0/F+CZ6LvBfPPDTq3DzztW9o/0bE
ag+eu+O7RtDtCNpjXZAPY7BmFN8HyU9g3UXYOIB3qzFfoh/QX8ilHwu5Gdb+
ZZnzOcu0R5l2aO8wRjnPBl2D7TTLZYvre2N9E4yzuWJ72HG+nEvHnPbw2Wjn
kr+lHeb8stcUw0bCqMfzvxhnMBZn2rPe69fBryaQd2FdiLI7CPqemG/BeAjy
I8QH5rfwvhClH5XpXD/6DGXQN47aowTzzdA/nGn93KDn6T4Hz9A6KP5VuX2F
PCfXurnGUnfkqD3kV7D/dUF5fQxrpuayRTvb8G4i9Dswfw87naF/A/KaqDPz
7PSJvjFetxf07So8l2MMIubw/FmQ/KkxwPWMA3FR7jVLk+KyDHM/6OYFxW53
1MxYEovTcmF2YEHyKbzvgne7sf6GgnA20Xjug+d3sOampJm+Ebft7Cvlo0kx
/iAqT9zrOHRXvH6xc0N/v4T+aei65MI59xkcVcvPmBeeTooxc8M8fgT5bsib
MQ+IkofnynPBuWQcWCezsP7DqFpb6G+IMdZ5U8zL8VyG0dy2hpsrWIPkiPVB
/MAYz4yqT9bmDp+z2HXfyDIxscF47lIQF/VIOtOQKIzRBuUK4zCa98hn+805
nzqPPD/PMdTrr/k8JdM+xDC/LcV8q/E/G/o8KM6sG/o72vXd31zH8xD3XN8D
5zyI54/pnzmQXHg99Nug7wj5HObzGF1z4XKdeYYYJBaJt6OOX5uC+LjKPDUX
37fE/FLS2m1eT17fHsTz1NPnqZmeKdP3NZAP5Tr/eu87yPXYCuOFTBzcyRjm
mveDfCTHNDNvTA7ibmL4dBTOiXfmtr/zey95xRx2R5LcL2mf1q79a7h/IAk/
vaFfam7pbt5bDf0izLOS8sM8sc6ZN+KMuduCeav9Jf7IJ0sgty1I3x7f/mLe
YM0Q48Q940v/vszlIzFY5XohBksct0FJcWoMey2C4j/FtUMMMceMQal7FnsC
+wH5nHFivlmPDT4ba5W5auF8cc/Bzi+fm9sX7sd9N9jXFt633Gt5tueScPko
5k+CYjHcNrbYDvdscD2d93mWm1PILXPZt5N0Z5LuEOTN9zCvdPwrk2qCtdEr
KBdlrhfWXJn5v5drgbXJudR1wbiTs2iL9XTF3MX3JbZJ/iAOiAH2BfZC5rG3
9cwtubev+wo5dafxz/MtMl4aovizG+J3DPPnQbg5ErTPjEz47Gs+pa2+5gTO
/ayf5/34/oz5obP7MM83x3xQbA5knJv4zMT1L8Yb9yYn8Nve5kiuGYnnanPg
yzh/W+jnY27jGmE9DnHdEUvksiLrKbeyL+wX7d0zyP+fuQfQ31+D+Hqj+b4m
qk7Xu64ZjyNeU+VvaPO2JDtbHEvuy370e1JcjiXFkPXNuNGPmfaFHEs96/dA
UP+mDfJ0tbFBXVv7UmOfa5Pi1c57TXOs1mbirM3GP33lGub79aSY7k7i9Znu
B0Xel/aZ/4PGAM/OfDIWXR0v1uZYY4Nn432Y8WUcJgTdoVlre6Jy8T72+jiJ
sxeQSyBXYN2+KC4ZYj7hHbLCPHZPQXZORt1PeT7usSsJCyeSei57CeuFayu9
L++9debGbkl5qo/ig+bmjNm+EzyVxPfUsfaD+Zh8Sj6bYN445zMSV8RKnTnq
h6i4rE7CzhFzNe/aPAd7A2tuh+vuevNOu4L2GGV/66FfAPmk87PA52dsRgTF
cUOS/IG5ZYx9/zuq756F/l3ff3gP2u7fO39iLi0oTzdCHheUP+auk/tlB8y1
URhdjzUv03ZQz2qX1AvvS+IH4oK1/HtUTZYUVMtl5uoOSbEckWRjsu2QRyvN
pcN8nyH2f4u63xfDzhdJOP4G81eWqSPf837Ge84Kcx/zsDkphlt4T4jqWby3
Xpf022MY5PFBvhOfte4xNT5PV+OZZ5/m87dyDrl+vs+2MSmn/E1UZ1+Xu9Zm
JOHjccyXnIsDSftMtr+3ul7IG/wdcNg1X+cY9kmqxWrX40LfG/lb7UQUvlkT
p3x/6M/fGVH735WEP/pyManWp7p3HIrKwV72K+NmRVJPH/C/OylnckaJY8z4
PJvE3Y8l+cx4E5PfRfWkBnKwsVFe0N21NojTiEXG4ZL9YZ2S976N+s31ZFKP
6Oy+9qHreUmSbrb1fyTZPE4u8b2C9wv+ziGv1SXd0Zjr0c435SLoJwXhmDnf
6edvfO9e4dydMJ98BP2bUblib3/IWH84yS5tXv0Nm/R/wj9Yuz8pv3swL43q
YfyN0td1RH9Xea8u7jOrLO+P+t1bjW+XBb0jt7b0HZh3Yd4tK80zrLGRxktR
QXep1taNcy3zPsy7Dvms2rii/pz3OJ9UY8TzfHPzUPtFPhjvXnbRWPo36k5E
zuQd6eukmBF3f5pb+J9KjXvlpiTflpu7eib1s67Yc3AS19/rOy25nL3mV3/L
fnsa7xbi3YWoPsF+Md0YJN+85vsWc7QP89YkDjxorl1ovu1lfqMv9cYFfRzo
XkMOJ5dMMjYWRfEDOXKN11+9N/qZ/PcfaqYDtQ==
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtlVtsVlUQhc85e34C1SZAKzep0JJIvKX6IsZHpRrUCBQISkJNiGIiFFCp
QY0XarEgkhQEL/iAb2pABMslgFCgXERAQEP0TRPklkhF21JFUb+V5cNq19oz
+/x7Zs/Mrp41v35ekWVZMwhwhT+rWXgX/J2ybDt6CnwqOIxeg74dfod84M1g
IHwQeAN+DZ9ReZb1oseVsqwlbHuFb0+Ht4Gb0WPBSvjToAv/brCPvVvBDvgq
7D3YBoMP0CfBBPj7oAp+CHsN3+9A18Lb+P6e8G/qt99Bf8i3tiT7HgZjsE3C
53v2rwMrsNWjf4DPBL+gh+CzA9+n2D8MW3/0evT96DL0r2C5zq5c4f85+kH2
loG96N7w2RehD8K7QY5uQl/Ffjd6D7wOtKAXg/v41ml8buG3asEZ+Czso/G9
Ab0dPQF9NjkGxXIO3YD9GfAb/Bo4ru9j78a+jm+uRT+MfS22J9EPwZeBIdhX
oNdg/wkMyH2mcdjWh8/WH3RgGxnO1TT2fJV8B7oLfbMSvoS1B+BHwHj0reCF
3GfQWc5jb4EPUA1gu4iein0neij2KtZ2Fb6DKfDhrDVxtt2sjYAvDJ/1X+xN
ipX9rdhmgN3oV0EZ/A/sz4ZzoFw0gp7kO9JdvYVPF/ZLYa6aeQ/eh/3twneq
u70ObCh857p79YB6QTV5F7Z7wUfKHWt98Md0BvR+9E34/5VsUw+pl0axdgA+
RznBdgKMyP2bl1W7oDx3ji7Cz4dz34y+AO/FP+AJvBjuOfXebHwuY1sUtqkG
VAsbwrX4CGsb4Uvxmcz5JqHb0fuT+UTwBfpLxVA457vgY0Bn4R6ZHO5J9aZq
/Gd4TTjWfaCK2KrRewvPAM2CruTa1dpI7PeEz6qYFftn4bOpZlQ7G5N7q4a1
fspV8l32gQX4HkT/mXsGVKDPhXMzkT1nkmtatV3O2mJ4I6hH9+A/LzxzNHsq
sbfCN4X3agZtho8u+W7UE9XwN8O+FWAJ/JBmhHpTM0Wxh2fLTHSnYgnPim3o
Sva/hr6+cE2rtpUj5Uo5VW4Vk2JTTIqtTj3P/9/RL2EbVnLtd6ie0M+Bf3LX
gGphPvpK7ppX7euMOqtqbKzqI7n2fwQzdH+goXDPqHc0YzRr1PPq/UvJs286
a0fhm8A04rmN/+PxfT7ce5php1g7EJ5lmsHfoleFZ3kDe1rR7cmzuPb/2OrC
s0E9pd7STNRs1BvxHT5zw3elmDrRN5Ycu2aEZsWccG6Ug2/QFdi3Fp6JQ7G9
Hr575Vy514zRrFHNq/Y1szS79IbpLVOMilVvmN6yI+FZORv9dfiN01v3KL93
AT48PKv0JuhtUIyKVTWxTbM0fPc6k852LHk2qad2Ylsdrp1G9mzW+xbuPdXo
Fr2NJc/2dtYGw9uSffUG6C14HJ+Pc88YzRrdie5Gb+bL6E/DvaM35BP4neGz
a6ZothwLx6aZdVS9Gq5d1cRJvvNE+C3RzNbsVs2odvSbK7EPLPlsqolybP8B
nBENLg==
                    "]]}]}, {
                    EdgeForm[], 
                    GrayLevel[0.5], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxNVD1PVFEQfbv3bovLopFNeBDlB2BpKYXF7oawrg1Ko0gl+wmNmihiRWOM
hdha+QNEo5UkKsHEoKFWqFg/ElYpXG09J+eQWMze2Xkzc2fOnLmn5lq1ZjZJ
kgeQAKng5zMMbegrMUl2MklSxvkQ9mXYLkMfhq0JuYv/8zifQlrQ05z00/Ap
wX8A+lXYn0Xpb2ArQ74g/xXYV3HmIK2M7p13np/wb0P/A1sesgLbIuRm1L19
2DYy8rkH+3PYLyDPC5zf8a0A+xbOYka5Gb+Mb09YM85aRvoS7IdRuT7BfwHS
zaqOHfvQl7b9rPq/H1RjFXFVfMtD5vB/KErfxPdJyChkBPID9lewT7DGKHzG
o/J1EmFIjI45D+sdds2D7p91su+Txpx9F937UJDfCcd0jNWjKNuHoJmx9jXX
NRbU15j/X0s0c86MtbyMwvA9/s9mNSfWxbnRj/2zN97Fmifc45koHInnWegp
9HPOP+7eyZFbUXM/n1OOFeOwZy4R/9Q48p6ZqG+XouqddM56EE9ZM+9hDGdA
rrEXcmw6I2zpM+q+iQ97KZvrTeTtw97AeWC8a1G18X76bzp3Oypn33nfBp11
2A89h7WouFHHpu6DWE26TtZf9n5VouqomFsXzdU0ipMV98k5c96ce8m7xB5f
R81pwxxMfRd3Ytp4sN9d7x3jSke942wE8ZF9VM3D30F82/b+DZt7x6NqLxEr
7wXt3JGv3p073o0Wzo9BsQvQf3mv/8K2l1VN7LeXVS7e13Esc2x5l8nHpneT
OLCfac+UcT3vJuMPXM+sOXv0BpBvrIOco74eVG/XsY+jfHtRvOe9I9DXIVPQ
V4N2ifPtBfGdduLJeRS9f/vuZdnzKvy3m3nPju8X93mRfM6J2zN+Exreq23j
fz3qHSRuxK/rmdG37jnTn3FN82TNu883oOD3YcmcJ+7sbdf4F9zHgHtpm0Pv
gu5mDTei4vPmc8VvJWd92/h881s16B6J15S/s+YF10bOcW5tvx11vzl187Dt
96vm97lkvhWivteNT+od4bv+D5pLwgc=
                    "]], 
                    PolygonBox[CompressedData["
1:eJwtkj0vw1EUxm/9T1ek1SARQgwGkiYWE2KSiGhrEotgQ+tlweJlQmKwsJp8
ACUxaYJZ4gPo6CVp1UCsfk/Of3hyn+ece889b72LpUKxKYQwAAwMJkN4xZBK
hPARcWJcwj4On8S3iS7i6wDP2DLoArwHPoF/Df2LngEn2G7ReeI1o6/hQ9yp
okvEPMXfAIfwNOcYvmFQx9/O/Z/4T/3dik7zvgRy8BbwiH0OXYUvg374CKgk
PGYjjqnYGWzfnHX8nfB18AXfNv9LNe3As+AOvsD7Y+7nzHO9wpY3r0m1qaYb
1Q628F9im4X/RR5bOXyj9819L+AA/hTXoho20O/o6YT/+YleNa9NPSzCa+CI
v+bBvXmNqvUNnaW2FfNZJNG75jPQLDSzNvQoOhV5jjXOcuR3FVOx63FvdEd3
zzn3gs9As1AP1AvthHZjyrwWzVyz7zPvjWbQnfSclJtinPG2Yp67en4B7zLf
Le2AduEh8t1QD8r4/gHuzksf
                    "]]}]}}, {{}, 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0DsvQ2EYwPFH1Bdw2ZC4jBUSi4lEInFZOJYyGIwuLSYkig2JwaC+hxIb
iUtIBB9DJa12cFn9GsMv/+d5+56c5nQt5pJsQ0Qs8NQY0Z6K6GuKODZPm2fo
ocNZt3ZqRufoZcB+4u68uaCD9i99YcnZJlt82zf0VZd1mzF3i/ay+Zobzqjw
yY/fqvqrNX3TIa3qiGdrWrCf8myuMOy8rImz2fr/Zpc99plkijZG3W3VCZoZ
t7fog+fX9F7XNU+OO/uKZlnlyH6hl5xzay/qge7ou35of/07cWhPe0dJH7lK
/X/zP/EwNII=
                    "]]}, "0.09`"], Annotation[#, 0.09, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwl0stLVVEUx/EdXUsUoaevorw1iGoQTrrU1KJJIETQJFKaNKtBOcpJ7wIR
SwMrUGiUli+oBr3U0khrkPYPBKYVQZA3MyvBz6LBl+9vrb3O3oezT/b4qUMn
l6WU7qIrk1IzVhSk1Ls8pZVcoy5CoVzM+7EPl6z3cC8eYEjdx5d5p9lPPIwT
emfjGb1+daN8ACVYpbcGqzFtbT2X6a/lUl7HB7kcpXIFl/FXsxt4U6xxZazh
sPobnuIZnuCd2ef8I96H3/MQv8LL6GMP7ujn7LHIv9W38EEe5Tn8xCN1Nf/j
X/yX53kvOuW3cR7eYBxj6NCv59u82/475Docw1b1Q/0t3K6elEd4gWf5D+d5
gk9zA87Eu6mP8k2+xleRtUcV8nqbeVvcUdwHruAILuICzsc8Npr7br5K3iW3
yLVyEw+gTW7Fa/lx7MM3+DpaMID+2DPuHlOYUX/BZ7xQd/Mg34/z4xtwDh/l
7c48F/8RpvXuZf7/g0vqMlnN
                    "]]}, "0.05`"], Annotation[#, 0.05, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[{
                    Directive[
                    Opacity[0.5], 
                    CapForm["Butt"], 
                    Thickness[0.03], 
                    GrayLevel[0.3]], 
                    LineBox[CompressedData["
1:eJwVzLkyg2EUgOEvKyGElkqDUdOJdYY0GjO5AVU0XIB1lNYZtS2WWCuV9QLc
gj1hFNwDnhTPvOec/5u/bWJ6fCoSQiiwGAvhjTte6EiEMKsXPNFrf9Yr9uMh
XOuBzmm39vBobvduRk94d9tim2XKnLpXdIddVvjgzP1T9yiyyi/n7n+aJUnw
/xrtp49534+0xCE39mNd0E5vX/WWNbeIPUqcGANutSTMKR1ikCXvu9zKes+G
W8peR5p6RtzSNJgzNFLxNuM2Wt01R1P1n/Zm/fK9VYftLTrGt1vW/qMPFNwm
uTSvkzdv6j9y3DKZ
                    "]], 
                    LineBox[CompressedData["
1:eJwV0LkuhFEAhuEzZuY6RGKEWBKDBKNQSaZRKDSiMJZEQ8dFKBQkxJLY3cHg
Bkgk9mXseqXKOjynePN+33f+/P+ZqSpM9k0kQgjjmEmG0JsK4Q1TmMYB9nHs
rJKb0iHMyv3yHDfrGfldruGsPi8PyAvcqtfKH3Idt+mL8qC8wkd8zYd8ww2c
90w9D6GARrTbVp0Py+t8yrd8wiWu4B7PJPgMd7YlrrYV5QyP6KPxN6BT37CP
yVt8yVe4iPeId8K2vRTfFb+FB9xjx/7Ez3jEK16wa+/iHyTxjRRasOfsk79w
Ht+jL/Mv0si5z6YtJ/9xtx7i/4my3qGv8T9DIzxw
                    "]]}, "0.01`"], 
                    Annotation[#, 0.01, "Tooltip"]& ], {}, {}}}], {}}, {{}, {{{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]], 
                    
                    PointBox[{{4.905308194867242, 2.630836391598927}, {
                    0.20100883034436162`, 0.02382136569576569}, {
                    1.0719666600928879`, -1.250632626872198}, {
                    3.0527398070698992`, 
                    0.3872158300237583}, {-1.8438997564108928`, \
-1.502672689805559}, {-2.913246104009823, -1.3391199692975575`}, {
                    0.3149621009629985, 
                    1.9477027131642348`}, {-0.9556834229157016, \
-0.4484871006542206}, {3.2651237363484125`, 0.27047000138291255`}, {
                    2.9757868411226935`, 1.1755085189629118`}}]}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}, {{
                    Directive[
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    PointSize[0.08]]}, {}}}, {{}, {}}}}, {
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                   ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], DisplayFunction -> 
                   Identity, DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                   AxesLabel -> {None, None}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                   AxesLabel -> {None, None}, DisplayFunction :> Identity, 
                   Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "GridLinesInFront" -> True}, 
                   PlotRange -> {{-3, 3}, {-3, 3}}, PlotRangeClipping -> True,
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Image\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RealNVP\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["10", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[LearnedDistribution, 1106296168, 
              Dynamic[Typeset`embedState$$]]], StandardForm]], ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           LearnedDistribution, 
            7992040774788373416609563512715792582223802462986061539712, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
          "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
          Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LearnedDistribution[\[Ellipsis]]"& )],
  False,
  BoxID -> 7992040774788373416609563512715792582223802462986061539712,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7716922525940895`*^9, 3.7716923047818794`*^9, 
  3.7717776487082157`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"95b9a379-8f28-43ad-9c40-194135215e3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<image5.gif\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{"ld9test", ",", "10"}], "]"}], ",", "10"}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717777261818056`*^9, 3.771777738636097*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"b75d71af-dab2-4e9b-96c0-69d029f0b1b6"],

Cell[BoxData["\<\"image5.gif\"\>"], "Output",
 CellChangeTimes->{3.77177774889885*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"e73289e7-4e14-49a5-a555-eb5a6363a26e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<image5.gif\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[56]:=",ExpressionUUID->"f8786699-409c-4361-86b0-4110fcaed534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<image5.gif\>\"", ",", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"ld9test", ",", "10"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771692341768391*^9, 3.771692349823393*^9}, {
  3.7717776524656487`*^9, 3.7717776730324597`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"28d334bc-aa05-431c-bf00-c7b4183626eb"],

Cell[BoxData["\<\"image5.gif\"\>"], "Output",
 CellChangeTimes->{
  3.771692350716831*^9, {3.7717776571003647`*^9, 3.771777675285062*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"03e1275c-248e-480b-8b68-cd18bee029e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data space \[Rule] Latent space", "Subsection",
 CellChangeTimes->{{3.771691668769582*^9, 
  3.7716916855203013`*^9}},ExpressionUUID->"86006874-2cca-456a-8289-\
314d50b49d0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkeredGen", "[", 
   RowBox[{"inpdim_", ",", " ", "checkeredType_", ",", " ", "mreplicat_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"resLayer", ",", " ", "replayer", ",", " ", "checkerf"}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"replayer", " ", "=", " ", 
      RowBox[{"ReplicateLayer", "[", "mreplicat", "]"}]}], ";", "\n", "\t", 
     RowBox[{"checkerf", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "@", "inpdim"}], " ", ">", " ", "1"}], ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"resLayer", " ", "=", " ", 
          RowBox[{"ReshapeLayer", "[", "inpdim", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Normal", "@", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i_", ",", " ", "j_"}], "}"}], "/;", " ", 
                RowBox[{
                 RowBox[{"Switch", "[", 
                  RowBox[{
                  "checkeredType", ",", " ", "\"\<black\>\"", ",", " ", 
                   RowBox[{"OddQ", "[", 
                    RowBox[{"i", " ", "+", " ", "j"}], "]"}], ",", " ", 
                   "\"\<white\>\"", ",", " ", 
                   RowBox[{"EvenQ", "[", 
                    RowBox[{"i", " ", "+", " ", "j"}], "]"}]}], "]"}], " ", "==",
                  " ", "True"}]}], " ", "->", " ", "1"}], "}"}], ",", " ", 
             "inpdim"}], "]"}]}], "}"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"resLayer", " ", "=", " ", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", "inpdim", "}"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{"Normal", "@", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"{", "i_", "}"}], "/;", " ", 
                RowBox[{
                 RowBox[{"Switch", "[", 
                  RowBox[{
                  "checkeredType", ",", " ", "\"\<black\>\"", ",", " ", 
                   RowBox[{"OddQ", "[", "i", "]"}], ",", " ", "\"\<white\>\"",
                    ",", " ", 
                   RowBox[{"EvenQ", "[", "i", "]"}]}], "]"}], " ", "==", " ", 
                 "True"}]}], " ", "->", " ", "1"}], "}"}], ",", " ", 
             "inpdim"}], "]"}]}], "}"}]}]}], "\n", "\t\t", "]"}]}], ";", "\n",
      "\t", 
     RowBox[{"checkerf", " ", "=", " ", 
      RowBox[{"resLayer", "@", "checkerf"}]}], ";", "\n", "\t", 
     RowBox[{"Normal", "[", 
      RowBox[{"replayer", "[", "checkerf", "]"}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.771610578591999*^9, 3.771610583587669*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"fc7dec14-2162-4b19-b327-2a2f1588a790"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pp", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "\"\<Preprocessor\>\""}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "\"\<Processor\>\""}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mpr", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", " ", "\"\<Model\>\"", ",", " ", "\"\<Processor\>\""}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mppr", "=", 
   RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
    RowBox[{
    "1", ",", " ", "\"\<Model\>\"", ",", " ", "\"\<PostProcessor\>\""}], 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7716106552618513`*^9, 3.771610658156653*^9}, {
  3.771610923469872*^9, 3.7716109358538027`*^9}, {3.771614443353384*^9, 
  3.771614471989072*^9}, {3.771638700576623*^9, 3.771638710374459*^9}, {
  3.7716917698505726`*^9, 3.771691794589182*^9}, {3.77169183604879*^9, 
  3.7716918759831085`*^9}, {3.7716927791126328`*^9, 3.771692859823642*^9}, {
  3.771692920626481*^9, 3.7716929252717323`*^9}, {3.7716929729423056`*^9, 
  3.7716929809154177`*^9}, {3.771693379148393*^9, 3.7716934025157433`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d8be888d-48dd-4c5a-81ff-f6540502c566"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainednet", "=", 
  RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<ProbabilityNet\>\""}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.7716918860338917`*^9, 3.7716919112862396`*^9}, {
  3.7716927735665584`*^9, 3.7716927741378813`*^9}, {3.771693415837406*^9, 
  3.7716934180673504`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"d58680d2-e3f0-4979-a318-a5dc6e4e3c5f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["14", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-13., 7.960204194457795*^-16}, {-12., 
                    5.000000000000001}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQFaB7pFGYX/rT1jc8W47OOv55oHcrTPdPKxrrDX
DWKbl3dW84DEq2t/NnjstOeI3sAavUHzwHq7l5PtXh62T/Ir0TgwQfPA0fQ3
j76eP23voAPSoHlAo2KXqb3OJfv5XzyBSPOASs5BsZyD1+wbl0d/PqykeeA2
f/eUxuW37Z+5tDPx/NQ4sHRj93X7/Af2Z8BA44CVMQg8tl/Udvng+gUaB+au
Z7ppJPnM/uZOp8C4co0Dh08eOHJN6qV9bppU9Y0AjQMrG3O/yVm8sY/ribKX
09U4EHidI4+78L39Bm3mefo8GgfiUk+Knkv6aB/nIjKd5536gU9rW6e/kPps
n3OtV2vrJfUDma6WNlcffLG//jA/QnOX+oED2k+Yp2z5Zr8wbZdC5hL1Az8S
2t6pTPth/+RZu1d6gvqBtign5sBv/+zZvi0O3qGofmBneYBITDaTA/MUPpuY
F2oH7vMH6q+VZnW4c+A4c/AWtQMbvi66JN3D7jCp5vyqOa1qBww03f4t38Pp
oHxc1dAyRu1AwiqrTYFruR0mLDg1TcNC7YBNZcM7iTheh1sc+25nSaodODlV
fPPfc3wOkPhSO8AIpgUcAOALz3c=
                    "]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFaB7pFGYX/rT1jc8W47OOv55oHDqjud62ffMZG
N4htXt5ZzQN/p16pNSs7Y8MRvYE1eoPmAfs0x93KYWdskvxKNA5M0DzQOo31
n5vxGRsHHZAGzQOX1BTdFvCesZn/xROINA+oiE+ZrP/0tE3j8ujPh5U0D9Sk
xz37svO0zTOXdiaenxoHbok32H3oPm1zBgw0Dthp/JytGH3a5uoWr072BRoH
sneuXMU8O8d+eZF8/l6glQFbQPweexs277p3XhoHnpX85zcSX2A/Lf/stllK
Gge4N4Pk19hvW7dM4tBv9QNHJofclYrcZj/r8LXFKdfUD0wFqz9g77IuNqJp
k/qBe29Wnlv37Kj9ljxrM+kJ6gd2bwLpP2N/FuwetQNWxiDw2L5TTei2+QK1
A1xqgmYSYs/s8yxtt9WVqh0oX/zLIofvpX0tq1/cQh+1Aw2r31vry7yx39zl
cnm+qtoBZbsPdon27+1FTiqIVjGoHdik+0+B0eaj/ZwDj5QN7qoemM/YpcT5
+JO9X2HX/4O7VQ/cniW95MSUL/aat8VX6M9RPZDyc9NS+8Bv9jr/umQr61QP
2MgGqOdJ/LA3e6A/K9dJ9UDPH8ZYtZu/7V9OWKBxlEv1QPHHb6Vrg//bOwrc
PVF/XeXAj1rxnYwujA4OcU+r5q5QOfCf96qGyG4mh2dVO+3k6lQOXNQw4eLj
Z3EwSosUYYpQOZB3ziT2vT2rg5rC0d8eZioHrvy7prjDl83hwIo/Xz5JqBxg
2yUVkWHB7gBJPyoHGME0hwMANC0OLw==
                    "]], 
                    LineBox[CompressedData["
1:eJxFkn0s1HEYwI9sqVbTdMJEfnfuxR/kCK1zP1m20x3RuUYpKS83aWZJFilD
ee+uMzrV5CXvpSzVcu37kPeXtGWJKMOO03G5bM5x6m7Mffb57nk+/z1/fO0v
x5+JMiYQCE66p5+bOEIe0ch848UAU9XTF+Y1SwfKXo+jle21qKI6hJPcR4eZ
l428sU8fkJmkrv9VHR0uSiXEQXEn8nz2cUKWSYfdqhIhu+szspUWpVuH0YGV
KhhsSh1GbQqndxxnOnyLwaxzLMaQPSM/7dYGDeYmmAdDLCcRK79xpLqXBkSm
R9bDqGlkufag/YuQBokBhJG/Khniijp6Z+JpECjmE/HROdQaVFFz258GPZl8
bvC9eSRg0sMe02kwjhFSXTW/0amg0FkvExpkX+NXjbstoFghwy9qggpDkfzO
0+6LqGP1Tfr+Fio0mxJ+5W8sotCCSaFPHhWcQ/lL4gIlonFaktThVGCf5a9H
TivR4IAeCqz+06NEy35lOimg3mqb7gSdFFjbat+Tegwd12ahkwKarS5iycUs
ucN2S1v1GHrGs3Das9DQe95e0mnozXvI261t5+SalJPBqp7hUDaqRCcaSNdf
J5MhpbavKDVaiUqygu9/5ZHh0Fp3wKPqRbQR9LMrlkEGbbkjTyVZQMlmbS43
D5DB7qmqPNdbgUza1rvVqyS4q7A7HlE6jyqviHKUUySwFzbbJtXMoWB1WtL5
IRKYZNdze2NkyOJOZyETkYAyvLPz3I9pFKEtFkhukIC7i5Wwz7UHsTJqmlUu
JNCILhhrcvrwerOVOPYyBv6TjaKrjCm86nlWSakUA5ulP8U7KhX4ER8eQ56L
QWK/C5ukUeFcWbiXWzgG3wXGuLX5Cq4WNbxPOYaBNHC+KfqJBnfzda9CVhgc
zpCXmhZr8c3/jIHR5uL9Hx7xncg=
                    "]], 
                    
                    LineBox[{{-13., 3.000000000000001}, {-12., 
                    5.000000000000001}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQFaByBsDodPJ07F2D7XPGBx50oPVzKHw6JlEd4V
pzQPVKXOvSR3jcNBYObK0xtWah44PTvyok0kp4PFgr13n7VoHlCt5+xMecPp
ILdnSqNUjOaBbv61P6f2czkcfKO33Vtf88A/Hxfli07cDopGPXVV/zQO1Jmf
ZxVj43Gw61lzfdlJjQOc530XptzkcZD43X/owgSNAwuED3zds4fXwWfikZNP
8jUO3EgJPepvxuewO3DR8lpfjQNmiaLCUxfyOWTYaMbM1tQ4sIuD4X7PPz4H
r8DI57YsGgfSokU1zX35HbImGHmm3lU/YBYZ+nFyL7/DkZ9bGgW3qh8wYDpg
vng/v0Nk74MJTt3qBwLCQv+kPOZ30PDeWvYjXv3AtFBR+5s/+B2MwUD9ACM4
fAQcJHdX/P3MhuDXRyzhsbmrBucncm9L4N6G4B+4vPZn4kQEf/7G7uv2+Qj+
ryX+QITgXwEpN0Lwtc908rFKIPiQ+ELwATG9oyU=
                    "]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFaByBsDocrxmUffz3XhPN1g9jm5Z3VPMAM5XNE
b2CN3qB5gAXKT/Ir0TgwAaHeQQekAcGf/8UTiBD8xuXRnw8rIfjPXNqZeH5q
wM0/AwYacPnPIO3zEXyZ44VAhFDvAgYacPdkHxTLOSiGUD/F7uVku5fqcP6e
3SCA4D+x6Hts0Yfgc29LACJ1uPlnwe5Rg8uDvTNfDc09anD1rmD3qMHdkwN2
jxqae1TR3KOK5h5VNPeows03BgOEvOTuir+f2VQPMEL5dRFLeGzuqsDlE8EG
IPgHLq/9mThRBa5+3sbu6/b5CP6vJf5AhOBfASk3QvC1z3TysUogzIOkH4Q8
ADX4mEw=
                    "]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQFaByBsDodPJ07F2D7XPHBKWbv46xx2h0XLIrwr
Tmke6JyVpPtQk91BYObK0xtWah6wTlmmd3gZm4PFgr13n7VoHnjQ8K1stjCb
g9yeKY1SMZoHKj4EsWUVsDocfKO33Vtf8wDr5t139PayOCga9dRV/dM40HbC
4NfLn8wOdj1rri87qXHgt8GmuNlqzA4Sv/sPXZigcSD5jT2XszOTg8/EIyef
5Gsc0Jm9ymrDSUaH3YGLltf6ahw4P+/Vm6w4RocMG82Y2ZoaB7y+/1coZmR0
8AqMfG7LonFg/pJX105sYnDImmDkmXpX/cCZZav4cooYHI783NIouFX9wJW/
9idiHBgcInsfTHDqVj+wZeUq5tkyDA4a3lvLfsSrH8hf9eqAGjuDw9kzIKAG
DR8Ghy+e84EIwZc5XghECL6rCwgg+DkHxYAIwZ9i93Ky3UtVOH/PbhBA8J9Y
9D226EPwubclABGCD3GPygFGFPcg+LJg9yD4EPcg+BD3IPgQ9yjD+RD3IPgQ
9yD4PGD3IPjGYIDgS+6u+PuZDcGvj1jCY3NXCc5PBHsIwT9wee3PxIkI/ryN
3dft8xH8X0v8gQjBvwJSboTga5/p5GOVQPAhFIIPAO7v9j0=
                    "]], 
                    
                    LineBox[{{-13., 5.000000000000001}, {-12., 
                    5.000000000000001}}], 
                    
                    LineBox[{{-12., 5.000000000000001}, {-11., 
                    4.000000000000001}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQEaBxjBtIjDFeOyj7+eqx9ggPJ1g9jm5Z1VP8AE
5bNFb2CN3qAOV5/oV6JxYAKC76AD0oDgL/jiOf+LJ0J/0/Loz4eVEPLPXdqZ
eH6qwflnz4AAgg/WPl8N7h6Z44VApAY3z9UFBBDqcw6KARGCP8Xu5WS7l6pw
/p7dIKAK1//Eou+xRR9CnntbAhCporlHBc09KnD3yILdo4LmHhU096iguUcZ
zT3KaO5ByPOA3YPgg51zRgnOX9x2+eD6BUoHjs6xUKz6LexwY6dTYFy50gGJ
4kctL94KO+SmSVXfCFA68Lnpr5b3dWGH+J4oezldpQNRZzqFF20XdlivzTxP
n0fpgI9/u93bPmGHOBeR6TzvFA+c4v62WidW2CH7Wq/W1kuKBy4xXotOUBJ2
uPYwP0Jzl+KBVEN1v457Qg4L0nYpZC5RPNA862XTkolCDk+ftXulJygemDpb
Xmtuo6AD27fFwTsUFQ9I3uj3e9gm4MAyhc8m5oXCAZkFJQ8eOvE73DlwnDl4
i8KBx2x2cjMW8TpMqjm/ak6rwoGeJ9VhT3V4HJSOqxpaxigckLDU6zz5kMth
woJT0zQsFA60sIRucznI6XCLY9/tLEmFA5fdPtwNO83hAIkXBWj4cDgAAKUC
87U=
                    "]], 
                    
                    LineBox[{{-11., 4.000000000000001}, {-10., 
                    3.0000000000000004`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFqBxjBtIDDFeOyj7+eq8L5OkFs8/LOIvjs0RtY
ozcg+El+JRoHJiD49mANCP6CL57zv3gi+E3Loz8fVkLwn7u0M/H8VIHzz54B
AQQfrH0+gi97vFDmeCGC7+oCAgh+zkExIELwp9i9nGz3UhnO37MbBBD8JxZ9
jy36EHyebQnc2xIQfLBzzijB+de2eHWyL1A6MDVU1P7mD36HZUXy+XtLlA4E
hIX+SXnM72DD5l33zkvpgAHTAfPF+/kdpuWf3TZLSemAeWTox8m9/A5b1y2T
OPRb8UBqtKimuS+/w6zD1xanXFM8sIuD4X7PPz4Hl3WxEU2bFA+YJYoKT13I
57Alz9pMeoLigZspoUf9zfgcXrAU2OrnKx5YKHzg6549vA6HioM1Is0UD3Cc
912YcpPH4f7Z4sZWRsUDtebnWcXYeBwchC96bLmgcOCfj4vyRSduh0fO2XVP
Fysc6OJf+3NqP5fDiXgnJclqhQPK9ZydKW84HT6lhZn4hykcODk78qJNJKdD
XOTyLe2mCgeqUudekrvG4cBnbrr4kITCAYs7V3q4kjkcIOlHARo+HA4AGn/G
Lg==
                    "]], 
                    
                    LineBox[{{-10., 3.0000000000000004`}, {-9., 
                    2.0000000000000004`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEqBxjBNIfDVeOyj7+eK8P5OkFs8/LOKh9ggvLZ
ojewRm9AyCf6lWgcmIDg24M1IPjzv3gCEYLfuDz682ElBP+ZSzsTz08luPln
wEAJLv8ZpH0+gi9zvBCIEOpdXUAAIZ9zUAyIEPwpdi8n271UhPP37AYBBP+J
Rd9jiz4En2dbAve2BEW4+cZggJCX3F3x9zMbgl8XsYTH5q4CXH0iN8gABbj8
wctrfyZORPDnbey+bp+P4P9a4g9ECP4VkHIjBF/7TCcfqwTCfEh8IeQBi5xw
Mg==
                    "]], 
                    
                    LineBox[{{-9., 2.0000000000000004`}, {-8., 
                    1.0000000000000004`}}], 
                    
                    LineBox[{{-9., 2.0000000000000004`}, {-8., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-9., 2.0000000000000004`}, {-8., 
                    3.0000000000000004`}}], 
                    
                    LineBox[{{-8., 2.0000000000000004`}, {-7., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-7., 2.0000000000000004`}, {-6., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-6., 2.0000000000000004`}, {-5., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQEKBxjBNIfDivQ3j76el4fzI5bw2NydJX+ACcrn
2ZbAvS0BIX9ozouABkUEvw6sQQ7Ot3852e7lZASf2X/7s3ZXBP9sJx+rxCdZ
uPmzZoKALFz+BUi7HYJv2ffYou+xDFx9VwcIyMDlbzTpAhGCr1F7Sb32kjSc
X1EOAgj+iUKZ44UyCL5EzkGxnINSaO6RhMuDvWOH4FuA3SMBV98Jdo8EXP4m
2D0SaO4RR3MPgn8c7B4EXxzsHjG4+WlgIAaXNyr7+Os5L4L/d4OHZMUuUbh6
sO4cUbh84/Loz4eVEHzbZPH19fdE4PwvnvOBCMEHK09F8MNmCMtyGYjAzYek
H4Q8AJSllRg=
                    "]], 
                    
                    LineBox[{{-5., 3.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 2.}}], 
                    LineBox[{{-3., 2.}, {-1.9999999999999998`, 2.}}], 
                    
                    LineBox[{{-1.9999999999999998`, 2.}, {-0.9999999999999999,
                     2.}}], 
                    
                    LineBox[{{-0.9999999999999999, 2.}, {
                    1.2246467991473532`*^-16, 2.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.632426463519458`, 
                    1.8378676824027063`}, {-0.25, 0}, 
                    Offset[8], {1., 5.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.235871269246914`, 
                    0.786213352753084}, {-0.25, 0}, 
                    Offset[8], {0.1559393025382665, 0.19127469773826666`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.920182958499248`, 
                    0.12919975755013535`}, {-0.25, 0}, 
                    Offset[8], {0.14306450739988819`, 0.08380524814062784}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.355555555555554`, -0.9999999999999991}, \
{-0.25, 0}, 
                    Offset[8], {0.08888888888889035, 
                    1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.417705098312485`, 
                    4.164589803375033}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.812820711494876`, 
                    3.9773027452952476`}, {-0.25, 0}, 
                    Offset[8], {0.08165695756016156, 0.017459426695964453`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.355555555555554`, 
                    3.000000000000001}, {-0.25, 0}, 
                    Offset[8], {0.08888888888889035, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.266666666666666`, 
                    2.000000000000001}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.399999999999999`, 
                    5.000000000000001}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-11.4, 
                    4.4}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-10.355555555555554`, 5.}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888889035, -8.881784197001252*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-10.4, 
                    3.400000000000001}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000004`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.500723193132872, 
                    3.9982540573304046`}, {-0.25, 0}, 
                    Offset[8], {
                    0.37633139151203565`, -0.0034918853391929794`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.399999999999999, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-8.777777777777779, 
                    3.000000000000001}, {-0.25, 0}, 
                    Offset[8], {0.17777777777777715`, 
                    4.440892098500626*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    1.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-8.4, 
                    2.6000000000000005`}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.355555555555556, 
                    3.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {0.08888888888888946, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1., -4.440892098500626*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-2.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    2.}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999999, 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 2.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-13., 7.960204194457795*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_b\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_b", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., 5.000000000000001}], 
                    Offset[{12, 12}, {-12., 5.000000000000001}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-12., 5.000000000000001}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-11., 4.000000000000001}], 
                    Offset[{12, 12}, {-11., 4.000000000000001}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-11., 4.000000000000001}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-10., 3.0000000000000004`}], 
                    Offset[{12, 12}, {-10., 3.0000000000000004`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-10., 3.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-9., 2.0000000000000004`}], 
                    Offset[{12, 12}, {-9., 2.0000000000000004`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-9., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"coupling_4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[14]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-13., 3.000000000000001}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_w\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_w", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-13., 5.000000000000001}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 3.0000000000000004`}], 
                    Offset[{10, 10}, {-8., 3.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-8., 3.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Total_loss_jac\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"784", ",", "784", ",", "784", ",", "784"}], 
                    "}"}]}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Total_loss_jac", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Plus, "Inputs" -> {784, 784, 784, 784}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 1.0000000000000004`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Z_out\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Z_out", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-8., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-8., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1r0KwjAQAOCgDo6ujm7Ourg6qZCpxQdoMS0uFdqi+Ea+ZY2gECSNuZ/U
HFwhSXP3tYWSRX5JipEQopnqS5LdtnWd3dOZHhyr5lxW6nSoWlWqepOP9eRc
51LnRGehHp3gC8lV6OX6JFdNEcjHaGTxmabYfbYxIcg+myV2n2seGCSfyxC7
z2fdI9A+n96x+yD39QTKB+lJ/GeDfZh+//Bh9iCMIB/lWw3pA/ag7Pf2cfxv
Ee/fy8d5bgLW+ukLce4E1HT6Ap2JIbV7fSFtgB5W3xA2Wy9LPwm4dzCj0V86
1rAhsbnfXTsz16u0+56j1Cc8kzXeHtZ4AmoXS+8=
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-8., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"square\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "784"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["square", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}], "Input" -> 784]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-7., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-7., 2.0000000000000004`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-7., 2.0000000000000004`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"summation_z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "784"}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["summation_z", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer["Input" -> 784]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-6., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1jELgkAYxvGjGhpbG9uaa2ltqsBJ6QMondJioFL0jfqWdSe8ISTm6XN3
7x/eIIfjJ+ldq+QWphMhRDlXH2H82BdF/IwW6ss5L69ZLi+nvJKZLHbJVF1c
qlmrmalJ5estcAXAteq0jwawnFUfwAn3USCjNR810mndRw10OvNRhk7nPp2B
0YuP6uH06qM6nCx8VIuTlU/X9B0Pd9Q51CxAjLZtN1Ft1ANaF10APCtt9L1n
ps6f34SZs/WZYWTsfKYZOHu9cx6dRnuCB6fxngX+//6vwXuqI+PoPd+yEXYm
cfdRHyA4+ew=
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-6., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"minus_half\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["minus_half", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(-0.5) #& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-5., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1rEKwjAQgOGgDo6ujt18BFcnFTq1+AAtpsUlQiqKb+RbaiKcFCxt2lzu
8kOEOoSPNl5NymtWzYQQzdJ8ZMVjp3XxzFfm4qSaS63k+ahuspZ6W87Nl2uz
NmYtBHopxiaVfL1hYezXysvXdgWw2Sb7CGy20T4iF+TsI3ZBTj4mm63Xx+iC
On0RuKA/X0Q2288XmQtKI3V979dhf4/OZQMT+Lg9UMezRPl/4FvPGWP3DZx/
Np/j75LcN3JekPomzDISn8eMDepDmP1BfIjvJHQf8vsymA9pO/b5PBC67wPQ
I/YD
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-5., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"gaussian_coef\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "720.4478100324634`"}], "+", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["gaussian_coef", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[-720.4478100324634 + #& , {4, 3}], "Input" -> 
                    "Real"]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-4., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., 2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"plus\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Plus", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"Real\"", ",", "\"Real\""}], "}"}]}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["plus", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Plus, "Inputs" -> {"Real", "Real"}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.0000000000000004`}], 
                    Offset[{10, 10}, {-5., 3.0000000000000004`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-5., 3.0000000000000004`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"summation_jacobian\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "784"}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["summation_jacobian", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer["Input" -> 784]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 2.}], 
                    Offset[{10, 10}, {-3., 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1rEKwjAQgOGgDo6ujt18BFcnFTq1+AAtpsUlQiqKb+RbaiKcFCxt2lzu
8kOEOoSPNl5NymtWzYQQzdJ8ZMVjp3XxzFfm4qSaS63k+ahuspZ6W87Nl2uz
NmYtBHopxiaVfL1hYezXysvXdgWw2Sb7CGy20T4iF+TsI3ZBTj4mm63Xx+iC
On0RuKA/X0Q2288XmQtKI3V979dhf4/OZQMT+Lg9UMezRPl/4FvPGWP3DZx/
Np/j75LcN3JekPomzDISn8eMDepDmP1BfIjvJHQf8vsymA9pO/b5PBC67wPQ
I/YD
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-3., 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"density_coef\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "5224.89667195472`"}], "+", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["density_coef", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[-5224.89667195472 + #& , {4, 3}], "Input" -> 
                    "Real"]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1.9999999999999998`, 2.}], 
                    Offset[{10, 10}, {-1.9999999999999998`, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzN1TELgkAYxvGjGhpbG9uaa2ltquAmpQ+gdErLBRpF36hvWXfBKwVipz7e
vX94BR3kJ+rdIr1E2UgIUU7NIUru26JIHvHMnBx1ec61Oh30VeWq2KRjc3Fu
ZmlmYiZTz5cdgUmC7lNFPpAT7rMBjYP4KIBzUB/Vw+nFZ+to9OajWjq9+yhH
ZzCfzcEY1Ec1OFn4qBonKx9Fvv3uhtwrKYkYa1uv4o/RDui+6CR4P0dXPTNT
5887YWis/WYYORu/aQbOv/9cYKPzmhDI2XrN8uzsvKZ6cvZa8z0YIXsSd993
b4jF/F4=
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-1.9999999999999998`, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"minus_prob\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["minus_prob", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#]& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 2.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 2.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiDWAmIWB6sCH+kZSFYy6jzIw6j7KwKj7KAOj7qMMjDj3paWu+E8t7OFe
RjWzkM2kFjY2CqaqeSD3UTk6Rlz6ozIYdR9lYNR9lIFR91EGRt1HGRhx7gMA
C47FmA==
                    "], {{0, 25}, {40, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                    Interleaving -> True, Magnification -> Automatic], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {40, 25}, 
                    PlotRange -> {{0, 40}, {0, 25}}, ImageSize -> 20], 
                    TraditionalForm]], {-0.9999999999999999, 2.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"perpixel\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"0.0012755102040816326`", " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["perpixel", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[0.0012755102040816326` #& , {4, 3}], "Input" -> 
                    "Real"]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.2246467991473532`*^-16, 2.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Total_Loss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Total_Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"checker_b\"", TraditionalForm], 
                    Offset[{0, -7}, {-13., 7.960204194457795*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_1\"", TraditionalForm], 
                    Offset[{0, -15}, {-12., 5.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_2\"", TraditionalForm], 
                    Offset[{0, -15}, {-11., 4.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_3\"", TraditionalForm], 
                    Offset[{0, -15}, {-10., 3.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"coupling_4\"", TraditionalForm], 
                    Offset[{0, -15}, {-9., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"checker_w\"", TraditionalForm], 
                    Offset[{0, -7}, {-13., 3.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-13., 5.000000000000001}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Total_los..\"", "\"Total_loss_jac\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Total_loss_jac", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-8., 3.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Z_out\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 1.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"square\"", TraditionalForm], 
                    Offset[{0, -13}, {-8., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"summation..\"", "\"summation_z\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "summation_z", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-7., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"minus_half\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"gaussian_..\"", "\"gaussian_coef\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "gaussian_coef", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-5., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"plus\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"summation..\"", "\"summation_jacobian\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "summation_jacobian", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-5., 3.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"density_c..\"", "\"density_coef\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "density_coef", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-3., 2.}], {0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"minus_prob\"", TraditionalForm], 
                    Offset[{0, -13}, {-1.9999999999999998`, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"perpixel\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 2.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Total_Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {1.2246467991473532`*^-16, 2.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.393193716300061, 
                    1.0786387432600122`}, {-12.632426463519458`, 
                    1.8378676824027063`}], {0., -0.17}, Automatic, {
                    0.19611613513818404`, 0.9805806756909202}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.262855384506947, 
                    3.47535091332949}, {-12.235871269246914`, 
                    0.786213352753084}], {0., -0.17}, Automatic, {
                    0.6318819842417255, 0.7750646153648996}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.7799720581843137`, 
                    4.7457091520356025`}, {-11.920182958499248`, 
                    0.12919975755013535`}], {0., -0.17}, Automatic, {
                    0.8628562094610186, 0.5054494651244207}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-6.869504964868043*^-15, 
                    5.5}, {-11.355555555555554`, -0.9999999999999991}], {
                    0., -0.17}, Automatic, {1., 1.2490009027032806`*^-15}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-12.417705098312485`, 
                    4.164589803375033}], {0., -0.17}, Automatic, {
                    0.4472135954999579, 0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.1499858073915914`, 
                    5.378432173300869}, {-11.812820711494876`, 
                    3.9773027452952476`}], {0., -0.17}, Automatic, {
                    0.9778967587819761, 0.20908832861665297`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-11.355555555555554`, 
                    3.000000000000001}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-11.266666666666666`, 
                    2.000000000000001}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-12.399999999999999`, 
                    5.000000000000001}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-11.4, 
                    4.4}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{5.4956039718944346`*^-14, 
                    5.5}, {-10.355555555555554`, 5.}], {0., -0.17}, 
                    Automatic, {1., -9.992007221626245*^-15}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{3.889087296526012, 3.8890872965260104`}, {-10.4, 
                    3.400000000000001}], {0., -0.17}, Automatic, {
                    0.7071067811865474, -0.7071067811865477}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0.051030934720856874`, 
                    5.4997632534229615`}, {-9.500723193132872, 
                    3.9982540573304046`}], {0., -0.17}, Automatic, {
                    0.9999569551678111, -0.009278351767428522}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-9.399999999999999, 
                    2.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.3739009929736363`*^-14, 
                    5.5}, {-8.777777777777779, 3.000000000000001}], {
                    0., -0.17}, Automatic, {1., 2.4980018054066113`*^-15}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-8.4, 
                    1.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-8.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-8.4, 
                    2.6000000000000005`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-7.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-6.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-6.355555555555556, 
                    3.0000000000000004`}], {0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{3.889087296526011, 3.889087296526011}, {-4.4, 
                    2.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{2.4424906541753444`*^-15, 5.5}, {-3.4, 2.}], {
                    0., -0.17}, Automatic, {1., -4.440892098500626*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-2.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, 2.}], {0., -0.17}, Automatic, {
                    1., 0.}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 2.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    Part[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQFaB7pFGYX/rT1jA+FrHGAE0yIOEL4alC8A5atA
+RxQvhKUz+AAM48JRV4LzTwFNP0KUPUf7FHlYebJoPEl0PgiaHwBHPIw+zgO
QD3u8B8C9qPy38P57DEixmrLFtrA+AB7vCqY
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 24, 24, 8, 8, 20, 8, 20, 20, 20, 20, 20, 
                    20, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {789., 376.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{35.49999999999998, 38.49999999999999}, {
                    28., 18.}}, ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_1"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_2"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_3"], 
                    NeuralNetworks`NetPath["Nodes", "coupling_4"], 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Total_loss_jac"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"], 
                    NeuralNetworks`NetPath["Nodes", "square"], 
                    NeuralNetworks`NetPath["Nodes", "summation_z"], 
                    NeuralNetworks`NetPath["Nodes", "minus_half"], 
                    NeuralNetworks`NetPath["Nodes", "gaussian_coef"], 
                    NeuralNetworks`NetPath["Nodes", "plus"], 
                    NeuralNetworks`NetPath["Nodes", "summation_jacobian"], 
                    NeuralNetworks`NetPath["Nodes", "density_coef"], 
                    NeuralNetworks`NetPath["Nodes", "minus_prob"], 
                    NeuralNetworks`NetPath["Nodes", "perpixel"], 
                    NeuralNetworks`NetPath["Outputs", "Total_Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "Total_Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], "Z_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "coupling_1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", 
                    "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], 
                    "coupling_2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1568}]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {1568}, "$OutputSize" -> 1568, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], 
                    "coupling_3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], 
                    "coupling_4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "TLoss_jacobian" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Z_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net_W" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_B" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_WW" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "net_BB" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Loss" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "Y_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "thread_0" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "core_net" -> 
                    Association["Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}, "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> NeuralNetworks`Private`DummyArray[{
                    1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer1" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "wb_convert_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_in" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer2" -> 
                    Association["Type" -> "Part", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Times]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "core_net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_in", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Y_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], "Total_loss_j" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "checker_w"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_W", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "checker_b"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_B", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_WW", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Z_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Y_out"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net_BB", "Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "TLoss_jacobian"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Total_loss_j", "Outputs", "Output"]}], "square" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "summation_z" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "minus_half" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "gaussian_coef" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Plus, -720.4478100324634, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "Total_loss_jac" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "summation_jacobian" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "plus" -> Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "density_coef" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Plus, -5224.89667195472, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "minus_prob" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                    "perpixel" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Times, 0.0012755102040816326`, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"checker_b\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Total_Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"checker_w\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Z_out\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7716919173074474`*^9, {3.7716934111590605`*^9, 3.771693418955144*^9}, 
   3.7717119193863926`*^9, 3.771778850321396*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"2a4aa307-a00f-4f93-ae77-b5ea4e858ddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampler", "=", 
  RowBox[{"ldtrial4", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "\"\<Model\>\"", ",", "\"\<Sampler\>\""}], 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.771693592973387*^9, 3.77169361076205*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"1a742705-265e-4d47-a0d8-070b05b768a8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"X_out\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["16", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    LineBox[CompressedData["
1:eJw1lXk01Psbx2dp6t5OGIPGkCwzxtiHaKXPV3eEmy0k0SJp0fKz3NJiSSHS
YhrdhGrEJYVcdFO273Pt2cJYSotscQfxa2Sd6tYvv9c5z3n+eM55zuu8nz8e
TR9/l/0kAoFw9lt97z8wgdq71jdioc2iewvT31TChdeqroZmfTjqmEjnXOrn
wlGZpqqDRa1o4sM5g6WtXAgSHTLgW7xBhpvLzuSVcCFqmaImmTeIYqe2KYSk
c4HhTyEPNo4iCsF+6mgsF4ptF70NvvURpfsImdGHudD0VDZTljeN9q50Tqm0
40Ll0rSX63ZJEVq1exeHzYXnansspBICNqSx83rfCi7wIIYfm0DEAoL0niym
ccHNSpjrpEHCXug8q7tO4cLn1IyErckkzPJ8wGXGuDFgPcmbrhLJ2KXQce83
z41hpTS8mOJOxm5slJM7kWsMN6a3zhclkjHvuuc33sUYw/1WBUpGDRkTM0xm
1PcYg3tcVVdjHxlravyOERyaSPzNeJSMUS+ESbYLjcBxx+Anuvjb/iIx/Wug
EXRdEIa29pMxy72K6yt4RrDodM2SnS/JGDNybsdduhG0G3smFtWTMZ7a7ZO3
xIZgk+2pP1BExpKNpYLCMkPYPVJb2ZtKxjjF9Jz3fENgTNz1/jOajI2VjleY
+xrCyafDROcD//cxAFLNAa8jwyTMMDgVdxEaQE6eafauv0kY8VSwrTjQANZT
F7sbJJEw6zbHgwm8b/Ohd15d/iRsLkp3hSPdAAirK0t3W5MwJn/xQRWxPqyd
zzlVwSBhZZJBm5lSfXBbcyeeNEbEnuXVlg/F64OL+AZRHSdiNlXZDcM++mCm
mNhM5xMXfPTA/NzztNIxApb6qD/SVagHm7xs5kUlBKw+MHLHWKAeTJrUE0Zi
CZjDohyHZJ4e/ErxKCRuI2Cso7u8Pel6wOuYoClrEDDX+4nXDMW6UPWLLtrZ
/hV1l3j2KpTpgk3nhYKYA1/Rk/RMJxm+LtB85s4WTH1BY94hrxn7dIE9FHnv
ddQX9D+dRg60HDqKOX+Rog3y+pOuQg7cjFYUtV+Qoo0DqSrjgRyArJsTfBkp
arE2wu7wOGDbNnMzSjCPPpqLfPfSOWBAMm/MU5pHmY/iY9eKdSBwrUMcLXEO
if/el80s0wGFE1ainOVzqHyXU5MWXweUnsjfC78+i1ixLh/M9+nACWI5JZY6
i37kw4bD7EbXRIdpdKJiRs5dyAaiY3L2+8oppH6/6+J0IBv0G7xeua2dQvUR
fuvzeWwQ36b29z74hI7bPdSMpLNhQ82Tiiuqn5AWORMdE2uDFs/tjEfcJGrJ
db7uX6YNt+j9P2+alqBwu4fqcXxteIDtD/zVR4IMO8t7S/dpgz3e/Wdgw8cF
HxaQ9aJFptUT6Oc1yoLtQhZccfK6m6MzgQJCtgk+B7JAXbDb63fqOCIkRzWV
81igaEj6L6N5DD0VZPySQmfBlP9d8lDMKErZ/2RSIGbCM0+LBKnlCMqilb3L
KGPC5bE2oefEP+htUuGSdj4TMM5+XaJwGFnOp/ip+TKhb6nEeMJuaOFeWrAu
u6ZwvKAPvRdqHvcSakHUG+fbZY69aHBliIpMkBbMRrimPGjsQc/sXuK9PC2w
zkq7eEzyGsVrWPi+pGuBmBtPqZLvRhvS05dMijVhRIUh91CnCzW2yj0wKdeE
zQewTH3zdoTlRGwRXNMEKY3SYLG+FSWbTo0o7dcE5U3NcxXHGhfy0YDwwvzP
Wam5SN9Ws81LqAGjTZbLs53OoRn8tEA2SANWXrpVN2yega8y65QZ5GmALsuv
81B4Ef76j9W8HroGLAmsml2FVeADzNVH5jrUIRXvfHOqpQ4fnVpcFRaqDm/D
jtDJAc/xlooegS1THfq2Wbn6yYnwazHQ5Vm/Eu6xrlb/9p9OPDnpO2pQx7Ie
Zi3vxXWMBjd3blSDGJt2v77uPnz1dFhe4sAK+IlhIlOfMYBXTu4TvYlbATZJ
Xm2vgt/jDezEgiyTFWBd5/qU7jiMu12hO8y8UAVSJqMiTF+Me3IG0xojVOGs
ae6ojNwo/m76a6G2riqUHpNdVzczhg/MH4wgt6nA4+2W93KGxxd8GOC7W2RT
HSnBpe89lP7YyIDbouhe16uT+Plu+3+a+5WBtbzQhZ/0CeceP6GkclEZprS9
Us5kTOGER21J0UbKoEgOL6EVTOOfknyD5dvpEJ6rWuiBz+BUtn522Wk6mGmb
nbdvmsWdPdhr49TpsPpwLefDqzn8L6672snq5RAV2pFpOTK/4KMEX/wWN687
+RUnhwbYaFopQV7wdspZOwKkGWXnV44pgoNOEWdPDwGO59u9iBAqQvdmra2W
YUQ4s8i+xMNdEdw6boYzmCT4S6fAcwtNEcraVPIlLSRgqYY+9hApgCLKGm64
QIaat/ebI5IUwEPFSjuNtwjuBG1Ir/RVgMu+gweCl1LgfifXTNNcAXLVfs+1
fUGBktAjMSifBic1nEZpG38CqVqnRswaGiRo2ScIji8F/+IAwkytPHxmXk6r
DVkGsi4b2AIfeXjMklMpcJWFngFzwbYl8gCsjtmtUjl4F+TN2/SYCsto46mi
YipQpcUWHv5U8JZXmn2xRx4CIqxDEk2psJO/k7JuTB5+/HcqEOKrqyU+NPgX
J43qHQ==
                    "]], 
                    LineBox[CompressedData["
1:eJw1lnk01P0Xx2cGY/has2XJMnYGQ0LI94Opp4WKaLfT45A06hSlRqJHiyWm
hWTJ/KIokZKi75WlhKKSkHVsqXgeS2Vp+tWT53XOPffc/17nfc+552r5h7sH
UUgk0vmf9av/xhye5q6+mACv7L37d88umWJCt8/ozYakenxozRk3ST4Tvswr
jIQ6deBpzATaxEsmKJRGZJz5NoiHZm1Vf1DBBJYl2+fOjXE8JGUmNTiHCaud
nHO3dE7jqdSgPaQ4JrDdOnLLJebxAdL/LnMCmdAWULWU8oWEdnHuGQ47MuHQ
K7kCtUphNH/iorKlGhOuTk8cL3xHQ/0nqukiCkyYW/d3+NQxMXRHhmlClmCC
Vl9rTIO0OAoyHbAxIDNBupxbYpIkjsj3i89Oj5pBzQsbiuasOBI1oReMN5oB
0n8ckbMZQ++rVZ86FJpBHOgIFXMxFHMwc3TwlBmcz9h7d0MdhiZZPIl+bzPY
c+/CyUMDGGpu+oUpUJ5xD5h9wlDPN+5S12xT2NmaVc78iKEnsWuLXrNNIWim
/qTlKIaOhIz85csyBbql5DtbPobId9iFU4qmkJrILnN+jyHvLSOKiR9MoJQ8
vXTTawwleqx9zqg0gbgUrojXMwwl3eXWvUoyAZrtliNhjzAUsL+JxvEzAVxg
djim6D8fBqxYH7mzNAJDjcUMnms2A75P8YNsfTEU7Z3f2cZmQEQdpajVBUOd
7+z3B7EYkPz4DSPSBkPD6p8DFxQZ4Nm7Y9REG0M85oMHGR+MoV4/tWdSAkMy
UlmhqNIY+i4dk346I44Y5VnHPicZA89M7ejNbnH01fjheK6fMchOhGldrRVf
9DGC4DcHjkntE0ef3AuqN2YbQYRPY8gPd3E0N3ZhcyfbCOZfmLyQsP45cy9E
hbOMQEC/km+lIo4GN+fbSykZQfQuua/RC2II1BvT738whMjIi5W93WLonIB0
PrjSECaidL55PxZDq/9eS9dJNoQBn6obc1fF0PjUNdcPfobgbuTXWhothv7V
aTKAzCK//mFxMVTTIrDanG0AMsFhKmkjNOQ1MKHbxzYAfbnq2K01NHSJnJMe
zTKA97d2q5hn0VC4qXSqrpIBmNugfnokDY0Fr5Lu+qAPeqWh7cZuNCRcYiR7
tVIfKlV7FzYY0hBQ2y+FJuvD5MEMt5MkGlIJccpb468Pz6qutrW+FV3MRw8o
DR/GOGtFUYSGn757th6oHuhIPa0miuSWRY2MsPWgO2zZyisTVFRSJy+ZxNID
p4p73WXVVPSHsuVllpIeuHpei3mbSkVdSu0J2Jgu/HDka5ECqCik+nvPQKUu
bONEVptbUNG0QkHG82Rd8JD09wklUVGkwttHT/x14dvH7PmiZpFFHx0IPj2t
RtIUQXNTlJse2TqwL92CkjkmjFaEkyb/YeuAntQDD+MyYXTMoY7HY+nA2ZE4
+dvRwqjFz+3JXiUdyNJNd9RhCSOzDt769WPa4PtsuitRXBhl8ohVq6q0oeXl
Jf7YSyEkX5t7ZXWKNozbxW634wqhdOsNgQEB2lApUWbL2Sa0uC86kGvEuOxT
FDRXoz6yLZsO9XzTnJNrKMiqOHxYwKaDyh6rwP0iFHQiiXhezaL/vAeafdY1
ZNTuJ8XNUaLDnuRPcp0cMrIz3O10ZUwLvK2u/NhqR0a3BgvaSqq0gO/AyLs9
Q0LG3GnXwRQtmC7IFvTdJqEH1nihRaAWpB6ckR3fQ1rMRxNeXmzVZnUK8KDr
Ila7szXhxrZYrb1OArzfBqPLRGiCs8KmJxIF33E8rjtllKUJ6S+tqXrYd5yT
EB07pKQJhafsP5eHLuCssy2fJd9qwBFbr8NPGubxjYcd36dHawD1Yzpvte48
rta2oWWftgZsvDx50PH4HF7Mm2g491wdPJ3+HL33ZhbPSP/FMrCaWUEvjPmK
7+Cro1qHZfDn9V10ftMXfL4xkLtpUA2+ej+nrVX8gnO2hF60O6MGw+qxbR27
Z/D+KIs1CUw1MB+OTbicM43r4Q/zVrSrQldZk1Zc/xTukkcpdj6uCvwzPrmZ
GlO4+3UsuFRXFdYF24kO7JzE7da2vTjRrAKSrr5bPNL+WfRRBqFvF6S1Uj/j
K21dyt44KEMpJ34oaeQjfkRfJej84FJQPFd5IMdqDPfyEyp6eWYpWCyze+jJ
GcV7R0RPJ5svBYEFueJ29TBOfqS/0PJOCWKapfYXfh/E6zv9RbgxSnD/U0Dv
huV83OiPCt47AyW4lkISTfHvx5kk486sVkWIj2honlDsXfRRgJVnn+50SWvF
G4h8oS8OChDXJR82bNqIP1yVcE1xSB6c3m0yPKpUg4fK2R2aPysPW5Rj3tyC
e/h7BMd5y+Whts6Y07yBi0vVK1XKvpcD26QfihFl+QQpz9HUOV4OPGR8w9qp
VURp+6o2GzM5UJ8ZGziw8imhFyhRMtmxBCw9beIzRFuI3z6yYL5rR839tD5i
6Hb5aSouC8cKZeUZND6hPff04fYhGYgKjqUsjxsith99zkg5JwM6qYVJjaKj
RIwF0VtkKQMcg8QHM6ljhD3uku/1SBoSjPVjSnQ/EwHxAhmGtDQ4XokaEhAT
RIT1hYXaQClos3OaHmf+Q+z1lAkxqJQEv748Vn78JLH8XzAIktkbfrfpKyHY
GHPEJFYc0GE3L2zTLEGveC27vEsMhDyU1891zxE5bJNZZwcxuHm9ZkVM1AIR
EZnI9C2kgVX4Zs2rWgIiq3mq/C86DW7eIsTc3v4g6Gzf5Id5okAqoc02N5JA
4P/6/jdTUdCov/bpcSkZLPJcTJ1qqWCueNtnPpsChHnTzMUAKqzINXI/mSYE
YeVFX1Z6iUDPkkaLUk8qhPQb7xIJFYZq+xCU3U+D8uJ12rPnhKBDnXZ0vTUG
7nTqJoUaChhV8AbubpUE+5V+PTskKVCGocNduDQcnt7ZWh9KBlssLNM3SgZI
HlP6u3tIcG9vRVqptSx0bjMaUA4igatRfC6/UxbIvx8gILFa6qb8l8D/AT3J
Wbc=
                    "]], 
                    LineBox[CompressedData["
1:eJwtlHlczHkcxieVVtdW0kE0V1PN+WPXEeWrZmJDF7FDtbrQlqWDbuVoqyU5
oiw1HVqR3bU0rGrq+6l0GjukLdLUMipNBkkTGtq1PK/X83r+fb/efzyUkF3r
tk4jkUj+//Xjfsp8aClxz8uCDuco55LI3jECcitSnj35Kx9xKs/O/mqQABux
+pWF50W0MOyFoU43AVk55jVxVmJ0yLvAzbuZANNW5VSShwQx95TWmIsJ2KA9
RZMWNCDLv7US/IoJcLQr99i+uwX57KqONz5MQEab6mXOJSnq4kur3XYTsDBh
OJtCuYvK1y12HfUnYGQt67GrTScKWHm/MngVAfoLhN9LE7vQ3DR3w2MLCIhP
IeKtj91HSk3q6pS5BBBssYHjlh4EOH0n4wsC5rsqGJODD5Hg6G8vbQZ4kFZT
23rUXo7IjkpZeBUPrM/yRwfJfcjEEycRR3jwoX93MeleH7KYZI/GBvGAe8i3
q9elH92WfgwXEnKyTyQH96P2tLk6cUVcmBH61psu6EexoojN8TFcSAlIz5r3
rA+1Oohld9y5cDeJ4xyxqQ81zXsXesCaC9p1ryP0suUoep+zZbaKA5aMHnP1
wV7U7Jk8rKrngEGl3GmR60PUknG9pzyPA/1hUw9aGh+gWNZzZVUkB04uQ+MV
Bvc/87AhLnXwHDvqDmr4/azO2iI21GWmBhVGS9G3m0MDZNFs0BmfP4dPakVZ
MlrnRgEbJIKh+NXZjcjPWB752IIN7Spn1TZWHQKLo7SYYRaQLC9zNUuuodan
TpO6EhYs118dfvHABfRDuvxVYQ4LNDD+7CDtELo8nKi/NJgFQ+jovXp1Hv7E
wwQLhWJP1fl67J1Pp4YVMYGVc9H4sUszztRkdPBimCBqEC9+N9qO4zRjcp47
E3bs0x3VapRhy/xIQZgVE24rPAtThB14p1Sle3vEEcyky/RfyjtxakESNQI7
gk7iWvQwuhuv0DM7syzXEcqVac7LzXvwDUPxDtftjjBB7tKyburFdHl4nt8t
B9ge3CYQrVNgtnFGJVnkAIaclomS+idYuOdMhiLKAbz8+0xTeIO4zOz8l4V8
B2A+M85lFwxh08ELXp4WDlDUL0yu1BvGpS9K+a+f2sMfCyXtJjFK7Mc7+fx4
jT0EPF+yX/BwBDv8kuLNyLGH4hkykRdfhW18A7ZdCbKHfZmpNF7F889+GKCZ
UERU/TyKrQqVqdFFDLhdwQ/c6/UK/zqzyH1rDAMS5xvNKtcbw5mEknzBnQGk
7BUnFjWN4Qtjt0yWWjMguFreycp8jc0CBbPmqOygUPKkN8NzHN/csZ67pt4O
xCc2VKyyUmMJ9a1/+yk7KHMmXHYOqbEmdaHodIQdRFXvPvWuegJPmzo+M7iB
DgmxdRvAbBJLGwdsjfPpYPeiTDtZNYm3S3I9EyPpYHK82PrcTQ2WPT1bUIro
4LzpSv6S0++xrscHw0Mz6SBa1b13WfgHPENeLeIN0cAtwEx66esp3Fd21ze3
mgbU/JADP72fwvuL3RjXjtDAVhPqExFMgjGZkc2pIBpIUUnuygYS/K9HSoVt
RV31ruNaoOX2p0dhMRUu/7O8NEM4DdaX340yj6dCZ6i8+E3TNADNHLcFPlS4
73C1Nt9FG75xy6tVs6gg5tW+CcXaMBK/QhGsT4WohA++gWt0oKJwdmXsCAWm
a8e1HXykA+mVdA5bRoEkGW1L935dSKr6zvfwNQq0y/VmCtnT4fDlVtvjIgqo
OdQB3UfTIasujt/mT4F9bRx7zdwZYHtv6UbePAqkjjQ7HeAagI/KXNg4QIaX
uSqb02ZGYGWk6/HjVTJ0NJTccWk3hqQFBo570slgLomuqGKaQFyg/ZsT/mR4
u+mBn02PCejnbLret5gMljWZQytjTcHpZkmo0JoMO/tTQpzUpvDpn8kw1Xyj
aSzEDP4FTh3ghg==
                    "]], 
                    LineBox[CompressedData["
1:eJwtlXs41PkXx0kkm1mXlXHLXBhm3L5FKisfNOzTFhuJbXfDMxXThjVWUyqU
cksGxRC2YelCaoUhJd/TWKkZFbkWua2I5NIMQz/027Zez/N+zr+v8z5/HDLr
N++DKxQUFEL/zaf5mfXQVOjGT4LnjunKgfQwKQY1W91fC+5VoJtdfM3jwxjE
mZ9duS/ub7SHW3yH2obBeV5rblt1Czo3mLTuMI7BruWPrl1fd6Mdesxtu0ow
aLoddN+QNoByjDppbekYkPoNyUvCYRQx6fRYegSDTYl/Np+vGUPdKTGMih8x
UCuV4xLGFBLPZn5P2IJBM5W31Jv4HgXwzlFbLTDoXw7rD7oiRWj58b4jRhiI
H+gp7i2UoRC33Qsf1DFICeGxKk/MIlHTzomGDzZA/tisxLWbQ+6VCdd9umyA
F9UxXCCZQ4EePmbXb9tAS881ZTsXOdLgC9n1yTYwbsoMssmSI9/U0pDsABt4
6VeqcrFJjp40f8Iafm1ZPerfLUd84hssSGANSQtCjPtcjooVs9Q3R1hDwt50
9TqQI1liG8vVzRoCpnOisSI5SrhRhMUTrUGn/tmptig58g9RPqowYQWlIjvd
K0w5Oiae31iFW4H+cpPzFSU56miMDi24aAXs8OSltuo5xPXPNGoMtoKLelEe
6/3nvvhYwmWPEcLNMRnyKzKd8RJYgq7P3tMVUTJUZplCGOVYQpmPdRimKkMP
2Usm55mW8MsPBztoWVJ01e+knYuuJdCYy9VZJCnyXFi1VWXcAtbYLmhFl75H
9R4FTj11FkAw9B3r3fAezfq4bYE0C6B//MZBWDuDZAS5pZBlAYG9G5VV0MwX
HwYUlrSHUJ2mkET8XGOvgAF/BG1bne00+e9+KFUpggFa4SsL9R3eoQ6Jtmsz
kwGLjbp2t7AJ1PvU06ZSlwGB7GiRF+UtutA27XNnnA6b/TbuVP56HM2/WKjo
uU+HpAuo9dHcG6Q2dGi7UQYddunne+W/GEWSt87E6AN04E1+/yS2ZgT9p9Ns
Dg7PFhJUG4ZQyvYmhd0CcyBv+yrGMGMQnWzU9HjLMYfJ8cSzub8MoD+cy25n
Mc3BKbXfTnlHH5q4y7f21jWHw2XxsSVdPSjUrrWBNG4GLNsVY+SAF2jdzZ85
ivfNwJSyhxM22ImWTew3ydLMoPxYDDHNvx0R8gN1FlhmsGpTTN+ZztYv/dBA
3/lY5FKqCPFsRZKfBDQQVwaHHLh6F50NXTqmFkGDWzr+MjahHN06HtPew6TB
iWxPJcquLKT2s1vfU10aXArruyOl8PE8gjf/n3FTGLjV8ONoYjkemFW8qFdv
CuKLLfXcknu435SjZkSGKdib2qQLuQ34GUOD9rcHTCHgULXTEP0x/tnHBGDn
dHPOmU48N77M3VtgAiHnqjK6Y1/gQuHVA284JtD6u36eLLYXN9h3j5bGNIEJ
VcrYxJl+/MmJ8fPuuibwqvj1/QG3QVysaZdNGKcCySCFXisZwr8xznEbraOC
U/Dpmtjdw/iNorU5LWlUsE9+FGz36jWeKviLJ2ZRQe10oEMXexT/fC8KZEY1
kim5E7iz142xQwIKSE5LlMjrJ3GP4cJp9wgKME4EcMueTuGy+PLB/W4U6KoA
R1btNL7BvqsOiBQoK8hJqOLN4KtndeL2TZBBO7GG6BH8Hj8uClnvAGQgBBlJ
LbZJ8bjLPWLfTDLkbRXreFFkuEkyy7OSTYY69fpTdStncfSVrntBEwkmmVOR
5QHzeMzhzF9t80ggMCfC2p0LuDjywcsrYSSQTPJIw/YfcIrZZb7chQTh2bv5
RNL/8IQ4xmVzHRKkUILIVasW8Qn1J0OcFmMgpT98UP1uER9hF5O8uMaADUQe
JT1fwud1emYnDYyhWovjOlO1jFN1OKwdD9ZBjdk9Cp3/Ec+99AkjCNoT3pu+
UREsvCszrF2MQHG7i3FWiSJ8l1j9cv6dIZC+PRL8jLYCxjYXRc4LDAEs1gjR
zRWgERwVYOVnCAP6KqojjkoAmlvysrUNIU51f6CoQwnmNg+ZbeowgOsySn37
0ZVQ0RupvCbfADz73chGVGWQL07brmUbAPeRJDmvSxlEl3wr92wxAFJ5lfyH
LBXQXkUmXqjSBzjOir/2ShXeGBT6aTnog40JLm2ZVwOX7k5O52M9CC8TuzaP
rAE9R1FQ3349iNWOj7h0jQDc7/bbM1T14C/Loy75Rhrg86F2oLaaCKpI6W57
iwZU+zw8mPobER7BCIUbqgm5vkmNxRuIMH2bfPKUVBM+/y8inNKqapSytOD/
rVB4iQ==
                    "]], 
                    LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAAAAAAAAAMcDHoUWWiMDSPMsi745s
8zDATwKhn0/8sr+XTNOnc+QwwA+FZuBfy8S/ZH2sShXTMMDJBeEY1PPQvzO1
endRvzDAWIrxYYBp2L8C9D0uKKkwwBposmVaY+C/1Dn2bpmQMMCua52quAXl
v6aGozmldTDA6s+5/9ob6r962kWOS1gwwMuUB2XBpe+/TzXdbIw4MMAqXUPt
tdHyvwHdUYdqKzDAjYPri2Lw879zli7OJh0wwJUMDjZV7fS/p2FzQcENMMA/
+Krrjcj1vzF9QMJz+i/AikbCrAyC9r+XWmpaIdcvwHr3U3nRGfe/fltkS4ux
L8ANC2BR3I/3v+R/LpWxiS/AQoHmNC3k97/Mx8g3lF8vwBpa5yPEFvi/zczM
zMzMLsBiiuEeoSf4v3WzUaOmny7A8Cy4JA8y+L8hbTvXOXMuwAI7yzVZUfi/
zvmJaIZHLsCWtBpSf4X4v3pZPVeMHC7ArZmmeYHO+L8sjFWjS/ItwEbqbqxf
LPm/3ZHSTMTILcBkpnPqGZ/5v5FqtFP2ny3AA860M7Am+r9HFvu34XctwCVh
Mogiw/q/HAuR6768LMDKbkt86jv+v0WkoqSakizAwQ3TU6UC/79EWDTjEGgs
wFmY3Xz3wv+/FCdGpyE9LMBJh7V7cD4AwLQQ2PDMESzANLi94TCYAMApFeq/
EuYrwPBeh/C87gDAcDR8FPO5K8B8exKoFEIBwIpuju5tjSvA1w1fCDiSAcB2
wyBOg2ArwAIWbREn3wHAzczMzMzMKsD+EynxKssCwIikQpukoCrAEsftjxkZ
A8BsMf+2MXcqwIpu21+kcgPAeXMCIHRQKsBkCvJgy9cDwKtqTNZrLCrAoJox
k45IBMAGF93ZGAsqwD4fmvbtxATAini0KnvsKcA+mCuL6UwFwDaP0siS0CnA
oQXmUIHgBcAJWze0X7cpwGdnyUe1fwbABNzi7OGgKcCOvdVvhSoHwBZgT6ad
XSnAmdNfdpZcCcDQrujxlR8pwDNo8fTlYgvAMciuz8rmKMBce4rrcz0NwDSs
oT88syjAEQ0rWkDsDsDfWsFB6oQowKyOaaClNxDALtQN1tRbKMAWVsFPSuMQ
wCQYh/z7NyjAxtwcOw55EcC/Ji21XxkowL8ifGLx+BHAAAAAAAAAKMD/J9/F
82ISwO6SwFw=
                    "]], 
                    LineBox[CompressedData["
1:eJwtlHs01HkAxceIECG0ktcyM8a8/Jph06ZNU6Q629bYikS2skVFEbWkRJse
Z3pQs3oohUjbQ8oeeXxvSDvSg2RLNSakNWWMNV7lsXXqnnPPPfef+8fnj/vt
mihJGJ1Goy345M/5RdNw77yPbD8avNqX2AiaeykIXx+rHanKIMPjkhicDgpq
j8ClTcsKiK/ttLbuJgrF662dqrpukrsyfgS3hsJ+xduQ1N/KSdy22JKXRRT+
2i3tnrq+iqy6ZVCvm/Vp703AUlXs3yQu8O31rIMUShyaGgWdD0hVqHlgUQyF
nD/o5duU9WTu/X3ymUEUegxjHKWjjWThWjtJgy+FMP3+Maeof8jc8GgfJyGF
mhT/xlmy54R69Xs2147CpORDma9iXhATsmKTejyFBTpng+gGr0iZ3ePZT9vd
EKFzaOKfEgURn9y807vEDduTJcXN/i3kiib1sL3UDZ7ieNd7ekoy6uwQFxXq
hoIUz+g2LyV5UPdZAoQ0eH8n/klJ6iMzEw+eE6BvcZ2lIlRJjqyM8JZHCxCb
VHCt8ISS6B8VWR3wFUD56wv98i4lcTcd+ii3EUBIX21DC39N7J/d1h7q5iNK
4qGKH99KoNox9rCaD9mKkDi+vJVMnS+yTT/FR455c8U3V9sI1dW58NkWPs4m
5VfNKG4nlxzcxx7e4+GMo06jX0Un4ZgtXxZwmofrmQOMdIt3RFGcaF8ZycMW
58ndCevek2qLyyuNxTy8LFwl1C3sIs0sheF0Kx40fvfV7CE1cdJM5on/5SJA
S6XF2WvImahld/ilXBz2O9rpUqEhfrkn5UNSLqzPpyTmB/UQ5rG2eRdDuRga
MVo82N/zlQ8H8l21q1gdvURcnFew5xwHU3+p5iTv0RL/Hena3GgO/Oe8nbXf
uY/QLI4WzPDlINJBJPOs6yM++zLrvGw+9Y95ovSEfsJqKF15Te0KyVOfyRnT
Bkhuv+rnY1WusLli/MN89QAp6+WUtma4oiZ5uCCrcJBslSdIsyNdsWK5VXBO
whCZp7G4LStjo6EkN/AOfYQYe19ujU9j43E2c8LqpyMktftG2uB6NijF3bzh
86Pk5iin1nQWG5oN+9xObRgj0s0WB2DOhv4FUf1pSxpsvDY9MupwQfV09yTV
VhoCIjwy1SUuuNFXzZhRR4PPYOR/G6UuePTiTUWqsw7a31g/Sg51ga1Ktrhp
uw6+8GFhnUFXzK2ddBiZJWRcyGJhYMTjuGkDHbEtysuu21k4smBUmyTUhfHM
Uf01S1hgv/ORGZ7VxUOnJ5cW8VhAq/GOS5bjUCFbfbzDiIVgyv9UqGwcnsuy
a4TvmfjwxHpE4KwHR+dz3tRjJjIeBGdZlurh+EwJvaWYCU87p73mIfpwV5ZN
mJ3FRHNlWD7TeDwueEdobYOZiBBl5zSLDVEqvhUucmDCzEs1JfHHCdjVkbkx
uYOBupffG5jwTKDiMj4YFjFwxupE1EHFRNAs/Kxq9zIgjhnOixeaofK0YXll
EAN3XIoaL7aYgVezoad3OgOL8tXl8jhzzEkLuxE8hYEW7dW1bQPm+PI/DOw2
0d7tXTMJ/wN2oFxo
                    "]], 
                    
                    LineBox[{{-17., 
                    1.0409497792752501`*^-15}, {-16., -3.5096751382693574`}}], 
                    LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAAAAAAAAMcDHoUWWiMDSPC3t0qEx
8zDAMa7YtdERwL8fdmLzh+MwwHp6+bWo3NG/1Zqu9ALRMMASaieRP3vdv1Fb
t6WiuzDA8BI7tlZy5b+St3wGZ6MwwPPW8iN5DO2/mK/+FlCIMMCHgN2IA8by
v2NDPdddajDApMjJP4B497/0cjhHkEkwwM1Dvraynfy/ST7wZuclMMACed12
zRoBwHp1RECvHDDAp2w+bIW6AcAwU8hr3xEwwEEehghzRwLAa9d76XcFMMDT
jbRLlsECwFEEvnLx7i/AWbvJNe8oA8DUpuO2w88vwNamxcZ9fQPAYJZon2at
L8BIUKj+Qb8DwPTSTCzahy/AsLdx3TvuA8CPXJBdHl8vwBDdIWNrCgTAzczM
zMzMLsCY1c+P0BMEwCSYSokHoC7Aor3DUPcaBMDe/x5vvXQuwCTxipNrMATA
+ANKfu5KLsAccCVYLVQEwG+ky7aaIi7AijqTnjyGBMBL4aMYwvstwG5Q1GaZ
xgTAhbrSo2TWLcDKseiwQxUFwCAwWFiCsi3Aml7QfDtyBcAcQjQ2G5AtwOJW
i8qA3QXAePBmPS9vLcCgmhmaE1cGwCpHTChZNi3Al71n7ms6B8C6T26BhQEt
wPIbxYm6DQjAKgrNSLTQLMCstTFs/9AIwHd2aH7loyzAxoqtlTqECcCilEAi
GXsswESbOAZsJwrArGRVNE9WLMAh59K9k7oKwJXmprSHNSzAX258vLE9C8Bc
GjWjwhgswP4wNQLGsAvAAAAAAAAALMD+Lv2O0BMMwJd6JCE=
                    "]], 
                    
                    LineBox[{{-17., -3.5096751436306013`}, {-16., \
-3.5096751382693574`}}], 
                    
                    LineBox[{{-16., -3.5096751382693574`}, {-15., \
-3.509675141793422}}], 
                    LineBox[CompressedData["
1:eJxNlmlQU1cYhllEpCQhCUiAAEkg7CEBSikgLigi2LqCYCsd1MqMVAdBLEsE
QVxQQSJblIiCjCuNFhW1VkteqFVaqAsu2CKOioOCRXCnaE2Tc/+cb86dO8/c
mW+e835nzlzJ8jULU8xMTEzKDY/xzVQA9CfqR3a9F+JU6t/hKf0KWL5c1TQ9
T4gGn92/Cq4o8MYt4UbdAydcmxqiETQocCUyOe6otxNCtOdaVmQrkDe3OCQp
3hE9acJAfbQCgtirygvfOuBi8bIX/VwF1IHB4ssJAvS83a4X3pZj1PK8Z56/
PUIuVi3ZXynHtM6kst4ndrjavdEi7Us5Vm8QJQ5usUVUq3bOvTA59KcFrj4h
tsiyr/cWSeWIjL787PdhPpZ3L1GHWMsR8JkfOk/xMWHcA7XbsD86CqP3Bhbw
sbJW5tt3zR92Pg75o/F8bK6PnJ9z3B/W8voUSTAfX3FFVo+K/fGj6n681pmP
wWeX4sXJ/jCde3N2DYePPzuNJYN+Z+msp1aGfmY/h72qkyEs73hqwXg+ho7e
C1i9ToapzebXoz7wsBjBpz6fLQMnRKUMfcZDY0zbL4skMhwznZ/69U0e+iO3
xF3+1w8cQXRtYzMPVtr8zO03/RCRlWHro+LBrvgHl7oTfggRdV29vZwHy5uc
hZYlfhjjrbzapOBBlL54ePJuXzxLbH074zkH/8peHB9d54sZ7QkbEpQcDOXE
P1q6wBfKyoJ8lh0Ho3FFpVkyX1Sfn/Q65QIbwhalNmy8L1ThJY+Wp7Ox6Nzk
6Y33fZBqnxZj/ikbjVM75rSf8YF0zmOPWeZs2CW6X6ss8UHL/SGl/CELe/6b
eZm11AeTOnbMOt/JAomn0xsrco+XPPmNhVexda9j67yxcd8Rws5XMgzLG1PF
DYSjSHljv+k+wqta7Ve32nujNnIP4aopA5VTBrwQ8aCS8MULxvJCXq+K8OPQ
sr7QMi8khZUStj671LC80PtqG2FmXp74OFxA+DXx8cQPhfmUjyfuHFhPeCbx
8UR2nJLwauLjifLqXMrHA9KVuZSPB4I6cikfD/zUoqR8DDw9j/KRouPIJspH
iq9GthB2IT5S7OVuo3ykKJuwg/KRIuBuCeXjjq0FOykfd+z8WEb5uCN60S7C
LOLjjqZN5YSZebkhqLGKmpcbLq2vpvJxQzVLTfm44XCSmvJxw8gqNeUjQXa4
mvKRYHJ7NeUjwbSJ1ZSPBBslVVQ+YnwcUlH5iKGvLKN8xOhQ7KR8xEhuLaF8
xGiJYfLyzu/yyu8Sof83Js+cbGOJ0B1aTLjd2M5ZhIoDTP4C0sAVApPNhDU1
xnLBnq0bCD+tNG7QBaxBZp5hxu30OcMiizk/O7YZyxlFvsz87xb5G5YzCi1z
KR8hxrFzKB8hPpmUTfkIUVWeRdiB+DihgZtF+Tii0/V7wgPExxEvutcRJvH2
OaCthOHtxMcBoeEM/0V8HJDYl0n5COBanEn5CFDmwTCJ21mAQy1rqXzssWLh
WspnIoJ60imfiUg+lk7lY4f0D+mUjx1SbmVQPnaYEkj72GKM/z3lY4ua3GzK
xxZOKUrKh4+i2/mUDw9BMcx5GCQ+PGyfpqJ8uHD5uYKaFxcDzdXUvLh4HsDc
P/PHDs4bO2gDmVxDeOS5sTg4pN1LmLQL5SBBW0tYThqwMd2fuc8+JWWNmkPM
9xtexg1+gtspDK8lB9oKVhKGbXnGskJwN9O/yWKJYU1A3La9lI8lvgtmeJj4
jEdOj4byGY/1+RrKxwJZTgwHEx9zaNqY/VX8ty5dssEM9Qc6z0T8Ybh/Mw8P
mHWYotc2NTiim4VLVVf2dzuaYp5jmmX/P4b7ftldVd13Jnh7skcebs1G1+mT
uWeUel1X78nG0CA21rwv/4Iv/ah7XDuifLiMDQvNgupFNz7oZMO764I1bKhV
IwkFRe91R28dcQjqYUN0L22X6vMx3ddzxP1/STmw+qnpSVrzqG7aZ5pJdYUc
3FOb3U+Lfadr1z9M0t7hYE/OikzV2ze6Ye27WFMvG4R/c+fI9Quvdeciesz2
Z9jgUtTi9UE1r3SuP5YWF521QahicKi57KXOcxzr7ok3NqhwLtUn1r7QPd0n
U5YLuLjDmtIkbBvRsfzC09YEcmFK/n9GdIXH5DEZMVz8D556qJE=
                    "]], 
                    LineBox[CompressedData["
1:eJw1lXs01HkfxynlFsVgMMPM/H6/YQYzKC1KCKWrijbK7fAoaUurKJW2kdLN
ZULbkoyli7ZQKSTyfh6tS8glhCg8tZaKXKbcqlWP533O93zP54/v9/s6r8/n
nC/Hf6/r9lkyMjLHpte3/X8xw9ec9A/iSQaCcta0UH+ZQie3+8iqO0wcs/Ew
1yo3RfCjyY6kBD3Y/cFTa5KYYqpjgHZAoo+sTw/DfPabokzpIfvdcxZKKHXf
+/am6CFvR05eZiPC3Li2Vd4UMmsGvau3c9CrJ4/KSiGKPule3e5I4HPfVcuT
UUKoCxa5P/mBxKML8haqVkLI91uGjttRUB4s4ZfxhaBNGDVvDKJwfJleXzVd
iNrVWYzqWApEJHcfb5YQ5m25zjuzKfQ9aHnc+rcA9lnLt/IqKbT3mnV3VAsw
ke+9UfklhVEliwqLmwL4zZETqA1S+IHsOtAVLcC+RItB60kK6WaLP7zyEcDM
b/DXk7O4qK35FhPs2LyWGpXjYkR0QXa9xAQmVVm+96drZuaajc9CTDC39pba
+GwuHBa9K/R1MsGIr/uS0unzO8wPLx3WMsFgZFabvCwX5y6PPj/bZ4wvC9MH
G79QuH3QM45fbAz2ftsI9hSFxtIcn6dxxnB1iDr2YYyCNGxg1SE/Y/yaHjzu
IKVmeIwwmpOZO6eXQsFq+3MbJEZQrG5v/qmHArdceqAzxAjzi2WvRHRS0HV4
H3/AyQiyx7V1rVopiEsMWnTpRuhmsqzSGinEWGWsftLHR26M5pecGgqqeb79
J4r52N0w+dOucgo0gW/hmng+6G8bIutLKaRdS89j+PNxu+2iXXchhe84NTzE
bN4TsC+dwteO0qRNEh6cnCIyqn+jsJY2mvomhAeWdPaC52IKOXuD3px24oEZ
KJeddJqC4TAreCmdB+uUo4fkRBQepNAtP/cZIjxub5jBQQr+QRvtnxYbotWx
PX1iz3S/fZ6cyYk3xLaikklRAIXx8JO0NH9DfB3SiX6w7f9+DCCq7P1SZUXh
7vUKbVeJAZyTok+4CClo2tKye0MMMDq8/m0COT0P8blnYp0MEP162aKL2hRc
LqfmONINMLFzi5enyrTPHe0MpX4uNosu7nglSyG8f2dDVzEXiUayruRHEs5G
q+oq4rnID0zUN+wnkcgN1yz15+KRpUtNfyc5w0MBr1wzxvJIGFqKGtwk03P8
mSdVv06i74g0fiCEgr5upvB9Mgm1SyYKl50oJC3+t8upGBJpSdwlvnQKPRui
fuz+hUTCzi7u4ul3lIP6HCZ/JvFOy7tav4SESuSIVrM/iVuSS0ZM8fS9F39v
CN5MonFWqqPgXyQk2SP7KleQM/0isOOSmziSRkI45hrhLiFAiMvydeVIKIjs
l34OIfDQYcpm1ygBj4ALio+cCCzM+0z8/JoA8+qm3mQ6gRPdFTtNmghscQhr
EvdzkF+7TVVSRkDBRqYho4SDxwfzaZV3CQgThjvqxBzkvmoPv/47gSdO68bo
ARyEz6lctkxMzPhhA186I+rcCGhVHtPzkbBR75ZYFLicwLXSkVL6PjZy7DJf
XhESOJzHuzfuxIbHf1T6ohkEEjL1J2Zrs1HzorFNRYHAS9ZNck8LC6oxw7et
RzkghlI+EkdZYD7bHazUxcFA0bw9fIoF6e3l6qJqDlYclTklqtZHKjckNSWf
g5Tkb9FD7FeZjiO7OTi+vU5Ub6uHss6Qw9wtHKQ3GVwUvWai879pzr52HAz9
Jem4cZaJF2qnHfk8DkJTl2xaZ85EcaAgOGoBB8bSj6OBrQxEvomr2DPGhtZQ
U8XUMQaMzt3a8PcrNizETVVKPAbyPaLnjpSzEd0onThfrwsDF+a72Gw2Ln3n
0cE1VD84tJGNjN2b5IZtdXB30Ey3y4INxpDw6tw32thim/vs4bQHOcOFEc/P
aYO/NbZGZ4yFbaqeZwIWaaMldCDzWgkL5PUbNdkv6CisixToH2fBa0hvZd4J
OmqCnINEK1iY875AGiqkQ93Rzr1WngX9lIMvhlu1EOMZ9EmuSn/GjybumVln
G7bogT7puXDMVhM9ZqvTl4r18MFoqzfrjQY0Hkw5+63WA8U/rzs/RgNrqtyu
/Carhzzp7F0VizQg8nO5313IxGXxnbWrOmgoinx32GYvEz3jyaXnT9IwxhdK
sygmosxL/sw0pcFqG40ybGNAZMnw+aVdHUfUU+ULYhgzPGqQ8eX36gToglOo
EC9vr4blFxJ3n1XVhQZrXr1X3wIonug9lZyvg4NPM72SLyzAj8Zca2cvHaws
r7MocVoA8tw6UeJXbcirsO+I38/HgUxv71/SteGtXxUf5j4fLqEe9fJ22ohD
yhx+hSr++GzTZjrtMXUkSf2mjSpi7JTDP4bSEVVQkD9ZoIIP1mW3POfR0Swv
bc9onocrN6fcW920MGE7cmPx7Hk4XOcWuCFLE0Ned8l79soIuVrZDkVNFPkt
XKUfp4QzAs+7JuEa2LJ+Pz30rSIeByoPJIzQUM4KO3/fQxHszW2xI0domNtm
md/TrIC04cfnXdRoYBx6eHLSXwF2jk/HM/PUIfv9f1eAzErpnyP+6vgHpzLu
Ow==
                    "]], 
                    LineBox[CompressedData["
1:eJw1lQlQk+cWhiEpZS2yh0CW//9DWBNQrxuyWApRablWwaLkKiIGqojIIlhR
lBZuQSxIXBAQCJaKCq2yqXgVeKlQVIyhFKE6QGWRrUIoojKA5sZb7jvzzZnv
m3PmPHPeb+aQofv9w2gaGhr71Od9/FuLobpaPJk9Z43I5LiR0CEX+NPPGomP
sHA8de6QYYsLGjbaPHvGZCPQILeG9r0LROc27OB3sNHO8M1dc9AFg52mWXbl
HKhKDfnNa11wftGByOEiLrpvjYhPG7ngRvHKpKotBPZs7HIt63CG0w0aa+ME
gUsRTxt1TztDuP78Kb/TJM7oTE1VfuaM24GafZfWUqjZP1W9ztUZ23qz1+VG
UaBHj4f+xHNG6zUPxWMphW90B1T9es7Qa9X+KqSCgpP7bxkjE0KYL1Z6rXpA
QUunnl6vEELZ+1Kw/Q8KBvtKInb9JMS5LnNXhZLCx3tTGn5PE8LQ6ovwrDkK
JbRgGmeHEAGllTX5NB7kD99LAKbU02b6Ax72T2ZmB8kEOGTy+km4+q67U/Cd
VqwAF4v15+rV+Xmcyw1tPgIUuR1Lm1dRYDloOt1mCBAysPEYd55CbvLKR01j
TlCeS+63e0NBj//ZlfE6J3waZFhp/heFWAv3O8ulToi2mx0bGaXQtllPu1Di
hFCaT/aFPmqBxxFyZpu9ByjcSLydt0nmCBoUwZPXKZAZ/RXPYxwRlxLJDy+n
YDznZXLcxxFsSemRomIKyfIndW4MR7zbmSTJO6vup1lW/XbUAVZJf3UHZlAY
yal6+eiOA6Kv04Y6j1L4I/Nl0rWTDnirV3mMGUdBPBTpLwt1QHPS/BXOlxT+
h/PQHvkvhhU8TwoH3UQXtsjsIfR6Ljy8hIJLpq7ibYw99jgYNifaUJhoZAY2
+NjD92LoWYqh5n8Sv6KAYQ9FTX9RrC6F9A529JkxO8xuyeqLmCMhqTKmX66z
w8OssO364yTWx21SdmbbwTtot8nmXhLLGT3LSIkddt7M0RApyIX52MLKe3zF
yXwSfcf27QuU2cJIzzT53xkk2orKVDMxtrhnlT7qmkgizyE1pcbHFh7xfnE/
7iGxmpidSWfY4gAzhN2zlcTNbwxCEsb4iNC+O9y6joTBptu1R+r4INbEt3+1
goT7iQ/pBdl85CChZ8CGhGjJhGfHLj4enmjR+cj0/zw2CN/QPZD2mMC1Zntf
scwGIeXycvnPBPRvnIvSibVBXib3wv1rBHoKmR5dPjYwevXr3cMFBPhJV2t+
YdiguW/QdDCdwGBA4OPOMR5uBWyV0uIJWFPGMu16Hv78VODeFULg/nCvcZCU
B3FLiFmoH4GJHxqErRIe9O6/YpasJBb8olB9iHU4uZeLgOPiiSAZha1BnyfL
q7jIbQqma8dS+IgnqC34lovCo0/0O3zU/7CzipoI4iL45gPtRrVvBQcGGhoF
XPRELX0jHyOROF93kqHigHXR6Olsndq3qE9OKds4YIjDKtZJSWx7EN3i+z0H
7ZmLE2skJHYa+brYxnEW5kPA7159ZpGCDf2vvQZ3ywi0tl8f4BaxcbBk9ukn
sQS+K6991LaXDaNlMxViEYEM/5YNlavY6Fy6OrzCksC9lr5djR+wcXrN16/S
fudCpK9jqNnGQscrix7HZC5o7NX/jM5nISp9eYqvPRfz8wfJRRIWwt50Dw+o
OVeWN2b0CFjIz3svNvxiPo9QhFojSzWdIvNkY/95+a2jdtZod68ruTPAws/x
r4f1Xlhh16apmcl0Frw1HkzHVVjB0+NMirszC1Or1z+7dcAKuzVKvGW/qev4
MWXdq6zQm89xZR6yxjP4BHTPM1FsoC0p41iDZXD3aS2YqPhiW5N/kxWOa7/4
ODaVucDDhN+Pmb943bFEx1v3ruk1TGQuVkqakiwxuLxn0njUEqeiFJNid0u0
eiUOTZ6xRFC4c4TWDAPfkma1Um9L9DIMfr1bwYDF47Kw6WkG7FN283PCGTi6
zVNpeYWBZZe9vzzCZOA/Nx9tVu1ggJZWmJNw3wLyoX/lXFK/S7kJ1akJFqgZ
fV5t3GmB/hh5XSlhgdHJE4m8cAusLcwT0TPNoXw9W6r1zhwhwbHbr9LNcW9u
qWttoTmWXt+idTnVDNGqfyxxE5mj9oKvx+QiM/yp+S4ra9oM07z1WmkXTbGC
LvWvKjfDkFvA9kiRKQLo44dLI8yQNRohKlaawItmor93iRleCE7WUT+Y4O/9
ZQaND9H8MtQE/wVxHF4Z
                    "]], 
                    LineBox[CompressedData["
1:eJwtlHs01AkUx5lSWY9KjBnm8RszwxhjPMoeSY8JvYhJqESkkEiyJRFNUUN5
cyKdQvZIWRK21qPdr0JOcVYor0oRNViSIem12vU955577l/3e773cy7L57Cz
L0lBQWH3bP3o/8sU30ty36d81kX16Xv+nYMmuNhHptZspKExnn38TaMJso/F
lQVfo4FNMRdyCkyw6MBkTaEKHU0CWUJmtAmeV3paHoyho+HhpvQ1ziagB9Zy
ypUZUJeJRVSWCRojiTMxVxkoSFHMNBgWomc4QtwjYiLpT/eMgFIh3Ktbkqsm
mKgP9VjZGyIEa3JJ7hJ3ApcfhJ677iZESXb38tEoAqJSbfCthPB352SlXyHw
u6X94AFdIRxWjDYpVBL44KH2ae+MMdx5lq0WLQS+0/ZMa3UYI+NnUqF5P4HO
8NVvYm8bY3qPg+PHcQLRIUU1JfHGkOaR62O+EJiYV3g63csYom/eqp0kFpqb
fkgAKsOGI5/Pwq6o1PMBOQJkNo8GCGbn8gyro3ahAjDan1s9VWShQ6Mx3ttO
gBIztczRrwTqP658XEURwG7wVHT4NAGJTYqly4gR3oyvGA+d3a809eiJAEZI
cBGMvXhHwHXx0EXbDCNYq/uFV74kcCT5H+nlA0aQM/oSlNqIOT98ZPPernXI
I1C4PiHIPoePnuJg69g0AkM3uF+ajvBhfdhlQ3kMgQzSpchttnxUBWV5dh0l
cM1hcKiTzIdrgdWZKV8ClDi1LftkhlCjrar4aQeBqQr1S++rDfGm+dKE1iYC
Vm2yDkmSIbqq3dZRVhIY7Lu6QHOvIYYHjmQv5RP4z04TDw5bPSzKx5nIE/t9
9Mnhwb0s4vt0KxPtrxMNjEJ5sLKn1a4uZ8JHYuPJteNBpi2KOJ3GxBaBNGsb
hYf9FBm/LoSJ1IGdXbeGDVDqoNmm5MiE+W9/MNf9ZYCmivuhG/hMmEoKAknp
BrgjliufU2Iibq/evSk/A4QQN7Lqehlz+ejD7+G7iPluDCjX2D92ytFH9+sL
XE1jBkKS2cdfHtGHdCRWZ3weA6SNLi3htvoIeNu263I3HdV9L54xtPVxqjW8
X+M2Hbk+ON8i46Kp+Je7O6R0lDR8Hk6s4cLxRN3TAE86BtRTZtySuVhgEbhm
83I6Nq6KumPkw4X8lf/45CL6nB8OHJ7emRiKpMG/1E71UA4HEc7XynzFNAx5
q0RuD+Wgo0rfsYdNw/aXdKrEjgMvddsG+yld5PGiBj9QONDYOqNz96Eunq01
7C8aYWM8bLMDPUsXE2y9xUVg4+sFM/dof11MtfsffJ/BxoqEMttuC130Os/I
IwPYyDzepGI2TxdhSWPdnxr0sMc3/2PrGh0MLGofuZWthxMXdpqFKetgq2GE
UBSsh3MqWkuz26koHnudUyzSQ8xA58U1uVSQPFREk5p6OET99f6+ICrEwVNL
Ke9Y2Hw9LEN5JRUX9fM1yNUsaCWLVU0XUNEWu9RmLJGFlhYzfkcbBQvjRfn5
3iycDNIZ/ZZHmctnlqtkoeJyEgUFxzzUp3MImC948eXw39oYOOYXc2qWWzlb
Mcz1kjbimoeM9m0hwJNlB/V7aSPppGxhPotAi+vNV1S2Nj4o1Quj5UwMBZi0
TveRkVxbVBFcyEQ4ly+S5JAhN5LmaXsxERGXbVy6kwyO3Y7JcAoTo2mSzDh1
MnTUaKVp7Qw8s30erVyrhbVO0i75/lmunN4/sbbWAj+wfIL+lY5My5ujpdBE
l3fuN7UrdJh/V37q66gJe1PHmTpbOq7mLz67e2AZJF01g+vlNPRwq7+lnl2G
SI+RB9Ki2bufVV2vbLIMlpXPU9MP0vDowTyn2tcaqBpLFPuZ0XCyN5dbdUUD
//9nGhS6+usnfDTwL3Y00iU=
                    "]], 
                    LineBox[CompressedData["
1:eJwtlH8w1AkAxa2a27jCrP293+9Ovvvb2l0nUl3lurKD5sTp7gbR2kp3m5BU
UkZFnfIjXYxNPxCdPdHPs3tH5clIruUuUa2uuo6TiyRUcqWr697Mm/fH5783
b56bPuHzNfZ2dnaBb/0u38sTb06VDuf/I8Cxb5Th5x9qEFnk1ZXNJLBccWd+
iFWDZcXBYec9CQj9nE/erNHAZhkz0EMIvKpqKdfmaDDxRExkJRF4GjdVVrpW
g7Of3o/1MRKYyGz27vHTwO6MaKlzIwH+qGObM0uDXt+Rq6zHBEIsnU8kD9XQ
dQf9EUCQKL5OHZWY1UgqUh0wBZOIujD4YFWuGkMxH0mfbSJhZrg9Z6xWoyhN
Qh03kijrbLB5zVMj7pHD7tNmEkL71pwmZzXWme4Fk7+R0Bye79zcq4LRUp4+
0EviRgk/xvdnFYY54Rz+MxKOLqt28XNVSG6dZP1gJ8TNAdbGeJ0KYmvBNiNd
iDbrO3ngjYUT0O8gxM4v30yklXggtGB368BbvvzlU5+iJA+s9uz47DlNiE9q
K9K4Wg/MzXndSR8nod3H6aDxPWCtpK+c+YiEISVoVtiQElTG8IDfbRKm9AVl
05uUmCP8aVvsZRK00mGB2qiEy9ZopwITic22VeWW9UqYDvaUX91HQn/C7cjC
FndwCVNq/SSBMLcRv75id5TllZoW2wjQvMkrhnh3NNwLe7nzRwLr7h5XWxe5
I2765bjN+QTyyIytjix3VHEG7N3Wv+VjF7+X9CuQavdr/c4gAh/ow8xkvQLd
V9YXGeUEImIXm0ZyFbAaWgrX0AkYaHnbK3QKhA7eMff3CfBfPVY5jPyQuoQd
ArjEBodklMix9+mU/R/qBMj3VWdXJ8lR2d2sNy8QIGBRXFqAVo6hrkKfRJ4A
8zKmyb7iyxHVs5E+d5SP2Nf2WbeHZBi31912ucaH9XRkqbVJhjrvCNOLUj4M
xYzEWYdkMKXotzxO5mPJRdmL6QkyXGpP8R/R8uG9wjaRDCn895x4sDKVBwfV
heC9hVKcO5HVlhfAw3hvwtFlBil6aIrCJxweaJljfS0Lpegq3jNnVz8XMx2D
lCMMKbISyyzaOi4itiQa2vskeL1rK2NBLhdV19ZWrKiTwLvDKXBNDBdMuqft
SK4EquiYyIbZXBQpWqft10nwt3RD4NIZ3P/3IwYvaoenNZsDr8EbYy9LxDjL
Y6Z9rOeAHbKE/DZZjEZ6yugdbw62jJPa5CAxAmXVB2umcBD2ly6h0U0M/5Qz
UWfa2ahmzzgUPyFC3URmaG8hG5k5VNO2ThEqTikSAsPZuKUte9x/WoSpBcfM
97lsVPrv5ZpzRLhb1SOr7GRhLKt7cY9BBOXo+OWSHBZqg8ocx7xEiPOKvtXh
zEJSrIU9OEkh47Dr9vrDTCh+J76+1k5hg5p3NtyTie6T1ycPHKfgNRC/uabN
Fbu7urr9Uin8cp1pNW90hUe44lXnFxR8/3Q8t4lyRdtsqz7Uh0IqESp/ZGPA
EH/JqZZL4bsdD9XMYgbe/w+FdKf25lE9A/8C2Mg27w==
                    "]], 
                    LineBox[CompressedData["
1:eJwlk39Q0wUAxb8ol8BVwjb24/sVDrnuuzH2AwgPAhNItglCNlCIVWDoFg4n
7IZTBwqt7uJAckhghcggr7B1IzrtHE14XURhM85gVkd1ZzBAh9BgR3QzDfNz
9+7du/ffu3tby6sK1BsIgkhZ1yN/TAIe2q1/WQIURHVH3I45KcKeyXevTVNo
MsyJtS4pDlwID9aNUeDNakMj7FJsivbW3bNR+Hli7Q37aSn8vb9lmJopjG5v
zXmhQooEsSePWUFhNibZ7sqU4rIz+OLVLAopDbfb89lSvK1Ml2m5FByqD4hv
5yWwehsTBAskKj9/ZTHpqgQhzffUy04So2UDyxvOSBATpJ8pPUfiZvffQy+p
JdjDmuSkGEm0VEsKt6RL8P4Im6gtIbF8c1+/OlyC1YjnuoRZJEJHdBMijxiH
76ctycQkfpQbh/UOMQJvbVl1RZHIUlUZklvEsPb9PjDMIHHwwctLNfvFKNWe
io1+ksQN1yNEyJNOKeZDSWQ+vXe5s1uEf2XBNv0mEi/+ks3cbBChQNo9+RRB
wi/sltIKEXK9thHnCg+JTxxQ3KZEmDkhrD31Jw8hWosq0xePmClyrcDFw/Ei
/qGd38WD2HwyPW2Ahzd/4BvudsXDHKmUJbfyEDvWenzb0Xj0LXZEZh3mYart
0mLjoBD2jCDZxAUu9pap9FMWIQ4ajcWf6Lmo3eirH9QI0aXJYVnlXOxu0JH0
diGKwk2116K4GHWPZ0ZHCGExhLQ8XOVgYSN3pdcThzyLf5fmJw6GwuSJlx1x
aNLs6Pf1c5B2tySgbIlDzqpnuOcMB+W9hcq6/et9htdk1HPw/zwuAZJOsLOv
czkgFM1jQVYBAv1XPq0PsFHw1dbqj2sE2NNedajxVzaG4iwYzBUgMS67YeYL
NrLP3hrcESvAh5XPLrW9w8as31+aFODjvVef/7KjmI1epfezdjcfnPuvuxdi
2TD1OS5WDPBB5/bkddyJhO6fMrntXT6+lgeoNlskTNl/tL6m42POV7VzumI9
PziWeieZD5LlOZvvY4H9/fiNSoKP8ydnvokys6Do8Sg94zS0kiO3CikWGE2O
kX0f0TDT5utLTiaOmXfT10w05tUxVp+GiZqmTiNVROP8wq7iEh4TYb2XrlRv
o9E5GFiiJxlIHTs67eTSmBtP1arOMfD4XzTqRcToSjkD/wH8hKg+
                    "]], 
                    LineBox[CompressedData["
1:eJwlkosv1AEAx2+1OqbQnd/PPZRuDfnd43f0wJJSl5Zj1pkxjUoR0WPKJTbW
g3axHbWQyGPXb1y3m9c8Z/umUMqlkRsptUWJNZvM87oyn+2zzz/wEcVdUcVv
YLFYbv9d6zpyWI2VswUrQrDjWVs+T9LonmSHj9UJMU/SNguvaaSPxzxnRQnx
hsj/E8rQEDyuXrLMCnDrrPOHb1k0dNzhg0OZAuxcHihvUNFwDVu8cWeRD2a8
NRoiGrlK2xq7C3xs47xn283IMGpja0rp5eFcIffZg3oZhPcWphg+D6Uxud6R
qTKc6BlaaYtxxtUicfFApAy3L5rsEkln6L0m5PYHZFj5NMHPMJNQ0o1WBxcZ
6gVC99lKEiHaRxuHl6Vg3C/L+1JJNJ3M9z9jlmLE+sXXJpRElrpYb6yXQslc
OqSnSRgszaEvNFKs8gWKOgGJgB+/3EpOSzEd/T1IYE+i/90aEkw6tB7/aUui
iN3uN1chgSK9Lyl7M4mazjF5ynUJ3vZyBxSrBCy/9zb4BEuQ9vdhhu80gaIn
XZ0RIgmOuiiTogcJqF/mhPcsieEr8ivTNxEoS8i6phkUQ7U1luupJcDOMWyv
MIpR+LXN9DGOQMsORxU7T4z50hBTHU3AsKfWsStRjGx/ktM+74TuXbsVx7zE
KE/OnEoocEK1riuo2kLBrFXPCL2dcKQ5nTfST8Gjli0cGeVCFxXcNlVFQdsi
S3t6n4u+PB/PoZsU7Duml5MDuWgIO5xYEkGBaQwwBFo5iNWdV+/fRyGyykPj
+ooDk0YXbuRRcL3LFG4q4GD9HwrWUx3dc3Ec/APCJR5v
                    "]], 
                    
                    LineBox[{{-16., -6.995670089537952}, {-15., \
-3.509675141793422}}], 
                    
                    LineBox[{{-15., -3.509675141793422}, {-14., \
-3.5096751376166813`}}], 
                    
                    LineBox[{{-14., -3.5096751376166813`}, {-13., \
-4.596633042870052}}], 
                    
                    LineBox[{{-13., -4.596633042870052}, {-12., \
-4.5966330449537045`}}], 
                    
                    LineBox[{{-12., -4.5966330449537045`}, {-11., \
-4.5966330468755805`}}], 
                    
                    LineBox[{{-11., -4.5966330468755805`}, {-10., \
-4.59663304617004}}], 
                    
                    LineBox[{{-10., -4.59663304617004}, {-9., \
-4.596633043958376}}], 
                    
                    LineBox[{{-9., -4.596633043958376}, {-8., \
-4.596633042719758}}], 
                    
                    LineBox[{{-8., -4.596633042719758}, {-7., \
-4.596633045226781}}], 
                    
                    LineBox[{{-7., -4.596633045226781}, {-6., \
-4.596633042445887}}], 
                    
                    LineBox[{{-6., -4.596633042445887}, {-5., \
-4.596633043141537}}], 
                    
                    LineBox[{{-5., -4.596633043141537}, {-4., \
-4.596633043463726}}], 
                    
                    LineBox[{{-4., -4.596633043463726}, \
{-3.0000000000000004`, -4.596633046241095}}], 
                    
                    LineBox[{{-3.0000000000000004`, -4.596633046241095}, \
{-2.0000000000000004`, -4.596633044086957}}], 
                    
                    LineBox[{{-2.0000000000000004`, -4.596633044086957}, \
{-1.0000000000000002`, -4.070744636390714}}], 
                    
                    LineBox[{{-1.0000000000000002`, -4.070744636390714}, \
{-2.492612194340144*^-16, -4.070744636046243}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.266849002285747`, 
                    2.079283699648682}, {-0.25, 0}, 
                    Offset[8], {0.08867008614599214, -0.024858433670636337`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.8237789167285, 
                    3.2100464175724603`}, {-0.25, 0}, 
                    Offset[8], {0.08841272351049945, -0.015816319009223978`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.555201407229163`, 
                    0.31627936342142987`}, {-0.25, 0}, 
                    Offset[8], {0.3104028144583246, -0.11886556571967499`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.957139776824395`, 
                    1.1664364940106737`}, {-0.25, 0}, 
                    Offset[8], {0.17655914603251688`, -0.05803757033073076}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.807849415744245`, -1.4829146978921788`}, \
{-0.25, 0}, 
                    Offset[8], {0.0778328839058311, -0.020584954042886183`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.138256972854325`, -0.5311703179377596}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.17186941035259018`, -0.025794227989585417`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-16.523701909229814`, -1.6716515675812753`}, \
{-0.25, 0}, 
                    Offset[8], {1., -3.5096751382693583`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.90267971382734, -2.4316875504161786`}, \
{-0.25, 0}, 
                    Offset[8], {0.12801227968063422`, -0.07340008668199216}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-16.4, -3.509675140413855}, {-0.25, 0}, 
                    Offset[8], {1., 5.361243893275969*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.4, -3.509675140383796}, {-0.25, 0}, 
                    Offset[8], {1., -3.5240645956946537`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.822222222222223`, -3.596633043548925}, \
{-0.25, 0}, 
                    Offset[8], {0.08888888888888857, 
                    1.0597034361126134`*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.266812111480315`, -10.290659703327353`}, \
{-0.25, 0}, 
                    Offset[8], {0.0887143551125078, 0.015537812410522989`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.95707204265009, -9.269959606235586}, {-0.25,
                     0}, 
                    Offset[8], {0.17661124924352123`, 0.0444526219128214}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.552155803560764`, -8.363593292031409}, \
{-0.25, 0}, 
                    Offset[8], {0.3043116071215266, 0.09711685718064089}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.137302518444722`, -7.490277624509893}, \
{-0.25, 0}, 
                    Offset[8], {0.17301475564411462`, 0.023277026282947588`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.544196071440453`, -6.510754423961051}, \
{-0.25, 0}, 
                    Offset[8], {0.2883921428809071, 0.0021585619094981467`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.72788029361366, -5.519917570009614}, {-0.25,
                     0}, 
                    Offset[8], {0.08234524122527986, 0.012290913014809668`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-15.52199430943186, -5.329344667224283}, {-0.25,
                     0}, 
                    Offset[8], {1., 3.48599494774453}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-14.4, -3.5096751392873777`}, {-0.25, 0}, 
                    Offset[8], {1., 4.176740731054451*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-13.4, -4.161849880768704}, {-0.25, 0}, 
                    Offset[8], {1., -1.0869579052533709`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-12.399999999999999`, -4.596633044120243}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.0836523617617786`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-11.4, -4.59663304610683}, {-0.25, 0}, 
                    Offset[8], {1., -1.921875991683919*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-10.4, -4.596633046452256}, {-0.25, 0}, 
                    Offset[8], {1., 7.055405149003491*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-9.399999999999999, -4.596633044843042}, {-0.25,
                     0}, 
                    Offset[8], {1., 2.2116637410363182`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-8.4, -4.596633043215205}, {-0.25, 0}, 
                    Offset[8], {1., 1.2386180969770066`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-7.4, -4.596633044223972}, {-0.25, 0}, 
                    Offset[8], {1., -2.5070230336154964`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -4.596633043558245}, {-0.25, 0}, 
                    Offset[8], {1., 2.7808937375084497`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -4.596633042863278}, {-0.25, 0}, 
                    Offset[8], {1., -6.956497600185685*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -4.59663304333485}, {-0.25, 0}, 
                    Offset[8], {1., -3.2218849810305983`*^-10}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.4000000000000004`, -4.596633045130147}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.7773694455390796`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -4.596633044948613}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.1541382011491805`*^-9}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4000000000000004`, -4.281099999469211}, \
{-0.25, 0}, 
                    Offset[8], {1.0000000000000002`, 0.5258884076962431}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000003, -4.070744636184031}, \
{-0.25, 0}, 
                    Offset[8], {1., 3.4447111829649657`*^-10}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-17., 1.0409497792752501`*^-15}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_b\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_b", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-4., -4.596633043463726}], 
                    Offset[{12, 12}, {-4., -4.596633043463726}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-4., -4.596633043463726}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-2.0000000000000004`, \
-4.596633044086957}], 
                    
                    Offset[{12, 
                    12}, {-2.0000000000000004`, -4.596633044086957}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2.0000000000000004`, -4.596633044086957}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-8., -4.596633042719758}], 
                    Offset[{12, 12}, {-8., -4.596633042719758}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 
                    1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-8., -4.596633042719758}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -4.596633042445887}], 
                    Offset[{12, 12}, {-6., -4.596633042445887}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-6., -4.596633042445887}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-12., -4.5966330449537045`}], 
                    Offset[{12, 12}, {-12., -4.5966330449537045`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-12., -4.5966330449537045`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-10., -4.59663304617004}], 
                    Offset[{12, 12}, {-10., -4.59663304617004}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-10., -4.59663304617004}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-16., -3.5096751382693574`}], 
                    Offset[{12, 12}, {-16., -3.5096751382693574`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-16., -3.5096751382693574`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_BBcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_BBcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-14., -3.5096751376166813`}], 
                    Offset[{12, 12}, {-14., -3.5096751376166813`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-14., -3.5096751376166813`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_Bcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_Bcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-17., -3.5096751436306013`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-15., -3.509675141793422}], 
                    Offset[{12, 12}, {-15., -3.509675141793422}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-15., -3.509675141793422}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-16., -6.995670089537952}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"checker_w\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["checker_w", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-1.0000000000000002`, \
-4.070744636390714}], 
                    
                    Offset[{12, 
                    12}, {-1.0000000000000002`, -4.070744636390714}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.0000000000000002`, -4.070744636390714}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-3.0000000000000004`, \
-4.596633046241095}], 
                    
                    Offset[{12, 
                    12}, {-3.0000000000000004`, -4.596633046241095}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-3.0000000000000004`, -4.596633046241095}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_1net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_1net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -4.596633043141537}], 
                    Offset[{12, 12}, {-5., -4.596633043141537}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-5., -4.596633043141537}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., -4.596633045226781}], 
                    Offset[{12, 12}, {-7., -4.596633045226781}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-7., -4.596633045226781}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_2net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_2net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-9., -4.596633043958376}], 
                    Offset[{12, 12}, {-9., -4.596633043958376}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-9., -4.596633043958376}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-11., -4.5966330468755805`}], 
                    Offset[{12, 12}, {-11., -4.5966330468755805`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-11., -4.5966330468755805`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_3net_WWcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_3net_WWcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-13., -4.596633042870052}], 
                    Offset[{12, 12}, {-13., -4.596633042870052}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-13., -4.596633042870052}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupling_4net_Wcore_net\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupling_4net_Wcore_net", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[12], 
                    Skeleton[20]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.492612194340144*^-16, -4.070744636046243}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"X_out\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["X_out", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"checker_b\"", TraditionalForm], 
                    Offset[{0, -7}, {-17., 1.0409497792752501`*^-15}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-4., -4.596633043463726}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -15}, {-2.0000000000000004`, -4.596633044086957}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-8., -4.596633042719758}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-6., -4.596633042445887}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-12., -4.5966330449537045`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-10., -4.59663304617004}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_BBcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_BBcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-16., -3.5096751382693574`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_Bcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_Bcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-14., -3.5096751376166813`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-17., -3.5096751436306013`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-15., -3.509675141793422}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"checker_w\"", TraditionalForm], 
                    Offset[{0, -7}, {-16., -6.995670089537952}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -15}, {-1.0000000000000002`, -4.070744636390714}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_1net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_1net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -15}, {-3.0000000000000004`, -4.596633046241095}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-5., -4.596633043141537}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_2net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_2net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-7., -4.596633045226781}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-9., -4.596633043958376}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_3net_WWcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_3net_WWcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-11., -4.5966330468755805`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupling_..\"", "\"coupling_4net_Wcore_net\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "coupling_4net_Wcore_net", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -15}, {-13., -4.596633042870052}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"X_out\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-2.492612194340144*^-16, -4.070744636046243}], {
                    0, 1.}, Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5],
                     StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4846708389350614`, 
                    5.295824062411426}, {-13.266849002285747`, 
                    2.079283699648682}], {0., -0.17}, Automatic, {
                    0.9628771022566229, -0.2699401525336475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0.9685298323575049, 
                    5.414051160067989}, {-12.8237789167285, 
                    3.2100464175724603`}], {0., -0.17}, Automatic, {
                    0.9843729381941798, -0.17609633315590997`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.9668852412635784`, 
                    5.136279046907353}, {-14.555201407229163`, 
                    0.31627936342142987`}], {0., -0.17}, Automatic, {
                    0.9338689176195187, -0.3576154984115597}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.7175182816631704`, 
                    5.224952722480156}, {-13.957139776824395`, 
                    1.1664364940106737`}], {0., -0.17}, Automatic, {
                    0.949991404087301, -0.31227605121148555`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4062683099586393`, 
                    5.317180591291411}, {-15.807849415744245`, \
-1.4829146978921788`}], {0., -0.17}, Automatic, {
                    0.9667601075075293, -0.25568514726520714`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0.8163001106103239, 
                    5.439085780663656}, {-15.138256972854325`, \
-0.5311703179377596}], {0., -0.17}, Automatic, {
                    0.988924687393392, -0.1484182019291498}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{5.289480802709718, 
                    1.5071140758964927`}, {-16.523701909229814`, \
-1.6716515675812753`}], {0., -0.17}, Automatic, {
                    0.27402074107208957`, -0.961723782310858}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{2.735791575602472, 
                    4.771314751183635}, {-15.90267971382734, \
-2.4316875504161786`}], {0., -0.17}, Automatic, {
                    0.867511772942479, -0.4974166501095404}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.9486841413017828`*^-8, 
                    5.5}, {-16.4, -3.509675140413855}], {0., -0.17}, 
                    Automatic, {1., 5.361243893275969*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.9382355276320595`*^-8, 
                    5.5}, {-15.4, -3.509675140383796}], {0., -0.17}, 
                    Automatic, {1., -3.5240645956946537`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-6.5569150109468195`*^-9, 
                    5.5}, {-11.822222222222223`, -3.596633043548925}], {
                    0., -0.17}, Automatic, {1., 1.1921663656266944`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.9488502638959491, 
                    
                    5.417534787770594}, {-12.266812111480315`, \
-10.290659703327353`}], {0., -0.17}, Automatic, {0.985006325049199, 
                    0.17251822979926346`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.3424658624620496`, 
                    5.333646539481599}, {-12.95707204265009, \
-9.269959606235586}], {0., -0.17}, Automatic, {0.9697539162693816, 
                    0.2440847022658272}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.6721605051415627`, 
                    5.239644954101825}, {-13.552155803560764`, \
-8.363593292031409}], {0., -0.17}, Automatic, {0.9526627189276046, 
                    0.3040291827530114}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.7333507389991629, 
                    5.45088953232492}, {-14.137302518444722`, \
-7.490277624509893}], {0., -0.17}, Automatic, {0.9910708240590764, 
                    0.13333649799984781`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.04116533080882388, 
                    5.499845944709669}, {-14.544196071440453`, \
-6.510754423961051}], {0., -0.17}, Automatic, {0.9999719899472126, 
                    0.007484605601604342}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-0.8119394756249864, 
                    5.439738439292998}, {-14.72788029361366, \
-5.519917570009614}], {0., -0.17}, Automatic, {0.9890433525987269, 
                    0.14762535920454298`}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-5.28677573787571, 
                    1.5165758462433523`}, {-15.52199430943186, \
-5.329344667224283}], {0., -0.17}, Automatic, {0.2757410629533368, 
                    0.9612319523410383}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.2972074020799482`*^-8, 
                    5.5}, {-14.4, -3.5096751392873777`}], {0., -0.17}, 
                    Automatic, {1., 4.176740731054451*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.047622926367982, 
                    3.7238083524720094`}, {-13.4, -4.161849880768704}], {
                    0., -0.17}, Automatic, {
                    0.6770560640858199, -0.7359314411578148}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.1460087989689782`*^-8, 
                    5.5}, {-12.399999999999999`, -4.596633044120243}], {
                    0., -0.17}, Automatic, {1., -2.0836523617617786`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.0570317954261554`*^-8, 
                    5.5}, {-11.4, -4.59663304610683}], {0., -0.17}, 
                    Automatic, {1., -1.921875991683919*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.88047283195192*^-9, 
                    5.5}, {-10.4, -4.596633046452256}], {0., -0.17}, 
                    Automatic, {1., 7.055405149003491*^-10}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.216415057569975*^-8, 
                    5.5}, {-9.399999999999999, -4.596633044843042}], {
                    0., -0.17}, Automatic, {1., 2.2116637410363182`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-6.8123995333735365`*^-9, 
                    5.5}, {-8.4, -4.596633043215205}], {0., -0.17}, 
                    Automatic, {1., 1.2386180969770066`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.378862668488523*^-8, 
                    5.5}, {-7.4, -4.596633044223972}], {0., -0.17}, 
                    Automatic, {1., -2.5070230336154964`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.5294915556296473`*^-8, 
                    5.5}, {-6.4, -4.596633043558245}], {0., -0.17}, 
                    Automatic, {1., 2.7808937375084497`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.826073680102127*^-9, 
                    5.5}, {-5.4, -4.596633042863278}], {0., -0.17}, 
                    Automatic, {1., -6.956497600185685*^-10}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.772036739566829*^-9, 
                    5.5}, {-4.4, -4.59663304333485}], {0., -0.17}, 
                    Automatic, {1., -3.2218849810305983`*^-10}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.5275531950464944`*^-8, 
                    5.5}, {-3.4000000000000004`, -4.596633045130147}], {
                    0., -0.17}, Automatic, {1., -2.777369445539081*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.1847760106320493`*^-8, 
                    5.5}, {-2.4000000000000004`, -4.596633044948613}], {
                    0., -0.17}, Automatic, {1., 2.1541382011491805`*^-9}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-2.559976073890653, 
                    4.867907404738448}, {-1.4000000000000004`, \
-4.281099999469211}], {0., -0.17}, Automatic, {0.8850740735888086, 
                    0.465450195252846}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"784\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-1.894591150630731*^-9, 
                    5.5}, {-0.4000000000000003, -4.070744636184031}], {
                    0., -0.17}, Automatic, {1., 3.4447111829649657`*^-10}]}, 
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin", StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    Part[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQGGB44vdJ3WceCSDYQvcICh/+jRz0lCBxghAgcY
XC6A+RCuwoH/x3Yg8SUONAhtQeJrHPivfh+Jr3KgnvcLEt/gwL/Zwv0XhHmg
fJ0D//T+9iH4hgf+XTyNJK934N/GHiS+wYH/6xZ8mPBbGuq+D/sbVup5FHoI
QPkcBxjcviLZJ3KAge0AEl/mAMPNx0h8pQP1fOeQ+GoH6nUYjiH4Wgf+R+8G
y5+Zy3CF79vGPQ37NMD2AQBpD27R
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 24, 24, 24, 24, 24, 24, 8, 24, 8, 24, 24,
                     24, 24, 24, 24, 24, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {998.5000000000001, 788.5388366494898}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{35.50000000000007, 28.}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Scrollbars -> {True, True}, ImageSizeAction -> 
                    "Scrollable", ImageSize -> {800, 500}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_Bcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_Bcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_Bcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_BBcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_Bcore_net"], 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_WWcore_net"], 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_Wcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_1net_WWcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_Wcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_2net_WWcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_Wcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_3net_WWcore_net"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "coupling_4net_Wcore_net"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT], 
                    "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "X_out" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    Association[
                    "coupling_4net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Nodes" -> Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_4net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_4net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_4net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_3net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_2net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_BBcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_WWcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association["Specification" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_Bcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_b" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_b"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}], 
                    "coupling_1net_Wcore_net" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "checker_w" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "X_out" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "wb_convert_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Subtract, 1., 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_0" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "trainedNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]], 
                    "7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1568, 1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1568}, "$OutputSize" -> 
                    1568, "$InputSize" -> 1568, "$InputDimensions" -> {1568}],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}], "2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyArray[{1568}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1568}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.001, 
                    "Interleaving" -> False, "$Channels" -> 1568, 
                    "$SpatialDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1568}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1568}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}], "partLayer2" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[785, -1]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "subtract" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "partLayer1" -> 
                    Association[
                    "Type" -> "Part", "Arrays" -> Association[], "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 784]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1568}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "exp_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "thread_4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "plus_f" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "checker_w"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "wb_convert_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "trainedNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "subtract", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "partLayer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "exp_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "plus_f", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "thread_4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "X_out"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "plus_f", "Outputs", "Output"]}]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"checker_b\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"X_out\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}, {
                    StyleBox[
                    TemplateBox[{"\"checker_w\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7716936123749914`*^9, 3.7717119211150084`*^9, 
  3.7717788534025416`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"f2f76994-e386-4c2c-9ccb-db94576e4e3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
   "trainednet", "\[LeftDoubleBracket]", "\"\<Input\>\"", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mm", "=", 
  RowBox[{"Length", "@", "sampledigit9"}]}]}], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"29e432be-9e43-43d6-9cf1-65e208f89830"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.7716921050171056`*^9, 3.7716934451985416`*^9, 
  3.7716964866574373`*^9, 3.771696517550006*^9, 3.771696939717722*^9, 
  3.771711926638288*^9, 3.7717788568079944`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"c4c8724f-9d70-42af-8e56-8a75568c4cb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"mm", ",", "nn"}], "}"}], "=", 
  RowBox[{"Dimensions", "@", 
   RowBox[{"mppr", "[", 
    RowBox[{"p", "[", 
     RowBox[{"pp", "[", "sampledigit9", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771610786839265*^9, 3.77161081163018*^9}, {
  3.771611456448844*^9, 3.771611461718235*^9}, {3.771611856825675*^9, 
  3.771611858934649*^9}, {3.771615039148193*^9, 3.771615044813901*^9}, {
  3.7716934746173563`*^9, 3.771693475578439*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"977b699e-c21b-429b-b11f-3bb8ea0e390f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7716934775979586`*^9, {3.771696491468996*^9, 3.7716965212721486`*^9}, 
   3.7716969414547033`*^9, 3.771778859378216*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"38ce9a88-86bb-46b6-9bec-96829586e970"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<white\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<black\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.771611474368038*^9, 3.771611549075735*^9}, {
  3.771611636693874*^9, 3.771611640498125*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"cc01ded0-9675-442f-baee-1e554b412887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "checkerW"}]], "Input",
 CellLabel->
  "In[291]:=",ExpressionUUID->"c732f074-f787-4c09-b524-0a06189e697c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716935045750237`*^9, 3.7716965281089067`*^9, 
  3.7716969453061266`*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"bd8a2c03-97c6-4bd9-a690-22bd74a915b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mapping to Latent Space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"X", "\[Rule]", "Z"}], ")"}], TraditionalForm]],ExpressionUUID->
  "9c61b447-8e21-4bd0-8c08-d8f796ed6114"]
}], "Subsubsection",
 CellChangeTimes->{{3.771693514505464*^9, 
  3.7716935433854847`*^9}},ExpressionUUID->"f07f649d-3378-4b55-b557-\
d670faf0312a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z9", "=", 
   RowBox[{
    RowBox[{"trainednet", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"mppr", "[", 
         RowBox[{"mpr", "[", 
          RowBox[{"p", "[", 
           RowBox[{"pp", "[", "sampledigit9", "]"}], "]"}], "]"}], "]"}]}], 
       ",", " ", 
       RowBox[{"\"\<checker_w\>\"", "\[Rule]", " ", "checkerW"}], ",", " ", 
       RowBox[{"\"\<checker_b\>\"", "\[Rule]", " ", "checkerB"}]}], "|>"}], 
     "]"}], "[", 
    RowBox[{"[", "\"\<Z_out\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716935564331055`*^9, 3.7716935652731524`*^9}, {
  3.771696866488731*^9, 3.7716968677632294`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"c888838c-b438-4633-a712-a09160c0fee0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Learn distribution", "Subsubsection",
 CellChangeTimes->{{3.7716969212452173`*^9, 
  3.7716969248799915`*^9}},ExpressionUUID->"9376d005-3328-4df6-8bdb-\
9fa9ddecd7b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ld9", "=", 
   RowBox[{"LearnDistribution", "[", 
    RowBox[{"z9", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Multinormal\>\"", ",", 
        RowBox[{"\"\<IntrinsicDimension\>\"", "\[Rule]", "10"}], ",", 
        RowBox[{"\"\<CovarianceType\>\"", "\[Rule]", "\"\<Diagonal\>\""}]}], 
       "}"}]}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.771691097157357*^9, 3.771691123858289*^9}, {
   3.7716912095220165`*^9, 3.77169125720986*^9}, {3.771691320777122*^9, 
   3.7716914169006786`*^9}, 3.771691455862616*^9, {3.77169693188459*^9, 
   3.771696932541259*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"e220e227-1a29-41d6-afcd-a39074388224"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampledz", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"ld9", ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771696955907669*^9, 3.7716969633020105`*^9}, {
  3.7716970151627264`*^9, 3.771697023478948*^9}, {3.7717788819101834`*^9, 
  3.7717789077643585`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"639eccec-7538-4c0c-b580-9e50e1e064a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"mpr", "[", 
      RowBox[{
       RowBox[{"mppr", "[", 
        RowBox[{
         RowBox[{"sampler", "[", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Input\>\"", "\[Rule]", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"ld9", ",", "10"}], "]"}]}], ",", 
            RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
            RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], 
          "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
      "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771694996713468*^9, 3.771695018819934*^9}, {
   3.7716970771655817`*^9, 3.7716970873099184`*^9}, 
   3.7717789540214033`*^9},ExpressionUUID->"0974d10e-6b83-43dc-bd11-\
ddf4f6672dde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/+xAzTxXziU4QXYzEaI/cGp5zVOE38937Bi0q/rnpf+YrroVLxR
8N4YBoZvmEZ/X7Wo7friJKCfz2OY+H9ePJBqP1/Hi6bt35//1oHBd/YBmY0r
MMz8PHHvf12GyPMMAVvR/PW/kWGZK8MioGUMXj/RbHsJEg1Zs9GFj4HhL5qv
H4PkWv7vsZZgcAG5GUXWkyE6smjjSgZotKGFbER5zP+1QKlkIPsrug////v5
f6lJ1JF/6O4Eg9+7JBWwSoDkEpn4n4IYX1H0gqkTDCoWbzGtAobn3497GfQW
Ykr9/gWU/hwiyICuBQyAsfblbuE6b0xXgMC1m+GVLF//oWsCg9Kbkxm+YNX1
E3fyxgYAJYPDSg==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9UltI02EUP9SLRFHUW/gSQSD04kPRaxCEBIVGb0G5WmMgq2YgIQQVBFI4
m1BSEnkpnFrGQnO5LMtbZmkXZ15qm7q5zd3+23//3dx+ne+/0YHvfOec73fO
+c5ln+Zy1aUtRFRbwqyquu6o0Vh9/fQuVs4YavU6g/ZiheGaVqc1HtEIWGnx
RMC0HEMMmPzThgK5XEAc7bgBpzsKhB3o91i98B7nt3HIzB0ClhwC0kiyFG3C
f8ojxTzoBpS3QCqK5ZDCBiufe3BhcxO+1pgAuj2I3+I7BsbKiCLQlG0WKm56
CqFIdqVesjwQwBq8w6l2IIIg1XAOnJqce6V7PaDiXmAQfZwTEpXObKfbRB1l
lEQWivoXlU6YCWTlg72sbeOqRFL4rREZnbSbzuHAhgocT+bgE4JDqU82EO23
obEYo/kNlKfhHEs97G3SE3WJX/4oW0QCvnLXzIYFT2AJ4vAOoq/v+gkHPejB
HBr4HeGgk/M1xu6gAjv7DrXOVNHaL+EvQmeQfIbnC99DeI89xD/REKEETo7n
kRYZMGqrYSgdC7A8e8WEBVT6u6Fw3N9R5HgKY1QMNeZpQ50f7unUR9auAtIS
l81PI9AbwR1GL6ZjYm6P0mZmvUD9kH0dmBKDGIbslkSf0+oECPNnwe1FJVqE
IXCf2cnQ3Qz3kKiBA3fn1d5MqBthDD+EH1tBF1RvL/Id4F/8/ckFWngYPkzJ
bH2QUqeGlfKQ6rzai9FViNJIN8LLlWuJ2pXCZn6WlvjWw8TLykETZt4kO+/E
LAo7J0srxR52Sxrmc6o1E/ZC9LwLtg+APTCYEdZv60hMpOPoxOPsp0KBOA9w
6V/gYDUYsf4DB6yQuQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf//JAeTpIs6Y30AIAt+wyH358Ov//0+V8Y/+Yuo93XHn1aEFlgqu
mNoehDAw/Px3LXqm9+f/f1Cl/q5gYLj3+//P4wz2GNp2MjD0gRzDwLD3P5q+
9hm1wPD7/J6BgSXhL4rMr2+9DLkvTvzc75bDznASzbL/DKAIeFpv3yIndwVo
5m9kyb1awkBJxw4RoRtA7mtkuf+fDp/ikmI3YkhiYPwHMgcFvF6T1jrdiIHB
FMMHfz9eerjkS54iQ9BCzFD5c7GgK3fDVgvNDky5/5//339z0qnWBosU0Pov
27bpdLzEJgdyzsKkYxAWZvze+rzuOQ5th7/M//4Hu9SfT/+/4JD6+/8GetzA
wb8/f7FLYAcAf5fLhA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/hGUwqMCCP5iMekfhggI/EY3/B9CAZodEavKqg5+/fwHw2qggJ8w
w1H5C6fe//8J5H1Akvv6X5+BQUCdbenSd9++oLrl3/85Xild/+ftDVz3n2Ev
qpFRHgyzjgLps6vy/09BkfmjZ8HO9OHTzG+16nlAf/5Dcs2n//8Zzq49eP//
ys82757/+f/rB7JHrzRt1lp/6WhKw5sfH/////UL4ZhfX/5fOPmGgaGII/fZ
FzTf/71zM3TBlIvercwrv0D8gywP9NKxKZM2M+z/8BPJW1CH/v/79+f/Gfs0
P6KHFwT8Xf2fof8VQgdysP6ewyB34f9nDD2/gfYvj3PthvB+okufmMIQ8RMR
+TAT//75/+7b5HCtd1/RNYAU/f0xXYQhAcldCJ2//99l8BD8/wfDIhB4/ecY
w/anmOkQJPLv94OPqCLoLFQ2AIhZ1WM=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cP/gLxPxjnC7IoJvgHlfqHzEeVRQE/voLI7whDkZT8/A23BdWyvz/+
mzz4f/Ty1z////9Bl7t5/mKxfibDxhX/P9xHWPvrP9Cw/8FAz+6suP7v9f+s
r0CdML+B7fw2gUHOH8RQLzqP4UwGhjX///1+9/9/7n+wQXDw5P9rbYbi/6++
/HxT+vcDqqb371fOMHWK+H/ons89naw/f2AhALbu0Os9QMcweD1eJu0NdMYH
sLn/wC768ef/959Auax2BoaDyEH3D2z1v0f/t9i92jP5fzbQCliggc389/HH
//9zdebEyN4Ccr7CwxgWfn//hzLYM9wGslBd+g2I703bzJCN5gFYZPzexSCW
hB7hf0DSQAd121ZD1f5B1fX/zX8f7+tQ3j/UuAfqY1jd8g0hBmV9BtLnU10L
8hd8BLsKbibE9ndpN/f9b30BFvgOdRDMjF8MDD4MU/6jA5D0VywJ7x9C5x90
OQAzztKO
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9Uk1IlFEUPRRaSVgbNyGkuYiWEoIQBBMRSJB/WURBaU4SxIRjEIIYReRK
RB2UwIR+qIWLDBwLxsxFNJG5sEDMciE200wxgxaDGNXp3vuevo933733nPvu
ee97pU1X6y5tAdC2XUxd4/VAONzYXr9bgoZQ2+WWULC5KnQt2BIMVzYprdhP
6gBOYiLv2dsUn5K/mWOcHPlKPhaoUnG+5rpQM+1rEhVaJsVfYnme/ECW043c
PP8goXizmLjg20Dr8UNtSL2p7BmXkuZ3xJkfW3rIY7olIkhgVFbM+Cr2msTZ
Yr60hM4CKEPn2Q7EyCz5XfJ3FT6nhF3QcZw4wlK+c3VRlon88hK3iRbzL2sl
+Dl4a5FYAWNeU2xaMCHzn4VGVQ1ghDgs3qthAdL5pj9AHhCk01Pvc5FDZLUE
RbDUMui/LJPWGvXDxOY4gR3gpJQnvuCBtarQdJFTqbZC5qp6eWKWNrSY1tab
vCFrn7hy51gnT/HCgDDG9xkpOeeOZKfgbVOkmScZMPcpp0iJmIt68Q75qPZe
ZJJTjpzauANdRqjt5rjmd+wHPr9we6bG3P9HDwKaOepUql21vPKqFBlilyt3
9/p8j9Ayon2CbJ2dIXaaEGS3nrY6FibttDVcgL5Cvtl8B0ir7aW9vr240h2X
dNrfzTgZ5YJ2fxQll/OdOn3PGN1PHOT0in+y8Ouh9+z6Rv4HxeL2+g==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycW/CNaJSngH15zfwPxH2x2f/r1/t6Hz1j1pHMzMNiwykv/wND0ckms
u2p9OdDTZ1FcAMKPCy88+//2bRxmgFyumrzw/f8/H56Fa6/8gybnwJBZXMvw
v45BFOJEJCs/z2CPZ0hmYAC6Zh6Q+xch8+HtA3cGho9tIkCHMPz59//vLyTH
XNw/u+z/r/+1SrxsbkDff0XoA/n26cO3v7p1rHhtpYBWIRkJDkcQv5iBwfw8
kH6DJPnnF9hhfzwYGDaAlf5G9fz//7+qxEIg/r7xDC71BUKtWJwjFw9WeuUp
XNedn2AzGiUUNmFEzpdfn4HxdmPBsYf/McGPD////Lvz/9yb3//hYYkUqL/+
z3245D+qz+CW/vv/5v//n9ikgOA8Dl1AI7/9+fcVm3nYkzQAEkHOoA==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CVFMRr49/cfhhCEAMI/WKX+v/z/79//nxj6wODjo//fsUosra/Y
suPRiWcYEn/OFh6q/gRkXKk5A7MBCu7vS5k54f9vIOuGPkMmiq5zaxI9G0Ey
33/U/zy3FFnjn++/Whm2gFjXmv5f/3/1L0Ju9cHby8z+fAHq+sOgrdWN4owv
5148utX07X/N/8MMjfn/UUz89/v/n19/OhgcX56+dAAofh9J498fQIFJ4Ylz
X+w4jhmYn/9/uVV67//u+U+BnE/vkKX+vVwqO6/h/YvvNl/eomoCmvJj591N
3/+3shz4ghFg/78BXfT//5qYp/9/YUqCwPRNP9DiDuaudwvXYNfyH2gW0HVf
/2ON1m8T9q/6+Rd7Orv9/u/LP0DbsDj04f/b/7Eb+P/nn8P//z8AsTASGVYd
ANqa7og=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw1UV9I01EUPvS09CGDqJdeerBeWr2JUD5EFClYsLLAvTTbGgZtuY1mRSAR
VIxFDYZEJEEgKYE5yk1sSlky80+x1BnFmm3Wpgtn5J+c7uuc+1uH3z33d893
v3O+c+6uBrvh/CYicurYGUzuQw6H6crJMj7U2ZyNVpvFXG1zWawWR2WDXNtZ
XKkEAON6oODe0RnuHMc60NuB20AMn7HG2PgKsAd3KEig1gwwAbEa5SmKb0AB
KH8KxPHflhmJJAr4SPhVT7Ai+JgjDNxETvD3A+IHT50Dkb51IgBb/34HGkHv
FtqxJHmbE/CRUIgy7O05hKPXetArvM1UTbsFIXqEs0guJbWskyAnx3DgCwlY
updj06JPbFUIIJ0etQK688BPRCPAD7oHHGPJ25OqI/mGQBuK1UwX9JKSkOVp
BJ8cRQcpYKBrFDCLBMn7W23YRheX21zPMRxDxMeTVXDczAWhsT7MsxstV/I0
e5m8JNCIKh2Ci5G3cYFPwylJmRiAHw+AvxJTXQMH3fzXQ2Tx4PgwT0cbLirE
nQE8fCwDSjE3v6rqtlUBgS41AE2ID8+AmTTfq2XuXVF/QwFZhT9Uqw90HcWS
RAUiv49Pde1KlcS8JYDOWOwN32VfsIG2hkwsydQizBEpgEWkx3i7ivDgEHEn
/aDXfPsyVj6Fw4pccqsylUdGKyfp15r28X8OU5Mt998Afa9g14aNeE23orw4
4dUKx2NB9oYti14l5QivWYSm8Ufe3gNjdgzdG2l1tQlThqrcbL7Cj7kZbrD4
4kA6hPqvvB9O/QNstS22
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cN/qEL/CYgT03wF4Rw2vDr/6/v/9+/xVTw79mjt4t2CClrifxEl/n1
4/+3vklPfh5Riv/5D0Xnv3dfvxz/een//8/q3AwMX1D1rUo9teHHtx9//sxI
/f//O4rUBgYGgf9f3/39f8EtFd31jeZXz/358f/7d83Ju//+//0XybZP/9Ne
3Hv/P3/y7LRKYJj+QDUU6O7vd/cZ2geHP/2HEeR/H///179BJQhLkPz5/+nP
28nWLIkQ+9HA3/93zdkZX37F1Pf3/4//280ZdgINAFuOLr2XwfEwOLS+YcbG
/AVYHAIGv/47V/7BFAZ55+eT9oIFTzFcCJEPLJOwxmHkt/8h/4VwyKkx3GeI
xy4F9NIPXK7EAgCH7OMJ
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.771697088128473*^9, {3.771778911400675*^9, 3.771778925594902*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"6c8208aa-f1c9-4b8a-90fd-732cb9e7af8c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gen9", "=", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJw1Ul1Ik2EUPghBQRdCEAYSVBddehtRRIFYN17MkqCgNlzLGpvNUSy7aBdF
YNAvEXVRGUgWMdMkwW6SGC7W0tzXwpzk1n5037b82dwvT+e8W+++73zvec7P
c362y2Q3nGsgot7NLAzGK4cdDqOro5GVE7bebovN3HXM5jRbzI59JnFrrr9R
8PlYZhEmrer9IGoMLvlQiYAc+oAN+DVPJ0OecAXTrMZQDiAOetTG4GusfmLP
tMToRSCxDn1ynZVsEni5V2BcVXKnZM3MfCuDHvB1PwZpBCuMlSk8C3xxxwHf
MLKI0hhnJFORKzx1aYLvw9jDEeMMNhEhTyB57O1cYWOWVPbETfpTx+W0cwn5
MxoQxJDwSsL/RtZ7kiooTtcYD1AtBZtSnDuriZIBOUO7VeBbscntdsehVDMr
L+4z4LDOsTxNUqVxa2btITCfHihrTxXJCC5KDGgiItkWQZE6RauqYpsU43py
0K+Ys4k05QWOpVhYsEXxcvgtZcaUGp6d0VVJnlS2Bn77uE4c6E9vAnnYqnNU
hW2VnuOAW3nh+xjOgwZrHQCybCzDW4FimP68wq1QU40nQoVX3O3jGYl0o79y
RE0UYaStYn82B+8s/aRlvn/FgKQsvFGRvEAUnYuc88f2cbcPd+qDhr50VAsF
W/AO75/TBeXbRi3oVMNRg566h+u0QZdrO5B97DgpXfAJ8A+Uo9KklDGEbmtX
bZeInWXxdy34C/ZWkB9VFTqKgjRIVR5Lgh3mfYzrQInv0SVA+70AffQGQcju
CkMOhpDQ8v8QGv4B36wuQQ==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycA/mFhEasDl65/cFG8Zv77//vf/58YJv37//f/0/9XdmPV836iaqsn
Q6xP2v9/qGb/+f/59XGDeA4GUdN16O778/+8Z8uZ3z82Xbx6F8283zsYeI8/
/f/v7/87/X/+/0KW+vv/P4sPUOTf71yz+P//r/5G8tf//wwMi/7//36v/ALD
oS9vtvxAsg6Irh/4/3TtymUM6jv+P/oDlfgHkX7Zeen/xj31ZimP/z/C8PmT
r0ve2QLj9/fyL39R3fnn/5v/N//pxzEwvP3/FaID4ZavH0/+e/nfBCT3G83M
v3/fbL3zf7EBQ8x3hOg/ZHOtGHz+v8OWCn79/L/dqff/IyxxCBZi+PHowW8M
XUCw7FDvjp0Xf2NoAFJf88NVun9+/P0bU+7X99hAhhX/v33DtA6k5gswHv5i
iKKzCKdhAMZx3FM=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJwtUktIlFEU/rAWrcpAgiJ6LFqU1KpMCAppU1CLlCioja9RW0wwCuXKHkj0
lIIekAamBlmktSjKxtFqU0mOYxbZZEpS6jA6ko45mV/fub/3597/nu+8vnPP
WV9wPNeXBqB8iY7c/BM5gUB+ZV66hIP+8rISf3HRXn9FcUlxILvAzFYv7GFq
IamjH313cYcgJ3hG8hzs3sfnZCZ/nUrbyL/NHRzgI4ybTyMjxGxklhzhTOMt
sism9Mc8+JMcxaSixuW/A3Rr5ID7Jbk0zoarRMSJQKvCcCVRZ+L2KcbqXynz
PeeFtqoCIHjh7aoUa7juBdkjdKd0fjEXPSTNbsuUl4LnOEi+tKhOrfWA72h8
XCryBtDshHaFmHO3P6jZYHUW4r1J2ll8qI8cswRh54goP1k83XLQvkZloITM
AM87bFA67Bv/mCWT8HVW3WST8j9jFG1Cal87frVEwvFYK48GjyM3M44KxyPM
ppjxAPYIT+cx42sdGNb7WjfYr/ODoftPI2ItwDXtnmrO6FfLQrqax4mTvXSR
mCLfmG/1fZR1CVih+z/SZ1gqHkLHQk3ARbbk0bVgEl+bGsmtPrZCtouYAhKy
+8bQE9NnT7A76CYDiW0L71rqKliu/dvXrbMUvHKEQWkuO80AOpnYTc1IyDJm
HkY9FnvV7aLmK8oiceh1UV2f9P5HG7yefudTz/KS9YGdj5Eh9LYa5k3Q0Mgs
z3IedctUmiw+e24KMs0xjW9kSBPKLw6MqQGbRm3WK2nDaqE5nXJpGdBsHWrh
fyc+Oeo=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4B+I+PP//19Mid+X/z/auTbp+keoKiRwKTyewdssS4whE9NE70wG
Bve17AxWarfQZH47yDLI1mmYhEXpmrP8RjHz18/5DKktP/4vjshjqHdEcc7P
R/IpE8+DWDsZChkYviJr+8nPsO/et3//Pz1dG8jAUPUFSeoHA8Ox+nAQa20a
A8N7VL/VMcgz3Pzx7/9DjUyGiLeoriwHxhZD9ZP9tm2KDIxoPn/NsGNS1LH/
XQ/1VQTFUM38v5VPeOu2P/+uTWFi8CxGC87fp+ffAJr0p35eKmaAQd17laFx
Gsg6mI3INh9j+D8Tm6Z//3/838HA8PzPPywx+P/1T0+2qj1/sFr367+Zscc6
HG75y5DHoP0Nq8a//zcwLFgch9VEUgAAUda0+w==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/ycB/CNV4W9kDlbdx3EZ8ff/T4imM6jiv8Dk0c3eMv//97/DtLL1d7BN
Xsz/d1c+o5vY8+y/NIM3yMcv/39Fkfl5bEGT15wLuf8f/vj+/d9fZEP//Vzv
YN4IFHt/Es39/379+bqd4RGI+ef/7zf/n6CYuPJEoeHav3//v/zz/9fdh3+R
9f3/s24676Sk/yvX//f/+3njW1Rjjxkk+aYA42Xt+rwlqPb9//+xNvj/0/+B
vtGRSh//o0tqyln9K3++ioXNzQozrJ8B8WuvMIb/N9FDBRxF/1/zxGUwvP2D
LgkKgP/X9Ri0+v/DzUT2y0tzhogidD1QBQvXigSj+e0fOPaA8m93hH25CbMb
Ve/fX+/+3/vy4xuGFMyIjX/uYZe6xHDiTvYvDPV4ALpiEAAAYvrZBQ==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/0cH/zBEyAeUmIVP79eb691aN33+jSnzZfsjAQUG50Xr/v/FlFwO9K+A
4RkM8b//f76Mq9m/jUFj4/lH6HL/Xl+9c/n/x7DN527/f47mst+vP9z4//uL
qzjD/T9o+n5+/fb/77c/Ze7OHj+eo8n9efD77edPG56mWAQ8//8LVe72xp//
/3/6X2Lj7PMLzX9/jqx+BqRaIw0MbH7/RvPf31P//3/7X86gZBn26T+Kxn9/
QPx/r9QYQq7//4um7d8vkH8+ajH4YYQKVMFNiayPmKIQPy4pPIslDv6D7Huf
qvb2x1+MWPwGjheGtnkIIUQA/Pj/2+5/qh12hzzcWcgw6fifHxiuAIH7exje
/b/3Hz0wSQNg4wB8cOCP
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/8cH/uFgY4phkyUG/MVjY92Ne5+rfvxB1/Lny//pDIqX5RiCTn1Cl/tU
ygAGLgz7/vxAlXrMEGHjqxXw4nFY9o//f1F89t09sq71MpC13e3HN2QngJim
YXPB7K/Vm1Ed+/f/vf8fXoGZ0gzbPm76guz+X7cevQA64Pu7M6oMeb9RXfLr
59PPX36cA3rQ3HjXWzTPnX/y8f+X9U+WuTE4ogfqv1WFt7f1MkwvcWIQWPcf
KeyA6r4uYDf0Eslq2ODIIILsDhB4EzbZmz+qrHVHmwVP71+Ez8Dg56rb/2/8
/3Pb4zjD3P9o4PM/sC3piTzJ//+jxtXHv39AvtpfvSQcI+r/fPn8/+uj8+19
NR++oznlPzg2L8eHc0/6DnPGH4R7/n2PNO1kOPQMzd8Q/O/0qa3X3v3HSA8Q
SSBcg5Ga0PyKHqDYlAMAXTzKHw==
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJx9UU1IG0EY/fDUS8FDwRxy8dBT8dyWHop6KD2IxdaropiIBZMQLSr00EOh
tN56qxTqwbaHolBEqidJaSmJIR4a/AGLgiBuUrdmkzWa7MzrzOwk7m6h3zLf
zM577/ub9uF4X7SFiCauCNc3NNWZTA7NPGwVP/2xibHRWGTkfmwyMhpJ3hqW
tLBeDjikcZzj/1bUTDR3V1EXqwrW5HEEjaOAP5x5birKOzAVeqpZLqMkHUOe
jhxxoN1FXywGbkzSdbqxwqzUsw11V+MNDFHqCnW8mEW2451bX6MaZ/8OIUEZ
mNyY/nlZqMyBe0+7pVxkLoV3pn2NrFJoMaeD8N4PGrKUf0Ikcsr+2du9j+Ou
QLl0hhD/Kmkc9TIVSt6pfN4WupPqubGfYsa6b2oF4z196wWWxdGq6uo0xqz8
ABXx6Yca+anK2zQHCxnT3FzLfznbK+SY7X+A2vEFXs7TVvnqL19zamYOF+o0
joAL8XlDMsk6zLX1zCVgc1dzyfiN6oO2u4NLz70Pq+OeAK9uX6M3dj2IMRmB
bj56XEbAagKsrH8fqJuvdd9+aRF2FgeNtrkf5bBlGZWgyG3ER/TW8m+gv8gS
2EQ=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxVUjtLA0EQXqzEykYrG8sUgp22ARFs46NP8Aw2CSaCROwiYmFvYSmBaBM7
0X+QRg0IUbQQizMmdzmTS3LP3XF2b+9yGdjXzOw3M9/MYiaf2psihBSncUul
j5KFQrq0OYuP7VxxP5tTdjdyh0pWKaxmuNuCXBAXHxeNXh7eTWBSgzbPifkO
pX/8rzWBZgmfUDQJHBw2TAqTGIHVlBoVoB2PyRj47/xCuISpMnAjDx2gvoy2
44ncgFq8EKv8oOyQJWBNAU+DbKjJD6+r0VOt9MpjRPWDemf7DlDGKDRWkqQl
oknkKsAtfzBbWZ+TNcJjUEmDA1u4sRvlXA/RIm6fTRva/bNLkmi/McHGT0iO
78MIvyW2Lir3gsMwHQNtrMuAlDvzmtD8SpYo2OaXi1nla4Sc+AefYA3Dvmpg
DDBHA6zrNVJ3dZ78mBnD60MLnN7MS9i6sW3UC1w+OmOeuXQ5ywgq2lAB2a9R
jGwD/jzQqlbNUfGPiWREyD5iMJ59U+JdRbge9XkpWlOEcqAnGOPLwfgZGAyQ
NvTV8eUKNCZ+co8n+A7GxAm1cZmYhGjSgl0VsxZoRSf+AQiw6KE=
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/weBf/8HI/gIxJ9vfMWUeNH94f+nbIb1mO7+u9/VjYHBTpThxL3/P1Fk
fv3/tL6ZsenKnjyDwB///6DI/ft/MJhh2dmP/9Wl6zAs+3k3qPL7/9+CDAwZ
d9Dc8vffuqK9//7/qGDg+P//DZrc11v/d75sSP5vlIth5Idv8wPPPp0JDP3g
f7/Q5J5Oe/Z//sW0LCaG3tfo+u4znDjb53P45L4FGn///UeJtl+OUxe4lAMZ
7/a4fkDX93rtmbuX///f+t6cATOm76x69f/b+//X039jyv0DWxF1LW01htT/
f6///P/zN///iz/oMn//fv7/7lG461RfjJT1DxQR/y8cPrjoNoY2kPS/L0Fl
bc+xyPz///X72p1FNx9g00ZNAADihdl2
        "], {{0, 28}, {28, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{28, 28},
      PlotRange->{{0, 28}, {0, 28}}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7717127947955284`*^9, 3.7717128007974386`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9140ff46-b57d-4e88-8e66-59b2bc3ab583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<image6.gif\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pp", "[", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{
         RowBox[{"mpr", "[", 
          RowBox[{
           RowBox[{"mppr", "[", 
            RowBox[{
             RowBox[{"sampler", "[", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Input\>\"", "\[Rule]", 
                 RowBox[{"RandomVariate", "[", 
                  RowBox[{"ld9", ",", "10"}], "]"}]}], ",", 
                RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
                RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], 
               "|>"}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
           "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
       "\"\<Inverse\>\""}], "]"}], ",", "10"}], "]"}], ",", 
   RowBox[{"AnimationRepetitions", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717789932315683`*^9, 3.7717789958978243`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"77241e88-7ecf-4e57-91ad-cc9db6c0251a"],

Cell[BoxData["\<\"image6.gif\"\>"], "Output",
 CellChangeTimes->{3.771779000966447*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"bf386406-c5ad-4977-9fab-8d11c6a4ad68"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<image6.gif\>\"", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[82]:=",ExpressionUUID->"32ab9fe9-3f0d-4c8b-ad61-42b444e24109"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"Z", "\[Rule]", "X"}], ")"}], TraditionalForm]],ExpressionUUID->
  "2ce4e48b-b6be-4dd4-9bc2-d0bf2d6777a8"]
}], "Subsubsection",
 CellChangeTimes->{{3.7716936230510497`*^9, 
  3.7716936347948513`*^9}},ExpressionUUID->"55a105f9-b7c7-4128-947e-\
463f418ba84d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"inputdim", "=", 
  RowBox[{"sampler", "[", 
   RowBox[{"[", "\"\<Input\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xgen", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "inputdim"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<white\>\"", ",", "n"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<black\>\"", ",", "n"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7716134354233828`*^9, 3.771613463698782*^9}, {
   3.771613520254919*^9, 3.771613523950416*^9}, {3.771613564154632*^9, 
   3.771613565464787*^9}, {3.7716936848724704`*^9, 3.771693685283576*^9}, 
   3.7716964968546877`*^9},
 CellLabel->
  "In[278]:=",ExpressionUUID->"0464686c-dddf-433c-ade4-4e5a2d2e4a0c"],

Cell[BoxData["784"], "Output",
 CellChangeTimes->{3.7716964976234818`*^9, 3.7716965345029535`*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"6d20e023-5f12-4357-ae79-1816eee46842"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "xgen"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.771613589600627*^9, 3.7716136134357767`*^9}, {
  3.771613677472085*^9, 3.771613681185937*^9}, {3.7716146155159483`*^9, 
  3.771614630210746*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"e634650b-4118-46b5-a3b2-3441f0bf334c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"mpr", "[", 
      RowBox[{
       RowBox[{"mppr", "[", 
        RowBox[{"samples", ",", "\"\<Inverse\>\""}], "]"}], ",", 
       "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
   "\"\<Inverse\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7716147710497017`*^9, 3.7716147933882427`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"7702bc7e-12b4-4a1f-8fae-eaf283ae1604"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUs9rE0EUDl702D+gF+9eLT0I0mNBKqZID54aTEMRYpsK4qFQL/agF0ER
tRd7Kf0RGrzrQcRKqCCIKQptU0oMNSFb091sdmfmfb7Zmd2keTDzduZ98973
3reXM/fTMxdSqdTCJd7S0w/HCoXpR5NDfLidX5jN5bN3x/MPsrlsYTSjYcN2
AQpsBGvEZ31QCn0m0IvHJslCkgRknBLsKMrEKATxayL0kPTkVo0B/r3F4yiF
pCS1gOsgaFXf/Dw5tQXiEAn8Zudtr74zheMyZotwlWKl5fRxZ4AihPrLxUHj
uLxrmSYVuTrC7l632vTQFEmPlq4LdKAarnfkUF/7ppuvH4BTJ/ASBkp7qf2v
bwhV58cnPQJL0uR0qVNp1pzW5s39si9sIlIGwyPRVD++LJVEaLIhdqQb2Zm6
cQeuKRErgHZIXXbPr6Yeq79WHsuRJKr1Q/96+tocK9MOY6X0JuFja2XxWfEK
sPlquU5G6SgauJ2NidfzIxfx5/PTF1/4QgeV1a/ZeL/mTa2/Le7uMRllZhnx
P8MZFz/8vhQEUNT3c3F/UrLO5LdFxNzjpch0YhhzHvkvkiMSSPamDdPJgIkY
oAYjfBNC9K5pwMPOTp1/A/wHSgT2kw==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUr9LAzEUPgTR0T/Apf+Ck4tDEUTXtrq3WIuDLbSC6Obm4OIoLQo6+GMq
ioqbUKgoiIi6qYOClJZWbbXeXZL3fEkud1cTkvfy8vJ9eV8SSeVic32WZRUG
aYoll6L5fHI5PkSL6WxhPpNNz05lF9OZdH40JdOGvYEoUDXPUAM58WBtQkEa
lxFH+QzIgAwpI0NCQBiOUxy8U8rh2tDBLmLlDvVJUPsB1dNFMf7WNJwmqqGO
X45262ioeppdvj0/bXhAXPMJTcqFc11z2rYG1KQCXbV0K9Xy3ip2/sHJ4rCF
sbX9s6s2570K0ThZiJbGrInnbwWiIP3K7feHtrW+c4+MOjGFBGUfDfa6fbhS
I3xw1Q4IA+w0v3DyYBNsYjCSedsu1J1C/0BJaR/iIhmIAlvjVqQKbqCj75Hz
OTKzhfqOIpAZQOb85hIbNdCvoHLUE9lKblZMPBrhGXp60+wq55KhfnaQqXqz
IyFIEbwR3gUNKlem2+78dLn+PgAiVAfzCxaaERD9YcpRMMzc3/9LgoGvsP8V
w6UG2cxkyYK8n2eS/gAdfPna
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU////5//////+I8AfMPn7P1bwD6jyL5j88/svRAQm9fsflPMHYdpvuHkg
bQgAYv8FKVvf9fE5UNuf///+oqj58e12YITdK4hiiHn/fkOc+u//t+lcTvv8
LVJ+/0I2E6jq8///T/vFGRgTDHsfwAT//gU5GAzPz61d19Zbkfvj9z+os/+C
jASq+Pf3x3y2QE3JH89+oLn0//+f//9cPMUQV/Dk5w9kKUhI/Dy2MaSs8COW
IPz17//2/BX/78EDAKT1HyRsnn5eIyA2b9OhNyC3/f0L0/MPGF6///+7m1cv
6Jszt+vPL7CrYSaD9f874ZzTufjC3F9wP0NtBIX+ux8rP/z//+blO5jyP7Dw
+/1t56//L789f/Pvw98/4MCHxcqzN/+/3fn3HciKnnjhJ8xEcED//P/l5k8Q
72Xl/1MvUcLk+8k7d0CKfj8oN1z3AqLp3/8/EENPb3vizh4euOWY7NRlCEdC
PfLILJVB2GduurnRV0gS+4cS2rvm75y3aPl/TPAXjP4hGwc1ExoGv8AK/iCF
yV+4yXBF4KSAMBGGEYH8HwDjYd32
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUj1IAzEUDh3ESRxcBAcdXOoopQ4uDoJScaho51Zr61KxFYrgpoPOCk6F
DrooFRUHBxcFRSgFK/hDUZD6Q2vVWvp7zSXPJJfr9RrucslL3vd973vX51l0
zlsQQqF2Njnd4ZFg0L0y1ck204HQgi/gnRsPLHt93uCQh1/rkS8QoBSah7Zr
CZoH4RMmxLguPjVinBrptCmNH6km5Lq4waCoCQrqB5mtfSgKIkOLWBzPRNJr
vT4Ohs0MfEE/45sxLNio0ELFpPKIAjfbEx9Soswl/CG0BpDzu3JFquNRLV1D
Ku2MhZ+rMii5tHxQANnxb9HkH4dPF3GmcOcM+lnBLV7S2dW35Dlqc5TLDF/F
pOEaQDx6XTnaQCjyWlJrIsiTVcKZK7aLbKy/q9vxtSeVEKmnjrO37wCTaPAM
8hVptqDlKn/YJjlqjz4oDEljIlSnZMoHTtahcH8p2XiXuFuMFCCRQnD6DX9K
k9FEbxyyugKpx7zRX73OulIb7lh6usIcSJWWNpx1W23ZlxKROM3eVGE3YTk0
WcmroESrlpKG9dToUQNDLwnrkKLpxk9CpXgOQ6BlqPL9Bz1c5+g=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJx1UrtKA0EUDVaWgtjZ2PsBtpa2ih8QNT4QIq5CsNTGxg8wqKhgKQg+QLSw
MBAQBB9BEUSRmETRBI0b9jFz73XnsbOD4LA7e+fc15lzt2dkZnC8LZVKzbVH
22A61+846YWhjugwnJ2bmshmxgay85mJjNM3IsK69Ut6YWwQ/AOAAZSPoRUH
ZkM0IMrvD3FP2gDELZ+MruZuSiKTm1oQGx97k4WrloqUIEdDIYLpVCCiX9JQ
rZA+q5wYY4oZYKgdX2HgV3aPfeKcuKgFKIkh+VFIma6LNc6ZzUFmuZF50bUB
YCmg+cvK+ck/8kiyntjdTRmqCXD5RFnPDUZwex9pqHAk7fHp8mSnsZh7JNYg
Fkb8GKEWspw+3HI68z3DhW3a1+2UMujXxlfWnr3m0k7Vpe8g4ahkPZ/1+ZlX
XH+gt6aXDBikcEFL0PhYzoxOJ3mo6JabVP9+LfmrR+9Egf1n1Osv4nTwdVG5
M5eXWQE+sQcWnvVWQmZPRQqNohd3BS8vZkFGBlWC65kkzWK1mVSwleAY3wNs
BJRkZE8FVSNVF8D4QAsvLeH7BQvR/Rk=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxlUj1IHEEUHqzSKBK0szAINhZqIVj5U6Q4QsCs+AcRVLw7BbnAKRqTSyEi
nAgWihaCdoFU8af1xB/8KRRM0EYCFqIgYkDDuXvuvDcvszM7exsyMG9233zf
+/nevOr7YMUKGGPDL6Sxeseak8ne8dZi+dOWGB6MJ6L9kcRINB5N1vd5sDJ/
k1qorNAWhfrWf3IBePeChyDKLU+BBoQIBIYEATegSIQbIksLocyc/ltIT1yA
X4nKIxRYiMPVntWVLwvpRXogctEElDEAf5VHKmota35D4kxwFYwT1BS9Xku8
qx4Yt0mTZECd4Omu9vPGJmOxr/9U4qWHs+mpqsssK2S2V0S+MeBkpxlrv1r5
2J0NGjEAoJP6UuvgbdvckXaKkNAIB3uMNc1saxXzRG+Ds8Xqal7uy8Zy5PoU
gehpwMlKNbLObulXQwoaREmLve8YGmIuZkXQhPAHclp5OzqZbr2mP/6VxxZa
ofud3e9Ej5mj32qKqGryg7vk2ADfPlkTRI70uCqolsFWpWe6ImuXgGo+z9wX
BlyHfoyeX6Q2mzIYdKgey/P1+lI8dXxBzk/HF4Xn+5h909JQsmznXFO8eSte
ufyc3+QeuZZDiLCgZITMj0d2iAKMChIWABXHAENXoI6/5JfSHQ==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUjtLQ1EMPgiCk/QHuOjoJopU6OLoJPgWXJTW6lKhCiKCi3YWsaIUEXQS
BOeCFJxUFAedBJUWtYjFF2p7295zEnNyeh8N9Nwm+ZJ8ebROzQ1MNwgh5pvo
GZhc7I3HJ5cGA6QMx+Zno7FIuC+2EIlG4sEpDWup/QBtRFDIAvwqbZLoCbAR
apoCZLhkC5iIGsYACOGYSCqKo9lZ8TIC6EdWnZz+YmSw8efykwsoRroektz2
xI3YeUQpOantOkh9HG8TQ4mihkvmQL1UNR9SNteOE6upO2ZHFQ194F7zM/0j
t2LPa4KlzJkL++mSEGmNUwodiNQTgqun7hVxWqrnx4AcWt8YOhot8ajq0srn
2+JPOSk67pR2gRdEkreJfJfoeZBYrk1dGq70KOt+OdCc0tS86TsL+NsQbZ3r
eK55+goqxolBET5o/KAGzLj0TMC0f3L41h4KvhbMUlmqzv/3bDYbXE66lwEu
pmzT93cs92J2xF73aApPqd3MxbV0LL7ubbS+ziy0fOPiczA+GytbeXTb1Vt0
wuhiVDWDPoL1CaQmYTM/ZTipOgCC0wB42wLw8yD5ByTD6Lw=
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUs1LW0EQf3goPfoH9OJdT4JIexJByaGXFA/FSxObqgdTSApSWhBv0YsK
hTYVrODFoqgoQQRpwEP9QDyUpgVBFKOkgklMSN/Xfkxn9+2+rN33dmdn5jc7
n23x19FXLZZlpR/iEY2N96RSsbfPWpEZSKZHh5OJl5Hkm8RwItUdF7BHaoNY
XJ2CMvkDBXMRFDCDZ5SC+IBxHvD8PxuGj8ntAKVaZDiTZKJ3evVIahk33VFS
z49UfxXgr2EAOrDc7LYvuAqqOFVq+bh3la82oP6j/rPEgXLio5hCg2mIU0X0
rmvEQYOLixnamBS3XayCy6RQ+fUC6jSuL8IMjWwxAIRHFrM1ZaTMbk+udllp
eSX7YX7hkIZJSFq2xx4/efriwVqpCjbxpJAogL+XsTpH+rs6rTIy0LQUBT+l
hR6rI2INYr2pqrI04qz2B2BncrRvKqrRoHoDpGKjz29jQ4s+4r1bISSByr+s
APUg92kd7mRwPtfVvCwX17fPZ443c85v1R+fqx6S3MbX9Oa7uS9bn2tEF4Wp
Di+83y9mnrfvuzfgoES2XxrKmJe+H3wkZzXwdMYEeHO0CLjmIOjkqciFesag
hmFqWCBgihMXzkK8PO6xEE46vze4/wA5wOpD
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxdUj1PwzAQNWWBjR8AA4IfwdoRxqJOnVq1VEiolVo+hMSA1B0WBsRfQGJh
qQQjTEyIobChCgptkYIa0iS2z8c5TtIklnK+8zu/O7/LaqVZ2MkxxtoLZArl
o3yrVT7eXqKg2Gjv1hu16mZjv1avtTYqOm05/BAV0lKBTS6AyFOZPRlCEgHj
RxeJARIHMZ9hFoEdvH5rZwqUJlJV3HFny0YFA7T9bOnJZGjZOlWlGyEGqXfH
B4nSB43JRLseIg+bTDMqiGJfxG+CGU6HP8O726wiyHW+Y31dsJ6vZqwqvIR/
OL7CJ04PMI+Lu7FHjn2SO3tQwVkgE7mcshwu1tdKpcO+bsAQSQACPButty7m
V+ZPKQyRsKYYjybYP2CLDF19D4wgSjP83rwjfu7NsUdXeIJk5mo2DVfgc696
3uHEL8BONam1u2aXTUlioqQRodHGwI56YcV735+NILD6Fag4ON0PzCyCwEcH
PcuVAqemVDB2GVaUgodUYIyKOFOyq2TB2Il/WBH2KCAz5AhMJmep/gGGv/pu

      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxVUk0oxEEUnyjJQYqTXFxcpC0HKYQbxR7+sgrbtpslxardRTg4Sk7C1YFW
TuugUC6UgySkHKSsjwtpkWXXmpk33sz/e2rezLyP3/u996Y6NKENFxBCYsUo
tOB0ezQanOkpw0dvJDY6EgkPdUbi4ZFwtDEk3aqMLdRiAlByoQ73Al0JgqqX
8gRQMUKPEWYYk09ADQfUcGWlBrawvBk3kbmFYlIAiwEa/wR3BZo5fh/98wOr
1EkPCTF58SSJt4KEkoOtibSdWNXWkyBdY/6jRLyloXwH4XJ6WQgDP6KLnGdO
hf/gdfvywyCOG4sRbyfBNGZNpeD5WyLZtVBxX0m8y92BjXUHUdPhzTeJ8uz2
7OrFVoPRAawuC6uzdWtHiAKuQFnWZ27U23F4zf8UEZc9m7mIN2upRcibKtBn
wxnkl/rjc75pj1Iz6hwO+zq+qQ0UkX2g4OBqAuf2Cknpk2P2zDBIBpN9TdoD
Uypd6n5Z3A+kpu3bMR2u/yHpsEVIa5rrd2HmxN8jEVYIqbdmw6jd0PfdEi00
xVyNtFml8wvCiSZt3DDfjW++uIrCHgO13IQ1OutObWxuG9g/U3DV9A==
      "], {{0, 28}, {28, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771693679884857*^9, 3.771693696550557*^9}, 
   3.77169653855478*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"56aa3a62-0592-4320-aba0-f7fa4d382376"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformation", "Section",
 CellChangeTimes->{{3.771693802426177*^9, 
  3.771693821687667*^9}},ExpressionUUID->"bb5dbffe-7e9e-45f2-8055-\
0c47686b1633"],

Cell[CellGroupData[{

Cell["Data space \[Rule] Latent space", "Subsection",
 CellChangeTimes->{{3.771691668769582*^9, 
  3.7716916855203013`*^9}},ExpressionUUID->"ec0ead82-9bb3-4e4e-8fa5-\
dfda1d690fc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampledigit2", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
       RowBox[{"HoldPattern", "[", 
        RowBox[{"_", "\[Rule]", "2"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7716939139817066`*^9, 3.7716939332203903`*^9}, {
  3.771693992255554*^9, 3.771694009821824*^9}, {3.771694045101285*^9, 
  3.771694052286661*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"3ab7c114-ab11-43e1-9d85-0ff8dd1af236"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8I8F6dKW3Do0e/scl9tWZmZmJm9p187NgPDMm1YDkQNtmMLne/hB8q
x8zahKHzjL+cnBwDExMTgxV2N61uBeq1xuHgBbjlGnmAcvOx+qSeEWhfDDap
Ty0gd8rcxCZ3DOQH+StYLUsCyslgl7oGtEtgC3Y3FgHDZDl2KZBcNIx9803l
VzQ5/jMgxuY+LUEJ5sfIck+5mZhA/oNiFLn/+fB4YmZyqvqGIncMLqeZ/AbN
MT/2OYLk+EpmfMDhXFoDAFhgjmI=
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "}"}]], "Output",
 CellChangeTimes->{
  3.7716939352304916`*^9, {3.7716940366247454`*^9, 3.771694102894614*^9}, 
   3.771779351510764*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"de8342d2-fdc7-4811-99ae-918bbd344b7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampledigit8", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], ",", 
       RowBox[{"HoldPattern", "[", 
        RowBox[{"_", "\[Rule]", "8"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7716941687665825`*^9, 3.771694173586684*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"9fcc41dd-f6dc-4caa-aabc-9f2c1237fd2e"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+c4Ofu/ARGRobEl5hSex2ZmBiYgEDmA7pUJysTk27x5ctTmZjQNd6Q
ZmLNev3//xt7TLlIJpZuIPVBmQlD7q0IUxeIvhwVw6T4EVVuM1PwXzDjq6vM
TTQjq5iiQNTTrUJMteiunM1kvxEIZIG2taLLfdIA+YyJkSnOjLPyK5pkBCOj
qJJSwt3/r3kY56BKXZJx2PQQwlzGxLoLRU4OYc1dcSYUjafY5J/COQtR5WYz
NSI4y9DllsPZr21Z9yHLnWbTeABlvrdgKkd1pzyTyslbQPpzuSGT9zdUuTvO
TEy8zs5ORkxMvmhB/f//yx05kHC59RldiqoAAIM1nUM=
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "}"}]], "Output",
 CellChangeTimes->{{3.7716941797551746`*^9, 3.7716942028011937`*^9}, 
   3.771779355895399*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"8398a4e6-65ce-4078-b251-d329490f5eb9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "\[Rule]", "Z"}], 
  TraditionalForm]],ExpressionUUID->"e04513b5-9872-4c5d-a3a4-c3e35853e21b"]], \
"Subsection",
 CellChangeTimes->{{3.771694215015539*^9, 
  3.771694230929942*^9}},ExpressionUUID->"42f722bc-a245-4825-a835-\
e2111d6210a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
   "trainednet", "\[LeftDoubleBracket]", "\"\<Input\>\"", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mm", "=", 
  RowBox[{"Length", "@", "sampledigit2"}]}]}], "Input",
 CellChangeTimes->{{3.7716941304846277`*^9, 3.7716941319442735`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"6faed310-b488-4790-8549-f69f9887a608"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7716921050171056`*^9, 3.7716934451985416`*^9, 
  3.7716942732109594`*^9, 3.7716944203642473`*^9, 3.7717794247890296`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"f9f0a0e2-ccd5-4ea7-9cd2-8832d228f5f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"mm", ",", "nn"}], "}"}], "=", 
  RowBox[{"Dimensions", "@", 
   RowBox[{"mppr", "[", 
    RowBox[{"p", "[", 
     RowBox[{"pp", "[", "sampledigit2", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771610786839265*^9, 3.77161081163018*^9}, {
  3.771611456448844*^9, 3.771611461718235*^9}, {3.771611856825675*^9, 
  3.771611858934649*^9}, {3.771615039148193*^9, 3.771615044813901*^9}, {
  3.7716934746173563`*^9, 3.771693475578439*^9}, {3.7716941362700057`*^9, 
  3.7716941373557806`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"1511151a-4369-4570-8f97-c7997c39712d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716934775979586`*^9, 3.771694277417776*^9, 
  3.7716944219345565`*^9, 3.7717794268710785`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"b7bf9b70-beba-4281-8316-fd36526ac49b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<white\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<black\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.771611474368038*^9, 3.771611549075735*^9}, {
  3.771611636693874*^9, 3.771611640498125*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"df288b77-49c6-46fc-89f3-5bf2e7a4be53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "checkerW"}]], "Input",
 CellLabel->
  "In[236]:=",ExpressionUUID->"181d48b6-22a9-4e66-9ddf-4445fd89a197"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716935045750237`*^9, 3.771694281605623*^9, 
  3.771694425146659*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"a5308992-258a-40ce-ae33-abb56dedb1e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mapping to Latent Space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"2", "\[Rule]", "Z"}], ")"}], TraditionalForm]],ExpressionUUID->
  "0a3214b4-f2d7-46cd-91f2-1c73b49bfe61"]
}], "Subsubsection",
 CellChangeTimes->{{3.771693514505464*^9, 3.7716935433854847`*^9}, {
  3.771694288618898*^9, 
  3.771694289359172*^9}},ExpressionUUID->"f1b232e9-d094-4f44-8a12-\
d45c6a9b7128"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z2", "=", 
   RowBox[{
    RowBox[{"trainednet", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"mppr", "[", 
         RowBox[{"mpr", "[", 
          RowBox[{"p", "[", 
           RowBox[{"pp", "[", "sampledigit2", "]"}], "]"}], "]"}], "]"}]}], 
       ",", " ", 
       RowBox[{"\"\<checker_w\>\"", "\[Rule]", " ", "checkerW"}], ",", " ", 
       RowBox[{"\"\<checker_b\>\"", "\[Rule]", " ", "checkerB"}]}], "|>"}], 
     "]"}], "[", 
    RowBox[{"[", "\"\<Z_out\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716935564331055`*^9, 3.7716935652731524`*^9}, {
  3.771694301061452*^9, 3.7716943034302287`*^9}, {3.771694437049867*^9, 
  3.7716944383529716`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"404a8d10-c97a-4040-9788-1e797ffa4937"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"Z", "\[Rule]", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "f5d1826b-6085-4fcf-9f3f-3e5cfd921d91"]
}], "Subsubsection",
 CellChangeTimes->{{3.7716936230510497`*^9, 3.7716936347948513`*^9}, {
  3.7716943082413425`*^9, 
  3.7716943083015766`*^9}},ExpressionUUID->"d8b129af-0a8b-415b-8e40-\
63ba78497817"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputdim", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"[", "\"\<Input\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xgen", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "inputdim"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<white\>\"", ",", "n"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<black\>\"", ",", "n"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7716134354233828`*^9, 3.771613463698782*^9}, {
   3.771613520254919*^9, 3.771613523950416*^9}, {3.771613564154632*^9, 
   3.771613565464787*^9}, {3.7716936848724704`*^9, 3.771693685283576*^9}, 
   3.7716943132551885`*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"108f73c0-b4e7-4a69-955c-c3d20f2e96c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "xgen"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.771613589600627*^9, 3.7716136134357767`*^9}, {
  3.771613677472085*^9, 3.771613681185937*^9}, {3.7716146155159483`*^9, 
  3.771614630210746*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"bbfeec51-26b1-4476-8f50-389bfb806e15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{
     RowBox[{"mpr", "[", 
      RowBox[{
       RowBox[{"mppr", "[", 
        RowBox[{"samples", ",", "\"\<Inverse\>\""}], "]"}], ",", 
       "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
   "\"\<Inverse\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7716147710497017`*^9, 3.7716147933882427`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"64c60301-f26b-4bab-be71-35420a6cc928"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxdUs0rRFEUn6ws/QE2/gaJrY2yNFLKymRGNqNmFFYsFVvbkZTNyLCYmiIJ
sdAkJTIhUb7i1Xw077177znHfffjec+tezrn/M79na/bk5pNZjoSiUS+U4rk
5PxgLje5ONoljbFsfmY6m54azs6lp9O5gVQQ1m0uUvwgkHKJ/4ByCy40DEAu
Gqd0axysTRi5TApuGIEwxqdRSx4iKM1Xp1p9qatcihpI60S3teMr5K4rdY6W
R8Nt3i58Zw/276QpIMwjNfDqtF7yz5aL72HuEBU3eydPjw+nnHxVNUZDLhi9
8+rnR1ieaTag718rSr0mooA5I0tb1HSfvw+JURNkvFA1BqHNzFrNh8r+hgz3
IP4Q6bJG1zvlA+eH+SI2TKKvhmy5vL1LX4S2MdM394L5VjZb1BBmJxaUQ/IR
m0crHvnEhc+Dp1xTMmoHwzult1Un1rWeKUPWoqGJ1XuIuLmSnszKPscXCo4p
EgGELZcLp3Te12v5lEQRrJFJzSV6DncG4RZAM6vOkGL9gW2E7F7RJMVYBFpN
6C1Gvudf2N8fxSCRsIDy/wJVi/9W
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}},
   ImageCache->GraphicsData["CompressedBitmap", "\<\
eJx9VUtLI0EQ7slMJvGxwu5pD3vwP0jwH2RPe/AmeApi0MO6i+vBmx4FvXpV
RPCi+DgIgiJixBxCEEGUiAmi4Iso+MBX1Nmvq3p62kl2GzJ0V3dVffXVIz9S
/d1dP1P9PZ2p5u99qd/dPZ1/mpO/+iCyLSHEN/n7KrD3sKOf63mesN/f3z1a
IoKtcLBj0evra1SKnbe3N34BubwWIoKvfB0JWbDpA0V1jn/Ux7KkD0EPWY28
xkhPv2M7UW0XC3cEzYJxIdxa7+1KpaJsahz8RJ0DnJaOQsS1lN/yF6YoUlff
8gZfsuWYWoa1GORwy7ds6uXlhf07j4+PrHN0dOSEIpDalrLF9uiWqWT9BpMP
AMTd9fX1/Pz81tZWIpFoaWkRtfIhGQ+saqZM5uqfnp74/PDwALwXFxft7e0D
AwPj4+NwETWsyvRJnIJz26hjxAW+9/f3OCaTyY6OjpGRkUKhgAdxFQ979YtM
2HjPLhlFDE8zmQy2p6enUIZn+TacO4pRUMU4OuPPz89UvQ13d3dra2vDw8Mc
EuSaLOyxYaYVJ6qSXGCo0IIWp4+8uMvLy5OTkxzU7e2t6ghZg5bKl6jCR+fG
y8tLKOhcLS0tTU9Pz83N4YgrpiHyj0oyu4O4b+JDLpc7ODjAZmdnZ3Z2FjZX
VlbA0tXVFahEeD4+7rGo2XeybQhZHRhKp9Ojo6OwBR08QpSLi4sTExNB/YAH
GZyr8ATRkeRLW1vb4ODg1NQUTrCHwkZJl8vl1dVVrgaWw4TuBMWZ4svRcixm
sLW1FaBmZmYCFEAocddXsULZr8tms+zq7OwMHOfzeRTu+fm51KkjHaqzz6EO
x/Xu7u7CwsLGxkapVCoWi4eHhyg8Lk9Q4lednnCiOlMkacAGTN3c3OA0NjaG
XoT65ubm0NAQAgGs2tUhwt3PXchViC/aDmT29vYiv8jM/v6+7zE805gVJSGr
9WbW9/b2wOH6+vr29jYwwHoEuTIqgxso1BOyX23dAycnJ6ixPK3j42MES37U
VOfIuBPMOGO14rZ5TmisAaOeP9nJ54fJr2eAa0rZEiPU04yTq+RW0E8KK0L3
5/d//rPMGSrDCs9UrogmqkATESzwnPGCGVfNyyc/bk2f4/tXzCjM1l99md0V
\
\>"]], "}"}]], "Output",
 CellChangeTimes->{{3.771693679884857*^9, 3.771693696550557*^9}, 
   3.771694326369071*^9, {3.7717794829819803`*^9, 3.771779496061345*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"71623b57-8933-4c0a-89ce-9ddaa0516e8c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"8", "\[Rule]", "Z"}], 
  TraditionalForm]],ExpressionUUID->"dccbb2e1-7660-4c14-ab72-c2a73a1a01c9"]], \
"Subsection",
 CellChangeTimes->{{3.771694215015539*^9, 3.771694230929942*^9}, {
  3.7716943785026274`*^9, 
  3.77169437893001*^9}},ExpressionUUID->"1c894eb0-fcdf-47ce-a818-\
8e01e9df76a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{
   "trainednet", "\[LeftDoubleBracket]", "\"\<Input\>\"", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mm", "=", 
  RowBox[{"Length", "@", "sampledigit8"}]}]}], "Input",
 CellChangeTimes->{{3.7716941304846277`*^9, 3.7716941319442735`*^9}, {
  3.7716943849825525`*^9, 3.7716943863823957`*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"d9d84109-28c9-4938-b969-ad26a3aa7e20"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7716921050171056`*^9, 3.7716934451985416`*^9, 
  3.7716942732109594`*^9, 3.7716943899703827`*^9, 3.7716944458825097`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"587076e8-5fdc-462e-953f-3d7afa4675d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"mm", ",", "nn"}], "}"}], "=", 
  RowBox[{"Dimensions", "@", 
   RowBox[{"mppr", "[", 
    RowBox[{"p", "[", 
     RowBox[{"pp", "[", "sampledigit8", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.771610786839265*^9, 3.77161081163018*^9}, {
  3.771611456448844*^9, 3.771611461718235*^9}, {3.771611856825675*^9, 
  3.771611858934649*^9}, {3.771615039148193*^9, 3.771615044813901*^9}, {
  3.7716934746173563`*^9, 3.771693475578439*^9}, {3.7716941362700057`*^9, 
  3.7716941373557806`*^9}, {3.771694381706278*^9, 3.7716943826967363`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"5cd35734-4089-419c-8f96-9cf63f77d676"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716934775979586`*^9, 3.771694277417776*^9, 
  3.7716943918281126`*^9, 3.771694450008357*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"a888ddb9-1a0e-412a-bc76-dded359c30a9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<white\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"nn", ",", " ", "\"\<black\>\"", ",", " ", "mm"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.771611474368038*^9, 3.771611549075735*^9}, {
  3.771611636693874*^9, 3.771611640498125*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"e10c64d5-a366-4ec3-b502-ee733fee71e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "checkerW"}]], "Input",
 CellLabel->
  "In[229]:=",ExpressionUUID->"496a97b0-e1af-4ae5-bed7-c751f1ba0e15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "784"}], "}"}]], "Output",
 CellChangeTimes->{3.7716935045750237`*^9, 3.771694281605623*^9, 
  3.7716943949896755`*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"2d4243a5-c9bb-4605-aa1e-07889840c063"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Mapping to Latent Space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"8", "\[Rule]", "Z"}], ")"}], TraditionalForm]],ExpressionUUID->
  "38b9df0b-1a55-48c3-8d88-b764a8b09edb"]
}], "Subsubsection",
 CellChangeTimes->{{3.771693514505464*^9, 3.7716935433854847`*^9}, {
  3.771694288618898*^9, 3.771694289359172*^9}, {3.7716943974562817`*^9, 
  3.7716943979259806`*^9}},ExpressionUUID->"7b087050-a9db-4050-b9e2-\
5d0e322db5ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"z8", "=", 
   RowBox[{
    RowBox[{"trainednet", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"mppr", "[", 
         RowBox[{"mpr", "[", 
          RowBox[{"p", "[", 
           RowBox[{"pp", "[", "sampledigit8", "]"}], "]"}], "]"}], "]"}]}], 
       ",", " ", 
       RowBox[{"\"\<checker_w\>\"", "\[Rule]", " ", "checkerW"}], ",", " ", 
       RowBox[{"\"\<checker_b\>\"", "\[Rule]", " ", "checkerB"}]}], "|>"}], 
     "]"}], "[", 
    RowBox[{"[", "\"\<Z_out\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7716935564331055`*^9, 3.7716935652731524`*^9}, {
  3.771694301061452*^9, 3.7716943034302287`*^9}, {3.7716944547508545`*^9, 
  3.7716944608344097`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"140e2daa-b1ce-43fb-b129-d6b3aa46d9c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameterization", "Subsection",
 CellChangeTimes->{{3.7716946195278482`*^9, 
  3.7716946227415953`*^9}},ExpressionUUID->"5831703f-835c-4e20-ac4e-\
7745f127ecd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "t"}], ")"}], "z2"}], "+", 
   RowBox[{"t", " ", "z8"}]}]}]], "Input",
 CellChangeTimes->{{3.7716946499909515`*^9, 3.7716946790765066`*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"ba0aa1ea-9b57-4198-8652-625922867277"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"Z", "\[Rule]", "2"}], ")"}], TraditionalForm]],ExpressionUUID->
  "abb0d951-65e3-416c-85c2-9c44f27525b8"]
}], "Subsection",
 CellChangeTimes->{{3.7716936230510497`*^9, 3.7716936347948513`*^9}, {
  3.7716943082413425`*^9, 
  3.7716943083015766`*^9}},ExpressionUUID->"68f5f4b6-0671-477c-ae68-\
569e3b04941e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputdim", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"[", "\"\<Input\>\"", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xgen", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "inputdim"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerW", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<white\>\"", ",", "n"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"checkerB", "=", 
   RowBox[{"checkeredGen", "[", 
    RowBox[{"inputdim", ",", "\"\<black\>\"", ",", "n"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7716134354233828`*^9, 3.771613463698782*^9}, {
   3.771613520254919*^9, 3.771613523950416*^9}, {3.771613564154632*^9, 
   3.771613565464787*^9}, {3.7716936848724704`*^9, 3.771693685283576*^9}, 
   3.7716943132551885`*^9},
 CellLabel->
  "In[217]:=",ExpressionUUID->"02ec07b7-254e-4600-8cc8-1e637b018f0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "xgen"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.771613589600627*^9, 3.7716136134357767`*^9}, {
  3.771613677472085*^9, 3.771613681185937*^9}, {3.7716146155159483`*^9, 
  3.771614630210746*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"31f1cb13-4217-409c-b536-9ad43ba85436"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pp", "[", 
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{
      RowBox[{"mpr", "[", 
       RowBox[{
        RowBox[{"mppr", "[", 
         RowBox[{"samples", ",", "\"\<Inverse\>\""}], "]"}], ",", 
        "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
    "\"\<Inverse\>\""}], "]"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7716147710497017`*^9, 3.7716147933882427`*^9}, {
  3.7717714167231665`*^9, 
  3.7717714188539796`*^9}},ExpressionUUID->"bf1218b5-62b0-421f-baed-\
e7bfcc2838df"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6ctmMrXgUvKmJmJJbTjBVa59GhjdV5G8S249N4MZdHCrhMEQplO4ZTL
Y8QtJ4Vb321u/x+45PKZGnEaacN0CJfUagbVz1gldiaKsDPmYbXOlZWJiYmR
ye8Ghsy/HkZhHybOfEMm9y/ocmeZpL/YM837f82GyRZN6oUo4/8SRvVn//8f
1WZcjSp3m4lpPRfXeRBzGZPVHxS5XwZAZywCM//mMR5E1bhCRKQW6vzVjD5Y
/QgGyULPcEsOEAAAOC7Hng==
     "], {{0, 28}, {28, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "}"}]], "Output",
 CellChangeTimes->{{3.771693679884857*^9, 3.771693696550557*^9}, 
   3.771694326369071*^9, 3.7716949777436247`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"34375c10-a24e-46f7-a582-6b3f0e283a63"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"sampler", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", "z2"}], ",", 
      RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
      RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7716949020347314`*^9, 3.771694903837324*^9}, {
  3.7716949647092514`*^9, 3.7716949749287004`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"16c0b96c-a272-482b-a60e-01cc4d9d892d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"pp", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"mpr", "[", 
        RowBox[{
         RowBox[{"mppr", "[", 
          RowBox[{
           RowBox[{"sampler", "[", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<Input\>\"", "\[Rule]", 
               RowBox[{"f", "[", "t", "]"}]}], ",", 
              RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
              RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}], 
            "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
        "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771694996713468*^9, 3.771695018819934*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"91096893-4997-4782-be83-1e9ec71c394c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {482.5, {41., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$2003179$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$2003179$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`pp[
        $CellContext`p[
         $CellContext`mpr[
          $CellContext`mppr[
           $CellContext`sampler[
            Association[
            "Input" -> $CellContext`f[$CellContext`t$$], 
             "checker_w" -> $CellContext`checkerW, 
             "checker_b" -> $CellContext`checkerB]], "Inverse"], "Inverse"], 
         "Inverse"], "Inverse"], 
      "Specifications" :> {{$CellContext`t$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{534., {71., 77.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7717109015612535`*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"07d00cf4-484f-4a86-91a7-86d56ad3e3f3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"pp", "[", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{
        RowBox[{"mpr", "[", 
         RowBox[{
          RowBox[{"mppr", "[", 
           RowBox[{
            RowBox[{"sampler", "[", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Input\>\"", "\[Rule]", 
                RowBox[{"f", "[", "t", "]"}]}], ",", 
               RowBox[{"\"\<checker_w\>\"", "\[Rule]", "checkerW"}], ",", 
               RowBox[{"\"\<checker_b\>\"", "\[Rule]", "checkerB"}]}], "|>"}],
              "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
          "\"\<Inverse\>\""}], "]"}], ",", "\"\<Inverse\>\""}], "]"}], ",", 
      "\"\<Inverse\>\""}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7716950429937534`*^9, 3.7716950632092237`*^9}, {
  3.771695095838349*^9, 3.7716951076636515`*^9}, {3.771695209077845*^9, 
  3.7716952409255543`*^9}, {3.77169527699704*^9, 3.771695278081248*^9}, {
  3.771695318805798*^9, 3.771695364645755*^9}, {3.771695398455397*^9, 
  3.771695400145628*^9}, {3.7717106734912663`*^9, 3.771710684083756*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"89f1e4b8-a916-4b02-9f4f-1eab55f9a5e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{682, 820},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 295, 4, 156, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[878, 28, 400, 6, 34, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1281, 36, 380, 6, 34, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"],
Cell[CellGroupData[{
Cell[1686, 46, 156, 3, 67, "Section",ExpressionUUID->"d2ed762a-69be-4433-b6a2-383fee6233b9"],
Cell[1845, 51, 1319, 25, 122, "Text",ExpressionUUID->"a50765e9-21ca-4a5a-942e-206975429317"],
Cell[3167, 78, 231, 3, 37, "CodeText",ExpressionUUID->"18aad861-086f-4bf3-9c9a-12f71b27cdf7"],
Cell[3401, 83, 429, 9, 28, "Input",ExpressionUUID->"96bf9321-f4d6-4692-b3a9-eee9936b2b1a"],
Cell[3833, 94, 345, 7, 28, "Input",ExpressionUUID->"1d0f40fe-65a5-4d34-b792-100dc9dbff3d"],
Cell[CellGroupData[{
Cell[4203, 105, 976, 18, 48, "Input",ExpressionUUID->"5b2b47bc-aa37-4409-bd7c-53b86a6643cd"],
Cell[5182, 125, 160851, 4267, 545, "Output",ExpressionUUID->"fec9bbea-40c3-4e75-b155-8613fb38f4e9"]
}, Open  ]],
Cell[166048, 4395, 247, 5, 37, "CodeText",ExpressionUUID->"d5f0680b-2121-45d3-b8c1-a37d4790998c"],
Cell[166298, 4402, 640, 14, 28, "Input",ExpressionUUID->"832a4486-9a6a-4ef8-87ca-6b2633aed565"],
Cell[CellGroupData[{
Cell[166963, 4420, 495, 10, 48, "Input",ExpressionUUID->"7ee3f671-72d3-4f9f-aec4-41fa0c486125"],
Cell[167461, 4432, 445, 6, 32, "Output",ExpressionUUID->"a6be03d5-bfe2-4bf4-bfc2-200e9e37fa1e"]
}, Open  ]],
Cell[167921, 4441, 267, 6, 28, "Input",ExpressionUUID->"19638e67-3f78-4770-b858-8a60f92f03e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168225, 4452, 164, 3, 67, "Section",ExpressionUUID->"77eaac21-b9af-4ab0-96d7-c626c57915b4"],
Cell[168392, 4457, 434, 8, 100, "Text",ExpressionUUID->"d66f3ab5-3252-464e-aa71-45b290cfe6f9"],
Cell[CellGroupData[{
Cell[168851, 4469, 166, 3, 53, "Subsection",ExpressionUUID->"f7b54e93-d33d-416c-962d-05afc9a39511"],
Cell[169020, 4474, 232, 4, 37, "CodeText",ExpressionUUID->"84f411eb-26a8-4fb7-94f6-2d059d6837b6"],
Cell[169255, 4480, 967, 18, 28, "Input",ExpressionUUID->"3a1bf359-b545-485e-9208-4f5fbf995833"],
Cell[170225, 4500, 199, 3, 37, "CodeText",ExpressionUUID->"0a9e2bd3-a631-4629-939b-a6b0db9a3c9c"],
Cell[CellGroupData[{
Cell[170449, 4507, 275, 5, 28, "Input",ExpressionUUID->"78ad43bb-dccf-4530-ac85-ca7f6cdb5d92"],
Cell[170727, 4514, 6890, 154, 47, "Output",ExpressionUUID->"2a53d85b-c5c7-4173-8267-c31a3445a57b"]
}, Open  ]],
Cell[177632, 4671, 6881, 154, 43, "Input",ExpressionUUID->"ceb20704-fa89-4ded-b787-2c2417c7e98e"],
Cell[CellGroupData[{
Cell[184538, 4829, 448, 9, 48, "Input",ExpressionUUID->"edd4d7cd-5bb6-459c-884e-f363c5589d17"],
Cell[184989, 4840, 166, 2, 32, "Output",ExpressionUUID->"f74dc906-b1be-4fff-8ac1-7386a70cb25a"]
}, Open  ]],
Cell[185170, 4845, 228, 5, 37, "CodeText",ExpressionUUID->"29c504d8-8086-47f7-b345-f6742e43fe93"],
Cell[185401, 4852, 752, 16, 67, "Input",ExpressionUUID->"341e565d-4d9a-4342-8066-e26290041066"],
Cell[CellGroupData[{
Cell[186178, 4872, 288, 5, 28, "Input",ExpressionUUID->"d1accab3-7312-495b-a926-441b5abf2a4b"],
Cell[186469, 4879, 10522, 214, 47, "Output",ExpressionUUID->"e3acdd21-f44b-4a7f-a708-de9c99d5625a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197028, 5098, 293, 7, 28, "Input",ExpressionUUID->"5d2b3b55-e670-4175-8bcd-32d2306b9cd2"],
Cell[197324, 5107, 263, 5, 32, "Output",ExpressionUUID->"20544afb-3395-40a3-9759-c363fa526e03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197624, 5117, 493, 10, 48, "Input",ExpressionUUID->"e3ab136d-0ac6-4d2d-86ce-d9b6a39ef94d"],
Cell[198120, 5129, 193, 2, 32, "Output",ExpressionUUID->"ab1e885c-3862-49a6-9cf6-4f54e6ef8771"]
}, Open  ]],
Cell[198328, 5134, 179, 3, 28, "Input",ExpressionUUID->"70c6ae5e-c836-4d01-8683-7c2038a3c296"],
Cell[198510, 5139, 275, 6, 37, "CodeText",ExpressionUUID->"f1dc5bf1-531d-4b32-b4e4-e284a66f94d7"],
Cell[CellGroupData[{
Cell[198810, 5149, 1003, 19, 86, "Input",ExpressionUUID->"3b93c870-d3b1-4e91-bfaa-80159cb92265"],
Cell[199816, 5170, 76676, 1360, 90, "Output",ExpressionUUID->"95b9a379-8f28-43ad-9c40-194135215e3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276529, 6535, 448, 9, 48, "Input",ExpressionUUID->"b75d71af-dab2-4e9b-96c0-69d029f0b1b6"],
Cell[276980, 6546, 165, 2, 32, "Output",ExpressionUUID->"e73289e7-4e14-49a5-a555-eb5a6363a26e"]
}, Open  ]],
Cell[277160, 6551, 180, 3, 28, "Input",ExpressionUUID->"f8786699-409c-4361-86b0-4110fcaed534"],
Cell[CellGroupData[{
Cell[277365, 6558, 370, 7, 28, "Input",ExpressionUUID->"28d334bc-aa05-431c-bf00-c7b4183626eb"],
Cell[277738, 6567, 217, 3, 32, "Output",ExpressionUUID->"03e1275c-248e-480b-8b68-cd18bee029e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[278004, 6576, 181, 3, 53, "Subsection",ExpressionUUID->"86006874-2cca-456a-8289-314d50b49d0e"],
Cell[278188, 6581, 2977, 70, 249, "Code",ExpressionUUID->"fc7dec14-2162-4b19-b327-2a2f1588a790"],
Cell[281168, 6653, 1429, 29, 86, "Input",ExpressionUUID->"d8be888d-48dd-4c5a-81ff-f6540502c566"],
Cell[CellGroupData[{
Cell[282622, 6686, 456, 8, 28, "Input",ExpressionUUID->"d58680d2-e3f0-4979-a318-a5dc6e4e3c5f"],
Cell[283081, 6696, 512959, 8921, 88, "Output",ExpressionUUID->"2a4aa307-a00f-4f93-ae77-b5ea4e858ddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[796077, 15622, 337, 6, 28, "Input",ExpressionUUID->"1a742705-265e-4d47-a0d8-070b05b768a8"],
Cell[796417, 15630, 576653, 10530, 88, "Output",ExpressionUUID->"f2f76994-e386-4c2c-9ccb-db94576e4e3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1373107, 26165, 337, 8, 48, "Input",ExpressionUUID->"29e432be-9e43-43d6-9cf1-65e208f89830"],
Cell[1373447, 26175, 296, 4, 32, "Output",ExpressionUUID->"c4c8724f-9d70-42af-8e56-8a75568c4cb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1373780, 26184, 574, 12, 28, "Input",ExpressionUUID->"977b699e-c21b-429b-b11f-3bb8ea0e390f"],
Cell[1374357, 26198, 300, 6, 32, "Output",ExpressionUUID->"38ce9a88-86bb-46b6-9bec-96829586e970"]
}, Open  ]],
Cell[1374672, 26207, 549, 13, 48, "Input",ExpressionUUID->"cc01ded0-9675-442f-baee-1e554b412887"],
Cell[CellGroupData[{
Cell[1375246, 26224, 148, 3, 28, "Input",ExpressionUUID->"c732f074-f787-4c09-b524-0a06189e697c"],
Cell[1375397, 26229, 254, 6, 32, "Output",ExpressionUUID->"bd8a2c03-97c6-4bd9-a690-22bd74a915b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1375688, 26240, 355, 10, 44, "Subsubsection",ExpressionUUID->"f07f649d-3378-4b55-b557-d670faf0312a"],
Cell[1376046, 26252, 791, 19, 67, "Input",ExpressionUUID->"c888838c-b438-4633-a712-a09160c0fee0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1376874, 26276, 173, 3, 44, "Subsubsection",ExpressionUUID->"9376d005-3328-4df6-8bdb-9fa9ddecd7b9"],
Cell[1377050, 26281, 792, 17, 67, "Input",ExpressionUUID->"e220e227-1a29-41d6-afcd-a39074388224"],
Cell[1377845, 26300, 394, 8, 28, "Input",ExpressionUUID->"639eccec-7538-4c0c-b580-9e50e1e064a5"],
Cell[CellGroupData[{
Cell[1378264, 26312, 919, 23, 124, "Input",ExpressionUUID->"0974d10e-6b83-43dc-bd11-ddf4f6672dde"],
Cell[1379186, 26337, 9470, 196, 47, "Output",ExpressionUUID->"6c8208aa-f1c9-4b8a-90fd-732cb9e7af8c"]
}, Open  ]],
Cell[1388671, 26536, 9657, 205, 43, "Input",ExpressionUUID->"9140ff46-b57d-4e88-8e66-59b2bc3ab583"],
Cell[CellGroupData[{
Cell[1398353, 26745, 1139, 26, 162, "Input",ExpressionUUID->"77241e88-7ecf-4e57-91ad-cc9db6c0251a"],
Cell[1399495, 26773, 166, 2, 32, "Output",ExpressionUUID->"bf386406-c5ad-4977-9fab-8d11c6a4ad68"]
}, Open  ]],
Cell[1399676, 26778, 180, 3, 28, "Input",ExpressionUUID->"32ab9fe9-3f0d-4c8b-ad61-42b444e24109"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1399893, 26786, 344, 10, 44, "Subsubsection",ExpressionUUID->"55a105f9-b7c7-4128-947e-463f418ba84d"],
Cell[CellGroupData[{
Cell[1400262, 26800, 1106, 29, 105, "Input",ExpressionUUID->"0464686c-dddf-433c-ade4-4e5a2d2e4a0c"],
Cell[1401371, 26831, 181, 3, 32, "Output",ExpressionUUID->"6d20e023-5f12-4357-ae79-1816eee46842"]
}, Open  ]],
Cell[1401567, 26837, 585, 14, 48, "Input",ExpressionUUID->"e634650b-4118-46b5-a3b2-3441f0bf334c"],
Cell[CellGroupData[{
Cell[1402177, 26855, 484, 13, 28, "Input",ExpressionUUID->"7702bc7e-12b4-4a1f-8fae-eaf283ae1604"],
Cell[1402664, 26870, 9761, 200, 47, "Output",ExpressionUUID->"56aa3a62-0592-4320-aba0-f7fa4d382376"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1412498, 27078, 159, 3, 67, "Section",ExpressionUUID->"bb5dbffe-7e9e-45f2-8055-0c47686b1633"],
Cell[CellGroupData[{
Cell[1412682, 27085, 181, 3, 53, "Subsection",ExpressionUUID->"ec0ead82-9bb3-4e4e-8fa5-dfda1d690fc2"],
Cell[CellGroupData[{
Cell[1412888, 27092, 667, 15, 48, "Input",ExpressionUUID->"3ab7c114-ab11-43e1-9d85-0ff8dd1af236"],
Cell[1413558, 27109, 906, 20, 47, "Output",ExpressionUUID->"de8342d2-fdc7-4811-99ae-918bbd344b7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414501, 27134, 567, 13, 48, "Input",ExpressionUUID->"9fcc41dd-f6dc-4caa-aabc-9f2c1237fd2e"],
Cell[1415071, 27149, 958, 20, 47, "Output",ExpressionUUID->"8398a4e6-65ce-4078-b251-d329490f5eb9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416078, 27175, 291, 7, 53, "Subsection",ExpressionUUID->"42f722bc-a245-4825-a835-e2111d6210a6"],
Cell[CellGroupData[{
Cell[1416394, 27186, 407, 9, 48, "Input",ExpressionUUID->"6faed310-b488-4790-8549-f69f9887a608"],
Cell[1416804, 27197, 250, 3, 32, "Output",ExpressionUUID->"f9f0a0e2-ccd5-4ea7-9cd2-8832d228f5f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1417091, 27205, 627, 13, 28, "Input",ExpressionUUID->"1511151a-4369-4570-8f97-c7997c39712d"],
Cell[1417721, 27220, 271, 5, 32, "Output",ExpressionUUID->"b7bf9b70-beba-4281-8316-fd36526ac49b"]
}, Open  ]],
Cell[1418007, 27228, 549, 13, 48, "Input",ExpressionUUID->"df288b77-49c6-46fc-89f3-5bf2e7a4be53"],
Cell[CellGroupData[{
Cell[1418581, 27245, 148, 3, 28, "Input",ExpressionUUID->"181d48b6-22a9-4e66-9ddf-4445fd89a197"],
Cell[1418732, 27250, 249, 6, 32, "Output",ExpressionUUID->"a5308992-258a-40ce-ae33-abb56dedb1e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1419018, 27261, 404, 11, 44, "Subsubsection",ExpressionUUID->"f1b232e9-d094-4f44-8a12-d45c6a9b7128"],
Cell[1419425, 27274, 842, 20, 67, "Input",ExpressionUUID->"404a8d10-c97a-4040-9788-1e797ffa4937"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1420304, 27299, 397, 11, 44, "Subsubsection",ExpressionUUID->"d8b129af-0a8b-415b-8e40-63ba78497817"],
Cell[1420704, 27312, 1128, 31, 105, "Input",ExpressionUUID->"108f73c0-b4e7-4a69-955c-c3d20f2e96c3"],
Cell[1421835, 27345, 585, 14, 48, "Input",ExpressionUUID->"bbfeec51-26b1-4476-8f50-389bfb806e15"],
Cell[CellGroupData[{
Cell[1422445, 27363, 484, 13, 28, "Input",ExpressionUUID->"64c60301-f26b-4bab-be71-35420a6cc928"],
Cell[1422932, 27378, 2395, 46, 47, "Output",ExpressionUUID->"71623b57-8933-4c0a-89ce-9ddaa0516e8c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1425388, 27431, 341, 8, 53, "Subsection",ExpressionUUID->"1c894eb0-fcdf-47ce-a818-8e01e9df76a7"],
Cell[CellGroupData[{
Cell[1425754, 27443, 464, 11, 48, "Input",ExpressionUUID->"d9d84109-28c9-4938-b969-ad26a3aa7e20"],
Cell[1426221, 27456, 254, 4, 32, "Output",ExpressionUUID->"587076e8-5fdc-462e-953f-3d7afa4675d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1426512, 27465, 679, 14, 28, "Input",ExpressionUUID->"5cd35734-4089-419c-8f96-9cf63f77d676"],
Cell[1427194, 27481, 273, 6, 32, "Output",ExpressionUUID->"a888ddb9-1a0e-412a-bc76-dded359c30a9"]
}, Open  ]],
Cell[1427482, 27490, 553, 14, 48, "Input",ExpressionUUID->"e10c64d5-a366-4ec3-b502-ee733fee71e6"],
Cell[CellGroupData[{
Cell[1428060, 27508, 148, 3, 28, "Input",ExpressionUUID->"496a97b0-e1af-4ae5-bed7-c751f1ba0e15"],
Cell[1428211, 27513, 251, 6, 32, "Output",ExpressionUUID->"2d4243a5-c9bb-4605-aa1e-07889840c063"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1428499, 27524, 454, 11, 44, "Subsubsection",ExpressionUUID->"7b087050-a9db-4050-b9e2-5d0e322db5ca"],
Cell[1428956, 27537, 848, 21, 67, "Input",ExpressionUUID->"140e2daa-b1ce-43fb-b129-d6b3aa46d9c4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1429853, 27564, 168, 3, 53, "Subsection",ExpressionUUID->"5831703f-835c-4e20-ac4e-7745f127ecd5"],
Cell[1430024, 27569, 351, 10, 28, "Input",ExpressionUUID->"ba0aa1ea-9b57-4198-8652-625922867277"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1430412, 27584, 394, 11, 53, "Subsection",ExpressionUUID->"68f5f4b6-0671-477c-ae68-569e3b04941e"],
Cell[1430809, 27597, 1128, 31, 105, "Input",ExpressionUUID->"02ec07b7-254e-4600-8cc8-1e637b018f0d"],
Cell[1431940, 27630, 585, 14, 48, "Input",ExpressionUUID->"31f1cb13-4217-409c-b536-9ad43ba85436"],
Cell[CellGroupData[{
Cell[1432550, 27648, 593, 16, 48, "Input",ExpressionUUID->"bf1218b5-62b0-421f-baed-e7bfcc2838df"],
Cell[1433146, 27666, 903, 20, 47, "Output",ExpressionUUID->"34375c10-a24e-46f7-a582-6b3f0e283a63"]
}, Open  ]],
Cell[1434064, 27689, 536, 13, 48, "Input",ExpressionUUID->"16c0b96c-a272-482b-a60e-01cc4d9d892d"],
Cell[CellGroupData[{
Cell[1434625, 27706, 967, 25, 143, "Input",ExpressionUUID->"91096893-4997-4782-be83-1e9ec71c394c"],
Cell[1435595, 27733, 1988, 43, 167, "Output",ExpressionUUID->"07d00cf4-484f-4a86-91a7-86d56ad3e3f3"]
}, Open  ]],
Cell[1437598, 27779, 1368, 31, 162, "Input",ExpressionUUID->"89f1e4b8-a916-4b02-9f4f-1eab55f9a5e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

